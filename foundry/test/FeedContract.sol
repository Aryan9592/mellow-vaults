// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.9;
import "../lib/forge-std/src/console2.sol";
import "./Constants.sol";

contract Feed {
    function parseFile()
        public
        returns (
            uint256[] memory a0,
            uint256[] memory a1,
            uint256[] memory a2,
            uint256[] memory a3,
            uint256[] memory a4
        )
    {
        string[] memory a = new string[](5);
        a[
            0
        ] = "14297758,14297780,14297802,14297824,14297846,14297868,14297890,14297912,14297934,14297956,14297978,14298000,14298022,14298044,14298066,14298088,14298110,14298132,14298154,14298176,14298198,14298220,14298242,14298264,14298286,14298308,14298330,14298352,14298374,14298396,14298418,14298440,14298462,14298484,14298506,14298528,14298550,14298572,14298594,14298616,14298638,14298660,14298682,14298704,14298726,14298748,14298770,14298792,14298814,14298836,14298858,14298880,14298902,14298924,14298946,14298968,14298990,14299012,14299034,14299056,14299078,14299100,14299122,14299144,14299166,14299188,14299210,14299232,14299254,14299276,14299298,14299320,14299342,14299364,14299386,14299408,14299430,14299452,14299474,14299496,14299518,14299540,14299562,14299584,14299606,14299628,14299650,14299672,14299694,14299716,14299738,14299760,14299782,14299804,14299826,14299848,14299870,14299892,14299914,14299936,";
        a[
            1
        ] = "1.062080315229875026781275223,1.062078747178469943186593867,1.062078747178469943186593867,1.062078747178469943186593867,1.062078747178469943186593867,1.062078747178469943186593867,1.062078679072619360363729793,1.062078679072619360363729793,1.062068272789843046403860830,1.062068231334293272023754287,1.062068231334293272023754287,1.062068231334293272023754287,1.062068231334293272023754287,1.062068231334293272023754287,1.062068231334293272023754287,1.062068182771693998027737022,1.062068182771693998027737022,1.062068182771693998027737022,1.062064286876927292077601471,1.062075715045565338932337495,1.062075715045565338932337495,1.062075715045565338932337495,1.062075715045565338932337495,1.062078644666425531253347215,1.062078644666425531253347215,1.062078493142424484593067181,1.062078493142424484593067181,1.062078493142424484593067181,1.062078493142424484593067181,1.062078493142424484593067181,1.062078493142424484593067181,1.062078424474592104968524416,1.062078424474592104968524416,1.062078424474592104968524416,1.062078424474592104968524416,1.062078300741049195411013265,1.062078300741049195411013265,1.062095707364401393122850807,1.062095672508955533837410217,1.062095672508955533837410217,1.062095632390764910735378294,1.062095632390764910735378294,1.062095632390764910735378294,1.062095632390764910735378294,1.062095563318302575582162873,1.062095563318302575582162873,1.062095563318302575582162873,1.062095563318302575582162873,1.062095489141372135001664555,1.062095489141372135001664555,1.062095489141372135001664555,1.062095454479988872003659454,1.062095454479988872003659454,1.062095454479988872003659454,1.062095454479988872003659454,1.062095454479988872003659454,1.062095454479988872003659454,1.062095454479988872003659454,1.062095454479988872003659454,1.062095461091761958529384443,1.062095330006618386850843467,1.062095330006618386850843467,1.062095330006618386850843467,1.062095330006618386850843467,1.062095330006618386850843467,1.062095330006618386850843467,1.062095330006618386850843467,1.062095886781744173468433471,1.062095886781744173468433471,1.062095886781744173468433471,1.062095886781744173468433471,1.062095809307039318808995928,1.062095600987969910152783123,1.062096629484276301893848447,1.062096519523936702039506516,1.062096519523936702039506516,1.062096519523936702039506516,1.062096519523936702039506516,1.062096498681139537460754601,1.062096498681139537460754601,1.062096502857056873035989522,1.062096502857056873035989522,1.062096502857056873035989522,1.062096502857056873035989522,1.062096502857056873035989522,1.062096719177631746888469729,1.062096304439112029471812794,1.062096165256552323876460766,1.062096165256552323876460766,1.062096165256552323876460766,1.062096165256552323876460766,1.062096165256552323876460766,1.062095824644312786867908817,1.062094947282464412024300601,1.062094809051044552244956809,1.062094420537077803922626006,1.062094420537077803922626006,1.062094420537077803922626006,1.062094480189107609354172148,1.062094480189107609354172148,";
        a[
            2
        ] = "602803772587667275847656,602826375026818127307959,602826375026818127307959,602826375026818127307959,602826375026818127307959,602826375026818127307960,602827356728480467727683,602827356728480467727683,602977356728480467727683,602977954284728137764969,602977954284728137764969,602977954284728137764969,602977954284728137764969,602977954284728137764969,602977954284728137764970,602978654284728137764969,602978654284728137764969,602978654284728137764969,603034811231328137764969,603034794755492961744300,603034794755492961744300,603034794755492961744301,603034794755492961744301,603034790531609208222158,603034790531609208222158,603036975401646689072713,603036975401646689072713,603036975401646689072713,603036975401646689072713,603036975401646689072713,603036975401646689072714,603037965543754076581977,603037965543754076581978,603037965543754076581978,603037965543754076581978,603039749694930638036074,603039749694930638036074,603039724587942267806261,603040227385634601041019,603040227385634601041019,603041809885256119922659,603041809885256119922660,603041809885256119922660,603041809885256119922660,603043809785627149860116,603043809785627149860116,603043809785627149860116,603043809785627149860116,603044879808257100332363,603044879808257100332364,603044879808257100332364,603045379808257100332364,603045379808257100332364,603045379808257100332364,603045379808257100332364,603045379808257100332364,603045379808257100332364,603045379808257100332364,603045379808257100332364,603045379798720395669491,603047270738371875907314,603047270738371875907315,603047270738371875907315,603047270738371875907315,603047270738371875907315,603047270738371875907315,603047270738371875907315,603047269935278623123874,603047269935278623123874,603047269935278623123874,603047269935278623123874,603048387544139024640515,603051392644326284807152,603059219341464387437322,603060805629986688910012,603060805629986688910012,603060805629986688910012,603060805629986688910012,603061106308311685222913,603061106308311685222914,603077106302289277752137,603077106302289277752137,603077106302289277752137,603077106302289277752137,603077106302289277752137,603066725414091433959186,603072708521924673800915,603074716399924673800915,603074716399924673800915,603074716399924673800915,603074716399924673800915,603074716399924673800915,603079630146911124053074,603086682496544315936073,603088676635657755800892,603088676635657755800892,603088676635657755800892,603088676635657755800893,603088676549612532024500,603088676549612532024500,";
        a[
            3
        ] = "597818496912399569641620,597795902689928028329697,597795902689928028329697,597795902689928028329697,597795902689928028329697,597795902689928028329697,597794921345900176614127,597794921345900176614127,597644976730453736988100,597644379397779709087342,597644379397779709087342,597644379397779709087342,597644379397779709087342,597644379397779709087342,597644379397779709087342,597643679659711987721395,597643679659711987721395,597643679659711987721395,597587543830674925290629,597915527357682408147754,597915527357682408147754,597915527357682408147754,597915527357682408147754,597999635234498876850512,597999635234498876850512,597997451160707437665206,597997451160707437665206,597997451160707437665206,597997451160707437665206,597997451160707437665206,597997451160707437665206,597996461379546414321645,597996461379546414321645,597996461379546414321645,597996461379546414321645,597994677878925801450068,597994677878925801450068,598494652775867388734833,598494150153310511758366,598494150153310511758366,598494567855850228052152,598494567855850228052152,598494567855850228052152,598494567855850228052152,598494567756236046741748,598494567756236046741748,598494567756236046741748,598494567756236046741748,598493498106483303714065,598493498106483303714065,598493498106483303714065,598492998280746913297716,598492998280746913297716,598492998280746913297716,598492998280746913297716,598492998280746913297716,598492998280746913297716,598492998280746913297716,598492998280746913297716,598493188271211625504311,598491297990739819781354,598491297990739819781354,598491297990739819781354,598491297990739819781354,598491297990739819781354,598491297990739819781354,598491297990739819781354,598507297187765768804333,598507297187765768804333,598507297187765768804333,598507297187765768804333,598506179968026717643532,598503175914538700671909,598540500674566720204175,598538914937262805084423,598538914937262805084423,598538914937262805084423,598538914937262805084423,598538614363438835461116,598538614363438835461116,598554614357417316827067,598554614357417316827067,598554614357417316827067,598554614357417316827067,598554614357417316827067,598550528216185375660648,598544547187771511236642,598542540008129651958568,598542540008129651958568,598542540008129651958568,598542540008129651958568,598542540008129651958568,598537627971298349004488,598519413152369498591816,598517419709382034127710,598506254785648747615866,598506254785648747615866,598506254785648747615866,598507968937502433183135,598507968937502433183135,";
        a[
            4
        ] = "1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,1062678382918407249,";

        uint256 len = Constants.len;

        a0 = new uint256[](len);
        a1 = new uint256[](len);
        a2 = new uint256[](len);
        a3 = new uint256[](len);
        a4 = new uint256[](len);

        for (uint256 i = 0; i < 5; ++i) {
            uint256 pointer = 0;
            uint256 current = 0;
            bytes memory b = bytes(a[i]);
            for (uint256 j = 0; j < b.length; ++j) {
                uint8 symbol = uint8(b[j]);
                if (symbol >= 48 && symbol <= 57) {
                    current = current * 10 + uint256(symbol) - 48;
                } else if (symbol == 46) {
                    continue;
                } else {
                    if (i == 0) {
                        a0[pointer] = current;
                    }
                    if (i == 1) {
                        a1[pointer] = current;
                    }
                    if (i == 2) {
                        a2[pointer] = current;
                    }
                    if (i == 3) {
                        a3[pointer] = current;
                    }
                    if (i == 4) {
                        a4[pointer] = current;
                    }
                    pointer += 1;
                    current = 0;
                }
            }
        }
    }
}
