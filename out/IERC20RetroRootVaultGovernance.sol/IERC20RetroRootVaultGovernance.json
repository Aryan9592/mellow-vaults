{
  "abi": [
    {
      "inputs": [],
      "name": "MAX_MANAGEMENT_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_PERFORMANCE_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_PROTOCOL_FEE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "commitDelayedProtocolParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "commitDelayedProtocolPerVaultParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "commitDelayedStrategyParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "commitInternalParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "strategy_",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "subvaultNfts_",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "createVault",
      "outputs": [
        {
          "internalType": "contract IERC20RetroRootVault",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delayedProtocolParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "managementFeeChargeDelay",
              "type": "uint256"
            },
            {
              "internalType": "contract IOracle",
              "name": "oracle",
              "type": "address"
            }
          ],
          "internalType": "struct IERC20RetroRootVaultGovernance.DelayedProtocolParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delayedProtocolParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedProtocolPerVaultParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            }
          ],
          "internalType": "struct IERC20RetroRootVaultGovernance.DelayedProtocolPerVaultParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedProtocolPerVaultParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedStrategyParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "strategyTreasury",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "strategyPerformanceTreasury",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "privateVault",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "managementFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "performanceFee",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "depositCallbackAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "withdrawCallbackAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IERC20RetroRootVaultGovernance.DelayedStrategyParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedStrategyParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "internalParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "internalParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operatorParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "disableDeposit",
              "type": "bool"
            }
          ],
          "internalType": "struct IERC20RetroRootVaultGovernance.OperatorParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "disableDeposit",
              "type": "bool"
            }
          ],
          "internalType": "struct IERC20RetroRootVaultGovernance.OperatorParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "setOperatorParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenLimitPerAddress",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenLimit",
              "type": "uint256"
            }
          ],
          "internalType": "struct IERC20RetroRootVaultGovernance.StrategyParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "setStrategyParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "managementFeeChargeDelay",
              "type": "uint256"
            },
            {
              "internalType": "contract IOracle",
              "name": "oracle",
              "type": "address"
            }
          ],
          "internalType": "struct IERC20RetroRootVaultGovernance.DelayedProtocolParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "stageDelayedProtocolParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            }
          ],
          "internalType": "struct IERC20RetroRootVaultGovernance.DelayedProtocolPerVaultParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "stageDelayedProtocolPerVaultParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "strategyTreasury",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "strategyPerformanceTreasury",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "privateVault",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "managementFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "performanceFee",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "depositCallbackAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "withdrawCallbackAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IERC20RetroRootVaultGovernance.DelayedStrategyParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "stageDelayedStrategyParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "newParams",
          "type": "tuple"
        }
      ],
      "name": "stageInternalParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stagedDelayedProtocolParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "managementFeeChargeDelay",
              "type": "uint256"
            },
            {
              "internalType": "contract IOracle",
              "name": "oracle",
              "type": "address"
            }
          ],
          "internalType": "struct IERC20RetroRootVaultGovernance.DelayedProtocolParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "stagedDelayedProtocolPerVaultParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "protocolFee",
              "type": "uint256"
            }
          ],
          "internalType": "struct IERC20RetroRootVaultGovernance.DelayedProtocolPerVaultParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "stagedDelayedStrategyParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "strategyTreasury",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "strategyPerformanceTreasury",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "privateVault",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "managementFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "performanceFee",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "depositCallbackAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "withdrawCallbackAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IERC20RetroRootVaultGovernance.DelayedStrategyParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stagedInternalParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "strategyParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenLimitPerAddress",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenLimit",
              "type": "uint256"
            }
          ],
          "internalType": "struct IERC20RetroRootVaultGovernance.StrategyParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "MAX_MANAGEMENT_FEE()": "9908840c",
    "MAX_PERFORMANCE_FEE()": "bdca9165",
    "MAX_PROTOCOL_FEE()": "b8ca3b83",
    "commitDelayedProtocolParams()": "98347a5d",
    "commitDelayedProtocolPerVaultParams(uint256)": "ee2d59f4",
    "commitDelayedStrategyParams(uint256)": "0bdedd56",
    "commitInternalParams()": "d4a07d34",
    "createVault(address[],address,uint256[],address)": "f699a607",
    "delayedProtocolParams()": "d34cc380",
    "delayedProtocolParamsTimestamp()": "e4af6e79",
    "delayedProtocolPerVaultParams(uint256)": "dbb1c35f",
    "delayedProtocolPerVaultParamsTimestamp(uint256)": "511ce798",
    "delayedStrategyParams(uint256)": "8860d248",
    "delayedStrategyParamsTimestamp(uint256)": "6707acee",
    "internalParams()": "7ac46fbb",
    "internalParamsTimestamp()": "1c7f4c73",
    "operatorParams()": "db2030aa",
    "setOperatorParams((bool))": "c8e8a766",
    "setStrategyParams(uint256,(uint256,uint256))": "afd2c7e9",
    "stageDelayedProtocolParams((uint256,address))": "3d8c08b9",
    "stageDelayedProtocolPerVaultParams(uint256,(uint256))": "59331d78",
    "stageDelayedStrategyParams(uint256,(address,address,bool,uint256,uint256,address,address))": "221cc263",
    "stageInternalParams((address,address,address))": "09946538",
    "stagedDelayedProtocolParams()": "c2cbdc67",
    "stagedDelayedProtocolPerVaultParams(uint256)": "8e207dda",
    "stagedDelayedStrategyParams(uint256)": "59f3dae7",
    "stagedInternalParams()": "86c6be3e",
    "strategyParams(uint256)": "12466b68"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MAX_MANAGEMENT_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PERFORMANCE_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_PROTOCOL_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitDelayedProtocolParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"commitDelayedProtocolPerVaultParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"commitDelayedStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"strategy_\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"subvaultNfts_\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"contract IERC20RetroRootVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedProtocolParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"managementFeeChargeDelay\",\"type\":\"uint256\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"internalType\":\"struct IERC20RetroRootVaultGovernance.DelayedProtocolParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedProtocolParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedProtocolPerVaultParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IERC20RetroRootVaultGovernance.DelayedProtocolPerVaultParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedProtocolPerVaultParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedStrategyParams\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"strategyTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"strategyPerformanceTreasury\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"privateVault\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"managementFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"performanceFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"depositCallbackAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawCallbackAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC20RetroRootVaultGovernance.DelayedStrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedStrategyParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatorParams\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableDeposit\",\"type\":\"bool\"}],\"internalType\":\"struct IERC20RetroRootVaultGovernance.OperatorParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"disableDeposit\",\"type\":\"bool\"}],\"internalType\":\"struct IERC20RetroRootVaultGovernance.OperatorParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"setOperatorParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenLimitPerAddress\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct IERC20RetroRootVaultGovernance.StrategyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"setStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"managementFeeChargeDelay\",\"type\":\"uint256\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"internalType\":\"struct IERC20RetroRootVaultGovernance.DelayedProtocolParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"stageDelayedProtocolParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IERC20RetroRootVaultGovernance.DelayedProtocolPerVaultParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"stageDelayedProtocolPerVaultParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"strategyTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"strategyPerformanceTreasury\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"privateVault\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"managementFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"performanceFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"depositCallbackAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawCallbackAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC20RetroRootVaultGovernance.DelayedStrategyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"stageDelayedStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"newParams\",\"type\":\"tuple\"}],\"name\":\"stageInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedDelayedProtocolParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"managementFeeChargeDelay\",\"type\":\"uint256\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"internalType\":\"struct IERC20RetroRootVaultGovernance.DelayedProtocolParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"stagedDelayedProtocolPerVaultParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"internalType\":\"struct IERC20RetroRootVaultGovernance.DelayedProtocolPerVaultParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"stagedDelayedStrategyParams\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"strategyTreasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"strategyPerformanceTreasury\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"privateVault\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"managementFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"performanceFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"depositCallbackAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"withdrawCallbackAddress\",\"type\":\"address\"}],\"internalType\":\"struct IERC20RetroRootVaultGovernance.DelayedStrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedInternalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"strategyParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenLimitPerAddress\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenLimit\",\"type\":\"uint256\"}],\"internalType\":\"struct IERC20RetroRootVaultGovernance.StrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"commitDelayedProtocolPerVaultParams(uint256)\":{\"details\":\"Can only be called after delayedProtocolPerVaultParamsTimestamp\",\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"commitDelayedStrategyParams(uint256)\":{\"details\":\"Can only be called after delayedStrategyParamsTimestamp\",\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"createVault(address[],address,uint256[],address)\":{\"params\":{\"owner_\":\"Owner of the vault NFT\",\"strategy_\":\"The address that will have approvals for subvaultNfts\",\"subvaultNfts_\":\"The NFTs of the subvaults that will be aggregated by this ERC20RootVault\",\"vaultTokens_\":\"ERC20 tokens that will be managed by this Vault\"}},\"delayedProtocolPerVaultParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"delayedStrategyParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"delayedStrategyParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"setOperatorParams((bool))\":{\"params\":{\"params\":\"New params\"}},\"setStrategyParams(uint256,(uint256,uint256))\":{\"params\":{\"nft\":\"Nft of the vault\",\"params\":\"New params\"}},\"stageDelayedProtocolParams((uint256,address))\":{\"details\":\"Can only be called after delayedProtocolParamsTimestamp.\",\"params\":{\"params\":\"New params\"}},\"stageDelayedProtocolPerVaultParams(uint256,(uint256))\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\",\"params\":\"New params\"}},\"stageDelayedStrategyParams(uint256,(address,address,bool,uint256,uint256,address,address))\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\",\"params\":\"New params\"}},\"stageInternalParams((address,address,address))\":{\"params\":{\"newParams\":\"New Internal Params\"}},\"stagedDelayedProtocolPerVaultParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"stagedDelayedStrategyParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"stagedInternalParams()\":{\"details\":\"The Internal Params could be committed after internalParamsTimestamp\"},\"strategyParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"MAX_MANAGEMENT_FEE()\":{\"notice\":\"Number of maximum management fee\"},\"MAX_PERFORMANCE_FEE()\":{\"notice\":\"Number of maximum performance fee\"},\"MAX_PROTOCOL_FEE()\":{\"notice\":\"Number of maximum protocol fee\"},\"commitDelayedProtocolParams()\":{\"notice\":\"Commit Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\"},\"commitDelayedProtocolPerVaultParams(uint256)\":{\"notice\":\"Commit Delayed Protocol Per Vault Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\"},\"commitDelayedStrategyParams(uint256)\":{\"notice\":\"Commit Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay.\"},\"commitInternalParams()\":{\"notice\":\"Commit staged Internal Params.\"},\"createVault(address[],address,uint256[],address)\":{\"notice\":\"Deploys a new vault.\"},\"delayedProtocolParams()\":{\"notice\":\"Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\"},\"delayedProtocolParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed.\"},\"delayedProtocolPerVaultParams(uint256)\":{\"notice\":\"Delayed Protocol Per Vault Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\"},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed.\"},\"delayedStrategyParams(uint256)\":{\"notice\":\"Delayed Strategy Params\"},\"delayedStrategyParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed.\"},\"internalParams()\":{\"notice\":\"Internal Params of the contract.\"},\"internalParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Internal Params could be committed.\"},\"operatorParams()\":{\"notice\":\"Operator Params.\"},\"setOperatorParams((bool))\":{\"notice\":\"Set Operator params, i.e. Params that could be changed by Operator or Protocol Governance immediately.\"},\"setStrategyParams(uint256,(uint256,uint256))\":{\"notice\":\"Set Strategy params, i.e. Params that could be changed by Strategy or Protocol Governance immediately.\"},\"stageDelayedProtocolParams((uint256,address))\":{\"notice\":\"Stage Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\"},\"stageDelayedProtocolPerVaultParams(uint256,(uint256))\":{\"notice\":\"Stage Delayed Protocol Per Vault Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\"},\"stageDelayedStrategyParams(uint256,(address,address,bool,uint256,uint256,address,address))\":{\"notice\":\"Stage Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay.\"},\"stageInternalParams((address,address,address))\":{\"notice\":\"Stage new Internal Params.\"},\"stagedDelayedProtocolParams()\":{\"notice\":\"Delayed Protocol Params staged for commit after delay.\"},\"stagedDelayedProtocolPerVaultParams(uint256)\":{\"notice\":\"Delayed Protocol Per Vault Params staged for commit after delay.\"},\"stagedDelayedStrategyParams(uint256)\":{\"notice\":\"Delayed Strategy Params staged for commit after delay.\"},\"stagedInternalParams()\":{\"notice\":\"Staged new Internal Params.\"},\"strategyParams(uint256)\":{\"notice\":\"Strategy Params.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/vaults/IERC20RetroRootVaultGovernance.sol\":\"IERC20RetroRootVaultGovernance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281\",\"dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b\"]},\"src/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87\",\"dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk\"]},\"src/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50\",\"dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1\"]},\"src/interfaces/oracles/IOracle.sol\":{\"keccak256\":\"0x2d89a1f771e68129d47ae26eccf76f969cd2877e9b7190687056f912c3524b53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f378b9f29c18878e73e251ca97abeca819f0789834281ee1399db878f6baedf5\",\"dweb:/ipfs/QmSrFYZWmGdVkgACwwZEfbkPt3kQCSkr6czBi9HVtzNSJg\"]},\"src/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add\",\"dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu\"]},\"src/interfaces/utils/IERC20RootVaultHelper.sol\":{\"keccak256\":\"0x58a7fcc0db33c498d00b2ece9876a5fc272f362fb5f96d1b666fc10b5683a38f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ebd1b47e1dee02800bbf211f45a13dc6accfb2e91c645711486bb9e3f5559cd\",\"dweb:/ipfs/QmYFVKRWs73onqQxiUw8AJHfHbhib6nshmAzvCr3T5pqpW\"]},\"src/interfaces/vaults/IAggregateVault.sol\":{\"keccak256\":\"0x22c60a8c3758f52aeeabf448cff491582357bed969cf9328cd93623ed12df3f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34fc54a3c550f28f0d77bdecad9e2b1083a79f37b6d783277c06741b1ecae35a\",\"dweb:/ipfs/QmdAXG1NpbzNPH6o8NxsVSVmnoUdtQeP9cNxmQ44Dm6qCT\"]},\"src/interfaces/vaults/IERC20RetroRootVault.sol\":{\"keccak256\":\"0xa9a3cceb1e64505404201ca5410dde4cfd62cad5a9fddb59c321747b0d7ece83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0078cc2f3a7258525d2e90b9b35a252d2844f3c8814188cc5c54f5e183281d90\",\"dweb:/ipfs/QmVNMS2ArwtYCEbXixbrnp5Vqpewo9jYY43eet8eu5jX4H\"]},\"src/interfaces/vaults/IERC20RetroRootVaultGovernance.sol\":{\"keccak256\":\"0xa4cde295e452e5a8782b0a42673fed176dc3342a5f4605bf63de1c681cb9c2f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5347aa8a342dfe367f4966c61d3fcee3241bc6bd07eb356912c9e387c195f0e\",\"dweb:/ipfs/QmZuDDaLfgnDMGksUyGPu9JYKkSgVjMvtn9EzT71bu2TMf\"]},\"src/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1\",\"dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw\"]},\"src/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375\",\"dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu\"]},\"src/interfaces/vaults/IVaultRoot.sol\":{\"keccak256\":\"0xfc566a9133afe6942e196bcfde5b5e1920094d6f1656885b25b72b91f48c10ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79470664780741869fe81ad1eed10b2afd7d9432ee70be1599f242f102a4deaa\",\"dweb:/ipfs/QmUUPv5juGLrdngD5ZQNcsHxvQzWPG1c8aLjA2nsUC6uJz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_MANAGEMENT_FEE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_PERFORMANCE_FEE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_PROTOCOL_FEE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitDelayedProtocolParams"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitDelayedProtocolPerVaultParams"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitDelayedStrategyParams"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitInternalParams"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "vaultTokens_",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "strategy_",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "subvaultNfts_",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createVault",
          "outputs": [
            {
              "internalType": "contract IERC20RetroRootVault",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolParams",
          "outputs": [
            {
              "internalType": "struct IERC20RetroRootVaultGovernance.DelayedProtocolParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "managementFeeChargeDelay",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IOracle",
                  "name": "oracle",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolPerVaultParams",
          "outputs": [
            {
              "internalType": "struct IERC20RetroRootVaultGovernance.DelayedProtocolPerVaultParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "protocolFee",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolPerVaultParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedStrategyParams",
          "outputs": [
            {
              "internalType": "struct IERC20RetroRootVaultGovernance.DelayedStrategyParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "strategyTreasury",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "strategyPerformanceTreasury",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "privateVault",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "managementFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "performanceFee",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "depositCallbackAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawCallbackAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedStrategyParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "internalParams",
          "outputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "internalParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorParams",
          "outputs": [
            {
              "internalType": "struct IERC20RetroRootVaultGovernance.OperatorParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "disableDeposit",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IERC20RetroRootVaultGovernance.OperatorParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "disableDeposit",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperatorParams"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            },
            {
              "internalType": "struct IERC20RetroRootVaultGovernance.StrategyParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenLimitPerAddress",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenLimit",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategyParams"
        },
        {
          "inputs": [
            {
              "internalType": "struct IERC20RetroRootVaultGovernance.DelayedProtocolParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "managementFeeChargeDelay",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IOracle",
                  "name": "oracle",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stageDelayedProtocolParams"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            },
            {
              "internalType": "struct IERC20RetroRootVaultGovernance.DelayedProtocolPerVaultParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "protocolFee",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stageDelayedProtocolPerVaultParams"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            },
            {
              "internalType": "struct IERC20RetroRootVaultGovernance.DelayedStrategyParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "strategyTreasury",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "strategyPerformanceTreasury",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "privateVault",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "managementFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "performanceFee",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "depositCallbackAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawCallbackAddress",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stageDelayedStrategyParams"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "newParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stageInternalParams"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stagedDelayedProtocolParams",
          "outputs": [
            {
              "internalType": "struct IERC20RetroRootVaultGovernance.DelayedProtocolParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "managementFeeChargeDelay",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IOracle",
                  "name": "oracle",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stagedDelayedProtocolPerVaultParams",
          "outputs": [
            {
              "internalType": "struct IERC20RetroRootVaultGovernance.DelayedProtocolPerVaultParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "protocolFee",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stagedDelayedStrategyParams",
          "outputs": [
            {
              "internalType": "struct IERC20RetroRootVaultGovernance.DelayedStrategyParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "strategyTreasury",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "strategyPerformanceTreasury",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "privateVault",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "managementFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "performanceFee",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "depositCallbackAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "withdrawCallbackAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stagedInternalParams",
          "outputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyParams",
          "outputs": [
            {
              "internalType": "struct IERC20RetroRootVaultGovernance.StrategyParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenLimitPerAddress",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenLimit",
                  "type": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "commitDelayedProtocolPerVaultParams(uint256)": {
            "details": "Can only be called after delayedProtocolPerVaultParamsTimestamp",
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "commitDelayedStrategyParams(uint256)": {
            "details": "Can only be called after delayedStrategyParamsTimestamp",
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "createVault(address[],address,uint256[],address)": {
            "params": {
              "owner_": "Owner of the vault NFT",
              "strategy_": "The address that will have approvals for subvaultNfts",
              "subvaultNfts_": "The NFTs of the subvaults that will be aggregated by this ERC20RootVault",
              "vaultTokens_": "ERC20 tokens that will be managed by this Vault"
            }
          },
          "delayedProtocolPerVaultParams(uint256)": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "delayedProtocolPerVaultParamsTimestamp(uint256)": {
            "params": {
              "nft": "Nft of the vault"
            }
          },
          "delayedStrategyParams(uint256)": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "delayedStrategyParamsTimestamp(uint256)": {
            "params": {
              "nft": "Nft of the vault"
            }
          },
          "setOperatorParams((bool))": {
            "params": {
              "params": "New params"
            }
          },
          "setStrategyParams(uint256,(uint256,uint256))": {
            "params": {
              "nft": "Nft of the vault",
              "params": "New params"
            }
          },
          "stageDelayedProtocolParams((uint256,address))": {
            "details": "Can only be called after delayedProtocolParamsTimestamp.",
            "params": {
              "params": "New params"
            }
          },
          "stageDelayedProtocolPerVaultParams(uint256,(uint256))": {
            "params": {
              "nft": "VaultRegistry NFT of the vault",
              "params": "New params"
            }
          },
          "stageDelayedStrategyParams(uint256,(address,address,bool,uint256,uint256,address,address))": {
            "params": {
              "nft": "VaultRegistry NFT of the vault",
              "params": "New params"
            }
          },
          "stageInternalParams((address,address,address))": {
            "params": {
              "newParams": "New Internal Params"
            }
          },
          "stagedDelayedProtocolPerVaultParams(uint256)": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "stagedDelayedStrategyParams(uint256)": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "stagedInternalParams()": {
            "details": "The Internal Params could be committed after internalParamsTimestamp"
          },
          "strategyParams(uint256)": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_MANAGEMENT_FEE()": {
            "notice": "Number of maximum management fee"
          },
          "MAX_PERFORMANCE_FEE()": {
            "notice": "Number of maximum performance fee"
          },
          "MAX_PROTOCOL_FEE()": {
            "notice": "Number of maximum protocol fee"
          },
          "commitDelayedProtocolParams()": {
            "notice": "Commit Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
          },
          "commitDelayedProtocolPerVaultParams(uint256)": {
            "notice": "Commit Delayed Protocol Per Vault Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
          },
          "commitDelayedStrategyParams(uint256)": {
            "notice": "Commit Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay."
          },
          "commitInternalParams()": {
            "notice": "Commit staged Internal Params."
          },
          "createVault(address[],address,uint256[],address)": {
            "notice": "Deploys a new vault."
          },
          "delayedProtocolParams()": {
            "notice": "Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
          },
          "delayedProtocolParamsTimestamp()": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed."
          },
          "delayedProtocolPerVaultParams(uint256)": {
            "notice": "Delayed Protocol Per Vault Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
          },
          "delayedProtocolPerVaultParamsTimestamp(uint256)": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed."
          },
          "delayedStrategyParams(uint256)": {
            "notice": "Delayed Strategy Params"
          },
          "delayedStrategyParamsTimestamp(uint256)": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed."
          },
          "internalParams()": {
            "notice": "Internal Params of the contract."
          },
          "internalParamsTimestamp()": {
            "notice": "Timestamp in unix time seconds after which staged Internal Params could be committed."
          },
          "operatorParams()": {
            "notice": "Operator Params."
          },
          "setOperatorParams((bool))": {
            "notice": "Set Operator params, i.e. Params that could be changed by Operator or Protocol Governance immediately."
          },
          "setStrategyParams(uint256,(uint256,uint256))": {
            "notice": "Set Strategy params, i.e. Params that could be changed by Strategy or Protocol Governance immediately."
          },
          "stageDelayedProtocolParams((uint256,address))": {
            "notice": "Stage Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
          },
          "stageDelayedProtocolPerVaultParams(uint256,(uint256))": {
            "notice": "Stage Delayed Protocol Per Vault Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
          },
          "stageDelayedStrategyParams(uint256,(address,address,bool,uint256,uint256,address,address))": {
            "notice": "Stage Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay."
          },
          "stageInternalParams((address,address,address))": {
            "notice": "Stage new Internal Params."
          },
          "stagedDelayedProtocolParams()": {
            "notice": "Delayed Protocol Params staged for commit after delay."
          },
          "stagedDelayedProtocolPerVaultParams(uint256)": {
            "notice": "Delayed Protocol Per Vault Params staged for commit after delay."
          },
          "stagedDelayedStrategyParams(uint256)": {
            "notice": "Delayed Strategy Params staged for commit after delay."
          },
          "stagedInternalParams()": {
            "notice": "Staged new Internal Params."
          },
          "strategyParams(uint256)": {
            "notice": "Strategy Params."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/vaults/IERC20RetroRootVaultGovernance.sol": "IERC20RetroRootVaultGovernance"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolGovernance.sol": {
        "keccak256": "0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e",
        "urls": [
          "bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281",
          "dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b"
        ],
        "license": "MIT"
      },
      "src/interfaces/IUnitPricesGovernance.sol": {
        "keccak256": "0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081",
        "urls": [
          "bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87",
          "dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk"
        ],
        "license": "MIT"
      },
      "src/interfaces/IVaultRegistry.sol": {
        "keccak256": "0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55",
        "urls": [
          "bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50",
          "dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1"
        ],
        "license": "MIT"
      },
      "src/interfaces/oracles/IOracle.sol": {
        "keccak256": "0x2d89a1f771e68129d47ae26eccf76f969cd2877e9b7190687056f912c3524b53",
        "urls": [
          "bzz-raw://f378b9f29c18878e73e251ca97abeca819f0789834281ee1399db878f6baedf5",
          "dweb:/ipfs/QmSrFYZWmGdVkgACwwZEfbkPt3kQCSkr6czBi9HVtzNSJg"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IDefaultAccessControl.sol": {
        "keccak256": "0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60",
        "urls": [
          "bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add",
          "dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IERC20RootVaultHelper.sol": {
        "keccak256": "0x58a7fcc0db33c498d00b2ece9876a5fc272f362fb5f96d1b666fc10b5683a38f",
        "urls": [
          "bzz-raw://8ebd1b47e1dee02800bbf211f45a13dc6accfb2e91c645711486bb9e3f5559cd",
          "dweb:/ipfs/QmYFVKRWs73onqQxiUw8AJHfHbhib6nshmAzvCr3T5pqpW"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IAggregateVault.sol": {
        "keccak256": "0x22c60a8c3758f52aeeabf448cff491582357bed969cf9328cd93623ed12df3f9",
        "urls": [
          "bzz-raw://34fc54a3c550f28f0d77bdecad9e2b1083a79f37b6d783277c06741b1ecae35a",
          "dweb:/ipfs/QmdAXG1NpbzNPH6o8NxsVSVmnoUdtQeP9cNxmQ44Dm6qCT"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IERC20RetroRootVault.sol": {
        "keccak256": "0xa9a3cceb1e64505404201ca5410dde4cfd62cad5a9fddb59c321747b0d7ece83",
        "urls": [
          "bzz-raw://0078cc2f3a7258525d2e90b9b35a252d2844f3c8814188cc5c54f5e183281d90",
          "dweb:/ipfs/QmVNMS2ArwtYCEbXixbrnp5Vqpewo9jYY43eet8eu5jX4H"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IERC20RetroRootVaultGovernance.sol": {
        "keccak256": "0xa4cde295e452e5a8782b0a42673fed176dc3342a5f4605bf63de1c681cb9c2f1",
        "urls": [
          "bzz-raw://f5347aa8a342dfe367f4966c61d3fcee3241bc6bd07eb356912c9e387c195f0e",
          "dweb:/ipfs/QmZuDDaLfgnDMGksUyGPu9JYKkSgVjMvtn9EzT71bu2TMf"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVault.sol": {
        "keccak256": "0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43",
        "urls": [
          "bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1",
          "dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultGovernance.sol": {
        "keccak256": "0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813",
        "urls": [
          "bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375",
          "dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultRoot.sol": {
        "keccak256": "0xfc566a9133afe6942e196bcfde5b5e1920094d6f1656885b25b72b91f48c10ef",
        "urls": [
          "bzz-raw://79470664780741869fe81ad1eed10b2afd7d9432ee70be1599f242f102a4deaa",
          "dweb:/ipfs/QmUUPv5juGLrdngD5ZQNcsHxvQzWPG1c8aLjA2nsUC6uJz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/vaults/IERC20RetroRootVaultGovernance.sol",
    "id": 76851,
    "exportedSymbols": {
      "IAccessControl": [
        43366
      ],
      "IAccessControlEnumerable": [
        43391
      ],
      "IAggregateVault": [
        76190
      ],
      "IDefaultAccessControl": [
        75786
      ],
      "IERC165": [
        48073
      ],
      "IERC20": [
        45207
      ],
      "IERC20RetroRootVault": [
        76650
      ],
      "IERC20RetroRootVaultGovernance": [
        76850
      ],
      "IERC20RootVaultHelper": [
        75804
      ],
      "IERC721": [
        46687
      ],
      "IOracle": [
        75605
      ],
      "IProtocolGovernance": [
        52868
      ],
      "IUnitPricesGovernance": [
        52921
      ],
      "IVault": [
        78599
      ],
      "IVaultGovernance": [
        78668
      ],
      "IVaultRegistry": [
        53012
      ],
      "IVaultRoot": [
        78702
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:7321:336",
    "nodes": [
      {
        "id": 76652,
        "nodeType": "PragmaDirective",
        "src": "32:23:336",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 76653,
        "nodeType": "ImportDirective",
        "src": "57:32:336",
        "nodes": [],
        "absolutePath": "src/interfaces/oracles/IOracle.sol",
        "file": "../oracles/IOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76851,
        "sourceUnit": 75606,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76654,
        "nodeType": "ImportDirective",
        "src": "90:36:336",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/IERC20RetroRootVault.sol",
        "file": "./IERC20RetroRootVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76851,
        "sourceUnit": 76651,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76655,
        "nodeType": "ImportDirective",
        "src": "127:32:336",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/IVaultGovernance.sol",
        "file": "./IVaultGovernance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76851,
        "sourceUnit": 78669,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76850,
        "nodeType": "ContractDefinition",
        "src": "161:7191:336",
        "nodes": [
          {
            "id": 76672,
            "nodeType": "StructDefinition",
            "src": "965:286:336",
            "nodes": [],
            "canonicalName": "IERC20RetroRootVaultGovernance.DelayedStrategyParams",
            "members": [
              {
                "constant": false,
                "id": 76659,
                "mutability": "mutable",
                "name": "strategyTreasury",
                "nameLocation": "1012:16:336",
                "nodeType": "VariableDeclaration",
                "scope": 76672,
                "src": "1004:24:336",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 76658,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1004:7:336",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76661,
                "mutability": "mutable",
                "name": "strategyPerformanceTreasury",
                "nameLocation": "1046:27:336",
                "nodeType": "VariableDeclaration",
                "scope": 76672,
                "src": "1038:35:336",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 76660,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1038:7:336",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76663,
                "mutability": "mutable",
                "name": "privateVault",
                "nameLocation": "1088:12:336",
                "nodeType": "VariableDeclaration",
                "scope": 76672,
                "src": "1083:17:336",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 76662,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1083:4:336",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76665,
                "mutability": "mutable",
                "name": "managementFee",
                "nameLocation": "1118:13:336",
                "nodeType": "VariableDeclaration",
                "scope": 76672,
                "src": "1110:21:336",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 76664,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1110:7:336",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76667,
                "mutability": "mutable",
                "name": "performanceFee",
                "nameLocation": "1149:14:336",
                "nodeType": "VariableDeclaration",
                "scope": 76672,
                "src": "1141:22:336",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 76666,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1141:7:336",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76669,
                "mutability": "mutable",
                "name": "depositCallbackAddress",
                "nameLocation": "1181:22:336",
                "nodeType": "VariableDeclaration",
                "scope": 76672,
                "src": "1173:30:336",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 76668,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1173:7:336",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76671,
                "mutability": "mutable",
                "name": "withdrawCallbackAddress",
                "nameLocation": "1221:23:336",
                "nodeType": "VariableDeclaration",
                "scope": 76672,
                "src": "1213:31:336",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 76670,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1213:7:336",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DelayedStrategyParams",
            "nameLocation": "972:21:336",
            "scope": 76850,
            "visibility": "public"
          },
          {
            "id": 76678,
            "nodeType": "StructDefinition",
            "src": "1503:102:336",
            "nodes": [],
            "canonicalName": "IERC20RetroRootVaultGovernance.DelayedProtocolParams",
            "members": [
              {
                "constant": false,
                "id": 76674,
                "mutability": "mutable",
                "name": "managementFeeChargeDelay",
                "nameLocation": "1550:24:336",
                "nodeType": "VariableDeclaration",
                "scope": 76678,
                "src": "1542:32:336",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 76673,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1542:7:336",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76677,
                "mutability": "mutable",
                "name": "oracle",
                "nameLocation": "1592:6:336",
                "nodeType": "VariableDeclaration",
                "scope": 76678,
                "src": "1584:14:336",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IOracle_$75605",
                  "typeString": "contract IOracle"
                },
                "typeName": {
                  "id": 76676,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 76675,
                    "name": "IOracle",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 75605,
                    "src": "1584:7:336"
                  },
                  "referencedDeclaration": 75605,
                  "src": "1584:7:336",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IOracle_$75605",
                    "typeString": "contract IOracle"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DelayedProtocolParams",
            "nameLocation": "1510:21:336",
            "scope": 76850,
            "visibility": "public"
          },
          {
            "id": 76683,
            "nodeType": "StructDefinition",
            "src": "1812:95:336",
            "nodes": [],
            "canonicalName": "IERC20RetroRootVaultGovernance.StrategyParams",
            "members": [
              {
                "constant": false,
                "id": 76680,
                "mutability": "mutable",
                "name": "tokenLimitPerAddress",
                "nameLocation": "1852:20:336",
                "nodeType": "VariableDeclaration",
                "scope": 76683,
                "src": "1844:28:336",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 76679,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1844:7:336",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76682,
                "mutability": "mutable",
                "name": "tokenLimit",
                "nameLocation": "1890:10:336",
                "nodeType": "VariableDeclaration",
                "scope": 76683,
                "src": "1882:18:336",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 76681,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1882:7:336",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StrategyParams",
            "nameLocation": "1819:14:336",
            "scope": 76850,
            "visibility": "public"
          },
          {
            "id": 76686,
            "nodeType": "StructDefinition",
            "src": "2091:73:336",
            "nodes": [],
            "canonicalName": "IERC20RetroRootVaultGovernance.DelayedProtocolPerVaultParams",
            "members": [
              {
                "constant": false,
                "id": 76685,
                "mutability": "mutable",
                "name": "protocolFee",
                "nameLocation": "2146:11:336",
                "nodeType": "VariableDeclaration",
                "scope": 76686,
                "src": "2138:19:336",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 76684,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2138:7:336",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DelayedProtocolPerVaultParams",
            "nameLocation": "2098:29:336",
            "scope": 76850,
            "visibility": "public"
          },
          {
            "id": 76689,
            "nodeType": "StructDefinition",
            "src": "2323:58:336",
            "nodes": [],
            "canonicalName": "IERC20RetroRootVaultGovernance.OperatorParams",
            "members": [
              {
                "constant": false,
                "id": 76688,
                "mutability": "mutable",
                "name": "disableDeposit",
                "nameLocation": "2360:14:336",
                "nodeType": "VariableDeclaration",
                "scope": 76689,
                "src": "2355:19:336",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 76687,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2355:4:336",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "OperatorParams",
            "nameLocation": "2330:14:336",
            "scope": 76850,
            "visibility": "public"
          },
          {
            "id": 76695,
            "nodeType": "FunctionDefinition",
            "src": "2434:60:336",
            "nodes": [],
            "documentation": {
              "id": 76690,
              "nodeType": "StructuredDocumentation",
              "src": "2387:42:336",
              "text": "@notice Number of maximum protocol fee"
            },
            "functionSelector": "b8ca3b83",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "MAX_PROTOCOL_FEE",
            "nameLocation": "2443:16:336",
            "parameters": {
              "id": 76691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2459:2:336"
            },
            "returnParameters": {
              "id": 76694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76693,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76695,
                  "src": "2485:7:336",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2485:7:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2484:9:336"
            },
            "scope": 76850,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76701,
            "nodeType": "FunctionDefinition",
            "src": "2549:62:336",
            "nodes": [],
            "documentation": {
              "id": 76696,
              "nodeType": "StructuredDocumentation",
              "src": "2500:44:336",
              "text": "@notice Number of maximum management fee"
            },
            "functionSelector": "9908840c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "MAX_MANAGEMENT_FEE",
            "nameLocation": "2558:18:336",
            "parameters": {
              "id": 76697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2576:2:336"
            },
            "returnParameters": {
              "id": 76700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76699,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76701,
                  "src": "2602:7:336",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76698,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2602:7:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2601:9:336"
            },
            "scope": 76850,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76707,
            "nodeType": "FunctionDefinition",
            "src": "2667:63:336",
            "nodes": [],
            "documentation": {
              "id": 76702,
              "nodeType": "StructuredDocumentation",
              "src": "2617:45:336",
              "text": "@notice Number of maximum performance fee"
            },
            "functionSelector": "bdca9165",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "MAX_PERFORMANCE_FEE",
            "nameLocation": "2676:19:336",
            "parameters": {
              "id": 76703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2695:2:336"
            },
            "returnParameters": {
              "id": 76706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76705,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76707,
                  "src": "2721:7:336",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2721:7:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2720:9:336"
            },
            "scope": 76850,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76714,
            "nodeType": "FunctionDefinition",
            "src": "2866:86:336",
            "nodes": [],
            "documentation": {
              "id": 76708,
              "nodeType": "StructuredDocumentation",
              "src": "2736:125:336",
              "text": "@notice Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
            },
            "functionSelector": "d34cc380",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delayedProtocolParams",
            "nameLocation": "2875:21:336",
            "parameters": {
              "id": 76709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2896:2:336"
            },
            "returnParameters": {
              "id": 76713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76712,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76714,
                  "src": "2922:28:336",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedProtocolParams_$76678_memory_ptr",
                    "typeString": "struct IERC20RetroRootVaultGovernance.DelayedProtocolParams"
                  },
                  "typeName": {
                    "id": 76711,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76710,
                      "name": "DelayedProtocolParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76678,
                      "src": "2922:21:336"
                    },
                    "referencedDeclaration": 76678,
                    "src": "2922:21:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedProtocolParams_$76678_storage_ptr",
                      "typeString": "struct IERC20RetroRootVaultGovernance.DelayedProtocolParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2921:30:336"
            },
            "scope": 76850,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76721,
            "nodeType": "FunctionDefinition",
            "src": "3029:92:336",
            "nodes": [],
            "documentation": {
              "id": 76715,
              "nodeType": "StructuredDocumentation",
              "src": "2958:66:336",
              "text": "@notice Delayed Protocol Params staged for commit after delay."
            },
            "functionSelector": "c2cbdc67",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stagedDelayedProtocolParams",
            "nameLocation": "3038:27:336",
            "parameters": {
              "id": 76716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3065:2:336"
            },
            "returnParameters": {
              "id": 76720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76719,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76721,
                  "src": "3091:28:336",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedProtocolParams_$76678_memory_ptr",
                    "typeString": "struct IERC20RetroRootVaultGovernance.DelayedProtocolParams"
                  },
                  "typeName": {
                    "id": 76718,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76717,
                      "name": "DelayedProtocolParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76678,
                      "src": "3091:21:336"
                    },
                    "referencedDeclaration": 76678,
                    "src": "3091:21:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedProtocolParams_$76678_storage_ptr",
                      "typeString": "struct IERC20RetroRootVaultGovernance.DelayedProtocolParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3090:30:336"
            },
            "scope": 76850,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76730,
            "nodeType": "FunctionDefinition",
            "src": "3317:113:336",
            "nodes": [],
            "documentation": {
              "id": 76722,
              "nodeType": "StructuredDocumentation",
              "src": "3127:185:336",
              "text": "@notice Delayed Protocol Per Vault Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\n @param nft VaultRegistry NFT of the vault"
            },
            "functionSelector": "dbb1c35f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delayedProtocolPerVaultParams",
            "nameLocation": "3326:29:336",
            "parameters": {
              "id": 76725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76724,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "3364:3:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76730,
                  "src": "3356:11:336",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3356:7:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3355:13:336"
            },
            "returnParameters": {
              "id": 76729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76728,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76730,
                  "src": "3392:36:336",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedProtocolPerVaultParams_$76686_memory_ptr",
                    "typeString": "struct IERC20RetroRootVaultGovernance.DelayedProtocolPerVaultParams"
                  },
                  "typeName": {
                    "id": 76727,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76726,
                      "name": "DelayedProtocolPerVaultParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76686,
                      "src": "3392:29:336"
                    },
                    "referencedDeclaration": 76686,
                    "src": "3392:29:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedProtocolPerVaultParams_$76686_storage_ptr",
                      "typeString": "struct IERC20RetroRootVaultGovernance.DelayedProtocolPerVaultParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3391:38:336"
            },
            "scope": 76850,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76739,
            "nodeType": "FunctionDefinition",
            "src": "3567:133:336",
            "nodes": [],
            "documentation": {
              "id": 76731,
              "nodeType": "StructuredDocumentation",
              "src": "3436:126:336",
              "text": "@notice Delayed Protocol Per Vault Params staged for commit after delay.\n @param nft VaultRegistry NFT of the vault"
            },
            "functionSelector": "8e207dda",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stagedDelayedProtocolPerVaultParams",
            "nameLocation": "3576:35:336",
            "parameters": {
              "id": 76734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76733,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "3629:3:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76739,
                  "src": "3621:11:336",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76732,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3621:7:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3611:27:336"
            },
            "returnParameters": {
              "id": 76738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76737,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76739,
                  "src": "3662:36:336",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedProtocolPerVaultParams_$76686_memory_ptr",
                    "typeString": "struct IERC20RetroRootVaultGovernance.DelayedProtocolPerVaultParams"
                  },
                  "typeName": {
                    "id": 76736,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76735,
                      "name": "DelayedProtocolPerVaultParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76686,
                      "src": "3662:29:336"
                    },
                    "referencedDeclaration": 76686,
                    "src": "3662:29:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedProtocolPerVaultParams_$76686_storage_ptr",
                      "typeString": "struct IERC20RetroRootVaultGovernance.DelayedProtocolPerVaultParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3661:38:336"
            },
            "scope": 76850,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76748,
            "nodeType": "FunctionDefinition",
            "src": "3789:83:336",
            "nodes": [],
            "documentation": {
              "id": 76740,
              "nodeType": "StructuredDocumentation",
              "src": "3706:78:336",
              "text": "@notice Strategy Params.\n @param nft VaultRegistry NFT of the vault"
            },
            "functionSelector": "12466b68",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "strategyParams",
            "nameLocation": "3798:14:336",
            "parameters": {
              "id": 76743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76742,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "3821:3:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76748,
                  "src": "3813:11:336",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3813:7:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3812:13:336"
            },
            "returnParameters": {
              "id": 76747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76746,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76748,
                  "src": "3849:21:336",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$76683_memory_ptr",
                    "typeString": "struct IERC20RetroRootVaultGovernance.StrategyParams"
                  },
                  "typeName": {
                    "id": 76745,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76744,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76683,
                      "src": "3849:14:336"
                    },
                    "referencedDeclaration": 76683,
                    "src": "3849:14:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$76683_storage_ptr",
                      "typeString": "struct IERC20RetroRootVaultGovernance.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3848:23:336"
            },
            "scope": 76850,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76755,
            "nodeType": "FunctionDefinition",
            "src": "3911:72:336",
            "nodes": [],
            "documentation": {
              "id": 76749,
              "nodeType": "StructuredDocumentation",
              "src": "3878:28:336",
              "text": "@notice Operator Params."
            },
            "functionSelector": "db2030aa",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operatorParams",
            "nameLocation": "3920:14:336",
            "parameters": {
              "id": 76750,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3934:2:336"
            },
            "returnParameters": {
              "id": 76754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76753,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76755,
                  "src": "3960:21:336",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OperatorParams_$76689_memory_ptr",
                    "typeString": "struct IERC20RetroRootVaultGovernance.OperatorParams"
                  },
                  "typeName": {
                    "id": 76752,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76751,
                      "name": "OperatorParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76689,
                      "src": "3960:14:336"
                    },
                    "referencedDeclaration": 76689,
                    "src": "3960:14:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OperatorParams_$76689_storage_ptr",
                      "typeString": "struct IERC20RetroRootVaultGovernance.OperatorParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3959:23:336"
            },
            "scope": 76850,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76764,
            "nodeType": "FunctionDefinition",
            "src": "4079:97:336",
            "nodes": [],
            "documentation": {
              "id": 76756,
              "nodeType": "StructuredDocumentation",
              "src": "3989:85:336",
              "text": "@notice Delayed Strategy Params\n @param nft VaultRegistry NFT of the vault"
            },
            "functionSelector": "8860d248",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delayedStrategyParams",
            "nameLocation": "4088:21:336",
            "parameters": {
              "id": 76759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76758,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "4118:3:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76764,
                  "src": "4110:11:336",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4110:7:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4109:13:336"
            },
            "returnParameters": {
              "id": 76763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76762,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76764,
                  "src": "4146:28:336",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedStrategyParams_$76672_memory_ptr",
                    "typeString": "struct IERC20RetroRootVaultGovernance.DelayedStrategyParams"
                  },
                  "typeName": {
                    "id": 76761,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76760,
                      "name": "DelayedStrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76672,
                      "src": "4146:21:336"
                    },
                    "referencedDeclaration": 76672,
                    "src": "4146:21:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedStrategyParams_$76672_storage_ptr",
                      "typeString": "struct IERC20RetroRootVaultGovernance.DelayedStrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4145:30:336"
            },
            "scope": 76850,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76773,
            "nodeType": "FunctionDefinition",
            "src": "4303:103:336",
            "nodes": [],
            "documentation": {
              "id": 76765,
              "nodeType": "StructuredDocumentation",
              "src": "4182:116:336",
              "text": "@notice Delayed Strategy Params staged for commit after delay.\n @param nft VaultRegistry NFT of the vault"
            },
            "functionSelector": "59f3dae7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stagedDelayedStrategyParams",
            "nameLocation": "4312:27:336",
            "parameters": {
              "id": 76768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76767,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "4348:3:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76773,
                  "src": "4340:11:336",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4340:7:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4339:13:336"
            },
            "returnParameters": {
              "id": 76772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76771,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76773,
                  "src": "4376:28:336",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedStrategyParams_$76672_memory_ptr",
                    "typeString": "struct IERC20RetroRootVaultGovernance.DelayedStrategyParams"
                  },
                  "typeName": {
                    "id": 76770,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76769,
                      "name": "DelayedStrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76672,
                      "src": "4376:21:336"
                    },
                    "referencedDeclaration": 76672,
                    "src": "4376:21:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedStrategyParams_$76672_storage_ptr",
                      "typeString": "struct IERC20RetroRootVaultGovernance.DelayedStrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4375:30:336"
            },
            "scope": 76850,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76782,
            "nodeType": "FunctionDefinition",
            "src": "4600:81:336",
            "nodes": [],
            "documentation": {
              "id": 76774,
              "nodeType": "StructuredDocumentation",
              "src": "4412:183:336",
              "text": "@notice Set Strategy params, i.e. Params that could be changed by Strategy or Protocol Governance immediately.\n @param nft Nft of the vault\n @param params New params"
            },
            "functionSelector": "afd2c7e9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategyParams",
            "nameLocation": "4609:17:336",
            "parameters": {
              "id": 76780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76776,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "4635:3:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76782,
                  "src": "4627:11:336",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4627:7:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76779,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "4664:6:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76782,
                  "src": "4640:30:336",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$76683_calldata_ptr",
                    "typeString": "struct IERC20RetroRootVaultGovernance.StrategyParams"
                  },
                  "typeName": {
                    "id": 76778,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76777,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76683,
                      "src": "4640:14:336"
                    },
                    "referencedDeclaration": 76683,
                    "src": "4640:14:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$76683_storage_ptr",
                      "typeString": "struct IERC20RetroRootVaultGovernance.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4626:45:336"
            },
            "returnParameters": {
              "id": 76781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4680:0:336"
            },
            "scope": 76850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76789,
            "nodeType": "FunctionDefinition",
            "src": "4839:68:336",
            "nodes": [],
            "documentation": {
              "id": 76783,
              "nodeType": "StructuredDocumentation",
              "src": "4687:147:336",
              "text": "@notice Set Operator params, i.e. Params that could be changed by Operator or Protocol Governance immediately.\n @param params New params"
            },
            "functionSelector": "c8e8a766",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setOperatorParams",
            "nameLocation": "4848:17:336",
            "parameters": {
              "id": 76787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76786,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "4890:6:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76789,
                  "src": "4866:30:336",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OperatorParams_$76689_calldata_ptr",
                    "typeString": "struct IERC20RetroRootVaultGovernance.OperatorParams"
                  },
                  "typeName": {
                    "id": 76785,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76784,
                      "name": "OperatorParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76689,
                      "src": "4866:14:336"
                    },
                    "referencedDeclaration": 76689,
                    "src": "4866:14:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OperatorParams_$76689_storage_ptr",
                      "typeString": "struct IERC20RetroRootVaultGovernance.OperatorParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4865:32:336"
            },
            "returnParameters": {
              "id": 76788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4906:0:336"
            },
            "scope": 76850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76798,
            "nodeType": "FunctionDefinition",
            "src": "5142:113:336",
            "nodes": [],
            "documentation": {
              "id": 76790,
              "nodeType": "StructuredDocumentation",
              "src": "4913:224:336",
              "text": "@notice Stage Delayed Protocol Per Vault Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\n @param nft VaultRegistry NFT of the vault\n @param params New params"
            },
            "functionSelector": "59331d78",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stageDelayedProtocolPerVaultParams",
            "nameLocation": "5151:34:336",
            "parameters": {
              "id": 76796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76792,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "5194:3:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76798,
                  "src": "5186:11:336",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5186:7:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76795,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "5238:6:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76798,
                  "src": "5199:45:336",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedProtocolPerVaultParams_$76686_calldata_ptr",
                    "typeString": "struct IERC20RetroRootVaultGovernance.DelayedProtocolPerVaultParams"
                  },
                  "typeName": {
                    "id": 76794,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76793,
                      "name": "DelayedProtocolPerVaultParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76686,
                      "src": "5199:29:336"
                    },
                    "referencedDeclaration": 76686,
                    "src": "5199:29:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedProtocolPerVaultParams_$76686_storage_ptr",
                      "typeString": "struct IERC20RetroRootVaultGovernance.DelayedProtocolPerVaultParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5185:60:336"
            },
            "returnParameters": {
              "id": 76797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5254:0:336"
            },
            "scope": 76850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76804,
            "nodeType": "FunctionDefinition",
            "src": "5535:67:336",
            "nodes": [],
            "documentation": {
              "id": 76799,
              "nodeType": "StructuredDocumentation",
              "src": "5261:269:336",
              "text": "@notice Commit Delayed Protocol Per Vault Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\n @dev Can only be called after delayedProtocolPerVaultParamsTimestamp\n @param nft VaultRegistry NFT of the vault"
            },
            "functionSelector": "ee2d59f4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "commitDelayedProtocolPerVaultParams",
            "nameLocation": "5544:35:336",
            "parameters": {
              "id": 76802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76801,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "5588:3:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76804,
                  "src": "5580:11:336",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76800,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5580:7:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5579:13:336"
            },
            "returnParameters": {
              "id": 76803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5601:0:336"
            },
            "scope": 76850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76813,
            "nodeType": "FunctionDefinition",
            "src": "5839:97:336",
            "nodes": [],
            "documentation": {
              "id": 76805,
              "nodeType": "StructuredDocumentation",
              "src": "5608:226:336",
              "text": "@notice Stage Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay.\n @param nft VaultRegistry NFT of the vault\n @param params New params"
            },
            "functionSelector": "221cc263",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stageDelayedStrategyParams",
            "nameLocation": "5848:26:336",
            "parameters": {
              "id": 76811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76807,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "5883:3:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76813,
                  "src": "5875:11:336",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5875:7:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76810,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "5919:6:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76813,
                  "src": "5888:37:336",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedStrategyParams_$76672_calldata_ptr",
                    "typeString": "struct IERC20RetroRootVaultGovernance.DelayedStrategyParams"
                  },
                  "typeName": {
                    "id": 76809,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76808,
                      "name": "DelayedStrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76672,
                      "src": "5888:21:336"
                    },
                    "referencedDeclaration": 76672,
                    "src": "5888:21:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedStrategyParams_$76672_storage_ptr",
                      "typeString": "struct IERC20RetroRootVaultGovernance.DelayedStrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5874:52:336"
            },
            "returnParameters": {
              "id": 76812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5935:0:336"
            },
            "scope": 76850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76819,
            "nodeType": "FunctionDefinition",
            "src": "6210:59:336",
            "nodes": [],
            "documentation": {
              "id": 76814,
              "nodeType": "StructuredDocumentation",
              "src": "5942:263:336",
              "text": "@notice Commit Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay.\n @dev Can only be called after delayedStrategyParamsTimestamp\n @param nft VaultRegistry NFT of the vault"
            },
            "functionSelector": "0bdedd56",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "commitDelayedStrategyParams",
            "nameLocation": "6219:27:336",
            "parameters": {
              "id": 76817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76816,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "6255:3:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76819,
                  "src": "6247:11:336",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6247:7:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6246:13:336"
            },
            "returnParameters": {
              "id": 76818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6268:0:336"
            },
            "scope": 76850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76826,
            "nodeType": "FunctionDefinition",
            "src": "6514:84:336",
            "nodes": [],
            "documentation": {
              "id": 76820,
              "nodeType": "StructuredDocumentation",
              "src": "6275:234:336",
              "text": "@notice Stage Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\n @dev Can only be called after delayedProtocolParamsTimestamp.\n @param params New params"
            },
            "functionSelector": "3d8c08b9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stageDelayedProtocolParams",
            "nameLocation": "6523:26:336",
            "parameters": {
              "id": 76824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76823,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "6581:6:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76826,
                  "src": "6550:37:336",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedProtocolParams_$76678_calldata_ptr",
                    "typeString": "struct IERC20RetroRootVaultGovernance.DelayedProtocolParams"
                  },
                  "typeName": {
                    "id": 76822,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76821,
                      "name": "DelayedProtocolParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76678,
                      "src": "6550:21:336"
                    },
                    "referencedDeclaration": 76678,
                    "src": "6550:21:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedProtocolParams_$76678_storage_ptr",
                      "typeString": "struct IERC20RetroRootVaultGovernance.DelayedProtocolParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6549:39:336"
            },
            "returnParameters": {
              "id": 76825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6597:0:336"
            },
            "scope": 76850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76830,
            "nodeType": "FunctionDefinition",
            "src": "6741:48:336",
            "nodes": [],
            "documentation": {
              "id": 76827,
              "nodeType": "StructuredDocumentation",
              "src": "6604:132:336",
              "text": "@notice Commit Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
            },
            "functionSelector": "98347a5d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "commitDelayedProtocolParams",
            "nameLocation": "6750:27:336",
            "parameters": {
              "id": 76828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6777:2:336"
            },
            "returnParameters": {
              "id": 76829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6788:0:336"
            },
            "scope": 76850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76849,
            "nodeType": "FunctionDefinition",
            "src": "7134:216:336",
            "nodes": [],
            "documentation": {
              "id": 76831,
              "nodeType": "StructuredDocumentation",
              "src": "6795:334:336",
              "text": "@notice Deploys a new vault.\n @param vaultTokens_ ERC20 tokens that will be managed by this Vault\n @param strategy_ The address that will have approvals for subvaultNfts\n @param subvaultNfts_ The NFTs of the subvaults that will be aggregated by this ERC20RootVault\n @param owner_ Owner of the vault NFT"
            },
            "functionSelector": "f699a607",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createVault",
            "nameLocation": "7143:11:336",
            "parameters": {
              "id": 76842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76834,
                  "mutability": "mutable",
                  "name": "vaultTokens_",
                  "nameLocation": "7181:12:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76849,
                  "src": "7164:29:336",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 76832,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7164:7:336",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 76833,
                    "nodeType": "ArrayTypeName",
                    "src": "7164:9:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76836,
                  "mutability": "mutable",
                  "name": "strategy_",
                  "nameLocation": "7211:9:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76849,
                  "src": "7203:17:336",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7203:7:336",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76839,
                  "mutability": "mutable",
                  "name": "subvaultNfts_",
                  "nameLocation": "7247:13:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76849,
                  "src": "7230:30:336",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 76837,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7230:7:336",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 76838,
                    "nodeType": "ArrayTypeName",
                    "src": "7230:9:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76841,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "7278:6:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76849,
                  "src": "7270:14:336",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7270:7:336",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7154:136:336"
            },
            "returnParameters": {
              "id": 76848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76845,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "7330:5:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76849,
                  "src": "7309:26:336",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20RetroRootVault_$76650",
                    "typeString": "contract IERC20RetroRootVault"
                  },
                  "typeName": {
                    "id": 76844,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76843,
                      "name": "IERC20RetroRootVault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76650,
                      "src": "7309:20:336"
                    },
                    "referencedDeclaration": 76650,
                    "src": "7309:20:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20RetroRootVault_$76650",
                      "typeString": "contract IERC20RetroRootVault"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76847,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "7345:3:336",
                  "nodeType": "VariableDeclaration",
                  "scope": 76849,
                  "src": "7337:11:336",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7337:7:336",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7308:41:336"
            },
            "scope": 76850,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 76656,
              "name": "IVaultGovernance",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 78668,
              "src": "205:16:336"
            },
            "id": 76657,
            "nodeType": "InheritanceSpecifier",
            "src": "205:16:336"
          }
        ],
        "canonicalName": "IERC20RetroRootVaultGovernance",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          76850,
          78668
        ],
        "name": "IERC20RetroRootVaultGovernance",
        "nameLocation": "171:30:336",
        "scope": 76851,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 336
}