{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldConfigMaster",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newConfigMaster",
          "type": "address"
        }
      ],
      "name": "ConfigMasterUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "governmentFeeUnits",
          "type": "uint24"
        }
      ],
      "name": "FeeConfigurationUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint24",
          "name": "swapFeeUnits",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "int24",
          "name": "tickDistance",
          "type": "int24"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "PoolCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint24",
          "name": "swapFeeUnits",
          "type": "uint24"
        },
        {
          "indexed": true,
          "internalType": "int24",
          "name": "tickDistance",
          "type": "int24"
        }
      ],
      "name": "SwapFeeEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "vestingPeriod",
          "type": "uint32"
        }
      ],
      "name": "VestingPeriodUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "WhitelistDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "WhitelistEnabled",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "configMaster",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "swapFeeUnits",
          "type": "uint24"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "swapFeeUnits",
          "type": "uint24"
        },
        {
          "internalType": "int24",
          "name": "tickDistance",
          "type": "int24"
        }
      ],
      "name": "enableSwapFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "swapFeeUnits",
          "type": "uint24"
        }
      ],
      "name": "feeAmountTickDistance",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeConfiguration",
      "outputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "_governmentFeeUnits",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "swapFeeUnits",
          "type": "uint24"
        }
      ],
      "name": "getPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWhitelistedNFTManagers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "isWhitelistedNFTManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "parameters",
      "outputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "swapFeeUnits",
          "type": "uint24"
        },
        {
          "internalType": "int24",
          "name": "tickDistance",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolInitHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "updateConfigMaster",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "feeTo",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "governmentFeeUnits",
          "type": "uint24"
        }
      ],
      "name": "updateFeeConfiguration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "updateVestingPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingPeriod",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whitelistDisabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "configMaster()": "fc389fce",
    "createPool(address,address,uint24)": "a1671295",
    "disableWhitelist()": "d6b0f484",
    "enableSwapFee(uint24,int24)": "b03d421e",
    "enableWhitelist()": "cdfb2b4e",
    "feeAmountTickDistance(uint24)": "6cc85293",
    "feeConfiguration()": "98c47e8c",
    "getPool(address,address,uint24)": "1698ee82",
    "getWhitelistedNFTManagers()": "55566962",
    "isWhitelistedNFTManager(address)": "4020f01c",
    "parameters()": "89035730",
    "poolInitHash()": "d04b86b0",
    "updateConfigMaster(address)": "376bc719",
    "updateFeeConfiguration(address,uint24)": "c3bf128b",
    "updateVestingPeriod(uint32)": "7546c1a5",
    "vestingPeriod()": "7313ee5a",
    "whitelistDisabled()": "1c8e8568"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldConfigMaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newConfigMaster\",\"type\":\"address\"}],\"name\":\"ConfigMasterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"governmentFeeUnits\",\"type\":\"uint24\"}],\"name\":\"FeeConfigurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"swapFeeUnits\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickDistance\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"swapFeeUnits\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickDistance\",\"type\":\"int24\"}],\"name\":\"SwapFeeEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"vestingPeriod\",\"type\":\"uint32\"}],\"name\":\"VestingPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"WhitelistDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"WhitelistEnabled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"configMaster\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"swapFeeUnits\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"swapFeeUnits\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickDistance\",\"type\":\"int24\"}],\"name\":\"enableSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"swapFeeUnits\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickDistance\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeConfiguration\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"_governmentFeeUnits\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"swapFeeUnits\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWhitelistedNFTManagers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"isWhitelistedNFTManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parameters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"swapFeeUnits\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickDistance\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolInitHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"updateConfigMaster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeTo\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"governmentFeeUnits\",\"type\":\"uint24\"}],\"name\":\"updateFeeConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"updateVestingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingPeriod\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whitelistDisabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ConfigMasterUpdated(address,address)\":{\"params\":{\"newConfigMaster\":\"configMaster after the update\",\"oldConfigMaster\":\"configMaster before the update\"}},\"FeeConfigurationUpdated(address,uint24)\":{\"params\":{\"feeTo\":\"Recipient of government fees\",\"governmentFeeUnits\":\"Fee amount, in fee units, to be collected out of the fee charged for a pool swap\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"pool\":\"The address of the created pool\",\"swapFeeUnits\":\"Fee to be collected upon every swap in the pool, in fee units\",\"tickDistance\":\"Minimum number of ticks between initialized ticks\",\"token0\":\"First pool token by address sort order\",\"token1\":\"Second pool token by address sort order\"}},\"SwapFeeEnabled(uint24,int24)\":{\"params\":{\"swapFeeUnits\":\"Fee to be collected upon every swap in the pool, in fee units\",\"tickDistance\":\"Minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"VestingPeriodUpdated(uint32)\":{\"params\":{\"vestingPeriod\":\"The maximum time duration for which LP fees are proportionally burnt upon LP removals\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"Token order does not matter. tickDistance is determined from the fee. Call will revert under any of these conditions:     1) pool already exists     2) invalid swap fee     3) invalid token arguments\",\"params\":{\"swapFeeUnits\":\"Desired swap fee for the pool, in fee units\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"disableWhitelist()\":{\"details\":\"Only configMaster is able to perform the update\"},\"enableSwapFee(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"swapFeeUnits\":\"The fee amount to enable, in fee units\",\"tickDistance\":\"The distance between ticks to be enforced for all pools created with the given fee amount\"}},\"enableWhitelist()\":{\"details\":\"Only configMaster is able to perform the update\"},\"feeAmountTickDistance(uint24)\":{\"details\":\"Once added, cannot be updated or removed.\",\"params\":{\"swapFeeUnits\":\"Swap fee, in fee units.\"},\"returns\":{\"_0\":\"The tick distance. Returns 0 if fee has not been added.\"}},\"getPool(address,address,uint24)\":{\"details\":\"Token order does not matter\",\"params\":{\"swapFeeUnits\":\"Fee to be collected upon every swap in the pool, in fee units\",\"tokenA\":\"Contract address of either token0 or token1\",\"tokenB\":\"Contract address of the other token\"},\"returns\":{\"pool\":\"The pool address. Returns null address if it does not exist\"}},\"isWhitelistedNFTManager(address)\":{\"params\":{\"sender\":\"address to be checked\"},\"returns\":{\"_0\":\"true if sender is a whistelisted NFT manager, false otherwise\"}},\"parameters()\":{\"details\":\"Called by the pool constructor to fetch the parameters of the pool\",\"returns\":{\"factory\":\"The factory address\",\"swapFeeUnits\":\"Fee to be collected upon every swap in the pool, in fee units\",\"tickDistance\":\"Minimum number of ticks between initialized ticks\",\"token0\":\"First pool token by address sort order\",\"token1\":\"Second pool token by address sort order\"}},\"updateConfigMaster(address)\":{\"details\":\"Must be called by the current configMaster\"},\"updateFeeConfiguration(address,uint24)\":{\"details\":\"Only configMaster is able to perform the update\",\"params\":{\"feeTo\":\"Address to receive government fees collected from pools\",\"governmentFeeUnits\":\"Fee amount, in fee units, to be collected out of the fee charged for a pool swap\"}},\"updateVestingPeriod(uint32)\":{\"details\":\"Must be called by the current configMaster\"}},\"title\":\"KyberSwap v2 factory\",\"version\":1},\"userdoc\":{\"events\":{\"ConfigMasterUpdated(address,address)\":{\"notice\":\"Emitted when configMaster changes\"},\"FeeConfigurationUpdated(address,uint24)\":{\"notice\":\"Emitted when fee configuration changes\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"},\"SwapFeeEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee is enabled for pool creation via the factory\"},\"VestingPeriodUpdated(uint32)\":{\"notice\":\"Emitted when vesting period changes\"},\"WhitelistDisabled()\":{\"notice\":\"Emitted when whitelist feature is disabled\"},\"WhitelistEnabled()\":{\"notice\":\"Emitted when whitelist feature is enabled\"}},\"kind\":\"user\",\"methods\":{\"configMaster()\":{\"notice\":\"Returns the address which can update the fee configuration\"},\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"disableWhitelist()\":{\"notice\":\"Disables the whitelisting feature\"},\"enableSwapFee(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickDistance\"},\"enableWhitelist()\":{\"notice\":\"Enables the whitelisting feature\"},\"feeAmountTickDistance(uint24)\":{\"notice\":\"Returns the tick distance for a specified fee.\"},\"feeConfiguration()\":{\"notice\":\"Fetches the recipient of government fees and current government fee charged in fee units\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a swap fee\"},\"getWhitelistedNFTManagers()\":{\"notice\":\"If the whitelisting feature is turned on, only whitelisted NFT manager(s) are allowed to mint liquidity tokens\"},\"isWhitelistedNFTManager(address)\":{\"notice\":\"Checks if sender is a whitelisted NFT manager If the whitelisting feature is turned on, only whitelisted NFT manager(s) are allowed to mint liquidity tokens\"},\"parameters()\":{\"notice\":\"Fetch parameters to be used for pool creation\"},\"poolInitHash()\":{\"notice\":\"Returns the keccak256 hash of the Pool creation code This is used for pre-computation of pool addresses\"},\"updateConfigMaster(address)\":{\"notice\":\"Updates the address which can update the fee configuration\"},\"updateFeeConfiguration(address,uint24)\":{\"notice\":\"Updates the address receiving government fees and fee quantity\"},\"updateVestingPeriod(uint32)\":{\"notice\":\"Updates the vesting period\"},\"vestingPeriod()\":{\"notice\":\"Returns the maximum time duration for which LP fees are proportionally burnt upon LP removals\"},\"whitelistDisabled()\":{\"notice\":\"Returns the status of whitelisting feature of NFT managers If true, anyone can mint liquidity tokens Otherwise, only whitelisted NFT manager(s) are allowed to mint liquidity tokens\"}},\"notice\":\"Deploys KyberSwap v2 pools and manages control over government fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/external/kyber/IFactory.sol\":\"IFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/interfaces/external/kyber/IFactory.sol\":{\"keccak256\":\"0x7020090b863672ca05473e78ac7d464324b3374ba275605a4d2c90d36c7b8e6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b240d005cb74c42057e10440017b69849471f3ce14ba274e4640516deb3a7c4\",\"dweb:/ipfs/QmQZBoL5BaP3fbfC2jLe7nQHu56Xd9i4YWVMdyLVpQ4374\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldConfigMaster",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newConfigMaster",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ConfigMasterUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeTo",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint24",
              "name": "governmentFeeUnits",
              "type": "uint24",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FeeConfigurationUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token0",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint24",
              "name": "swapFeeUnits",
              "type": "uint24",
              "indexed": true
            },
            {
              "internalType": "int24",
              "name": "tickDistance",
              "type": "int24",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "pool",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint24",
              "name": "swapFeeUnits",
              "type": "uint24",
              "indexed": true
            },
            {
              "internalType": "int24",
              "name": "tickDistance",
              "type": "int24",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SwapFeeEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "vestingPeriod",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VestingPeriodUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "WhitelistDisabled",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "WhitelistEnabled",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "configMaster",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "swapFeeUnits",
              "type": "uint24"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableWhitelist"
        },
        {
          "inputs": [
            {
              "internalType": "uint24",
              "name": "swapFeeUnits",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickDistance",
              "type": "int24"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableSwapFee"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableWhitelist"
        },
        {
          "inputs": [
            {
              "internalType": "uint24",
              "name": "swapFeeUnits",
              "type": "uint24"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "feeAmountTickDistance",
          "outputs": [
            {
              "internalType": "int24",
              "name": "",
              "type": "int24"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeConfiguration",
          "outputs": [
            {
              "internalType": "address",
              "name": "_feeTo",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "_governmentFeeUnits",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenA",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenB",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "swapFeeUnits",
              "type": "uint24"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getWhitelistedNFTManagers",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isWhitelistedNFTManager",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "parameters",
          "outputs": [
            {
              "internalType": "address",
              "name": "factory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "swapFeeUnits",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickDistance",
              "type": "int24"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolInitHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateConfigMaster"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeTo",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "governmentFeeUnits",
              "type": "uint24"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateFeeConfiguration"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateVestingPeriod"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vestingPeriod",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "whitelistDisabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "createPool(address,address,uint24)": {
            "details": "Token order does not matter. tickDistance is determined from the fee. Call will revert under any of these conditions:     1) pool already exists     2) invalid swap fee     3) invalid token arguments",
            "params": {
              "swapFeeUnits": "Desired swap fee for the pool, in fee units",
              "tokenA": "One of the two tokens in the desired pool",
              "tokenB": "The other of the two tokens in the desired pool"
            },
            "returns": {
              "pool": "The address of the newly created pool"
            }
          },
          "disableWhitelist()": {
            "details": "Only configMaster is able to perform the update"
          },
          "enableSwapFee(uint24,int24)": {
            "details": "Fee amounts may never be removed once enabled",
            "params": {
              "swapFeeUnits": "The fee amount to enable, in fee units",
              "tickDistance": "The distance between ticks to be enforced for all pools created with the given fee amount"
            }
          },
          "enableWhitelist()": {
            "details": "Only configMaster is able to perform the update"
          },
          "feeAmountTickDistance(uint24)": {
            "details": "Once added, cannot be updated or removed.",
            "params": {
              "swapFeeUnits": "Swap fee, in fee units."
            },
            "returns": {
              "_0": "The tick distance. Returns 0 if fee has not been added."
            }
          },
          "getPool(address,address,uint24)": {
            "details": "Token order does not matter",
            "params": {
              "swapFeeUnits": "Fee to be collected upon every swap in the pool, in fee units",
              "tokenA": "Contract address of either token0 or token1",
              "tokenB": "Contract address of the other token"
            },
            "returns": {
              "pool": "The pool address. Returns null address if it does not exist"
            }
          },
          "isWhitelistedNFTManager(address)": {
            "params": {
              "sender": "address to be checked"
            },
            "returns": {
              "_0": "true if sender is a whistelisted NFT manager, false otherwise"
            }
          },
          "parameters()": {
            "details": "Called by the pool constructor to fetch the parameters of the pool",
            "returns": {
              "factory": "The factory address",
              "swapFeeUnits": "Fee to be collected upon every swap in the pool, in fee units",
              "tickDistance": "Minimum number of ticks between initialized ticks",
              "token0": "First pool token by address sort order",
              "token1": "Second pool token by address sort order"
            }
          },
          "updateConfigMaster(address)": {
            "details": "Must be called by the current configMaster"
          },
          "updateFeeConfiguration(address,uint24)": {
            "details": "Only configMaster is able to perform the update",
            "params": {
              "feeTo": "Address to receive government fees collected from pools",
              "governmentFeeUnits": "Fee amount, in fee units, to be collected out of the fee charged for a pool swap"
            }
          },
          "updateVestingPeriod(uint32)": {
            "details": "Must be called by the current configMaster"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "configMaster()": {
            "notice": "Returns the address which can update the fee configuration"
          },
          "createPool(address,address,uint24)": {
            "notice": "Creates a pool for the given two tokens and fee"
          },
          "disableWhitelist()": {
            "notice": "Disables the whitelisting feature"
          },
          "enableSwapFee(uint24,int24)": {
            "notice": "Enables a fee amount with the given tickDistance"
          },
          "enableWhitelist()": {
            "notice": "Enables the whitelisting feature"
          },
          "feeAmountTickDistance(uint24)": {
            "notice": "Returns the tick distance for a specified fee."
          },
          "feeConfiguration()": {
            "notice": "Fetches the recipient of government fees and current government fee charged in fee units"
          },
          "getPool(address,address,uint24)": {
            "notice": "Returns the pool address for a given pair of tokens and a swap fee"
          },
          "getWhitelistedNFTManagers()": {
            "notice": "If the whitelisting feature is turned on, only whitelisted NFT manager(s) are allowed to mint liquidity tokens"
          },
          "isWhitelistedNFTManager(address)": {
            "notice": "Checks if sender is a whitelisted NFT manager If the whitelisting feature is turned on, only whitelisted NFT manager(s) are allowed to mint liquidity tokens"
          },
          "parameters()": {
            "notice": "Fetch parameters to be used for pool creation"
          },
          "poolInitHash()": {
            "notice": "Returns the keccak256 hash of the Pool creation code This is used for pre-computation of pool addresses"
          },
          "updateConfigMaster(address)": {
            "notice": "Updates the address which can update the fee configuration"
          },
          "updateFeeConfiguration(address,uint24)": {
            "notice": "Updates the address receiving government fees and fee quantity"
          },
          "updateVestingPeriod(uint32)": {
            "notice": "Updates the vesting period"
          },
          "vestingPeriod()": {
            "notice": "Returns the maximum time duration for which LP fees are proportionally burnt upon LP removals"
          },
          "whitelistDisabled()": {
            "notice": "Returns the status of whitelisting feature of NFT managers If true, anyone can mint liquidity tokens Otherwise, only whitelisted NFT manager(s) are allowed to mint liquidity tokens"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/external/kyber/IFactory.sol": "IFactory"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/external/kyber/IFactory.sol": {
        "keccak256": "0x7020090b863672ca05473e78ac7d464324b3374ba275605a4d2c90d36c7b8e6a",
        "urls": [
          "bzz-raw://8b240d005cb74c42057e10440017b69849471f3ce14ba274e4640516deb3a7c4",
          "dweb:/ipfs/QmQZBoL5BaP3fbfC2jLe7nQHu56Xd9i4YWVMdyLVpQ4374"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/external/kyber/IFactory.sol",
    "id": 66878,
    "exportedSymbols": {
      "IFactory": [
        66877
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:7512:214",
    "nodes": [
      {
        "id": 66701,
        "nodeType": "PragmaDirective",
        "src": "32:23:214",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 66877,
        "nodeType": "ContractDefinition",
        "src": "169:7374:214",
        "nodes": [
          {
            "id": 66715,
            "nodeType": "EventDefinition",
            "src": "584:175:214",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 66703,
              "nodeType": "StructuredDocumentation",
              "src": "194:385:214",
              "text": "@notice Emitted when a pool is created\n @param token0 First pool token by address sort order\n @param token1 Second pool token by address sort order\n @param swapFeeUnits Fee to be collected upon every swap in the pool, in fee units\n @param tickDistance Minimum number of ticks between initialized ticks\n @param pool The address of the created pool"
            },
            "name": "PoolCreated",
            "nameLocation": "590:11:214",
            "parameters": {
              "id": 66714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66705,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "627:6:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66715,
                  "src": "611:22:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "611:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66707,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "659:6:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66715,
                  "src": "643:22:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66709,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "swapFeeUnits",
                  "nameLocation": "690:12:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66715,
                  "src": "675:27:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 66708,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "675:6:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66711,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tickDistance",
                  "nameLocation": "718:12:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66715,
                  "src": "712:18:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 66710,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "712:5:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66713,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "748:4:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66715,
                  "src": "740:12:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "601:157:214"
            }
          },
          {
            "id": 66722,
            "nodeType": "EventDefinition",
            "src": "1054:78:214",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 66716,
              "nodeType": "StructuredDocumentation",
              "src": "765:284:214",
              "text": "@notice Emitted when a new fee is enabled for pool creation via the factory\n @param swapFeeUnits Fee to be collected upon every swap in the pool, in fee units\n @param tickDistance Minimum number of ticks between initialized ticks for pools created with the given fee"
            },
            "name": "SwapFeeEnabled",
            "nameLocation": "1060:14:214",
            "parameters": {
              "id": 66721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66718,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "swapFeeUnits",
                  "nameLocation": "1090:12:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66722,
                  "src": "1075:27:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 66717,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1075:6:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66720,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tickDistance",
                  "nameLocation": "1118:12:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66722,
                  "src": "1104:26:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 66719,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:5:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1074:57:214"
            }
          },
          {
            "id": 66727,
            "nodeType": "EventDefinition",
            "src": "1313:49:214",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 66723,
              "nodeType": "StructuredDocumentation",
              "src": "1138:170:214",
              "text": "@notice Emitted when vesting period changes\n @param vestingPeriod The maximum time duration for which LP fees\n are proportionally burnt upon LP removals"
            },
            "name": "VestingPeriodUpdated",
            "nameLocation": "1319:20:214",
            "parameters": {
              "id": 66726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66725,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vestingPeriod",
                  "nameLocation": "1347:13:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66727,
                  "src": "1340:20:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 66724,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1340:6:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1339:22:214"
            }
          },
          {
            "id": 66734,
            "nodeType": "EventDefinition",
            "src": "1541:76:214",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 66728,
              "nodeType": "StructuredDocumentation",
              "src": "1368:168:214",
              "text": "@notice Emitted when configMaster changes\n @param oldConfigMaster configMaster before the update\n @param newConfigMaster configMaster after the update"
            },
            "name": "ConfigMasterUpdated",
            "nameLocation": "1547:19:214",
            "parameters": {
              "id": 66733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66730,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldConfigMaster",
                  "nameLocation": "1575:15:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66734,
                  "src": "1567:23:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1567:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66732,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newConfigMaster",
                  "nameLocation": "1600:15:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66734,
                  "src": "1592:23:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1592:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1566:50:214"
            }
          },
          {
            "id": 66741,
            "nodeType": "EventDefinition",
            "src": "1851:72:214",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 66735,
              "nodeType": "StructuredDocumentation",
              "src": "1623:223:214",
              "text": "@notice Emitted when fee configuration changes\n @param feeTo Recipient of government fees\n @param governmentFeeUnits Fee amount, in fee units,\n to be collected out of the fee charged for a pool swap"
            },
            "name": "FeeConfigurationUpdated",
            "nameLocation": "1857:23:214",
            "parameters": {
              "id": 66740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66737,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "feeTo",
                  "nameLocation": "1889:5:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66741,
                  "src": "1881:13:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1881:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66739,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "governmentFeeUnits",
                  "nameLocation": "1903:18:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66741,
                  "src": "1896:25:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 66738,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1896:6:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1880:42:214"
            }
          },
          {
            "id": 66744,
            "nodeType": "EventDefinition",
            "src": "1987:25:214",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 66742,
              "nodeType": "StructuredDocumentation",
              "src": "1929:53:214",
              "text": "@notice Emitted when whitelist feature is enabled"
            },
            "name": "WhitelistEnabled",
            "nameLocation": "1993:16:214",
            "parameters": {
              "id": 66743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2009:2:214"
            }
          },
          {
            "id": 66747,
            "nodeType": "EventDefinition",
            "src": "2077:26:214",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 66745,
              "nodeType": "StructuredDocumentation",
              "src": "2018:54:214",
              "text": "@notice Emitted when whitelist feature is disabled"
            },
            "name": "WhitelistDisabled",
            "nameLocation": "2083:17:214",
            "parameters": {
              "id": 66746,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2100:2:214"
            }
          },
          {
            "id": 66753,
            "nodeType": "FunctionDefinition",
            "src": "2227:56:214",
            "nodes": [],
            "documentation": {
              "id": 66748,
              "nodeType": "StructuredDocumentation",
              "src": "2109:113:214",
              "text": "@notice Returns the maximum time duration for which LP fees\n are proportionally burnt upon LP removals"
            },
            "functionSelector": "7313ee5a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "vestingPeriod",
            "nameLocation": "2236:13:214",
            "parameters": {
              "id": 66749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2249:2:214"
            },
            "returnParameters": {
              "id": 66752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66751,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66753,
                  "src": "2275:6:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 66750,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2275:6:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2274:8:214"
            },
            "scope": 66877,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66761,
            "nodeType": "FunctionDefinition",
            "src": "2531:82:214",
            "nodes": [],
            "documentation": {
              "id": 66754,
              "nodeType": "StructuredDocumentation",
              "src": "2289:237:214",
              "text": "@notice Returns the tick distance for a specified fee.\n @dev Once added, cannot be updated or removed.\n @param swapFeeUnits Swap fee, in fee units.\n @return The tick distance. Returns 0 if fee has not been added."
            },
            "functionSelector": "6cc85293",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "feeAmountTickDistance",
            "nameLocation": "2540:21:214",
            "parameters": {
              "id": 66757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66756,
                  "mutability": "mutable",
                  "name": "swapFeeUnits",
                  "nameLocation": "2569:12:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66761,
                  "src": "2562:19:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 66755,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2562:6:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2561:21:214"
            },
            "returnParameters": {
              "id": 66760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66759,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66761,
                  "src": "2606:5:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 66758,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2606:5:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2605:7:214"
            },
            "scope": 66877,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66767,
            "nodeType": "FunctionDefinition",
            "src": "2694:56:214",
            "nodes": [],
            "documentation": {
              "id": 66762,
              "nodeType": "StructuredDocumentation",
              "src": "2619:70:214",
              "text": "@notice Returns the address which can update the fee configuration"
            },
            "functionSelector": "fc389fce",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "configMaster",
            "nameLocation": "2703:12:214",
            "parameters": {
              "id": 66763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2715:2:214"
            },
            "returnParameters": {
              "id": 66766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66765,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66767,
                  "src": "2741:7:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2741:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2740:9:214"
            },
            "scope": 66877,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66773,
            "nodeType": "FunctionDefinition",
            "src": "2884:56:214",
            "nodes": [],
            "documentation": {
              "id": 66768,
              "nodeType": "StructuredDocumentation",
              "src": "2756:123:214",
              "text": "@notice Returns the keccak256 hash of the Pool creation code\n This is used for pre-computation of pool addresses"
            },
            "functionSelector": "d04b86b0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "poolInitHash",
            "nameLocation": "2893:12:214",
            "parameters": {
              "id": 66769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2905:2:214"
            },
            "returnParameters": {
              "id": 66772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66771,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66773,
                  "src": "2931:7:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 66770,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2931:7:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2930:9:214"
            },
            "scope": 66877,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66781,
            "nodeType": "FunctionDefinition",
            "src": "3059:95:214",
            "nodes": [],
            "documentation": {
              "id": 66774,
              "nodeType": "StructuredDocumentation",
              "src": "2946:108:214",
              "text": "@notice Fetches the recipient of government fees\n and current government fee charged in fee units"
            },
            "functionSelector": "98c47e8c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "feeConfiguration",
            "nameLocation": "3068:16:214",
            "parameters": {
              "id": 66775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3084:2:214"
            },
            "returnParameters": {
              "id": 66780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66777,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "3118:6:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66781,
                  "src": "3110:14:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66776,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3110:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66779,
                  "mutability": "mutable",
                  "name": "_governmentFeeUnits",
                  "nameLocation": "3133:19:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66781,
                  "src": "3126:26:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 66778,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3126:6:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3109:44:214"
            },
            "scope": 66877,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66787,
            "nodeType": "FunctionDefinition",
            "src": "3373:58:214",
            "nodes": [],
            "documentation": {
              "id": 66782,
              "nodeType": "StructuredDocumentation",
              "src": "3160:208:214",
              "text": "@notice Returns the status of whitelisting feature of NFT managers\n If true, anyone can mint liquidity tokens\n Otherwise, only whitelisted NFT manager(s) are allowed to mint liquidity tokens"
            },
            "functionSelector": "1c8e8568",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "whitelistDisabled",
            "nameLocation": "3382:17:214",
            "parameters": {
              "id": 66783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3399:2:214"
            },
            "returnParameters": {
              "id": 66786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66785,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66787,
                  "src": "3425:4:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66784,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3425:4:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3424:6:214"
            },
            "scope": 66877,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66794,
            "nodeType": "FunctionDefinition",
            "src": "3618:78:214",
            "nodes": [],
            "documentation": {
              "id": 66788,
              "nodeType": "StructuredDocumentation",
              "src": "3491:122:214",
              "text": "If the whitelisting feature is turned on,\n only whitelisted NFT manager(s) are allowed to mint liquidity tokens"
            },
            "functionSelector": "55566962",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getWhitelistedNFTManagers",
            "nameLocation": "3627:25:214",
            "parameters": {
              "id": 66789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3652:2:214"
            },
            "returnParameters": {
              "id": 66793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66792,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66794,
                  "src": "3678:16:214",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 66790,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3678:7:214",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 66791,
                    "nodeType": "ArrayTypeName",
                    "src": "3678:9:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3677:18:214"
            },
            "scope": 66877,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66802,
            "nodeType": "FunctionDefinition",
            "src": "4013:78:214",
            "nodes": [],
            "documentation": {
              "id": 66795,
              "nodeType": "StructuredDocumentation",
              "src": "3702:306:214",
              "text": "@notice Checks if sender is a whitelisted NFT manager\n If the whitelisting feature is turned on,\n only whitelisted NFT manager(s) are allowed to mint liquidity tokens\n @param sender address to be checked\n @return true if sender is a whistelisted NFT manager, false otherwise"
            },
            "functionSelector": "4020f01c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isWhitelistedNFTManager",
            "nameLocation": "4022:23:214",
            "parameters": {
              "id": 66798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66797,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4054:6:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66802,
                  "src": "4046:14:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4046:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4045:16:214"
            },
            "returnParameters": {
              "id": 66801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66800,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66802,
                  "src": "4085:4:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66799,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4085:4:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4084:6:214"
            },
            "scope": 66877,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66814,
            "nodeType": "FunctionDefinition",
            "src": "4516:137:214",
            "nodes": [],
            "documentation": {
              "id": 66803,
              "nodeType": "StructuredDocumentation",
              "src": "4097:414:214",
              "text": "@notice Returns the pool address for a given pair of tokens and a swap fee\n @dev Token order does not matter\n @param tokenA Contract address of either token0 or token1\n @param tokenB Contract address of the other token\n @param swapFeeUnits Fee to be collected upon every swap in the pool, in fee units\n @return pool The pool address. Returns null address if it does not exist"
            },
            "functionSelector": "1698ee82",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPool",
            "nameLocation": "4525:7:214",
            "parameters": {
              "id": 66810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66805,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "4550:6:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66814,
                  "src": "4542:14:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4542:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66807,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "4574:6:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66814,
                  "src": "4566:14:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4566:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66809,
                  "mutability": "mutable",
                  "name": "swapFeeUnits",
                  "nameLocation": "4597:12:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66814,
                  "src": "4590:19:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 66808,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4590:6:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4532:83:214"
            },
            "returnParameters": {
              "id": 66813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66812,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "4647:4:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66814,
                  "src": "4639:12:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4639:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4638:14:214"
            },
            "scope": 66877,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66828,
            "nodeType": "FunctionDefinition",
            "src": "5140:229:214",
            "nodes": [],
            "documentation": {
              "id": 66815,
              "nodeType": "StructuredDocumentation",
              "src": "4659:476:214",
              "text": "@notice Fetch parameters to be used for pool creation\n @dev Called by the pool constructor to fetch the parameters of the pool\n @return factory The factory address\n @return token0 First pool token by address sort order\n @return token1 Second pool token by address sort order\n @return swapFeeUnits Fee to be collected upon every swap in the pool, in fee units\n @return tickDistance Minimum number of ticks between initialized ticks"
            },
            "functionSelector": "89035730",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "parameters",
            "nameLocation": "5149:10:214",
            "parameters": {
              "id": 66816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5159:2:214"
            },
            "returnParameters": {
              "id": 66827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66818,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "5230:7:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66828,
                  "src": "5222:15:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66817,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5222:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66820,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "5259:6:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66828,
                  "src": "5251:14:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66819,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5251:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66822,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "5287:6:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66828,
                  "src": "5279:14:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5279:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66824,
                  "mutability": "mutable",
                  "name": "swapFeeUnits",
                  "nameLocation": "5314:12:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66828,
                  "src": "5307:19:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 66823,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5307:6:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66826,
                  "mutability": "mutable",
                  "name": "tickDistance",
                  "nameLocation": "5346:12:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66828,
                  "src": "5340:18:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 66825,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5340:5:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5208:160:214"
            },
            "scope": 66877,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66840,
            "nodeType": "FunctionDefinition",
            "src": "5949:135:214",
            "nodes": [],
            "documentation": {
              "id": 66829,
              "nodeType": "StructuredDocumentation",
              "src": "5375:569:214",
              "text": "@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param swapFeeUnits Desired swap fee for the pool, in fee units\n @dev Token order does not matter. tickDistance is determined from the fee.\n Call will revert under any of these conditions:\n     1) pool already exists\n     2) invalid swap fee\n     3) invalid token arguments\n @return pool The address of the newly created pool"
            },
            "functionSelector": "a1671295",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createPool",
            "nameLocation": "5958:10:214",
            "parameters": {
              "id": 66836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66831,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "5986:6:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66840,
                  "src": "5978:14:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5978:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66833,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "6010:6:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66840,
                  "src": "6002:14:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6002:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66835,
                  "mutability": "mutable",
                  "name": "swapFeeUnits",
                  "nameLocation": "6033:12:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66840,
                  "src": "6026:19:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 66834,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "6026:6:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5968:83:214"
            },
            "returnParameters": {
              "id": 66839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66838,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "6078:4:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66840,
                  "src": "6070:12:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6070:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6069:14:214"
            },
            "scope": 66877,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66848,
            "nodeType": "FunctionDefinition",
            "src": "6399:73:214",
            "nodes": [],
            "documentation": {
              "id": 66841,
              "nodeType": "StructuredDocumentation",
              "src": "6090:304:214",
              "text": "@notice Enables a fee amount with the given tickDistance\n @dev Fee amounts may never be removed once enabled\n @param swapFeeUnits The fee amount to enable, in fee units\n @param tickDistance The distance between ticks to be enforced for all pools created with the given fee amount"
            },
            "functionSelector": "b03d421e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "enableSwapFee",
            "nameLocation": "6408:13:214",
            "parameters": {
              "id": 66846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66843,
                  "mutability": "mutable",
                  "name": "swapFeeUnits",
                  "nameLocation": "6429:12:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66848,
                  "src": "6422:19:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 66842,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "6422:6:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66845,
                  "mutability": "mutable",
                  "name": "tickDistance",
                  "nameLocation": "6449:12:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66848,
                  "src": "6443:18:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 66844,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "6443:5:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6421:41:214"
            },
            "returnParameters": {
              "id": 66847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6471:0:214"
            },
            "scope": 66877,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66854,
            "nodeType": "FunctionDefinition",
            "src": "6609:46:214",
            "nodes": [],
            "documentation": {
              "id": 66849,
              "nodeType": "StructuredDocumentation",
              "src": "6478:126:214",
              "text": "@notice Updates the address which can update the fee configuration\n @dev Must be called by the current configMaster"
            },
            "functionSelector": "376bc719",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateConfigMaster",
            "nameLocation": "6618:18:214",
            "parameters": {
              "id": 66852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66851,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66854,
                  "src": "6637:7:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6637:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6636:9:214"
            },
            "returnParameters": {
              "id": 66853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6654:0:214"
            },
            "scope": 66877,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66860,
            "nodeType": "FunctionDefinition",
            "src": "6760:46:214",
            "nodes": [],
            "documentation": {
              "id": 66855,
              "nodeType": "StructuredDocumentation",
              "src": "6661:94:214",
              "text": "@notice Updates the vesting period\n @dev Must be called by the current configMaster"
            },
            "functionSelector": "7546c1a5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateVestingPeriod",
            "nameLocation": "6769:19:214",
            "parameters": {
              "id": 66858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66857,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66860,
                  "src": "6789:6:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 66856,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6789:6:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6788:8:214"
            },
            "returnParameters": {
              "id": 66859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6805:0:214"
            },
            "scope": 66877,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66868,
            "nodeType": "FunctionDefinition",
            "src": "7152:83:214",
            "nodes": [],
            "documentation": {
              "id": 66861,
              "nodeType": "StructuredDocumentation",
              "src": "6812:335:214",
              "text": "@notice Updates the address receiving government fees and fee quantity\n @dev Only configMaster is able to perform the update\n @param feeTo Address to receive government fees collected from pools\n @param governmentFeeUnits Fee amount, in fee units,\n to be collected out of the fee charged for a pool swap"
            },
            "functionSelector": "c3bf128b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateFeeConfiguration",
            "nameLocation": "7161:22:214",
            "parameters": {
              "id": 66866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66863,
                  "mutability": "mutable",
                  "name": "feeTo",
                  "nameLocation": "7192:5:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66868,
                  "src": "7184:13:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7184:7:214",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66865,
                  "mutability": "mutable",
                  "name": "governmentFeeUnits",
                  "nameLocation": "7206:18:214",
                  "nodeType": "VariableDeclaration",
                  "scope": 66868,
                  "src": "7199:25:214",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 66864,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "7199:6:214",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7183:42:214"
            },
            "returnParameters": {
              "id": 66867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7234:0:214"
            },
            "scope": 66877,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66872,
            "nodeType": "FunctionDefinition",
            "src": "7351:36:214",
            "nodes": [],
            "documentation": {
              "id": 66869,
              "nodeType": "StructuredDocumentation",
              "src": "7241:105:214",
              "text": "@notice Enables the whitelisting feature\n @dev Only configMaster is able to perform the update"
            },
            "functionSelector": "cdfb2b4e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "enableWhitelist",
            "nameLocation": "7360:15:214",
            "parameters": {
              "id": 66870,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7375:2:214"
            },
            "returnParameters": {
              "id": 66871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7386:0:214"
            },
            "scope": 66877,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66876,
            "nodeType": "FunctionDefinition",
            "src": "7504:37:214",
            "nodes": [],
            "documentation": {
              "id": 66873,
              "nodeType": "StructuredDocumentation",
              "src": "7393:106:214",
              "text": "@notice Disables the whitelisting feature\n @dev Only configMaster is able to perform the update"
            },
            "functionSelector": "d6b0f484",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "disableWhitelist",
            "nameLocation": "7513:16:214",
            "parameters": {
              "id": 66874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7529:2:214"
            },
            "returnParameters": {
              "id": 66875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7540:0:214"
            },
            "scope": 66877,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IFactory",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 66702,
          "nodeType": "StructuredDocumentation",
          "src": "57:112:214",
          "text": "@title KyberSwap v2 factory\n @notice Deploys KyberSwap v2 pools and manages control over government fees"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          66877
        ],
        "name": "IFactory",
        "nameLocation": "179:8:214",
        "scope": 66878,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 214
}