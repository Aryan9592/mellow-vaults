{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "localUser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "AddressDelegateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "localUser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "remoteUser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        }
      ],
      "name": "AddressMappingUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "remoteUser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        }
      ],
      "name": "RemoteAddressMappingCleared",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "localUser",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        }
      ],
      "name": "clearNetworkRemapping",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "remoteUser",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        }
      ],
      "name": "getLocalUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getLockedEnd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOmniVotingEscrowAdaptor",
      "outputs": [
        {
          "internalType": "contract IOmniVotingEscrowAdaptor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "localUser",
          "type": "address"
        }
      ],
      "name": "getRemappingManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "localUser",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        }
      ],
      "name": "getRemoteUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalSupplyPoint",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int128",
              "name": "bias",
              "type": "int128"
            },
            {
              "internalType": "int128",
              "name": "slope",
              "type": "int128"
            },
            {
              "internalType": "uint256",
              "name": "ts",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blk",
              "type": "uint256"
            }
          ],
          "internalType": "struct IVotingEscrow.Point",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserPoint",
      "outputs": [
        {
          "components": [
            {
              "internalType": "int128",
              "name": "bias",
              "type": "int128"
            },
            {
              "internalType": "int128",
              "name": "slope",
              "type": "int128"
            },
            {
              "internalType": "uint256",
              "name": "ts",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "blk",
              "type": "uint256"
            }
          ],
          "internalType": "struct IVotingEscrow.Point",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotingEscrow",
      "outputs": [
        {
          "internalType": "contract IVotingEscrow",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "localUser",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "remoteUser",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        }
      ],
      "name": "setNetworkRemapping",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "localUser",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        }
      ],
      "name": "setNetworkRemappingManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "clearNetworkRemapping(address,uint16)": "76601a18",
    "getLocalUser(address,uint16)": "70d1bd17",
    "getLockedEnd(address)": "3e7df7c8",
    "getOmniVotingEscrowAdaptor()": "5e5543be",
    "getRemappingManager(address)": "ee98b1e7",
    "getRemoteUser(address,uint16)": "bda75c38",
    "getTotalSupplyPoint()": "f6f4a332",
    "getUserPoint(address)": "71628bfd",
    "getVotingEscrow()": "08b0308a",
    "setNetworkRemapping(address,address,uint16)": "21861fde",
    "setNetworkRemappingManager(address,address)": "a9f3f44e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localUser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"AddressDelegateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localUser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteUser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"AddressMappingUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteUser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"RemoteAddressMappingCleared\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"localUser\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"clearNetworkRemapping\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"remoteUser\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"getLocalUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getLockedEnd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOmniVotingEscrowAdaptor\",\"outputs\":[{\"internalType\":\"contract IOmniVotingEscrowAdaptor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"localUser\",\"type\":\"address\"}],\"name\":\"getRemappingManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"localUser\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"getRemoteUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupplyPoint\",\"outputs\":[{\"components\":[{\"internalType\":\"int128\",\"name\":\"bias\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"slope\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blk\",\"type\":\"uint256\"}],\"internalType\":\"struct IVotingEscrow.Point\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserPoint\",\"outputs\":[{\"components\":[{\"internalType\":\"int128\",\"name\":\"bias\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"slope\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blk\",\"type\":\"uint256\"}],\"internalType\":\"struct IVotingEscrow.Point\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotingEscrow\",\"outputs\":[{\"internalType\":\"contract IVotingEscrow\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"localUser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"remoteUser\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"setNetworkRemapping\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"localUser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"}],\"name\":\"setNetworkRemappingManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"For each network (chainId), we maintain a mapping between local (Ethereum) and remote (L2) addresses. This contract remaps balance queries on remote network addresses to their corresponding local addresses. Users able to call this contract can set their own mappings, or delegate this function to another account if they cannot.\",\"kind\":\"dev\",\"methods\":{\"clearNetworkRemapping(address,uint16)\":{\"details\":\"This is intended to discourage and also allow recovery from griefing attacks. If griefing occurs then the griefer can be removed from Smart Wallet Checker and have their remappings erased. The local user can always clear their own mapping, regardless the state of the Smart Wallet Checker.\",\"params\":{\"chainId\":\"- The chain id of the network to erase.\",\"localUser\":\"- The address of the local user to erase.\"}},\"getLocalUser(address,uint16)\":{\"details\":\"Returns `address(0)` if the remapping does not exist for the given remote user.\",\"params\":{\"chainId\":\"- The chain ID of the remote network.\",\"remoteUser\":\"- Address of the user on the remote chain corresponding to the local address.\"}},\"getLockedEnd(address)\":{\"details\":\"The returned value is taken directly from the voting escrow.\"},\"getRemappingManager(address)\":{\"params\":{\"localUser\":\"- Address of the user on the local chain with a remapping manager.\"}},\"getRemoteUser(address,uint16)\":{\"details\":\"Returns `address(0)` if the remapping does not exist for the given local user.\",\"params\":{\"chainId\":\"- The chain ID of the remote network.\",\"localUser\":\"- Address of the user on the local chain corresponding to the remote address.\"}},\"getTotalSupplyPoint()\":{\"details\":\"We return the total supply as a Point to allow extrapolating this into the future. Note that this extrapolation will become invalid when crossing weeks, since we're not taking into account veBAL locks that expire then.\"},\"getUserPoint(address)\":{\"details\":\"We return the balance as a Point to allow extrapolating this into the future.\"},\"setNetworkRemapping(address,address,uint16)\":{\"details\":\"In order to set up a remapping on this contract, `localUser` must be a smart contract which has been allowlisted to hold veBAL. EOAs are expected to set up any delegation of their veBAL on L2s directly.\",\"params\":{\"chainId\":\"- The chain id of the remote chain on which `remoteUser` resides.\",\"localUser\":\"- The address of a contract allowlisted on the `SmartWalletChecker`.\",\"remoteUser\":\"- The address to receive `localUser`'s balance of veBAL on the remote chain.\"}},\"setNetworkRemappingManager(address,address)\":{\"details\":\"This is intended to handle contracts which cannot interact with this contract directly.\",\"params\":{\"delegate\":\"- The address which is allowed to manage remote users to be linked to `localUser`.\",\"localUser\":\"- The address of a contract allowlisted on the `SmartWalletChecker`.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"clearNetworkRemapping(address,uint16)\":{\"notice\":\"Clears a local user's mapping for a particular network.\"},\"getLocalUser(address,uint16)\":{\"notice\":\"Returns the local user corresponding to an address on a remote chain.\"},\"getLockedEnd(address)\":{\"notice\":\"Get timestamp when `user`'s lock finishes.\"},\"getOmniVotingEscrowAdaptor()\":{\"notice\":\"Returns Omni Voting Escrow Adaptor contract address, which interfaces with the gateway to bridge veBAL balances to L2s.\"},\"getRemappingManager(address)\":{\"notice\":\"Gets the account that can set a remapping for a given local user.\"},\"getRemoteUser(address,uint16)\":{\"notice\":\"Returns the remote user corresponding to an address on the local chain.\"},\"getTotalSupplyPoint()\":{\"notice\":\"Returns the current total supply of veBAL as a Point.\"},\"getUserPoint(address)\":{\"notice\":\"Returns a user's current veBAL balance as a Point. Note that we don't apply any remappings in this query. The returned value is taken directly from the voting escrow.\"},\"getVotingEscrow()\":{\"notice\":\"Returns Voting Escrow contract address.\"},\"setNetworkRemapping(address,address,uint16)\":{\"notice\":\"Sets up a mapping from `localUser`'s veBAL balance to `remoteUser` for chain `chainId`.\"},\"setNetworkRemappingManager(address,address)\":{\"notice\":\"Sets an address to manage the mapping for a given local user on their behalf.\"}},\"notice\":\"This contract allows veBAL holders on Ethereum to assign their balance to designated addresses on each L2. This is intended for smart contracts that are not deployed to the same address on all networks. EOA's are expected to either use the same address, or manage delegation on L2 networks themselves.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/external/balancer/liquidity-mining/IVotingEscrowRemapper.sol\":\"IVotingEscrowRemapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/interfaces/external/balancer/liquidity-mining/IAuthorizerAdaptor.sol\":{\"keccak256\":\"0x1a9bad00c0084984cd3364cfcdeaece137157816fe8078f706ed78adc803cad7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d69ccb7c506a7b56fe8f4e59ee10595d3e5cbb881e8215fdda879ec7bf34a5c6\",\"dweb:/ipfs/QmZc3HoxcdRivJ8xePXBxceAtvxo8LA7P8Rf3pjjED9e7y\"]},\"src/interfaces/external/balancer/liquidity-mining/IOmniVotingEscrowAdaptor.sol\":{\"keccak256\":\"0x247b984ee8d295882d5fef17d6d0a40936fc96c6265d00d32ae795fb0a51387f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f3a8cee4a2a54d95601499142b474905fa9ba8cc3a92053df5609e172f7d825f\",\"dweb:/ipfs/QmQtoGQCvWZYjhBNVmQMAKpEnQ4GShW4XDuqGDHjkoYwzR\"]},\"src/interfaces/external/balancer/liquidity-mining/ISmartWalletChecker.sol\":{\"keccak256\":\"0x8f76f086f3d153b7542a027abdf7a5c5ca71acef1525d9a0a2219e561133c42c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://10e75e488da4be267b28819a0fad4507a42476f14136a8cf6c283bc2d14515d9\",\"dweb:/ipfs/QmfXQibu6k9zCT55DGWTTHaD4JkeTyu8Rnugfkx7GpknWk\"]},\"src/interfaces/external/balancer/liquidity-mining/IVotingEscrow.sol\":{\"keccak256\":\"0xbf08c2800a22fb2f2b6bdfb6fc18aefb8a1fe302958a1053c6cc952b5e64b5e0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://41375a51dd8822d3c46047621dcad60e66e272af7f7d58b0dfd7712d40c30ed6\",\"dweb:/ipfs/QmbsaZkB5NEQJ1UtiWRja8LuLesyKaFVfq9g1L1HxSLC6g\"]},\"src/interfaces/external/balancer/liquidity-mining/IVotingEscrowRemapper.sol\":{\"keccak256\":\"0xce0cb9eb842b28896867c5963883de84d5e29c98aaaf5e7c4db13bb16fe675ec\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://cce041a7b7b94d89a886bd915107bfe32f9750f6fefb3548fb3bbc700717f0db\",\"dweb:/ipfs/QmNtBH47mEt6gXoDvKLsRC64db7F5mzhQ7wRjNcyx1Vwb5\"]},\"src/interfaces/external/balancer/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x8032fd6d7f660d9536d252897336462bb932d1e91bd3b87c087be017a35dc842\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3724cffd85daa36371999e0e9ea56617df12fd7f2cc5c123139705766e3b89a1\",\"dweb:/ipfs/QmaM2wHuKrpKcc8mRhdYmXqPVAimHjGK1xubPWXKafiKYa\"]},\"src/interfaces/external/balancer/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x52bd09272e9ec2cff838df757e8b690ff4ca3f4f07e9edd9b711e31e474dd979\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://92ae86c99ce4b92fc666a4c6053bc5ae2932d07b23471647cae7c541c68071b3\",\"dweb:/ipfs/QmeKHMVTVLfG5MKQ7ewM7uwB41WEXkDKhkkL3qCd7mokFo\"]},\"src/interfaces/external/balancer/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xf952ad04a5d4e8523212315e19b8d874e13ceadb7dbc1f5025510da1e153405c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://81d7e364e8c7a76879f9be650559d3de53879918ab721372931d0e51daa464b5\",\"dweb:/ipfs/QmNyXjvxr3cXzVeBaPrApS9fdjufyN6dXtjGy746xxtj2z\"]},\"src/interfaces/external/balancer/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x90278f677649701309ab0902f5bca2fd0d9603e5ce7193b15cf05a7c5582c3b9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://991dce71671de9fb0f5fafda69994705e358a5cb235bc3acf961dbc9895b6dd6\",\"dweb:/ipfs/QmP7479cjgvMa2DjXNSB6gvHZ2WibU4TGb3DTjqw6UuFb6\"]},\"src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"src/interfaces/external/balancer/vault/IAsset.sol\":{\"keccak256\":\"0x746354db670eb3b94179963b522c4deb0b9854483ab293e3025689749923ebef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bcd5a7e0519f94c25f4e3b568b8c0446b2240bd3808c56c3b498a6fed459b2e4\",\"dweb:/ipfs/QmRXvcCy9oKhwPMr8QQ74pg9jormcgq3GHmLSGTDhUWAsn\"]},\"src/interfaces/external/balancer/vault/IAuthorizer.sol\":{\"keccak256\":\"0x4adfebbc478ab323d0679386ef8e2384f5205eb280f72757c151eca62ea4f91b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://49a34c9ad9cb559931b465cea2d570ab015751c6dbc4a52eab8c36b5b949eec1\",\"dweb:/ipfs/QmUiUSZz8gjANUcTqaPCfNkUp3gpjt8Qq2z4UWuQWhaK34\"]},\"src/interfaces/external/balancer/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xef16377e5ee7ac8151fe8abc3f7b8f0a420008ae1c1336f3cbaea5e171403a43\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ca460a387ce27682beecc1f93a07c7ef6139504f2d4e2fce715abe82b6d2b039\",\"dweb:/ipfs/QmS8QgcAqhtHepcf8LYGToutbhsUXaTE7UNLQQi4fBJsUC\"]},\"src/interfaces/external/balancer/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xa42e8b311517ce70dd7f2af6b497603a81c3dd678961a5ffd8a2968eff6b7b5a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9a11ea954c234e348896cec60165624d71e9fe7b44d7341d74e3bdc7790f2b6a\",\"dweb:/ipfs/QmNq1f6yAeJawBKpMmfNyoQ84nZquQ78YtT3tt3dMBtyCK\"]},\"src/interfaces/external/balancer/vault/IVault.sol\":{\"keccak256\":\"0x08d254ba643e02507305b570f794a75b5439d2ae799f761d26d3a2fd77f6d2fb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2de3bcdb5d5805a44e2c643bc76bc14858825b2b018049f89962c8bc532ac24d\",\"dweb:/ipfs/QmfWZGKRChzwe97R8nqShjKdRX5k8Tp9HKwr7UAq9rCg1m\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localUser",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddressDelegateUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localUser",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "remoteUser",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint16",
              "name": "chainId",
              "type": "uint16",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddressMappingUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "remoteUser",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint16",
              "name": "chainId",
              "type": "uint16",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RemoteAddressMappingCleared",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localUser",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "chainId",
              "type": "uint16"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "clearNetworkRemapping"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "remoteUser",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "chainId",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLocalUser",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLockedEnd",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getOmniVotingEscrowAdaptor",
          "outputs": [
            {
              "internalType": "contract IOmniVotingEscrowAdaptor",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localUser",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRemappingManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localUser",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "chainId",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRemoteUser",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalSupplyPoint",
          "outputs": [
            {
              "internalType": "struct IVotingEscrow.Point",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int128",
                  "name": "bias",
                  "type": "int128"
                },
                {
                  "internalType": "int128",
                  "name": "slope",
                  "type": "int128"
                },
                {
                  "internalType": "uint256",
                  "name": "ts",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "blk",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserPoint",
          "outputs": [
            {
              "internalType": "struct IVotingEscrow.Point",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int128",
                  "name": "bias",
                  "type": "int128"
                },
                {
                  "internalType": "int128",
                  "name": "slope",
                  "type": "int128"
                },
                {
                  "internalType": "uint256",
                  "name": "ts",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "blk",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getVotingEscrow",
          "outputs": [
            {
              "internalType": "contract IVotingEscrow",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localUser",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "remoteUser",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "chainId",
              "type": "uint16"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "setNetworkRemapping"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localUser",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "delegate",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNetworkRemappingManager"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "clearNetworkRemapping(address,uint16)": {
            "details": "This is intended to discourage and also allow recovery from griefing attacks. If griefing occurs then the griefer can be removed from Smart Wallet Checker and have their remappings erased. The local user can always clear their own mapping, regardless the state of the Smart Wallet Checker.",
            "params": {
              "chainId": "- The chain id of the network to erase.",
              "localUser": "- The address of the local user to erase."
            }
          },
          "getLocalUser(address,uint16)": {
            "details": "Returns `address(0)` if the remapping does not exist for the given remote user.",
            "params": {
              "chainId": "- The chain ID of the remote network.",
              "remoteUser": "- Address of the user on the remote chain corresponding to the local address."
            }
          },
          "getLockedEnd(address)": {
            "details": "The returned value is taken directly from the voting escrow."
          },
          "getRemappingManager(address)": {
            "params": {
              "localUser": "- Address of the user on the local chain with a remapping manager."
            }
          },
          "getRemoteUser(address,uint16)": {
            "details": "Returns `address(0)` if the remapping does not exist for the given local user.",
            "params": {
              "chainId": "- The chain ID of the remote network.",
              "localUser": "- Address of the user on the local chain corresponding to the remote address."
            }
          },
          "getTotalSupplyPoint()": {
            "details": "We return the total supply as a Point to allow extrapolating this into the future. Note that this extrapolation will become invalid when crossing weeks, since we're not taking into account veBAL locks that expire then."
          },
          "getUserPoint(address)": {
            "details": "We return the balance as a Point to allow extrapolating this into the future."
          },
          "setNetworkRemapping(address,address,uint16)": {
            "details": "In order to set up a remapping on this contract, `localUser` must be a smart contract which has been allowlisted to hold veBAL. EOAs are expected to set up any delegation of their veBAL on L2s directly.",
            "params": {
              "chainId": "- The chain id of the remote chain on which `remoteUser` resides.",
              "localUser": "- The address of a contract allowlisted on the `SmartWalletChecker`.",
              "remoteUser": "- The address to receive `localUser`'s balance of veBAL on the remote chain."
            }
          },
          "setNetworkRemappingManager(address,address)": {
            "details": "This is intended to handle contracts which cannot interact with this contract directly.",
            "params": {
              "delegate": "- The address which is allowed to manage remote users to be linked to `localUser`.",
              "localUser": "- The address of a contract allowlisted on the `SmartWalletChecker`."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "clearNetworkRemapping(address,uint16)": {
            "notice": "Clears a local user's mapping for a particular network."
          },
          "getLocalUser(address,uint16)": {
            "notice": "Returns the local user corresponding to an address on a remote chain."
          },
          "getLockedEnd(address)": {
            "notice": "Get timestamp when `user`'s lock finishes."
          },
          "getOmniVotingEscrowAdaptor()": {
            "notice": "Returns Omni Voting Escrow Adaptor contract address, which interfaces with the gateway to bridge veBAL balances to L2s."
          },
          "getRemappingManager(address)": {
            "notice": "Gets the account that can set a remapping for a given local user."
          },
          "getRemoteUser(address,uint16)": {
            "notice": "Returns the remote user corresponding to an address on the local chain."
          },
          "getTotalSupplyPoint()": {
            "notice": "Returns the current total supply of veBAL as a Point."
          },
          "getUserPoint(address)": {
            "notice": "Returns a user's current veBAL balance as a Point. Note that we don't apply any remappings in this query. The returned value is taken directly from the voting escrow."
          },
          "getVotingEscrow()": {
            "notice": "Returns Voting Escrow contract address."
          },
          "setNetworkRemapping(address,address,uint16)": {
            "notice": "Sets up a mapping from `localUser`'s veBAL balance to `remoteUser` for chain `chainId`."
          },
          "setNetworkRemappingManager(address,address)": {
            "notice": "Sets an address to manage the mapping for a given local user on their behalf."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/external/balancer/liquidity-mining/IVotingEscrowRemapper.sol": "IVotingEscrowRemapper"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/external/balancer/liquidity-mining/IAuthorizerAdaptor.sol": {
        "keccak256": "0x1a9bad00c0084984cd3364cfcdeaece137157816fe8078f706ed78adc803cad7",
        "urls": [
          "bzz-raw://d69ccb7c506a7b56fe8f4e59ee10595d3e5cbb881e8215fdda879ec7bf34a5c6",
          "dweb:/ipfs/QmZc3HoxcdRivJ8xePXBxceAtvxo8LA7P8Rf3pjjED9e7y"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/IOmniVotingEscrowAdaptor.sol": {
        "keccak256": "0x247b984ee8d295882d5fef17d6d0a40936fc96c6265d00d32ae795fb0a51387f",
        "urls": [
          "bzz-raw://f3a8cee4a2a54d95601499142b474905fa9ba8cc3a92053df5609e172f7d825f",
          "dweb:/ipfs/QmQtoGQCvWZYjhBNVmQMAKpEnQ4GShW4XDuqGDHjkoYwzR"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/ISmartWalletChecker.sol": {
        "keccak256": "0x8f76f086f3d153b7542a027abdf7a5c5ca71acef1525d9a0a2219e561133c42c",
        "urls": [
          "bzz-raw://10e75e488da4be267b28819a0fad4507a42476f14136a8cf6c283bc2d14515d9",
          "dweb:/ipfs/QmfXQibu6k9zCT55DGWTTHaD4JkeTyu8Rnugfkx7GpknWk"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/IVotingEscrow.sol": {
        "keccak256": "0xbf08c2800a22fb2f2b6bdfb6fc18aefb8a1fe302958a1053c6cc952b5e64b5e0",
        "urls": [
          "bzz-raw://41375a51dd8822d3c46047621dcad60e66e272af7f7d58b0dfd7712d40c30ed6",
          "dweb:/ipfs/QmbsaZkB5NEQJ1UtiWRja8LuLesyKaFVfq9g1L1HxSLC6g"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/IVotingEscrowRemapper.sol": {
        "keccak256": "0xce0cb9eb842b28896867c5963883de84d5e29c98aaaf5e7c4db13bb16fe675ec",
        "urls": [
          "bzz-raw://cce041a7b7b94d89a886bd915107bfe32f9750f6fefb3548fb3bbc700717f0db",
          "dweb:/ipfs/QmNtBH47mEt6gXoDvKLsRC64db7F5mzhQ7wRjNcyx1Vwb5"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/helpers/IAuthentication.sol": {
        "keccak256": "0x8032fd6d7f660d9536d252897336462bb932d1e91bd3b87c087be017a35dc842",
        "urls": [
          "bzz-raw://3724cffd85daa36371999e0e9ea56617df12fd7f2cc5c123139705766e3b89a1",
          "dweb:/ipfs/QmaM2wHuKrpKcc8mRhdYmXqPVAimHjGK1xubPWXKafiKYa"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/helpers/ISignaturesValidator.sol": {
        "keccak256": "0x52bd09272e9ec2cff838df757e8b690ff4ca3f4f07e9edd9b711e31e474dd979",
        "urls": [
          "bzz-raw://92ae86c99ce4b92fc666a4c6053bc5ae2932d07b23471647cae7c541c68071b3",
          "dweb:/ipfs/QmeKHMVTVLfG5MKQ7ewM7uwB41WEXkDKhkkL3qCd7mokFo"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/helpers/ITemporarilyPausable.sol": {
        "keccak256": "0xf952ad04a5d4e8523212315e19b8d874e13ceadb7dbc1f5025510da1e153405c",
        "urls": [
          "bzz-raw://81d7e364e8c7a76879f9be650559d3de53879918ab721372931d0e51daa464b5",
          "dweb:/ipfs/QmNyXjvxr3cXzVeBaPrApS9fdjufyN6dXtjGy746xxtj2z"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/misc/IWETH.sol": {
        "keccak256": "0x90278f677649701309ab0902f5bca2fd0d9603e5ce7193b15cf05a7c5582c3b9",
        "urls": [
          "bzz-raw://991dce71671de9fb0f5fafda69994705e358a5cb235bc3acf961dbc9895b6dd6",
          "dweb:/ipfs/QmP7479cjgvMa2DjXNSB6gvHZ2WibU4TGb3DTjqw6UuFb6"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol": {
        "keccak256": "0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835",
        "urls": [
          "bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f",
          "dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/balancer/vault/IAsset.sol": {
        "keccak256": "0x746354db670eb3b94179963b522c4deb0b9854483ab293e3025689749923ebef",
        "urls": [
          "bzz-raw://bcd5a7e0519f94c25f4e3b568b8c0446b2240bd3808c56c3b498a6fed459b2e4",
          "dweb:/ipfs/QmRXvcCy9oKhwPMr8QQ74pg9jormcgq3GHmLSGTDhUWAsn"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IAuthorizer.sol": {
        "keccak256": "0x4adfebbc478ab323d0679386ef8e2384f5205eb280f72757c151eca62ea4f91b",
        "urls": [
          "bzz-raw://49a34c9ad9cb559931b465cea2d570ab015751c6dbc4a52eab8c36b5b949eec1",
          "dweb:/ipfs/QmUiUSZz8gjANUcTqaPCfNkUp3gpjt8Qq2z4UWuQWhaK34"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IFlashLoanRecipient.sol": {
        "keccak256": "0xef16377e5ee7ac8151fe8abc3f7b8f0a420008ae1c1336f3cbaea5e171403a43",
        "urls": [
          "bzz-raw://ca460a387ce27682beecc1f93a07c7ef6139504f2d4e2fce715abe82b6d2b039",
          "dweb:/ipfs/QmS8QgcAqhtHepcf8LYGToutbhsUXaTE7UNLQQi4fBJsUC"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IProtocolFeesCollector.sol": {
        "keccak256": "0xa42e8b311517ce70dd7f2af6b497603a81c3dd678961a5ffd8a2968eff6b7b5a",
        "urls": [
          "bzz-raw://9a11ea954c234e348896cec60165624d71e9fe7b44d7341d74e3bdc7790f2b6a",
          "dweb:/ipfs/QmNq1f6yAeJawBKpMmfNyoQ84nZquQ78YtT3tt3dMBtyCK"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IVault.sol": {
        "keccak256": "0x08d254ba643e02507305b570f794a75b5439d2ae799f761d26d3a2fd77f6d2fb",
        "urls": [
          "bzz-raw://2de3bcdb5d5805a44e2c643bc76bc14858825b2b018049f89962c8bc532ac24d",
          "dweb:/ipfs/QmfWZGKRChzwe97R8nqShjKdRX5k8Tp9HKwr7UAq9rCg1m"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/external/balancer/liquidity-mining/IVotingEscrowRemapper.sol",
    "id": 58128,
    "exportedSymbols": {
      "IAsset": [
        61808
      ],
      "IAuthentication": [
        60077
      ],
      "IAuthorizer": [
        61823
      ],
      "IAuthorizerAdaptor": [
        56468
      ],
      "IERC20": [
        60345
      ],
      "IFlashLoanRecipient": [
        62001
      ],
      "IOmniVotingEscrowAdaptor": [
        57458
      ],
      "IProtocolFeesCollector": [
        62141
      ],
      "ISignaturesValidator": [
        60129
      ],
      "ISmartWalletChecker": [
        57680
      ],
      "ITemporarilyPausable": [
        60148
      ],
      "IVault": [
        63277
      ],
      "IVotingEscrow": [
        58008
      ],
      "IVotingEscrowRemapper": [
        58127
      ],
      "IWETH": [
        60253
      ]
    },
    "nodeType": "SourceUnit",
    "src": "694:5604:124",
    "nodes": [
      {
        "id": 58010,
        "nodeType": "PragmaDirective",
        "src": "694:23:124",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 58011,
        "nodeType": "PragmaDirective",
        "src": "718:33:124",
        "nodes": [],
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ]
      },
      {
        "id": 58012,
        "nodeType": "ImportDirective",
        "src": "753:40:124",
        "nodes": [],
        "absolutePath": "src/interfaces/external/balancer/liquidity-mining/IOmniVotingEscrowAdaptor.sol",
        "file": "./IOmniVotingEscrowAdaptor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58128,
        "sourceUnit": 57459,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58013,
        "nodeType": "ImportDirective",
        "src": "794:29:124",
        "nodes": [],
        "absolutePath": "src/interfaces/external/balancer/liquidity-mining/IVotingEscrow.sol",
        "file": "./IVotingEscrow.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58128,
        "sourceUnit": 58009,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58127,
        "nodeType": "ContractDefinition",
        "src": "1501:4796:124",
        "nodes": [
          {
            "id": 58022,
            "nodeType": "EventDefinition",
            "src": "1539:107:124",
            "nodes": [],
            "anonymous": false,
            "name": "AddressMappingUpdated",
            "nameLocation": "1545:21:124",
            "parameters": {
              "id": 58021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58016,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "localUser",
                  "nameLocation": "1583:9:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58022,
                  "src": "1567:25:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1567:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58018,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "remoteUser",
                  "nameLocation": "1610:10:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58022,
                  "src": "1594:26:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1594:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58020,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "1637:7:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58022,
                  "src": "1622:22:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 58019,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1622:6:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1566:79:124"
            }
          },
          {
            "id": 58028,
            "nodeType": "EventDefinition",
            "src": "1651:86:124",
            "nodes": [],
            "anonymous": false,
            "name": "RemoteAddressMappingCleared",
            "nameLocation": "1657:27:124",
            "parameters": {
              "id": 58027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58024,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "remoteUser",
                  "nameLocation": "1701:10:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58028,
                  "src": "1685:26:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58026,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "1728:7:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58028,
                  "src": "1713:22:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 58025,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1713:6:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1684:52:124"
            }
          },
          {
            "id": 58034,
            "nodeType": "EventDefinition",
            "src": "1742:82:124",
            "nodes": [],
            "anonymous": false,
            "name": "AddressDelegateUpdated",
            "nameLocation": "1748:22:124",
            "parameters": {
              "id": 58033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58030,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "localUser",
                  "nameLocation": "1787:9:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58034,
                  "src": "1771:25:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58029,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1771:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58032,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "delegate",
                  "nameLocation": "1814:8:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58034,
                  "src": "1798:24:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1798:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1770:53:124"
            }
          },
          {
            "id": 58041,
            "nodeType": "FunctionDefinition",
            "src": "1901:65:124",
            "nodes": [],
            "documentation": {
              "id": 58035,
              "nodeType": "StructuredDocumentation",
              "src": "1830:66:124",
              "text": " @notice Returns Voting Escrow contract address."
            },
            "functionSelector": "08b0308a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getVotingEscrow",
            "nameLocation": "1910:15:124",
            "parameters": {
              "id": 58036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1925:2:124"
            },
            "returnParameters": {
              "id": 58040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58039,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58041,
                  "src": "1951:13:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVotingEscrow_$58008",
                    "typeString": "contract IVotingEscrow"
                  },
                  "typeName": {
                    "id": 58038,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 58037,
                      "name": "IVotingEscrow",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58008,
                      "src": "1951:13:124"
                    },
                    "referencedDeclaration": 58008,
                    "src": "1951:13:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVotingEscrow_$58008",
                      "typeString": "contract IVotingEscrow"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1950:15:124"
            },
            "scope": 58127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58048,
            "nodeType": "FunctionDefinition",
            "src": "2130:87:124",
            "nodes": [],
            "documentation": {
              "id": 58042,
              "nodeType": "StructuredDocumentation",
              "src": "1972:153:124",
              "text": " @notice Returns Omni Voting Escrow Adaptor contract address, which interfaces with the gateway to bridge\n veBAL balances to L2s."
            },
            "functionSelector": "5e5543be",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getOmniVotingEscrowAdaptor",
            "nameLocation": "2139:26:124",
            "parameters": {
              "id": 58043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2165:2:124"
            },
            "returnParameters": {
              "id": 58047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58046,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58048,
                  "src": "2191:24:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IOmniVotingEscrowAdaptor_$57458",
                    "typeString": "contract IOmniVotingEscrowAdaptor"
                  },
                  "typeName": {
                    "id": 58045,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 58044,
                      "name": "IOmniVotingEscrowAdaptor",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 57458,
                      "src": "2191:24:124"
                    },
                    "referencedDeclaration": 57458,
                    "src": "2191:24:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IOmniVotingEscrowAdaptor_$57458",
                      "typeString": "contract IOmniVotingEscrowAdaptor"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2190:26:124"
            },
            "scope": 58127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58055,
            "nodeType": "FunctionDefinition",
            "src": "2553:82:124",
            "nodes": [],
            "documentation": {
              "id": 58049,
              "nodeType": "StructuredDocumentation",
              "src": "2223:325:124",
              "text": " @notice Returns the current total supply of veBAL as a Point.\n @dev We return the total supply as a Point to allow extrapolating this into the future. Note that this\n extrapolation will become invalid when crossing weeks, since we're not taking into account veBAL locks that\n expire then."
            },
            "functionSelector": "f6f4a332",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalSupplyPoint",
            "nameLocation": "2562:19:124",
            "parameters": {
              "id": 58050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2581:2:124"
            },
            "returnParameters": {
              "id": 58054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58053,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58055,
                  "src": "2607:26:124",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Point_$57931_memory_ptr",
                    "typeString": "struct IVotingEscrow.Point"
                  },
                  "typeName": {
                    "id": 58052,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 58051,
                      "name": "IVotingEscrow.Point",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 57931,
                      "src": "2607:19:124"
                    },
                    "referencedDeclaration": 57931,
                    "src": "2607:19:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Point_$57931_storage_ptr",
                      "typeString": "struct IVotingEscrow.Point"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2606:28:124"
            },
            "scope": 58127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58064,
            "nodeType": "FunctionDefinition",
            "src": "2936:87:124",
            "nodes": [],
            "documentation": {
              "id": 58056,
              "nodeType": "StructuredDocumentation",
              "src": "2641:290:124",
              "text": " @notice Returns a user's current veBAL balance as a Point. Note that we don't apply any remappings in this query.\n The returned value is taken directly from the voting escrow.\n @dev We return the balance as a Point to allow extrapolating this into the future."
            },
            "functionSelector": "71628bfd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getUserPoint",
            "nameLocation": "2945:12:124",
            "parameters": {
              "id": 58059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58058,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2966:4:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58064,
                  "src": "2958:12:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2958:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2957:14:124"
            },
            "returnParameters": {
              "id": 58063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58062,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58064,
                  "src": "2995:26:124",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Point_$57931_memory_ptr",
                    "typeString": "struct IVotingEscrow.Point"
                  },
                  "typeName": {
                    "id": 58061,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 58060,
                      "name": "IVotingEscrow.Point",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 57931,
                      "src": "2995:19:124"
                    },
                    "referencedDeclaration": 57931,
                    "src": "2995:19:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Point_$57931_storage_ptr",
                      "typeString": "struct IVotingEscrow.Point"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2994:28:124"
            },
            "scope": 58127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58072,
            "nodeType": "FunctionDefinition",
            "src": "3176:68:124",
            "nodes": [],
            "documentation": {
              "id": 58065,
              "nodeType": "StructuredDocumentation",
              "src": "3029:142:124",
              "text": " @notice Get timestamp when `user`'s lock finishes.\n @dev The returned value is taken directly from the voting escrow."
            },
            "functionSelector": "3e7df7c8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getLockedEnd",
            "nameLocation": "3185:12:124",
            "parameters": {
              "id": 58068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58067,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3206:4:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58072,
                  "src": "3198:12:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58066,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3198:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3197:14:124"
            },
            "returnParameters": {
              "id": 58071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58070,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58072,
                  "src": "3235:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3235:7:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3234:9:124"
            },
            "scope": 58127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58082,
            "nodeType": "FunctionDefinition",
            "src": "3606:90:124",
            "nodes": [],
            "documentation": {
              "id": 58073,
              "nodeType": "StructuredDocumentation",
              "src": "3250:351:124",
              "text": " @notice Returns the local user corresponding to an address on a remote chain.\n @dev Returns `address(0)` if the remapping does not exist for the given remote user.\n @param remoteUser - Address of the user on the remote chain corresponding to the local address.\n @param chainId - The chain ID of the remote network."
            },
            "functionSelector": "70d1bd17",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getLocalUser",
            "nameLocation": "3615:12:124",
            "parameters": {
              "id": 58078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58075,
                  "mutability": "mutable",
                  "name": "remoteUser",
                  "nameLocation": "3636:10:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58082,
                  "src": "3628:18:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3628:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58077,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "3655:7:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58082,
                  "src": "3648:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 58076,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "3648:6:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3627:36:124"
            },
            "returnParameters": {
              "id": 58081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58080,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58082,
                  "src": "3687:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3687:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3686:9:124"
            },
            "scope": 58127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58092,
            "nodeType": "FunctionDefinition",
            "src": "4058:90:124",
            "nodes": [],
            "documentation": {
              "id": 58083,
              "nodeType": "StructuredDocumentation",
              "src": "3702:351:124",
              "text": " @notice Returns the remote user corresponding to an address on the local chain.\n @dev Returns `address(0)` if the remapping does not exist for the given local user.\n @param localUser - Address of the user on the local chain corresponding to the remote address.\n @param chainId - The chain ID of the remote network."
            },
            "functionSelector": "bda75c38",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRemoteUser",
            "nameLocation": "4067:13:124",
            "parameters": {
              "id": 58088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58085,
                  "mutability": "mutable",
                  "name": "localUser",
                  "nameLocation": "4089:9:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58092,
                  "src": "4081:17:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4081:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58087,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "4107:7:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58092,
                  "src": "4100:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 58086,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "4100:6:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4080:35:124"
            },
            "returnParameters": {
              "id": 58091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58090,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58092,
                  "src": "4139:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4139:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4138:9:124"
            },
            "scope": 58127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58100,
            "nodeType": "FunctionDefinition",
            "src": "4342:80:124",
            "nodes": [],
            "documentation": {
              "id": 58093,
              "nodeType": "StructuredDocumentation",
              "src": "4154:183:124",
              "text": " @notice Gets the account that can set a remapping for a given local user.\n @param localUser - Address of the user on the local chain with a remapping manager."
            },
            "functionSelector": "ee98b1e7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRemappingManager",
            "nameLocation": "4351:19:124",
            "parameters": {
              "id": 58096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58095,
                  "mutability": "mutable",
                  "name": "localUser",
                  "nameLocation": "4379:9:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58100,
                  "src": "4371:17:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58094,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4371:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4370:19:124"
            },
            "returnParameters": {
              "id": 58099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58098,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58100,
                  "src": "4413:7:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4413:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4412:9:124"
            },
            "scope": 58127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58110,
            "nodeType": "FunctionDefinition",
            "src": "5078:101:124",
            "nodes": [],
            "documentation": {
              "id": 58101,
              "nodeType": "StructuredDocumentation",
              "src": "4454:619:124",
              "text": " @notice Sets up a mapping from `localUser`'s veBAL balance to `remoteUser` for chain `chainId`.\n @dev In order to set up a remapping on this contract, `localUser` must be a smart contract which has been\n allowlisted to hold veBAL. EOAs are expected to set up any delegation of their veBAL on L2s directly.\n @param localUser - The address of a contract allowlisted on the `SmartWalletChecker`.\n @param remoteUser - The address to receive `localUser`'s balance of veBAL on the remote chain.\n @param chainId - The chain id of the remote chain on which `remoteUser` resides."
            },
            "functionSelector": "21861fde",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setNetworkRemapping",
            "nameLocation": "5087:19:124",
            "parameters": {
              "id": 58108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58103,
                  "mutability": "mutable",
                  "name": "localUser",
                  "nameLocation": "5115:9:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58110,
                  "src": "5107:17:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5107:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58105,
                  "mutability": "mutable",
                  "name": "remoteUser",
                  "nameLocation": "5134:10:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58110,
                  "src": "5126:18:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5126:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58107,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "5153:7:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58110,
                  "src": "5146:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 58106,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "5146:6:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5106:55:124"
            },
            "returnParameters": {
              "id": 58109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5178:0:124"
            },
            "scope": 58127,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58118,
            "nodeType": "FunctionDefinition",
            "src": "5593:82:124",
            "nodes": [],
            "documentation": {
              "id": 58111,
              "nodeType": "StructuredDocumentation",
              "src": "5185:403:124",
              "text": " @notice Sets an address to manage the mapping for a given local user on their behalf.\n @dev This is intended to handle contracts which cannot interact with this contract directly.\n @param localUser - The address of a contract allowlisted on the `SmartWalletChecker`.\n @param delegate - The address which is allowed to manage remote users to be linked to `localUser`."
            },
            "functionSelector": "a9f3f44e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setNetworkRemappingManager",
            "nameLocation": "5602:26:124",
            "parameters": {
              "id": 58116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58113,
                  "mutability": "mutable",
                  "name": "localUser",
                  "nameLocation": "5637:9:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58118,
                  "src": "5629:17:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5629:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58115,
                  "mutability": "mutable",
                  "name": "delegate",
                  "nameLocation": "5656:8:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58118,
                  "src": "5648:16:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5648:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5628:37:124"
            },
            "returnParameters": {
              "id": 58117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5674:0:124"
            },
            "scope": 58127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58126,
            "nodeType": "FunctionDefinition",
            "src": "6212:83:124",
            "nodes": [],
            "documentation": {
              "id": 58119,
              "nodeType": "StructuredDocumentation",
              "src": "5681:526:124",
              "text": " @notice Clears a local user's mapping for a particular network.\n @dev This is intended to discourage and also allow recovery from griefing attacks.\n If griefing occurs then the griefer can be removed from Smart Wallet Checker and have their remappings erased.\n The local user can always clear their own mapping, regardless the state of the Smart Wallet Checker.\n @param localUser - The address of the local user to erase.\n @param chainId - The chain id of the network to erase."
            },
            "functionSelector": "76601a18",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "clearNetworkRemapping",
            "nameLocation": "6221:21:124",
            "parameters": {
              "id": 58124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58121,
                  "mutability": "mutable",
                  "name": "localUser",
                  "nameLocation": "6251:9:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58126,
                  "src": "6243:17:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6243:7:124",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58123,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "6269:7:124",
                  "nodeType": "VariableDeclaration",
                  "scope": 58126,
                  "src": "6262:14:124",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 58122,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "6262:6:124",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6242:35:124"
            },
            "returnParameters": {
              "id": 58125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6294:0:124"
            },
            "scope": 58127,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IVotingEscrowRemapper",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 58014,
          "nodeType": "StructuredDocumentation",
          "src": "825:675:124",
          "text": " @notice This contract allows veBAL holders on Ethereum to assign their balance to designated addresses on each L2.\n This is intended for smart contracts that are not deployed to the same address on all networks. EOA's are\n expected to either use the same address, or manage delegation on L2 networks themselves.\n @dev For each network (chainId), we maintain a mapping between local (Ethereum) and remote (L2) addresses.\n This contract remaps balance queries on remote network addresses to their corresponding local addresses.\n Users able to call this contract can set their own mappings, or delegate this function to another account if they\n cannot."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          58127
        ],
        "name": "IVotingEscrowRemapper",
        "nameLocation": "1511:21:124",
        "scope": 58128,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 124
}