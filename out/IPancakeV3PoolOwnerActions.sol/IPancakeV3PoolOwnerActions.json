{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "amount0Requested",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "amount1Requested",
          "type": "uint128"
        }
      ],
      "name": "collectProtocol",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "amount0",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "amount1",
          "type": "uint128"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "feeProtocol0",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "feeProtocol1",
          "type": "uint32"
        }
      ],
      "name": "setFeeProtocol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lmPool",
          "type": "address"
        }
      ],
      "name": "setLmPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "collectProtocol(address,uint128,uint128)": "85b66729",
    "setFeeProtocol(uint32,uint32)": "b0d0d211",
    "setLmPool(address)": "cc7e7fa2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"feeProtocol0\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"feeProtocol1\",\"type\":\"uint32\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lmPool\",\"type\":\"address\"}],\"name\":\"setLmPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint32,uint32)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint32,uint32)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"setLmPool(address)\":{\"notice\":\"Set the LM pool to enable liquidity mining\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolOwnerActions.sol\":\"IPancakeV3PoolOwnerActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolOwnerActions.sol\":{\"keccak256\":\"0xb28a50116de98147bb91e35eaeb51b29a7899c16d3d1a99941cd4f13b565550b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5e493a4c2938834d44283af81fb258c1ac320556f382aeeafe00bd7205efeba0\",\"dweb:/ipfs/QmbWYfzDnwWD2vfL69iKVpy9zEHCvJ32kpC4MEAfexkw4X\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "amount0Requested",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "amount1Requested",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectProtocol",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "amount0",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "amount1",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "feeProtocol0",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "feeProtocol1",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFeeProtocol"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "lmPool",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLmPool"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "collectProtocol(address,uint128,uint128)": {
            "params": {
              "amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
              "amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
              "recipient": "The address to which collected protocol fees should be sent"
            },
            "returns": {
              "amount0": "The protocol fee collected in token0",
              "amount1": "The protocol fee collected in token1"
            }
          },
          "setFeeProtocol(uint32,uint32)": {
            "params": {
              "feeProtocol0": "new protocol fee for token0 of the pool",
              "feeProtocol1": "new protocol fee for token1 of the pool"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "collectProtocol(address,uint128,uint128)": {
            "notice": "Collect the protocol fee accrued to the pool"
          },
          "setFeeProtocol(uint32,uint32)": {
            "notice": "Set the denominator of the protocol's % share of the fees"
          },
          "setLmPool(address)": {
            "notice": "Set the LM pool to enable liquidity mining"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolOwnerActions.sol": "IPancakeV3PoolOwnerActions"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolOwnerActions.sol": {
        "keccak256": "0xb28a50116de98147bb91e35eaeb51b29a7899c16d3d1a99941cd4f13b565550b",
        "urls": [
          "bzz-raw://5e493a4c2938834d44283af81fb258c1ac320556f382aeeafe00bd7205efeba0",
          "dweb:/ipfs/QmbWYfzDnwWD2vfL69iKVpy9zEHCvJ32kpC4MEAfexkw4X"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolOwnerActions.sol",
    "id": 71114,
    "exportedSymbols": {
      "IPancakeV3PoolOwnerActions": [
        71113
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:1253:264",
    "nodes": [
      {
        "id": 71083,
        "nodeType": "PragmaDirective",
        "src": "45:23:264",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 71113,
        "nodeType": "ContractDefinition",
        "src": "186:1111:264",
        "nodes": [
          {
            "id": 71092,
            "nodeType": "FunctionDefinition",
            "src": "439:75:264",
            "nodes": [],
            "documentation": {
              "id": 71085,
              "nodeType": "StructuredDocumentation",
              "src": "229:205:264",
              "text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
            },
            "functionSelector": "b0d0d211",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeProtocol",
            "nameLocation": "448:14:264",
            "parameters": {
              "id": 71090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71087,
                  "mutability": "mutable",
                  "name": "feeProtocol0",
                  "nameLocation": "470:12:264",
                  "nodeType": "VariableDeclaration",
                  "scope": 71092,
                  "src": "463:19:264",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 71086,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:6:264",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71089,
                  "mutability": "mutable",
                  "name": "feeProtocol1",
                  "nameLocation": "491:12:264",
                  "nodeType": "VariableDeclaration",
                  "scope": 71092,
                  "src": "484:19:264",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 71088,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:6:264",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "462:42:264"
            },
            "returnParameters": {
              "id": 71091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "513:0:264"
            },
            "scope": 71113,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71106,
            "nodeType": "FunctionDefinition",
            "src": "1008:178:264",
            "nodes": [],
            "documentation": {
              "id": 71093,
              "nodeType": "StructuredDocumentation",
              "src": "520:483:264",
              "text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
            },
            "functionSelector": "85b66729",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "collectProtocol",
            "nameLocation": "1017:15:264",
            "parameters": {
              "id": 71100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71095,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1050:9:264",
                  "nodeType": "VariableDeclaration",
                  "scope": 71106,
                  "src": "1042:17:264",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71094,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1042:7:264",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71097,
                  "mutability": "mutable",
                  "name": "amount0Requested",
                  "nameLocation": "1077:16:264",
                  "nodeType": "VariableDeclaration",
                  "scope": 71106,
                  "src": "1069:24:264",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 71096,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:264",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71099,
                  "mutability": "mutable",
                  "name": "amount1Requested",
                  "nameLocation": "1111:16:264",
                  "nodeType": "VariableDeclaration",
                  "scope": 71106,
                  "src": "1103:24:264",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 71098,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1103:7:264",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1032:101:264"
            },
            "returnParameters": {
              "id": 71105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71102,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "1160:7:264",
                  "nodeType": "VariableDeclaration",
                  "scope": 71106,
                  "src": "1152:15:264",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 71101,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1152:7:264",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71104,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "1177:7:264",
                  "nodeType": "VariableDeclaration",
                  "scope": 71106,
                  "src": "1169:15:264",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 71103,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:7:264",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1151:34:264"
            },
            "scope": 71113,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 71112,
            "nodeType": "FunctionDefinition",
            "src": "1251:44:264",
            "nodes": [],
            "documentation": {
              "id": 71107,
              "nodeType": "StructuredDocumentation",
              "src": "1192:54:264",
              "text": "@notice Set the LM pool to enable liquidity mining"
            },
            "functionSelector": "cc7e7fa2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setLmPool",
            "nameLocation": "1260:9:264",
            "parameters": {
              "id": 71110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71109,
                  "mutability": "mutable",
                  "name": "lmPool",
                  "nameLocation": "1278:6:264",
                  "nodeType": "VariableDeclaration",
                  "scope": 71112,
                  "src": "1270:14:264",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1270:7:264",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1269:16:264"
            },
            "returnParameters": {
              "id": 71111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1294:0:264"
            },
            "scope": 71113,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IPancakeV3PoolOwnerActions",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 71084,
          "nodeType": "StructuredDocumentation",
          "src": "70:116:264",
          "text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          71113
        ],
        "name": "IPancakeV3PoolOwnerActions",
        "nameLocation": "196:26:264",
        "scope": 71114,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 264
}