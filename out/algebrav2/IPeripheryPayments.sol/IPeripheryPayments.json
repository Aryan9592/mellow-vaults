{
  "abi": [
    {
      "inputs": [],
      "name": "refundNativeToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "sweepToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "unwrapWNativeToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "refundNativeToken()": "41865270",
    "sweepToken(address,uint256,address)": "df2ab5bb",
    "unwrapWNativeToken(uint256,address)": "69bc35b2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundNativeToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWNativeToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Credit to Uniswap Labs under GPL-2.0-or-later license: https://github.com/Uniswap/v3-periphery\",\"kind\":\"dev\",\"methods\":{\"refundNativeToken()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWNativeToken(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WNativeToken from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WNativeToken to unwrap\",\"recipient\":\"The address receiving NativeToken\"}}},\"title\":\"Periphery Payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundNativeToken()\":{\"notice\":\"Refunds any NativeToken balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWNativeToken(uint256,address)\":{\"notice\":\"Unwraps the contract's WNativeToken balance and sends it to recipient as NativeToken.\"}},\"notice\":\"Functions to ease deposits and withdrawals of NativeToken\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/external/algebrav2/IPeripheryPayments.sol\":\"IPeripheryPayments\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/interfaces/external/algebrav2/IPeripheryPayments.sol\":{\"keccak256\":\"0x60df21c09ace29541e1a1cb11e77906be06af405bbe866d2cf83386c50b403e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://021ee34d95ca79a60a97c3f36a1d5a3029ed744278e050bc6b38b439b269f707\",\"dweb:/ipfs/Qmb8tgHV6WJQ6hnARAfb6Y7NXbpnEzaRJHrFmLJ62HFzRj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "refundNativeToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sweepToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "unwrapWNativeToken"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "refundNativeToken()": {
            "details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
          },
          "sweepToken(address,uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
            "params": {
              "amountMinimum": "The minimum amount of token required for a transfer",
              "recipient": "The destination address of the token",
              "token": "The contract address of the token which will be transferred to `recipient`"
            }
          },
          "unwrapWNativeToken(uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing WNativeToken from users.",
            "params": {
              "amountMinimum": "The minimum amount of WNativeToken to unwrap",
              "recipient": "The address receiving NativeToken"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "refundNativeToken()": {
            "notice": "Refunds any NativeToken balance held by this contract to the `msg.sender`"
          },
          "sweepToken(address,uint256,address)": {
            "notice": "Transfers the full amount of a token held by this contract to recipient"
          },
          "unwrapWNativeToken(uint256,address)": {
            "notice": "Unwraps the contract's WNativeToken balance and sends it to recipient as NativeToken."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/external/algebrav2/IPeripheryPayments.sol": "IPeripheryPayments"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/external/algebrav2/IPeripheryPayments.sol": {
        "keccak256": "0x60df21c09ace29541e1a1cb11e77906be06af405bbe866d2cf83386c50b403e5",
        "urls": [
          "bzz-raw://021ee34d95ca79a60a97c3f36a1d5a3029ed744278e050bc6b38b439b269f707",
          "dweb:/ipfs/Qmb8tgHV6WJQ6hnARAfb6Y7NXbpnEzaRJHrFmLJ62HFzRj"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/external/algebrav2/IPeripheryPayments.sol",
    "id": 54356,
    "exportedSymbols": {
      "IPeripheryPayments": [
        54355
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:1524:77",
    "nodes": [
      {
        "id": 54331,
        "nodeType": "PragmaDirective",
        "src": "45:23:77",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 54355,
        "nodeType": "ContractDefinition",
        "src": "278:1290:77",
        "nodes": [
          {
            "id": 54340,
            "nodeType": "FunctionDefinition",
            "src": "657:87:77",
            "nodes": [],
            "documentation": {
              "id": 54333,
              "nodeType": "StructuredDocumentation",
              "src": "313:339:77",
              "text": "@notice Unwraps the contract's WNativeToken balance and sends it to recipient as NativeToken.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WNativeToken from users.\n @param amountMinimum The minimum amount of WNativeToken to unwrap\n @param recipient The address receiving NativeToken"
            },
            "functionSelector": "69bc35b2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unwrapWNativeToken",
            "nameLocation": "666:18:77",
            "parameters": {
              "id": 54338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54335,
                  "mutability": "mutable",
                  "name": "amountMinimum",
                  "nameLocation": "693:13:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 54340,
                  "src": "685:21:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "685:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54337,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "716:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 54340,
                  "src": "708:17:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "684:42:77"
            },
            "returnParameters": {
              "id": 54339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "743:0:77"
            },
            "scope": 54355,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54344,
            "nodeType": "FunctionDefinition",
            "src": "988:46:77",
            "nodes": [],
            "documentation": {
              "id": 54341,
              "nodeType": "StructuredDocumentation",
              "src": "750:233:77",
              "text": "@notice Refunds any NativeToken balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
            },
            "functionSelector": "41865270",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refundNativeToken",
            "nameLocation": "997:17:77",
            "parameters": {
              "id": 54342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1014:2:77"
            },
            "returnParameters": {
              "id": 54343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1033:0:77"
            },
            "scope": 54355,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54354,
            "nodeType": "FunctionDefinition",
            "src": "1472:94:77",
            "nodes": [],
            "documentation": {
              "id": 54345,
              "nodeType": "StructuredDocumentation",
              "src": "1040:427:77",
              "text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
            },
            "functionSelector": "df2ab5bb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sweepToken",
            "nameLocation": "1481:10:77",
            "parameters": {
              "id": 54352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54347,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1500:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 54354,
                  "src": "1492:13:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1492:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54349,
                  "mutability": "mutable",
                  "name": "amountMinimum",
                  "nameLocation": "1515:13:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 54354,
                  "src": "1507:21:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54351,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1538:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 54354,
                  "src": "1530:17:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1530:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1491:57:77"
            },
            "returnParameters": {
              "id": 54353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1565:0:77"
            },
            "scope": 54355,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IPeripheryPayments",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 54332,
          "nodeType": "StructuredDocumentation",
          "src": "70:208:77",
          "text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of NativeToken\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-periphery"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          54355
        ],
        "name": "IPeripheryPayments",
        "nameLocation": "288:18:77",
        "scope": 54356,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 77
}