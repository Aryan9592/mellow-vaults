{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "internalParams_",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "CommitedInternalParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "vaultTokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "vaultAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vaultNft",
          "type": "uint256"
        }
      ],
      "name": "DeployedVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetInIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetOutIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct IVault.BatchSwapStep[]",
                  "name": "swaps",
                  "type": "tuple[]"
                },
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "fromInternalBalance",
                      "type": "bool"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "toInternalBalance",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IVault.FundManagement",
                  "name": "funds",
                  "type": "tuple"
                },
                {
                  "internalType": "contract IAggregatorV3",
                  "name": "rewardOracle",
                  "type": "address"
                },
                {
                  "internalType": "contract IAggregatorV3",
                  "name": "underlyingOracle",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippageD",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IAuraVaultGovernance.SwapParams[]",
              "name": "tokensSwapParams",
              "type": "tuple[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IAuraVaultGovernance.StrategyParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "SetStrategyParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "params",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        }
      ],
      "name": "StagedInternalParams",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "commitInternalParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractNameBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersionBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pool_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "balancerVault_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "stakingLiquidityGauge_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "balancerMinter_",
          "type": "address"
        }
      ],
      "name": "createVault",
      "outputs": [
        {
          "internalType": "contract IAuraVault",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delayedProtocolParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedProtocolPerVaultParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedStrategyParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "internalParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "internalParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetInIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetOutIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct IVault.BatchSwapStep[]",
                  "name": "swaps",
                  "type": "tuple[]"
                },
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "fromInternalBalance",
                      "type": "bool"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "toInternalBalance",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IVault.FundManagement",
                  "name": "funds",
                  "type": "tuple"
                },
                {
                  "internalType": "contract IAggregatorV3",
                  "name": "rewardOracle",
                  "type": "address"
                },
                {
                  "internalType": "contract IAggregatorV3",
                  "name": "underlyingOracle",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippageD",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IAuraVaultGovernance.SwapParams[]",
              "name": "tokensSwapParams",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IAuraVaultGovernance.StrategyParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "setStrategyParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "newParams",
          "type": "tuple"
        }
      ],
      "name": "stageInternalParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stagedInternalParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "strategyParams",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetInIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetOutIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct IVault.BatchSwapStep[]",
                  "name": "swaps",
                  "type": "tuple[]"
                },
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "fromInternalBalance",
                      "type": "bool"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "toInternalBalance",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct IVault.FundManagement",
                  "name": "funds",
                  "type": "tuple"
                },
                {
                  "internalType": "contract IAggregatorV3",
                  "name": "rewardOracle",
                  "type": "address"
                },
                {
                  "internalType": "contract IAggregatorV3",
                  "name": "underlyingOracle",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippageD",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IAuraVaultGovernance.SwapParams[]",
              "name": "tokensSwapParams",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IAuraVaultGovernance.StrategyParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "344:3250:449:-:0;;;529:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1762:34:477;;1813:30;;;;;;;;;;;;-1:-1:-1;;;1813:30:477;;;;596:15:449;;-1:-1:-1;;;;;1754:57:477;1746:98;;;;-1:-1:-1;;;1746:98:477;;;;;;;;:::i;:::-;;;;;;;;;;1907:1;-1:-1:-1;;;;;1862:47:477;1870:15;:24;;;-1:-1:-1;;;;;1862:47:477;;;1911:30;;;;;;;;;;;;;-1:-1:-1;;;1911:30:477;;;1854:88;;;;;-1:-1:-1;;;1854:88:477;;;;;;;;:::i;:::-;-1:-1:-1;1968:25:477;;;;;2010:30;;;;;;;;;;;-1:-1:-1;;;2010:30:477;;;;-1:-1:-1;;;;;1960:48:477;1952:89;;;;-1:-1:-1;;;1952:89:477;;;;;;;;:::i;:::-;-1:-1:-1;2051:33:477;;:15;:33;;-1:-1:-1;;;;;;2051:33:477;;;-1:-1:-1;;;;;2051:33:477;;;;;;;;;;;-1:-1:-1;2051:33:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;344:3250:449;;14:152:488;-1:-1:-1;;;;;110:31:488;;100:42;;90:70;;156:1;153;146:12;90:70;14:152;:::o;171:941::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;376:2;370:9;418:2;406:15;;-1:-1:-1;;;;;436:34:488;;472:22;;;433:62;430:185;;;537:10;532:3;528:20;525:1;518:31;572:4;569:1;562:15;600:4;597:1;590:15;430:185;631:2;624:22;668:16;;693:52;668:16;693:52;:::i;:::-;754:21;;820:2;805:18;;799:25;833:54;799:25;833:54;:::i;:::-;915:2;903:15;;896:32;973:2;958:18;;952:25;986:54;952:25;986:54;:::i;:::-;1068:2;1056:15;;1049:32;1060:6;171:941;-1:-1:-1;;;171:941:488:o;1117:597::-;1229:4;1258:2;1287;1276:9;1269:21;1319:6;1313:13;1362:6;1357:2;1346:9;1342:18;1335:34;1387:1;1397:140;1411:6;1408:1;1405:13;1397:140;;;1506:14;;;1502:23;;1496:30;1472:17;;;1491:2;1468:26;1461:66;1426:10;;1397:140;;;1555:6;1552:1;1549:13;1546:91;;;1625:1;1620:2;1611:6;1600:9;1596:22;1592:31;1585:42;1546:91;-1:-1:-1;1698:2:488;1677:15;-1:-1:-1;;1673:29:488;1658:45;;;;1705:2;1654:54;;1117:597;-1:-1:-1;;;1117:597:488:o;:::-;344:3250:449;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806375d0c0dc11610097578063c6b22e0b11610066578063c6b22e0b146102ae578063c6be9b22146102c1578063d4a07d34146102f3578063e4af6e79146102fb57600080fd5b806375d0c0dc146101de5780637ac46fbb146101f357806386c6be3e14610253578063a0a8e460146102a657600080fd5b806312466b68116100d357806312466b68146101765780631c7f4c7314610196578063511ce7981461019e5780636707acee146101be57600080fd5b806301ffc9a71461010557806306a462391461012d57806309946538146101455780630e3e80ac1461015a575b600080fd5b6101186101133660046110d9565b610303565b60405190151581526020015b60405180910390f35b640312e302e360dc1b5b604051908152602001610124565b6101586101533660046111f3565b610334565b005b72417572615661756c74476f7665726e616e636560681b610137565b610189610184366004611264565b610526565b604051610124919061131d565b600654610137565b6101376101ac366004611264565b6000908152600c602052604090205490565b6101376101cc366004611264565b60009081526009602052604090205490565b6101e661068f565b6040516101249190611494565b610246604080516060810182526000808252602082018190529181019190915250604080516060810182526000546001600160a01b03908116825260015481166020830152600254169181019190915290565b60405161012491906114a7565b610246604080516060810182526000808252602082018190529181019190915250604080516060810182526003546001600160a01b03908116825260045481166020830152600554169181019190915290565b6101e66106b0565b6101586102bc3660046114d7565b6106c3565b6102d46102cf366004611557565b610822565b604080516001600160a01b039093168352602083019190915201610124565b61015861092e565b600f54610137565b600061030e82610a58565b80610329575063124ade4160e01b6001600160e01b03198316145b92915050565b905090565b61033c610a8e565b805160408051808201909152600281526120ad60f11b6020820152906001600160a01b03166103875760405162461bcd60e51b815260040161037e9190611494565b60405180910390fd5b5060006001600160a01b031681602001516001600160a01b031614156040518060400160405280600281526020016120ad60f11b815250906103dc5760405162461bcd60e51b815260040161037e9190611494565b506040808201518151808301909252600282526120ad60f11b60208301526001600160a01b03166104205760405162461bcd60e51b815260040161037e9190611494565b508051600380546001600160a01b03199081166001600160a01b03938416179091556020808401516004805484169185169190911781556040808601516005805490951690861617909355600054835163bba3293960e01b8152935194169363bba3293993808301939290829003018186803b15801561049f57600080fd5b505afa1580156104b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d79190611648565b6104e19042611677565b6006819055604051339132917f0887cab3184f7c02b16978ab31f8acee05979f59fc3da6abe5bf71105ec3179d9161051b9186919061168f565b60405180910390a350565b6040805160208101909152606081526000828152601060205260409020805461054e906116cc565b151590506105e55760408051600060208201818152828401909352909182916105dc565b6105c96040805160c081018252606080825260208083018290528351608081018552600080825291810182905280850182905291820152909182019081526000602082018190526040820181905260609091015290565b8152602001906001900390816105725790505b50905292915050565b600082815260106020526040902080546105fe906116cc565b80601f016020809104026020016040519081016040528092919081815260200182805461062a906116cc565b80156106775780601f1061064c57610100808354040283529160200191610677565b820191906000526020600020905b81548152906001019060200180831161065a57829003601f168201915b50505050508060200190518101906103299190611945565b606061032f72417572615661756c74476f7665726e616e636560681b610b46565b606061032f640312e302e360dc1b610b46565b60005b6106d08280611ab9565b90508110156107a85760006106e58380611ab9565b838181106106f5576106f5611b09565b90506020028101906107079190611b1f565b61071090611d29565b8051519091501580159061072957506001816020015151115b8015610741575060608101516001600160a01b031615155b8015610759575060808101516001600160a01b031615155b6040518060400160405280600381526020016224a72b60e91b815250906107935760405162461bcd60e51b815260040161037e9190611494565b505080806107a090611dd5565b9150506106c6565b506107d282826040516020016107be9190611efe565b604051602081830303815290604052610bb2565b81336001600160a01b0316326001600160a01b03167f94f3d827462ad5de97309cf1011d0c937d5371d872911d4860a45a0a433d60de846040516108169190611efe565b60405180910390a45050565b600080600061083088610bdf565b6040516369e99c5760e11b815291945092508391506001600160a01b0382169063d3d338ae9061086e9085908d908c908c908c908c906004016120e0565b600060405180830381600087803b15801561088857600080fd5b505af115801561089c573d6000803e3d6000fd5b5050604080516001600160a01b038b811660208301528a811692820192909252888216606082015290871660808201523392503291507f8a4513c05d15df8ece912856923273e166e39f5c9c2b43d2b38594023494a0e0908c9060a00160408051601f198184030181529082905261091a92918e9088908a9061212c565b60405180910390a350965096945050505050565b610936610a8e565b6006546040805180820190915260048152631395531360e21b6020820152906109725760405162461bcd60e51b815260040161037e9190611494565b5060065442101560405180604001604052806002815260200161545360f01b815250906109b25760405162461bcd60e51b815260040161037e9190611494565b5060038054600080546001600160a01b038084166001600160a01b03199283168117845560048054600180548286169087168117909155600580546002805497821697891688179055600698909855978616909855841690559290911690925560408051918252602082019390935291820152339032907fef3e4bc9725fa684957d7de03c6dcd01078ee86cf78ceef25c5f8346df69cc999060600160405180910390a3565b60006301ffc9a760e01b6001600160e01b03198316148061032957506001600160e01b0319821663effda0f560e01b1492915050565b600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610ad157600080fd5b505afa158015610ae5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b099190612176565b6040518060400160405280600381526020016223292160e91b81525090610b435760405162461bcd60e51b815260040161037e9190611494565b50565b604080516020808252818301909252606091602082018180368337019050509050602060005b6020811015610ba457838160208110610b8757610b87611b09565b1a610b9457809150610ba4565b610b9d81611dd5565b9050610b6c565b508152602081019190915290565b610bbb82610dd0565b60008281526010602090815260409091208251610bda92840190611040565b505050565b600080546040516363e85d2d60e01b81523360048201526001602482015282916001600160a01b03169081906363e85d2d9060440160206040518083038186803b158015610c2c57600080fd5b505afa158015610c40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c649190612176565b6040518060400160405280600381526020016223292160e91b81525090610c9e5760405162461bcd60e51b815260040161037e9190611494565b5060015460408051631112eee760e31b815290516001600160a01b039092169182916388977738916004808301926020929190829003018186803b158015610ce557600080fd5b505afa158015610cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1d9190611648565b610d28906001611677565b600254909350610d41906001600160a01b031684610fa3565b6040516305c4fdf960e01b81526001600160a01b0380831660048301528781166024830152919550908216906305c4fdf990604401602060405180830381600087803b158015610d9057600080fd5b505af1158015610da4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc89190611648565b505050915091565b600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610e1357600080fd5b505afa158015610e27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4b9190612176565b80610ed8575060015460405163020604bf60e21b81526004810183905233916001600160a01b03169063081812fc9060240160206040518083038186803b158015610e9557600080fd5b505afa158015610ea9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecd9190612193565b6001600160a01b0316145b80610f6557506001546040516331a9108f60e11b81526004810183905233916001600160a01b031690636352211e9060240160206040518083038186803b158015610f2257600080fd5b505afa158015610f36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5a9190612193565b6001600160a01b0316145b6040518060400160405280600381526020016223292160e91b81525090610f9f5760405162461bcd60e51b815260040161037e9190611494565b5050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166103295760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c6564000000000000000000604482015260640161037e565b82805461104c906116cc565b90600052602060002090601f01602090048101928261106e57600085556110b4565b82601f1061108757805160ff19168380011785556110b4565b828001600101855582156110b4579182015b828111156110b4578251825591602001919060010190611099565b506110c09291506110c4565b5090565b5b808211156110c057600081556001016110c5565b6000602082840312156110eb57600080fd5b81356001600160e01b03198116811461110357600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156111425761114261110a565b60405290565b604051608081016001600160401b03811182821017156111425761114261110a565b604051602081016001600160401b03811182821017156111425761114261110a565b60405160c081016001600160401b03811182821017156111425761114261110a565b604051601f8201601f191681016001600160401b03811182821017156111d6576111d661110a565b604052919050565b6001600160a01b0381168114610b4357600080fd5b60006060828403121561120557600080fd5b604051606081018181106001600160401b03821117156112275761122761110a565b6040528235611235816111de565b81526020830135611245816111de565b60208201526040830135611258816111de565b60408201529392505050565b60006020828403121561127657600080fd5b5035919050565b60005b83811015611298578181015183820152602001611280565b838111156112a7576000848401525b50505050565b600081518084526112c581602086016020860161127d565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156113125781516001600160a01b0316875295820195908201906001016112ed565b509495945050505050565b60006020808352604080840185518384870152818151808452606093508388019150838160051b890101868401935060005b8281101561148657898203605f1901845284518051610120808552815190850181905261014080860192600583901b870190910191908c019060005b818110156113e95787840361013f190185528251805185528e8101518f8601528d8101518e8601528c8101518d86015260809081015160a0918601829052906113d6908601826112ad565b958f0195945050918d019160010161138b565b5050508a83015191508481038b86015261140381836112d9565b915050888201516114468a86018280516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b50878201516001600160a01b0390811660c086015260808301511660e085015260a09091015161010090930192909252938701939287019260010161134f565b509998505050505050505050565b60208152600061110360208301846112ad565b60608101610329828480516001600160a01b03908116835260208083015182169084015260409182015116910152565b600080604083850312156114ea57600080fd5b8235915060208301356001600160401b0381111561150757600080fd5b83016020818603121561151957600080fd5b809150509250929050565b60006001600160401b0382111561153d5761153d61110a565b5060051b60200190565b8035611552816111de565b919050565b60008060008060008060c0878903121561157057600080fd5b86356001600160401b0381111561158657600080fd5b8701601f8101891361159757600080fd5b803560206115ac6115a783611524565b6111ae565b82815260059290921b8301810191818101908c8411156115cb57600080fd5b938201935b838510156115f25784356115e3816111de565b825293820193908201906115d0565b995061160190508a8201611547565b975050505061161260408801611547565b935061162060608801611547565b925061162e60808801611547565b915061163c60a08801611547565b90509295509295509295565b60006020828403121561165a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561168a5761168a611661565b500190565b608081016116bf828580516001600160a01b03908116835260208083015182169084015260409182015116910152565b8260608301529392505050565b600181811c908216806116e057607f821691505b6020821081141561170157634e487b7160e01b600052602260045260246000fd5b50919050565b60006001600160401b038211156117205761172061110a565b50601f01601f191660200190565b600082601f83011261173f57600080fd5b8151602061174f6115a783611524565b82815260059290921b8401810191818101908684111561176e57600080fd5b8286015b848110156118555780516001600160401b03808211156117925760008081fd5b9088019060a0828b03601f19018113156117ac5760008081fd5b6117b4611120565b838801518152604080850151828a015260608086015182840152608080870151828501529386015193858511156117ed57600091508182fd5b84870196508e603f88011261180457600095508586fd5b8a87015195506118166115a787611707565b94508585528e8387890101111561182f57600091508182fd5b61183e868c8701858a0161127d565b830193909352508652505050918301918301611772565b509695505050505050565b600082601f83011261187157600080fd5b815160206118816115a783611524565b82815260059290921b840181019181810190868411156118a057600080fd5b8286015b848110156118555780516118b7816111de565b83529183019183016118a4565b8015158114610b4357600080fd5b6000608082840312156118e457600080fd5b6118ec611148565b905081516118f9816111de565b81526020820151611909816118c4565b6020820152604082015161191c816111de565b6040820152606082015161192f816118c4565b606082015292915050565b8051611552816111de565b6000602080838503121561195857600080fd5b82516001600160401b038082111561196f57600080fd5b818501915082828703121561198357600080fd5b61198b61116a565b82518281111561199a57600080fd5b80840193505086601f8401126119af57600080fd5b82516119bd6115a782611524565b81815260059190911b840185019085810190898311156119dc57600080fd5b8686015b83811015611aa9578051868111156119f757600080fd5b8701610120818d03601f1901811315611a0f57600080fd5b611a1761118c565b8a83015189811115611a2857600080fd5b611a368f8d8387010161172e565b825250604083015189811115611a4c5760008081fd5b611a5a8f8d83870101611860565b8c830152506060611a6d8f8286016118d2565b6040830152611a7e60e0850161193a565b90820152611a8f610100840161193a565b608082015291015160a082015283529187019187016119e0565b5083525090979650505050505050565b6000808335601e19843603018112611ad057600080fd5b8301803591506001600160401b03821115611aea57600080fd5b6020019150600581901b3603821315611b0257600080fd5b9250929050565b634e487b7160e01b600052603260045260246000fd5b6000823561011e19833603018112611b3657600080fd5b9190910192915050565b600082601f830112611b5157600080fd5b81356020611b616115a783611524565b82815260059290921b84018101918181019086841115611b8057600080fd5b8286015b848110156118555780356001600160401b0380821115611ba45760008081fd5b9088019060a0828b03601f1901811315611bbe5760008081fd5b611bc6611120565b838801358152604080850135828a01526060808601358284015260808087013582850152938601359385851115611bff57600091508182fd5b84870196508e603f880112611c1657600095508586fd5b8a8701359550611c286115a787611707565b94508585528e83878901011115611c4157600091508182fd5b858388018c87013760009585018b0195909552505091820152845250918301918301611b84565b600082601f830112611c7957600080fd5b81356020611c896115a783611524565b82815260059290921b84018101918181019086841115611ca857600080fd5b8286015b84811015611855578035611cbf816111de565b8352918301918301611cac565b600060808284031215611cde57600080fd5b611ce6611148565b90508135611cf3816111de565b81526020820135611d03816118c4565b60208201526040820135611d16816111de565b6040820152606082013561192f816118c4565b60006101208236031215611d3c57600080fd5b611d4461118c565b82356001600160401b0380821115611d5b57600080fd5b611d6736838701611b40565b83526020850135915080821115611d7d57600080fd5b50611d8a36828601611c68565b602083015250611d9d3660408501611ccc565b6040820152611dae60c08401611547565b6060820152611dbf60e08401611547565b6080820152610100929092013560a08301525090565b6000600019821415611de957611de9611661565b5060010190565b6000808335601e19843603018112611e0757600080fd5b83016020810192503590506001600160401b03811115611e2657600080fd5b8060051b3603831315611b0257600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8183526000602080850194508260005b85811015611312578135611e84816111de565b6001600160a01b031687529582019590820190600101611e71565b8035611eaa816111de565b6001600160a01b039081168352602082013590611ec6826118c4565b9015156020840152604082013590611edd826111de565b1660408301526060810135611ef1816118c4565b8015156060840152505050565b602081526000611f0e8384611df0565b6020808501526040840181815260608501905060608260051b8601018360005b848110156120d357878303605f190184523686900361011e1901823512611f5457600080fd5b85823501611f628182611df0565b61012086526101208601818152610140870190506101408260051b8801018360005b848110156120455789830361013f1901845236869003609e1901823512611faa57600080fd5b85823501803584526020810135602085015260408101356040850152606081013560608501526080810135601e19823603018112611fe757600080fd5b6001600160401b03828201351115611ffe57600080fd5b81810135360382131561201057600080fd5b60a0608086015261202d60a0860183830135602085850101611e38565b60209687019690955093909301925050600101611f84565b50506120546020860186611df0565b94509250878103602089015261206b818585611e61565b93505050506120806040860160408401611e9f565b61208c60c08301611547565b6001600160a01b031660c08601526120a660e08301611547565b6001600160a01b031660e08601526101009182013591909401526020938401939190910190600101611f2e565b5090979650505050505050565b86815260c0602082015260006120f960c08301886112d9565b6001600160a01b039687166040840152948616606083015250918416608083015290921660a09092019190915292915050565b60a08152600061213f60a08301886112d9565b828103602084015261215181886112ad565b6001600160a01b03968716604085015294909516606083015250608001529392505050565b60006020828403121561218857600080fd5b8151611103816118c4565b6000602082840312156121a557600080fd5b8151611103816111de56fea2646970667358221220d0024916fd091132cff4e3db25ea78f96dc7d0dc2a70e82342f8e899cd4f429e64736f6c63430008090033",
    "sourceMap": "344:3250:449:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1052:208;;;;;;:::i;:::-;;:::i;:::-;;;470:14:488;;463:22;445:41;;433:2;418:18;1052:208:449;;;;;;;;592:106:410;-1:-1:-1;;;592:106:410;;;643:25:488;;;631:2;616:18;592:106:410;497:177:488;3528:643:477;;;;;;:::i;:::-;;:::i;:::-;;355:100:410;-1:-1:-1;;;355:100:410;592:106;727:291:449;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2763:115:477:-;2847:24;;2763:115;;2387:161;;;;;;:::i;:::-;2471:7;2497:44;;;:39;:44;;;;;;;2387:161;2199:145;;;;;;:::i;:::-;2275:7;2301:36;;;:31;:36;;;;;;;2199:145;230:119:410;;;:::i;:::-;;;;;;;:::i;2921:111:477:-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;3003:22:477;;;;;;;;3010:15;3003:22;-1:-1:-1;;;;;3003:22:477;;;;;;;;;;;;;;;;;;;;;;;;2921:111;;;;;;;;:::i;3075:123::-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;3163:28:477;;;;;;;;3170:21;3163:28;-1:-1:-1;;;;;3163:28:477;;;;;;;;;;;;;;;;;;;;;;;;3075:123;461:125:410;;;:::i;1376:671:449:-;;;;;;:::i;:::-;;:::i;2094:742::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;10927:32:488;;;10909:51;;10991:2;10976:18;;10969:34;;;;10882:18;2094:742:449;10715:294:488;4214:449:477;;;:::i;2591:129::-;2682:31;;2591:129;;1052:208:449;1137:4;1160:36;1184:11;1160:23;:36::i;:::-;:93;;;-1:-1:-1;;;;;;;;;;1200:53:449;;;1160:93;1153:100;1052:208;-1:-1:-1;;1052:208:449:o;673:18:410:-;666:25;;592:106;:::o;3528:643:477:-;3609:23;:21;:23::i;:::-;3658:28;;3703:30;;;;;;;;;;;;-1:-1:-1;;;3703:30:477;;;;;-1:-1:-1;;;;;3650:51:477;3642:92;;;;-1:-1:-1;;;3642:92:477;;;;;;;;:::i;:::-;;;;;;;;;;3791:1;-1:-1:-1;;;;;3752:41:477;3760:9;:18;;;-1:-1:-1;;;;;3752:41:477;;;3795:30;;;;;;;;;;;;;-1:-1:-1;;;3795:30:477;;;3744:82;;;;;-1:-1:-1;;;3744:82:477;;;;;;;;:::i;:::-;-1:-1:-1;3852:19:477;;;;;3888:30;;;;;;;;;;;-1:-1:-1;;;3888:30:477;;;;-1:-1:-1;;;;;3844:42:477;3836:83;;;;-1:-1:-1;;;3836:83:477;;;;;;;;:::i;:::-;-1:-1:-1;3929:33:477;;:21;:33;;-1:-1:-1;;;;;;3929:33:477;;;-1:-1:-1;;;;;3929:33:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4017:34:477;:52;;-1:-1:-1;;;4017:52:477;;;;:34;;;:50;;:52;;;;3929:33;4017:52;;;;;;:34;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3999:70;;:15;:70;:::i;:::-;3972:24;:97;;;4084:80;;4116:10;;4105:9;;4084:80;;;;4128:9;;3972:97;4084:80;:::i;:::-;;;;;;;;3528:643;:::o;727:291:449:-;-1:-1:-1;;;;;;;;;;;;824:20:449;;;;:15;:20;;;;;:27;;;;;:::i;:::-;:32;820:125;;-1:-1:-1;820:125:449;;879:55;;;-1:-1:-1;879:55:449;;;913:19;;;;;;;;;879:55;;;;913:19;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;913:19:449;;;;;;;;;;;;;;;;-1:-1:-1;879:55:449;;872:62;727:291;-1:-1:-1;;727:291:449:o;820:125::-;972:20;;;;:15;:20;;;;;961:50;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;230:119:410:-;277:13;309:33;-1:-1:-1;;;309:16:410;:33::i;461:125::-;511:13;543:36;-1:-1:-1;;;309:16:410;:33::i;1376:671:449:-;1472:9;1467:453;1491:23;:6;;:23;:::i;:::-;:30;;1487:1;:34;1467:453;;;1542:25;1570:23;:6;;:23;:::i;:::-;1594:1;1570:26;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;1542:54;;;:::i;:::-;1635:13;;:20;1542:54;;-1:-1:-1;1635:24:449;;;;:73;;;1707:1;1683:7;:14;;;:21;:25;1635:73;:140;;;;-1:-1:-1;1740:20:449;;;;-1:-1:-1;;;;;1732:43:449;;;1635:140;:211;;;;-1:-1:-1;1807:24:449;;;;-1:-1:-1;;;;;1799:47:449;;;1635:211;1864:31;;;;;;;;;;;;;-1:-1:-1;;;1864:31:449;;;1610:299;;;;;-1:-1:-1;;;1610:299:449;;;;;;;;:::i;:::-;;1528:392;1523:3;;;;;:::i;:::-;;;;1467:453;;;;1929:43;1948:3;1964:6;1953:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;1929;:43::i;:::-;2028:3;2016:10;-1:-1:-1;;;;;1987:53:449;2005:9;-1:-1:-1;;;;;1987:53:449;;2033:6;1987:53;;;;;;:::i;:::-;;;;;;;;1376:671;;:::o;2094:742::-;2330:16;2348:11;2371:13;2409:20;2422:6;2409:12;:20::i;:::-;2475:99;;-1:-1:-1;;;2475:99:449;;2394:35;;-1:-1:-1;2394:35:449;-1:-1:-1;2394:35:449;;-1:-1:-1;;;;;;2475:16:449;;;;;:99;;2394:35;;2497:12;;2511:5;;2518:14;;2534:22;;2558:15;;2475:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2689:74:449;;;-1:-1:-1;;;;;31350:15:488;;;2689:74:449;;;31332:34:488;31402:15;;;31382:18;;;31375:43;;;;31454:15;;;31434:18;;;31427:43;31506:15;;;31486:18;;;31479:43;2639:10:449;;-1:-1:-1;2616:9:449;;-1:-1:-1;2589:240:449;;2663:12;;31266:19:488;;2689:74:449;;;-1:-1:-1;;2689:74:449;;;;;;;;;;2589:240;;;2777:6;;2797:5;;2816:3;;2589:240;:::i;:::-;;;;;;;;2361:475;2094:742;;;;;;;;;:::o;4214:449:477:-;4265:23;:21;:23::i;:::-;4306:24;;4337:22;;;;;;;;;;;;-1:-1:-1;;;4337:22:477;;;;;4298:62;;;;-1:-1:-1;;;4298:62:477;;;;;;;;:::i;:::-;;4397:24;;4378:15;:43;;4423:27;;;;;;;;;;;;;-1:-1:-1;;;4423:27:477;;;4370:81;;;;;-1:-1:-1;;;4370:81:477;;;;;;;;:::i;:::-;-1:-1:-1;4479:21:477;4461:39;;:15;:39;;-1:-1:-1;;;;;4461:39:477;;;-1:-1:-1;;;;;;4461:39:477;;;;;;;;;;-1:-1:-1;4461:39:477;;;;;;;;;;;;;;;;-1:-1:-1;4461:39:477;;;;;;;;;;;;4517:24;4510:31;;;;4551:28;;;;;;;;;;;;;;;;;4594:62;;;32486:41:488;;;32558:4;32543:20;;32536:63;;;;32615:20;;;32608:63;4628:10:477;;4617:9;;4594:62;;32436:2:488;32421:18;4594:62:477;;;;;;;4214:449::o;3204:212::-;3297:4;-1:-1:-1;;;;;;;;;937:40:49;;;3320:89:477;;;-1:-1:-1;;;;;;;3360:49:477;;-1:-1:-1;;;3360:49:477;3313:96;3204:212;-1:-1:-1;;3204:212:477:o;5093:156::-;5158:15;:34;:54;;-1:-1:-1;;;5158:54:477;;5201:10;5158:54;;;32828:51:488;-1:-1:-1;;;;;5158:34:477;;;;:42;;32801:18:488;;5158:54:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5214:27;;;;;;;;;;;;;-1:-1:-1;;;5214:27:477;;;5150:92;;;;;-1:-1:-1;;;5150:92:477;;;;;;;;:::i;:::-;;5093:156::o;914:381:410:-;1005:14;;;1016:2;1005:14;;;;;;;;;974:15;;1005:14;;;;;;;;;;-1:-1:-1;;1001:18:410;-1:-1:-1;1043:2:410;1029:11;1055:142;1079:2;1075:1;:6;1055:142;;;1112:1;1114;1112:4;;;;;;;:::i;:::-;;1102:85;;1148:1;1142:7;;1167:5;;1102:85;1083:3;;;:::i;:::-;;;1055:142;;;-1:-1:-1;1229:14:410;;1270:4;1263:12;;1256:23;;;;1236:1;914:381::o;9725:155:477:-;9806:28;9830:3;9806:23;:28::i;:::-;9844:20;;;;:15;:20;;;;;;;;:29;;;;;;;;:::i;:::-;;9725:155;;:::o;5578:622::-;5633:13;5732:34;;5798:79;;-1:-1:-1;;;5798:79:477;;5831:10;5798:79;;;33310:51:488;5732:34:477;33377:18:488;;;33370:45;5633:13:477;;-1:-1:-1;;;;;5732:34:477;;;;5798:32;;33283:18:488;;5798:79:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5891:27;;;;;;;;;;;;;-1:-1:-1;;;5891:27:477;;;5777:151;;;;;-1:-1:-1;;;5777:151:477;;;;;;;;:::i;:::-;-1:-1:-1;5969:24:477;;6009:27;;;-1:-1:-1;;;6009:27:477;;;;-1:-1:-1;;;;;5969:24:477;;;;;;6009:25;;:27;;;;;;;;;;;;;;5969:24;6009:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;;6039:1;6009:31;:::i;:::-;6092:25;;6003:37;;-1:-1:-1;6058:75:477;;-1:-1:-1;;;;;6092:25:477;6003:37;6058:25;:75::i;:::-;6143:50;;-1:-1:-1;;;6143:50:477;;-1:-1:-1;;;;;33656:15:488;;;6143:50:477;;;33638:34:488;33708:15;;;33688:18;;;33681:43;6050:83:477;;-1:-1:-1;6143:27:477;;;;;;33573:18:488;;6143:50:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5661:539;;5578:622;;;:::o;4734:353::-;4826:15;:34;:54;;-1:-1:-1;;;4826:54:477;;4869:10;4826:54;;;32828:51:488;-1:-1:-1;;;;;4826:34:477;;;;:42;;32801:18:488;;4826:54:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:129;;;-1:-1:-1;4900:24:477;;:41;;-1:-1:-1;;;4900:41:477;;;;;643:25:488;;;4945:10:477;;-1:-1:-1;;;;;4900:24:477;;:36;;616:18:488;;4900:41:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4900:55:477;;4826:129;:202;;;-1:-1:-1;4976:24:477;;:37;;-1:-1:-1;;;4976:37:477;;;;;643:25:488;;;5017:10:477;;-1:-1:-1;;;;;4976:24:477;;:32;;616:18:488;;4976:37:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4976:51:477;;4826:202;5043:27;;;;;;;;;;;;;-1:-1:-1;;;5043:27:477;;;4804:276;;;;;-1:-1:-1;;;4804:276:477;;;;;;;;:::i;:::-;;4734:353;:::o;2107:794:25:-;2191:16;2523:48;2505:14;2499:4;2495:25;2489:4;2485:36;2482:90;2476:4;2469:104;2730:32;2713:14;2707:4;2703:25;2700:63;2694:4;2687:77;2812:4;2806;2800;2797:1;2789:28;2777:40;-1:-1:-1;;;;;;2844:22:25;;2836:58;;;;-1:-1:-1;;;2836:58:25;;34214:2:488;2836:58:25;;;34196:21:488;34253:2;34233:18;;;34226:30;34292:25;34272:18;;;34265:53;34335:18;;2836:58:25;34012:347:488;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:286:488;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:488;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:488:o;679:127::-;740:10;735:3;731:20;728:1;721:31;771:4;768:1;761:15;795:4;792:1;785:15;811:253;883:2;877:9;925:4;913:17;;-1:-1:-1;;;;;945:34:488;;981:22;;;942:62;939:88;;;1007:18;;:::i;:::-;1043:2;1036:22;811:253;:::o;1069:::-;1141:2;1135:9;1183:4;1171:17;;-1:-1:-1;;;;;1203:34:488;;1239:22;;;1200:62;1197:88;;;1265:18;;:::i;1327:251::-;1399:2;1393:9;1441:2;1429:15;;-1:-1:-1;;;;;1459:34:488;;1495:22;;;1456:62;1453:88;;;1521:18;;:::i;1583:253::-;1655:2;1649:9;1697:4;1685:17;;-1:-1:-1;;;;;1717:34:488;;1753:22;;;1714:62;1711:88;;;1779:18;;:::i;1841:275::-;1912:2;1906:9;1977:2;1958:13;;-1:-1:-1;;1954:27:488;1942:40;;-1:-1:-1;;;;;1997:34:488;;2033:22;;;1994:62;1991:88;;;2059:18;;:::i;:::-;2095:2;2088:22;1841:275;;-1:-1:-1;1841:275:488:o;2121:152::-;-1:-1:-1;;;;;2217:31:488;;2207:42;;2197:70;;2263:1;2260;2253:12;2278:854;2370:6;2423:2;2411:9;2402:7;2398:23;2394:32;2391:52;;;2439:1;2436;2429:12;2391:52;2472:2;2466:9;2514:2;2506:6;2502:15;2583:6;2571:10;2568:22;-1:-1:-1;;;;;2535:10:488;2532:34;2529:62;2526:88;;;2594:18;;:::i;:::-;2630:2;2623:22;2667:23;;2699:52;2667:23;2699:52;:::i;:::-;2760:21;;2833:2;2818:18;;2805:32;2846:54;2805:32;2846:54;:::i;:::-;2928:2;2916:15;;2909:32;2993:2;2978:18;;2965:32;3006:54;2965:32;3006:54;:::i;:::-;3088:2;3076:15;;3069:32;3080:6;2278:854;-1:-1:-1;;;2278:854:488:o;3137:180::-;3196:6;3249:2;3237:9;3228:7;3224:23;3220:32;3217:52;;;3265:1;3262;3255:12;3217:52;-1:-1:-1;3288:23:488;;3137:180;-1:-1:-1;3137:180:488:o;3322:258::-;3394:1;3404:113;3418:6;3415:1;3412:13;3404:113;;;3494:11;;;3488:18;3475:11;;;3468:39;3440:2;3433:10;3404:113;;;3535:6;3532:1;3529:13;3526:48;;;3570:1;3561:6;3556:3;3552:16;3545:27;3526:48;;3322:258;;;:::o;3585:257::-;3626:3;3664:5;3658:12;3691:6;3686:3;3679:19;3707:63;3763:6;3756:4;3751:3;3747:14;3740:4;3733:5;3729:16;3707:63;:::i;:::-;3824:2;3803:15;-1:-1:-1;;3799:29:488;3790:39;;;;3831:4;3786:50;;3585:257;-1:-1:-1;;3585:257:488:o;3964:469::-;4025:3;4063:5;4057:12;4090:6;4085:3;4078:19;4116:4;4145:2;4140:3;4136:12;4129:19;;4182:2;4175:5;4171:14;4203:1;4213:195;4227:6;4224:1;4221:13;4213:195;;;4292:13;;-1:-1:-1;;;;;4288:39:488;4276:52;;4348:12;;;;4383:15;;;;4324:1;4242:9;4213:195;;;-1:-1:-1;4424:3:488;;3964:469;-1:-1:-1;;;;;3964:469:488:o;4798:2769::-;4956:4;4985:2;5014;5003:9;4996:21;5036:2;5076;5065:9;5061:18;5114:6;5108:13;5157:2;5152;5141:9;5137:18;5130:30;5180:6;5215:12;5209:19;5252:6;5244;5237:22;5278:2;5268:12;;5311:2;5300:9;5296:18;5289:25;;5373:2;5363:6;5360:1;5356:14;5345:9;5341:30;5337:39;5417:2;5403:12;5399:21;5385:35;;5438:1;5448:2090;5462:6;5459:1;5456:13;5448:2090;;;5527:22;;;-1:-1:-1;;5523:36:488;5511:49;;5583:13;;5702:9;;5619:6;5724:18;;;5803:21;;5652:15;;;5837:24;;;5884:3;5909:15;;;;5971:1;5967:16;;;5955:29;;5951:38;;;;6018:23;;;;-1:-1:-1;6079:704:488;6095:8;6090:3;6087:17;6079:704;;;6176:19;;;-1:-1:-1;;6172:34:488;6158:49;;6234:15;;6281:9;;6266:25;;6338:11;;;6332:18;6315:15;;;6308:43;6398:11;;;6392:18;6375:15;;;6368:43;6458:11;;;6452:18;6435:15;;;6428:43;6498:4;6547:11;;;6541:18;6600:4;6583:15;;;6576:29;;;6541:18;6632:51;;6665:17;;6541:18;6632:51;:::i;:::-;6755:14;;;;6622:61;-1:-1:-1;;6712:17:488;;;;6123:1;6114:11;6079:704;;;6083:3;;;6832:2;6828;6824:11;6818:18;6796:40;;6885:6;6877;6873:19;6868:2;6860:6;6856:15;6849:44;6920:60;6973:6;6957:14;6920:60;:::i;:::-;6906:74;;;7029:2;7025;7021:11;7015:18;7046:65;7107:2;7099:6;7095:15;7079:14;4560:12;;-1:-1:-1;;;;;4556:21:488;;;4544:34;;4641:4;4630:16;;;4624:23;4617:31;4610:39;4594:14;;;4587:63;4703:4;4692:16;;;4686:23;4682:32;;;4666:14;;;4659:56;4778:4;4767:16;;;4761:23;4754:31;4747:39;4731:14;;4724:63;4438:355;7046:65;-1:-1:-1;7152:11:488;;;7146:18;-1:-1:-1;;;;;3921:31:488;;;7232:4;7220:17;;3909:44;7287:4;7279:13;;7273:20;3921:31;7361:4;7349:17;;3909:44;7422:4;7414:13;;;7408:20;7399:6;7387:19;;;7380:49;;;;7481:15;;;;7516:12;;;;5484:1;5477:9;5448:2090;;;-1:-1:-1;7555:6:488;4798:2769;-1:-1:-1;;;;;;;;;4798:2769:488:o;7754:219::-;7903:2;7892:9;7885:21;7866:4;7923:44;7963:2;7952:9;7948:18;7940:6;7923:44;:::i;8259:269::-;8459:2;8444:18;;8471:51;8448:9;8504:6;8100:12;;-1:-1:-1;;;;;8096:21:488;;;8084:34;;8171:4;8160:16;;;8154:23;8150:32;;8134:14;;;8127:56;8236:4;8225:16;;;8219:23;8215:32;8199:14;;8192:56;7978:276;8533:462;8636:6;8644;8697:2;8685:9;8676:7;8672:23;8668:32;8665:52;;;8713:1;8710;8703:12;8665:52;8749:9;8736:23;8726:33;;8810:2;8799:9;8795:18;8782:32;-1:-1:-1;;;;;8829:6:488;8826:30;8823:50;;;8869:1;8866;8859:12;8823:50;8892:22;;8948:2;8930:16;;;8926:25;8923:45;;;8964:1;8961;8954:12;8923:45;8987:2;8977:12;;;8533:462;;;;;:::o;9000:183::-;9060:4;-1:-1:-1;;;;;9085:6:488;9082:30;9079:56;;;9115:18;;:::i;:::-;-1:-1:-1;9160:1:488;9156:14;9172:4;9152:25;;9000:183::o;9188:155::-;9256:20;;9285:52;9256:20;9285:52;:::i;:::-;9188:155;;;:::o;9348:1362::-;9477:6;9485;9493;9501;9509;9517;9570:3;9558:9;9549:7;9545:23;9541:33;9538:53;;;9587:1;9584;9577:12;9538:53;9627:9;9614:23;-1:-1:-1;;;;;9652:6:488;9649:30;9646:50;;;9692:1;9689;9682:12;9646:50;9715:22;;9768:4;9760:13;;9756:27;-1:-1:-1;9746:55:488;;9797:1;9794;9787:12;9746:55;9833:2;9820:16;9855:4;9879:60;9895:43;9935:2;9895:43;:::i;:::-;9879:60;:::i;:::-;9973:15;;;10055:1;10051:10;;;;10043:19;;10039:28;;;10004:12;;;;10079:19;;;10076:39;;;10111:1;10108;10101:12;10076:39;10135:11;;;;10155:238;10171:6;10166:3;10163:15;10155:238;;;10251:3;10238:17;10268:52;10314:5;10268:52;:::i;:::-;10333:18;;10188:12;;;;10371;;;;10155:238;;;10412:5;-1:-1:-1;10436:38:488;;-1:-1:-1;10455:18:488;;;10436:38;:::i;:::-;10426:48;;;;;10493:38;10527:2;10516:9;10512:18;10493:38;:::i;:::-;10483:48;;10550:38;10584:2;10573:9;10569:18;10550:38;:::i;:::-;10540:48;;10607:39;10641:3;10630:9;10626:19;10607:39;:::i;:::-;10597:49;;10665:39;10699:3;10688:9;10684:19;10665:39;:::i;:::-;10655:49;;9348:1362;;;;;;;;:::o;11014:184::-;11084:6;11137:2;11125:9;11116:7;11112:23;11108:32;11105:52;;;11153:1;11150;11143:12;11105:52;-1:-1:-1;11176:16:488;;11014:184;-1:-1:-1;11014:184:488:o;11203:127::-;11264:10;11259:3;11255:20;11252:1;11245:31;11295:4;11292:1;11285:15;11319:4;11316:1;11309:15;11335:128;11375:3;11406:1;11402:6;11399:1;11396:13;11393:39;;;11412:18;;:::i;:::-;-1:-1:-1;11448:9:488;;11335:128::o;11468:341::-;11696:3;11681:19;;11709:51;11685:9;11742:6;8100:12;;-1:-1:-1;;;;;8096:21:488;;;8084:34;;8171:4;8160:16;;;8154:23;8150:32;;8134:14;;;8127:56;8236:4;8225:16;;;8219:23;8215:32;8199:14;;8192:56;7978:276;11709:51;11796:6;11791:2;11780:9;11776:18;11769:34;11468:341;;;;;:::o;11814:380::-;11893:1;11889:12;;;;11936;;;11957:61;;12011:4;12003:6;11999:17;11989:27;;11957:61;12064:2;12056:6;12053:14;12033:18;12030:38;12027:161;;;12110:10;12105:3;12101:20;12098:1;12091:31;12145:4;12142:1;12135:15;12173:4;12170:1;12163:15;12027:161;;11814:380;;;:::o;12199:186::-;12247:4;-1:-1:-1;;;;;12272:6:488;12269:30;12266:56;;;12302:18;;:::i;:::-;-1:-1:-1;12368:2:488;12347:15;-1:-1:-1;;12343:29:488;12374:4;12339:40;;12199:186::o;12390:2173::-;12468:5;12521:3;12514:4;12506:6;12502:17;12498:27;12488:55;;12539:1;12536;12529:12;12488:55;12568:6;12562:13;12594:4;12618:60;12634:43;12674:2;12634:43;:::i;12618:60::-;12712:15;;;12798:1;12794:10;;;;12782:23;;12778:32;;;12743:12;;;;12822:15;;;12819:35;;;12850:1;12847;12840:12;12819:35;12886:2;12878:6;12874:15;12898:1636;12914:6;12909:3;12906:15;12898:1636;;;12993:3;12987:10;-1:-1:-1;;;;;13070:2:488;13057:11;13054:19;13051:109;;;13114:1;13143:2;13139;13132:14;13051:109;13183:24;;;;13230:4;13258:12;;;-1:-1:-1;;13254:26:488;13250:35;-1:-1:-1;13247:125:488;;;13326:1;13355:2;13351;13344:14;13247:125;13398:22;;:::i;:::-;13453:11;;;13447:18;13433:33;;13489:2;13533:11;;;13527:18;13511:14;;;13504:42;13569:2;13613:11;;;13607:18;13591:14;;;13584:42;13650:3;13695:12;;;13689:19;13673:14;;;13666:43;13744:11;;;13738:18;;13772:16;;;13769:109;;;13830:1;13819:12;;13860:3;13855;13848:16;13769:109;13910:8;13906:2;13902:17;13891:28;;13960:3;13955:2;13950:3;13946:12;13942:22;13932:123;;14007:1;13996:12;;14037:3;14032;14025:16;13932:123;14094:2;14089:3;14085:12;14079:19;14068:30;;14126:49;14142:32;14170:3;14142:32;:::i;14126:49::-;14111:64;;14204:3;14195:7;14188:20;14251:3;14246:2;14240:3;14235;14231:13;14227:22;14224:31;14221:124;;;14297:1;14286:12;;14327:3;14322;14315:16;14221:124;14358:58;14412:3;14407:2;14398:7;14394:16;14389:2;14384:3;14380:12;14358:58;:::i;:::-;14436:15;;14429:32;;;;-1:-1:-1;14474:18:488;;-1:-1:-1;;;14512:12:488;;;;12931;;12898:1636;;;-1:-1:-1;14552:5:488;12390:2173;-1:-1:-1;;;;;;12390:2173:488:o;14568:763::-;14641:5;14694:3;14687:4;14679:6;14675:17;14671:27;14661:55;;14712:1;14709;14702:12;14661:55;14741:6;14735:13;14767:4;14791:60;14807:43;14847:2;14807:43;:::i;14791:60::-;14885:15;;;14971:1;14967:10;;;;14955:23;;14951:32;;;14916:12;;;;14995:15;;;14992:35;;;15023:1;15020;15013:12;14992:35;15059:2;15051:6;15047:15;15071:231;15087:6;15082:3;15079:15;15071:231;;;15160:3;15154:10;15177:52;15223:5;15177:52;:::i;:::-;15242:18;;15280:12;;;;15104;;15071:231;;15336:118;15422:5;15415:13;15408:21;15401:5;15398:32;15388:60;;15444:1;15441;15434:12;15459:730;15531:5;15579:4;15567:9;15562:3;15558:19;15554:30;15551:50;;;15597:1;15594;15587:12;15551:50;15619:22;;:::i;:::-;15610:31;;15671:9;15665:16;15690:54;15736:7;15690:54;:::i;:::-;15753:22;;15820:2;15805:18;;15799:25;15833:30;15799:25;15833:30;:::i;:::-;15890:2;15879:14;;15872:31;15948:2;15933:18;;15927:25;15961:54;15927:25;15961:54;:::i;:::-;16042:2;16031:14;;16024:31;16100:2;16085:18;;16079:25;16113:30;16079:25;16113:30;:::i;:::-;16170:2;16159:14;;16152:31;16163:5;15459:730;-1:-1:-1;;15459:730:488:o;16194:174::-;16288:13;;16310:52;16288:13;16310:52;:::i;16373:2327::-;16476:6;16507:2;16550;16538:9;16529:7;16525:23;16521:32;16518:52;;;16566:1;16563;16556:12;16518:52;16599:9;16593:16;-1:-1:-1;;;;;16669:2:488;16661:6;16658:14;16655:34;;;16685:1;16682;16675:12;16655:34;16723:6;16712:9;16708:22;16698:32;;16764:2;16759;16750:7;16746:16;16742:25;16739:45;;;16780:1;16777;16770:12;16739:45;16806:22;;:::i;:::-;16859:2;16853:9;16887:2;16877:8;16874:16;16871:36;;;16903:1;16900;16893:12;16871:36;16934:8;16930:2;16926:17;16916:27;;;16981:7;16974:4;16970:2;16966:13;16962:27;16952:55;;17003:1;17000;16993:12;16952:55;17032:2;17026:9;17055:60;17071:43;17111:2;17071:43;:::i;17055:60::-;17149:15;;;17231:1;17227:10;;;;17219:19;;17215:28;;;17180:12;;;;17255:19;;;17252:39;;;17287:1;17284;17277:12;17252:39;17319:2;17315;17311:11;17331:1310;17347:6;17342:3;17339:15;17331:1310;;;17426:3;17420:10;17462:2;17449:11;17446:19;17443:39;;;17478:1;17475;17468:12;17443:39;17505:20;;17548:6;17578:16;;;-1:-1:-1;;17574:30:488;17570:39;-1:-1:-1;17567:59:488;;;17622:1;17619;17612:12;17567:59;17654:22;;:::i;:::-;17719:2;17715;17711:11;17705:18;17752:2;17742:8;17739:16;17736:36;;;17768:1;17765;17758:12;17736:36;17801:89;17882:7;17877:2;17866:8;17862:2;17858:17;17854:26;17801:89;:::i;:::-;17792:7;17785:106;;17934:2;17930;17926:11;17920:18;17967:2;17957:8;17954:16;17951:106;;;18011:1;18040:2;18036;18029:14;17951:106;18095:84;18171:7;18166:2;18155:8;18151:2;18147:17;18143:26;18095:84;:::i;:::-;18090:2;18081:7;18077:16;18070:110;;18203:4;18245:65;18302:7;18297:2;18293;18289:11;18245:65;:::i;:::-;18240:2;18231:7;18227:16;18220:91;18349:58;18402:3;18398:2;18394:12;18349:58;:::i;:::-;18331:16;;;18324:84;18448:58;18501:3;18493:12;;18448:58;:::i;:::-;18441:4;18428:18;;18421:86;18553:11;;18547:18;18540:4;18527:18;;18520:46;18579:20;;18619:12;;;;17364;;17331:1310;;;-1:-1:-1;18650:20:488;;-1:-1:-1;18657:5:488;;16373:2327;-1:-1:-1;;;;;;;16373:2327:488:o;18705:576::-;18829:4;18835:6;18895:11;18882:25;18989:2;18985:7;18974:8;18958:14;18954:29;18950:43;18930:18;18926:68;18916:96;;19008:1;19005;18998:12;18916:96;19035:33;;19087:20;;;-1:-1:-1;;;;;;19119:30:488;;19116:50;;;19162:1;19159;19152:12;19116:50;19195:4;19183:17;;-1:-1:-1;19246:1:488;19242:14;;;19226;19222:35;19212:46;;19209:66;;;19271:1;19268;19261:12;19209:66;18705:576;;;;;:::o;19286:127::-;19347:10;19342:3;19338:20;19335:1;19328:31;19378:4;19375:1;19368:15;19402:4;19399:1;19392:15;19418:329;19515:4;19573:11;19560:25;19667:3;19663:8;19652;19636:14;19632:29;19628:44;19608:18;19604:69;19594:97;;19687:1;19684;19677:12;19594:97;19708:33;;;;;19418:329;-1:-1:-1;;19418:329:488:o;19752:2259::-;19819:5;19872:3;19865:4;19857:6;19853:17;19849:27;19839:55;;19890:1;19887;19880:12;19839:55;19926:6;19913:20;19952:4;19976:60;19992:43;20032:2;19992:43;:::i;19976:60::-;20070:15;;;20156:1;20152:10;;;;20140:23;;20136:32;;;20101:12;;;;20180:15;;;20177:35;;;20208:1;20205;20198:12;20177:35;20244:2;20236:6;20232:15;20256:1726;20272:6;20267:3;20264:15;20256:1726;;;20358:3;20345:17;-1:-1:-1;;;;;20435:2:488;20422:11;20419:19;20416:109;;;20479:1;20508:2;20504;20497:14;20416:109;20548:24;;;;20595:4;20623:12;;;-1:-1:-1;;20619:26:488;20615:35;-1:-1:-1;20612:125:488;;;20691:1;20720:2;20716;20709:14;20612:125;20763:22;;:::i;:::-;20825:11;;;20812:25;20798:40;;20861:2;20912:11;;;20899:25;20883:14;;;20876:49;20948:2;20999:11;;;20986:25;20970:14;;;20963:49;21036:3;21088:12;;;21075:26;21059:14;;;21052:50;21144:11;;;21131:25;;21172:16;;;21169:109;;;21230:1;21219:12;;21260:3;21255;21248:16;21169:109;21310:8;21306:2;21302:17;21291:28;;21360:3;21355:2;21350:3;21346:12;21342:22;21332:123;;21407:1;21396:12;;21437:3;21432;21425:16;21332:123;21501:2;21496:3;21492:12;21479:26;21468:37;;21533:49;21549:32;21577:3;21549:32;:::i;21533:49::-;21518:64;;21611:3;21602:7;21595:20;21658:3;21653:2;21647:3;21642;21638:13;21634:22;21631:31;21628:124;;;21704:1;21693:12;;21734:3;21729;21722:16;21628:124;21810:3;21805:2;21800:3;21796:12;21791:2;21782:7;21778:16;21765:49;21862:1;21838:17;;;21834:26;;21827:37;;;;-1:-1:-1;;21884:15:488;;;21877:32;21922:18;;-1:-1:-1;21960:12:488;;;;20289;;20256:1726;;22016:766;22078:5;22131:3;22124:4;22116:6;22112:17;22108:27;22098:55;;22149:1;22146;22139:12;22098:55;22185:6;22172:20;22211:4;22235:60;22251:43;22291:2;22251:43;:::i;22235:60::-;22329:15;;;22415:1;22411:10;;;;22399:23;;22395:32;;;22360:12;;;;22439:15;;;22436:35;;;22467:1;22464;22457:12;22436:35;22503:2;22495:6;22491:15;22515:238;22531:6;22526:3;22523:15;22515:238;;;22611:3;22598:17;22628:52;22674:5;22628:52;:::i;:::-;22693:18;;22731:12;;;;22548;;22515:238;;22787:747;22848:5;22896:4;22884:9;22879:3;22875:19;22871:30;22868:50;;;22914:1;22911;22904:12;22868:50;22936:22;;:::i;:::-;22927:31;;22995:9;22982:23;23014:54;23060:7;23014:54;:::i;:::-;23077:22;;23151:2;23136:18;;23123:32;23164:30;23123:32;23164:30;:::i;:::-;23221:2;23210:14;;23203:31;23286:2;23271:18;;23258:32;23299:54;23258:32;23299:54;:::i;:::-;23380:2;23369:14;;23362:31;23445:2;23430:18;;23417:32;23458:30;23417:32;23458:30;:::i;23539:1016::-;23649:9;23708:6;23700:5;23684:14;23680:26;23676:39;23673:59;;;23728:1;23725;23718:12;23673:59;23756:22;;:::i;:::-;23814:5;23801:19;-1:-1:-1;;;;;23880:2:488;23872:6;23869:14;23866:34;;;23896:1;23893;23886:12;23866:34;23925:77;23987:14;23978:6;23971:5;23967:18;23925:77;:::i;:::-;23916:7;23909:94;24052:2;24045:5;24041:14;24028:28;24012:44;;24081:2;24071:8;24068:16;24065:36;;;24097:1;24094;24087:12;24065:36;;24135:74;24194:14;24183:8;24176:5;24172:20;24135:74;:::i;:::-;24130:2;24121:7;24117:16;24110:100;;24244:64;24293:14;24288:2;24281:5;24277:14;24244:64;:::i;:::-;24239:2;24230:7;24226:16;24219:90;24345:36;24375:4;24368:5;24364:16;24345:36;:::i;:::-;24338:4;24329:7;24325:18;24318:64;24418:35;24448:3;24441:5;24437:15;24418:35;:::i;:::-;24411:4;24398:18;;24391:63;24514:3;24503:15;;;;24490:29;24483:4;24470:18;;24463:57;-1:-1:-1;24402:7:488;23539:1016::o;24560:135::-;24599:3;-1:-1:-1;;24620:17:488;;24617:43;;;24640:18;;:::i;:::-;-1:-1:-1;24687:1:488;24676:13;;24560:135::o;24700:542::-;24789:5;24796:6;24856:3;24843:17;24942:2;24938:7;24927:8;24911:14;24907:29;24903:43;24883:18;24879:68;24869:96;;24961:1;24958;24951:12;24869:96;24989:33;;25093:4;25080:18;;;-1:-1:-1;25041:21:488;;-1:-1:-1;;;;;;25110:30:488;;25107:50;;;25153:1;25150;25143:12;25107:50;25210:6;25207:1;25203:14;25187;25183:35;25173:8;25169:50;25166:70;;;25232:1;25229;25222:12;25247:266;25335:6;25330:3;25323:19;25387:6;25380:5;25373:4;25368:3;25364:14;25351:43;-1:-1:-1;25439:1:488;25414:16;;;25432:4;25410:27;;;25403:38;;;;25495:2;25474:15;;;-1:-1:-1;;25470:29:488;25461:39;;;25457:50;;25247:266::o;25518:551::-;25626:6;25621:3;25614:19;25596:3;25652:4;25681:2;25676:3;25672:12;25665:19;;25707:5;25730:1;25740:304;25754:6;25751:1;25748:13;25740:304;;;25831:6;25818:20;25851:54;25897:7;25851:54;:::i;:::-;-1:-1:-1;;;;;25930:33:488;25918:46;;25984:12;;;;26019:15;;;;25960:1;25769:9;25740:304;;26074:720;26179:5;26166:19;26194:54;26240:7;26194:54;:::i;:::-;-1:-1:-1;;;;;26307:16:488;;;26295:29;;26372:4;26361:16;;26348:30;;26387;26348;26387;:::i;:::-;26456:15;;26449:23;26442:4;26433:14;;26426:47;26521:4;26510:16;;26497:30;;26536:54;26497:30;26536:54;:::i;:::-;26622:16;26615:4;26606:14;;26599:40;26687:4;26676:16;;26663:30;26702;26663;26702;:::i;:::-;26778:7;26771:15;26764:23;26757:4;26752:3;26748:14;26741:47;;26074:720;;:::o;26799:3552::-;26996:2;26985:9;26978:21;26959:4;27042:77;27112:6;27104;27042:77;:::i;:::-;27155:2;27150;27139:9;27135:18;27128:30;27193:2;27182:9;27178:18;27217:12;27212:3;27205:25;27261:2;27250:9;27246:18;27239:25;;27329:2;27313:12;27310:1;27306:20;27295:9;27291:36;27287:45;27355:12;27385:1;27395:2927;27409:12;27406:1;27403:19;27395:2927;;;27480:22;;;-1:-1:-1;;27476:36:488;27464:49;;27570:14;27566:33;;;-1:-1:-1;;27562:48:488;27540:20;;27536:75;27526:103;;27625:1;27622;27615:12;27526:103;27681:12;27672:6;27659:20;27655:39;27745:75;27814:5;27807;27745:75;:::i;:::-;27848:6;27840;27833:22;27893:6;27885;27881:19;27927:14;27920:5;27913:29;27976:3;27968:6;27964:16;27955:25;;28048:3;28030:14;28027:1;28023:22;28015:6;28011:35;28007:45;28081:14;28119:1;28133:1325;28149:14;28144:3;28141:23;28133:1325;;;28236:19;;;-1:-1:-1;;28232:34:488;28218:49;;28330:14;28326:35;;;-1:-1:-1;;28322:50:488;28298:22;;28294:79;28284:107;;28387:1;28384;28377:12;28284:107;28451:14;28440:8;28427:22;28423:43;28511:7;28498:21;28490:6;28483:37;28587:2;28578:7;28574:16;28561:30;28556:2;28548:6;28544:15;28537:55;28659:2;28650:7;28646:16;28633:30;28628:2;28620:6;28616:15;28609:55;28731:2;28722:7;28718:16;28705:30;28700:2;28692:6;28688:15;28681:55;28805:4;28796:7;28792:18;28779:32;28900:2;28896:7;28886;28870:14;28866:28;28862:42;28842:18;28838:67;28828:95;;28919:1;28916;28909:12;28828:95;-1:-1:-1;;;;;28983:7:488;28963:18;28959:32;28946:46;28943:70;28940:90;;;29026:1;29023;29016:12;28940:90;29120:7;29100:18;29096:32;29083:46;29067:14;29063:67;29054:7;29050:81;29047:101;;;29144:1;29141;29134:12;29047:101;29191:4;29184;29176:6;29172:17;29165:31;29223:135;29352:4;29344:6;29340:17;29329:7;29309:18;29305:32;29292:46;29287:2;29277:7;29257:18;29253:32;29249:41;29223:135;:::i;:::-;29401:2;29430:14;;;;29213:145;;-1:-1:-1;29387:17:488;;;;;-1:-1:-1;;28183:1:488;28174:11;28133:1325;;;28137:3;;29509:84;29589:2;29582:5;29578:14;29571:5;29509:84;:::i;:::-;29471:122;;;;29642:6;29634;29630:19;29625:2;29617:6;29613:15;29606:44;29677:85;29755:6;29739:14;29723;29677:85;:::i;:::-;29663:99;;;;;29775:74;29845:2;29837:6;29833:15;29828:2;29821:5;29817:14;29775:74;:::i;:::-;29884:36;29914:4;29907:5;29903:16;29884:36;:::i;:::-;-1:-1:-1;;;;;3921:31:488;29988:4;29976:17;;3909:44;30029:36;30059:4;30048:16;;30029:36;:::i;:::-;-1:-1:-1;;;;;3921:31:488;30133:4;30121:17;;3909:44;30204:6;30193:18;;;30180:32;30159:19;;;;30152:61;30277:2;30300:12;;;;30265:15;;;;;27437:1;27430:9;27395:2927;;;-1:-1:-1;30339:6:488;;26799:3552;-1:-1:-1;;;;;;;26799:3552:488:o;30356:702::-;30675:6;30664:9;30657:25;30718:3;30713:2;30702:9;30698:18;30691:31;30638:4;30739:65;30799:3;30788:9;30784:19;30776:6;30739:65;:::i;:::-;-1:-1:-1;;;;;30878:15:488;;;30873:2;30858:18;;30851:43;30930:15;;;30925:2;30910:18;;30903:43;-1:-1:-1;30983:15:488;;;30977:3;30962:19;;30955:44;31036:15;;;30831:3;31015:19;;;31008:44;;;;30930:15;30731:73;-1:-1:-1;;30356:702:488:o;31533:701::-;31842:3;31831:9;31824:22;31805:4;31869:65;31929:3;31918:9;31914:19;31906:6;31869:65;:::i;:::-;31982:9;31974:6;31970:22;31965:2;31954:9;31950:18;31943:50;32010:32;32035:6;32027;32010:32;:::i;:::-;-1:-1:-1;;;;;32116:15:488;;;32111:2;32096:18;;32089:43;32168:15;;;;32163:2;32148:18;;32141:43;-1:-1:-1;32215:3:488;32200:19;32193:35;32002:40;31533:701;-1:-1:-1;;;31533:701:488:o;32890:245::-;32957:6;33010:2;32998:9;32989:7;32985:23;32981:32;32978:52;;;33026:1;33023;33016:12;32978:52;33058:9;33052:16;33077:28;33099:5;33077:28;:::i;33735:272::-;33805:6;33858:2;33846:9;33837:7;33833:23;33829:32;33826:52;;;33874:1;33871;33864:12;33826:52;33906:9;33900:16;33925:52;33971:5;33925:52;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "commitInternalParams()": "d4a07d34",
    "contractName()": "75d0c0dc",
    "contractNameBytes()": "0e3e80ac",
    "contractVersion()": "a0a8e460",
    "contractVersionBytes()": "06a46239",
    "createVault(address[],address,address,address,address,address)": "c6be9b22",
    "delayedProtocolParamsTimestamp()": "e4af6e79",
    "delayedProtocolPerVaultParamsTimestamp(uint256)": "511ce798",
    "delayedStrategyParamsTimestamp(uint256)": "6707acee",
    "internalParams()": "7ac46fbb",
    "internalParamsTimestamp()": "1c7f4c73",
    "setStrategyParams(uint256,(((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256)[]))": "c6b22e0b",
    "stageInternalParams((address,address,address))": "09946538",
    "stagedInternalParams()": "86c6be3e",
    "strategyParams(uint256)": "12466b68",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"internalParams_\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"CommitedInternalParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"vaultTokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultNft\",\"type\":\"uint256\"}],\"name\":\"DeployedVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"contract IAggregatorV3\",\"name\":\"rewardOracle\",\"type\":\"address\"},{\"internalType\":\"contract IAggregatorV3\",\"name\":\"underlyingOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippageD\",\"type\":\"uint256\"}],\"internalType\":\"struct IAuraVaultGovernance.SwapParams[]\",\"name\":\"tokensSwapParams\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct IAuraVaultGovernance.StrategyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"SetStrategyParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"StagedInternalParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"commitInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractNameBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersionBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"balancerVault_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakingLiquidityGauge_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"balancerMinter_\",\"type\":\"address\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"contract IAuraVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedProtocolParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedProtocolPerVaultParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedStrategyParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"contract IAggregatorV3\",\"name\":\"rewardOracle\",\"type\":\"address\"},{\"internalType\":\"contract IAggregatorV3\",\"name\":\"underlyingOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippageD\",\"type\":\"uint256\"}],\"internalType\":\"struct IAuraVaultGovernance.SwapParams[]\",\"name\":\"tokensSwapParams\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IAuraVaultGovernance.StrategyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"setStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"newParams\",\"type\":\"tuple\"}],\"name\":\"stageInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedInternalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"strategyParams\",\"outputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"contract IAggregatorV3\",\"name\":\"rewardOracle\",\"type\":\"address\"},{\"internalType\":\"contract IAggregatorV3\",\"name\":\"underlyingOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippageD\",\"type\":\"uint256\"}],\"internalType\":\"struct IAuraVaultGovernance.SwapParams[]\",\"name\":\"tokensSwapParams\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IAuraVaultGovernance.StrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"SetStrategyParams(address,address,uint256,(((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256)[]))\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\",\"origin\":\"Origin of the transaction (tx.origin)\",\"params\":\"New set params\",\"sender\":\"Sender of the call (msg.sender)\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"internalParams_\":\"Initial Internal Params\"}},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"delayedStrategyParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"setStrategyParams(uint256,(((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256)[]))\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"stageInternalParams((address,address,address))\":{\"params\":{\"newParams\":\"New Internal Params\"}},\"stagedInternalParams()\":{\"details\":\"The Internal Params could be committed after internalParamsTimestamp\"},\"strategyParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"events\":{\"CommitedInternalParams(address,address,(address,address,address))\":{\"notice\":\"Emitted when InternalParams are staged for commit\"},\"DeployedVault(address,address,address[],bytes,address,address,uint256)\":{\"notice\":\"Emitted when New Vault is deployed\"},\"SetStrategyParams(address,address,uint256,(((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256)[]))\":{\"notice\":\"Emitted when new StrategyParams are set\"},\"StagedInternalParams(address,address,(address,address,address),uint256)\":{\"notice\":\"Emitted when InternalParams are staged for commit\"}},\"kind\":\"user\",\"methods\":{\"commitInternalParams()\":{\"notice\":\"Commit staged Internal Params.\"},\"constructor\":{\"notice\":\"Creates a new contract.\"},\"delayedProtocolParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed.\"},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed.\"},\"delayedStrategyParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed.\"},\"internalParams()\":{\"notice\":\"Internal Params of the contract.\"},\"internalParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Internal Params could be committed.\"},\"setStrategyParams(uint256,(((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256)[]))\":{\"notice\":\"Delayed Strategy Params staged for commit after delay.\"},\"stageInternalParams((address,address,address))\":{\"notice\":\"Stage new Internal Params.\"},\"stagedInternalParams()\":{\"notice\":\"Staged new Internal Params.\"},\"strategyParams(uint256)\":{\"notice\":\"Delayed Strategy Params\"}},\"notice\":\"Governance that manages all BalancerV2 Vaults params and can deploy a new BalancerV2 Vault.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vaults/AuraVaultGovernance.sol\":\"AuraVaultGovernance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281\",\"dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b\"]},\"src/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87\",\"dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk\"]},\"src/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50\",\"dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1\"]},\"src/interfaces/external/aura/IAuraBaseRewardPool.sol\":{\"keccak256\":\"0x95407f87e02b389f9640bce9ac247a110facf8d2a7042871eb0e27ce8405a3ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40dc17373dce538e14ed941406ede29944afd204d8bc3395e1578502cb151c7b\",\"dweb:/ipfs/QmPJRQ5hZM19LiKN34yd1rKC7dAUQw7mmHFzLLQnxFtGKc\"]},\"src/interfaces/external/aura/IAuraBooster.sol\":{\"keccak256\":\"0x1dd80252ed7213917c7dfc56f0d724be4a93eb932a5545ed3ca76fc74f00ed00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e9a1af9d65e80a1b92ad5d3dbcd5e0f268b8bcad69e258be03380d4cbc56e3\",\"dweb:/ipfs/QmPpkAHwSv6vgqeWjqSAN323YJfc2PDsaQMNVUE2hnchnY\"]},\"src/interfaces/external/balancer/pool-stable/StablePoolUserData.sol\":{\"keccak256\":\"0x0503d49c1242d38b10cb896d34d85a0bab80c5ce3f253016f4bb51833c359cc0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f196af8f3d311b83993cbf85866597358635d5619b25bf33f863be7f093b087c\",\"dweb:/ipfs/QmSFcZUB1Lv4h4G89N2wR2yAgumtc2CszhRpnYcvYfzpmT\"]},\"src/interfaces/external/balancer/pool-utils/IManagedPool.sol\":{\"keccak256\":\"0x09b700bb2a67ad9cc0e19455a7d55d4e2efeaaa380e19969dcc7acceb795fd4f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7b013e3dee42088da1b696c5f652535c4ebe68c86dbefc11573ff180df44d7d9\",\"dweb:/ipfs/QmR2yymvt2ACn3qz69gY3sMoUCY9zEnsR4kBF1489cw2si\"]},\"src/interfaces/external/balancer/pool-weighted/WeightedPoolUserData.sol\":{\"keccak256\":\"0xa14005e22ad66472bfe0552caa51b47811c0cee43d7f8ae20811aff63816766b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a694b1a00727ce3e694782623eef5c48a1e5b095ceeaed0b33d73685ab69f392\",\"dweb:/ipfs/QmWuTEoUxU2D3y1ASnLdZnGb7joRsjn9RimizT19FVieot\"]},\"src/interfaces/external/balancer/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x8032fd6d7f660d9536d252897336462bb932d1e91bd3b87c087be017a35dc842\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3724cffd85daa36371999e0e9ea56617df12fd7f2cc5c123139705766e3b89a1\",\"dweb:/ipfs/QmaM2wHuKrpKcc8mRhdYmXqPVAimHjGK1xubPWXKafiKYa\"]},\"src/interfaces/external/balancer/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x52bd09272e9ec2cff838df757e8b690ff4ca3f4f07e9edd9b711e31e474dd979\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://92ae86c99ce4b92fc666a4c6053bc5ae2932d07b23471647cae7c541c68071b3\",\"dweb:/ipfs/QmeKHMVTVLfG5MKQ7ewM7uwB41WEXkDKhkkL3qCd7mokFo\"]},\"src/interfaces/external/balancer/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xf952ad04a5d4e8523212315e19b8d874e13ceadb7dbc1f5025510da1e153405c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://81d7e364e8c7a76879f9be650559d3de53879918ab721372931d0e51daa464b5\",\"dweb:/ipfs/QmNyXjvxr3cXzVeBaPrApS9fdjufyN6dXtjGy746xxtj2z\"]},\"src/interfaces/external/balancer/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x90278f677649701309ab0902f5bca2fd0d9603e5ce7193b15cf05a7c5582c3b9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://991dce71671de9fb0f5fafda69994705e358a5cb235bc3acf961dbc9895b6dd6\",\"dweb:/ipfs/QmP7479cjgvMa2DjXNSB6gvHZ2WibU4TGb3DTjqw6UuFb6\"]},\"src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"src/interfaces/external/balancer/vault/IAsset.sol\":{\"keccak256\":\"0x746354db670eb3b94179963b522c4deb0b9854483ab293e3025689749923ebef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bcd5a7e0519f94c25f4e3b568b8c0446b2240bd3808c56c3b498a6fed459b2e4\",\"dweb:/ipfs/QmRXvcCy9oKhwPMr8QQ74pg9jormcgq3GHmLSGTDhUWAsn\"]},\"src/interfaces/external/balancer/vault/IAuthorizer.sol\":{\"keccak256\":\"0x4adfebbc478ab323d0679386ef8e2384f5205eb280f72757c151eca62ea4f91b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://49a34c9ad9cb559931b465cea2d570ab015751c6dbc4a52eab8c36b5b949eec1\",\"dweb:/ipfs/QmUiUSZz8gjANUcTqaPCfNkUp3gpjt8Qq2z4UWuQWhaK34\"]},\"src/interfaces/external/balancer/vault/IBasePool.sol\":{\"keccak256\":\"0x2a655dcb1150402a7446dc41a9ff2f3cf1ae5caa6d2384bddee08aac1d417e77\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c506e6beb0542dcb9861f3d4b524f2ff716cdcf5513b2132c24f954ee22f25c9\",\"dweb:/ipfs/QmcJ1dLRHbLMGiYvS8TH1W6G61beZy8MmiSvzFw11UxLQv\"]},\"src/interfaces/external/balancer/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xef16377e5ee7ac8151fe8abc3f7b8f0a420008ae1c1336f3cbaea5e171403a43\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ca460a387ce27682beecc1f93a07c7ef6139504f2d4e2fce715abe82b6d2b039\",\"dweb:/ipfs/QmS8QgcAqhtHepcf8LYGToutbhsUXaTE7UNLQQi4fBJsUC\"]},\"src/interfaces/external/balancer/vault/IPoolSwapStructs.sol\":{\"keccak256\":\"0x6bcc1ff0bbbe512e442e1f5a10c79e124a67fb2eae15c7ef2885679f30abfb06\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://cd2c36763fb58b288f317735ee23d464499c9c98056cca5c601ba0398c70a7b9\",\"dweb:/ipfs/QmUSgTJCuzNFrscqZZFWfLQsEvX6v2bqJ5piFQa4o8aiZy\"]},\"src/interfaces/external/balancer/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xa42e8b311517ce70dd7f2af6b497603a81c3dd678961a5ffd8a2968eff6b7b5a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9a11ea954c234e348896cec60165624d71e9fe7b44d7341d74e3bdc7790f2b6a\",\"dweb:/ipfs/QmNq1f6yAeJawBKpMmfNyoQ84nZquQ78YtT3tt3dMBtyCK\"]},\"src/interfaces/external/balancer/vault/IVault.sol\":{\"keccak256\":\"0x08d254ba643e02507305b570f794a75b5439d2ae799f761d26d3a2fd77f6d2fb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2de3bcdb5d5805a44e2c643bc76bc14858825b2b018049f89962c8bc532ac24d\",\"dweb:/ipfs/QmfWZGKRChzwe97R8nqShjKdRX5k8Tp9HKwr7UAq9rCg1m\"]},\"src/interfaces/external/chainlink/IAggregatorV3.sol\":{\"keccak256\":\"0xf195bb6bcab2877ab2cfb75351c0793d64e2ace9749f496f056ba62bebd5a1d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5960730ba2adbff9392dc85761144c2962a410e188032e6d0e32f7457ffc0886\",\"dweb:/ipfs/QmTnVyDhfmkk6zpUubUWZsBmC9qCPAPSWB9GGmtDebuEFV\"]},\"src/interfaces/external/erc/IERC1271.sol\":{\"keccak256\":\"0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779\",\"dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd\"]},\"src/interfaces/utils/IContractMeta.sol\":{\"keccak256\":\"0x7ce236cea17798c2c9e60a659e727ef188f6579315b8227d0c6ad067a33900fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31c232f85d6565414bdf292adacc3054ab2355878e4d4508fc86fc2787436f24\",\"dweb:/ipfs/QmVhEUkN5Rwqpyufn7qqT88LLdq885igE57Pk4LzgJb9Kp\"]},\"src/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add\",\"dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu\"]},\"src/interfaces/vaults/IAuraVault.sol\":{\"keccak256\":\"0x7aee99720d0c7c3e3239876e4a89276f6aa33ce901748d3f9297acc8e674d19a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://95a27850064ad5e5e94195c6ec26ed4e7227bf4096775c1b26d58d3d7fb84d22\",\"dweb:/ipfs/QmNXotpRMQrWKaayvAiFiYYHau9VrUvQVYz3jyTN1uafzp\"]},\"src/interfaces/vaults/IAuraVaultGovernance.sol\":{\"keccak256\":\"0x650d2d9af6645474bce8c43ee03db7ef13eb2d224ed1ec8105c7598b354ff402\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f17f154d888c4c2998f2f9a45ed3f5467e152a41605b4e2944a2b8fd636e7a4f\",\"dweb:/ipfs/QmdKL44YFp54AfWKCyC7yhzXRfugCAMXTgdZRpXhurcBs2\"]},\"src/interfaces/vaults/IIntegrationVault.sol\":{\"keccak256\":\"0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d\",\"dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy\"]},\"src/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1\",\"dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw\"]},\"src/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375\",\"dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu\"]},\"src/libraries/ExceptionsLibrary.sol\":{\"keccak256\":\"0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f\",\"dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX\"]},\"src/libraries/PermissionIdsLibrary.sol\":{\"keccak256\":\"0xc6a4f2515d807b2ad95e9e8f7190c5ea85ab6603d2c1136632a8af9c479ecfcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e16f3d1e595ffa5b20cd1588e839ee783b1ca246d489cbe42040fd3089bb8b1\",\"dweb:/ipfs/QmQdW5ykrjB5yMMxkU5zTR4GJ5kBhyrnAbmt3mvtB55kuC\"]},\"src/utils/ContractMeta.sol\":{\"keccak256\":\"0x6e1fe2b6e0907a5388a5775be53bbfb55883aacc0ccb7597dfc6475fa9834c3f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9f8a2c5073a97b514829bac140bf84391cc5702185c4d6813e47b61ce53515e6\",\"dweb:/ipfs/QmeuMJq2ciSaDZC8qiUGLPfAHBjpCE4v79fZiaWm8egAks\"]},\"src/vaults/AuraVaultGovernance.sol\":{\"keccak256\":\"0xc6b3e86718e00360f32596e5d9a272f991e5772c9dec75366b0f807fb9679444\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://193d3c21d4aadd944f9ff81c517bbfca56de8b58081915df8053587a7bc453a7\",\"dweb:/ipfs/QmWYtRaT7dwZ5yDqaKGUF1ibpH16TAnyTHUwuQgZdRx4s1\"]},\"src/vaults/VaultGovernance.sol\":{\"keccak256\":\"0xd484ec7eee06480da27027a0ac81f591440ecdd2ba7bd5bfdee58a3f9e88c22c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8b4f08e9350fadeb03b9561a2fb2798821f7186fe8663207c91402ea62a53cc5\",\"dweb:/ipfs/QmUr73ghYfPzjtFgxE8mPjw5wFwQTQsbcLDGJNQVfT4rEV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "internalParams_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CommitedInternalParams",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address[]",
              "name": "vaultTokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "vaultAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "vaultNft",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DeployedVault",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct IAuraVaultGovernance.StrategyParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IAuraVaultGovernance.SwapParams[]",
                  "name": "tokensSwapParams",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct IVault.BatchSwapStep[]",
                      "name": "swaps",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "poolId",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "assetInIndex",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "assetOutIndex",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "userData",
                          "type": "bytes"
                        }
                      ]
                    },
                    {
                      "internalType": "contract IAsset[]",
                      "name": "assets",
                      "type": "address[]"
                    },
                    {
                      "internalType": "struct IVault.FundManagement",
                      "name": "funds",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "sender",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "fromInternalBalance",
                          "type": "bool"
                        },
                        {
                          "internalType": "address payable",
                          "name": "recipient",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "toInternalBalance",
                          "type": "bool"
                        }
                      ]
                    },
                    {
                      "internalType": "contract IAggregatorV3",
                      "name": "rewardOracle",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAggregatorV3",
                      "name": "underlyingOracle",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slippageD",
                      "type": "uint256"
                    }
                  ]
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetStrategyParams",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "when",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StagedInternalParams",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitInternalParams"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractName",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractNameBytes",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersionBytes",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "vaultTokens_",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "pool_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "balancerVault_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "stakingLiquidityGauge_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "balancerMinter_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createVault",
          "outputs": [
            {
              "internalType": "contract IAuraVault",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolPerVaultParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedStrategyParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "internalParams",
          "outputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "internalParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            },
            {
              "internalType": "struct IAuraVaultGovernance.StrategyParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IAuraVaultGovernance.SwapParams[]",
                  "name": "tokensSwapParams",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct IVault.BatchSwapStep[]",
                      "name": "swaps",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "poolId",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "assetInIndex",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "assetOutIndex",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "userData",
                          "type": "bytes"
                        }
                      ]
                    },
                    {
                      "internalType": "contract IAsset[]",
                      "name": "assets",
                      "type": "address[]"
                    },
                    {
                      "internalType": "struct IVault.FundManagement",
                      "name": "funds",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "sender",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "fromInternalBalance",
                          "type": "bool"
                        },
                        {
                          "internalType": "address payable",
                          "name": "recipient",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "toInternalBalance",
                          "type": "bool"
                        }
                      ]
                    },
                    {
                      "internalType": "contract IAggregatorV3",
                      "name": "rewardOracle",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAggregatorV3",
                      "name": "underlyingOracle",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slippageD",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategyParams"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "newParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stageInternalParams"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stagedInternalParams",
          "outputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyParams",
          "outputs": [
            {
              "internalType": "struct IAuraVaultGovernance.StrategyParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IAuraVaultGovernance.SwapParams[]",
                  "name": "tokensSwapParams",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "struct IVault.BatchSwapStep[]",
                      "name": "swaps",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "poolId",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "uint256",
                          "name": "assetInIndex",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "assetOutIndex",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        },
                        {
                          "internalType": "bytes",
                          "name": "userData",
                          "type": "bytes"
                        }
                      ]
                    },
                    {
                      "internalType": "contract IAsset[]",
                      "name": "assets",
                      "type": "address[]"
                    },
                    {
                      "internalType": "struct IVault.FundManagement",
                      "name": "funds",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "address",
                          "name": "sender",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "fromInternalBalance",
                          "type": "bool"
                        },
                        {
                          "internalType": "address payable",
                          "name": "recipient",
                          "type": "address"
                        },
                        {
                          "internalType": "bool",
                          "name": "toInternalBalance",
                          "type": "bool"
                        }
                      ]
                    },
                    {
                      "internalType": "contract IAggregatorV3",
                      "name": "rewardOracle",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAggregatorV3",
                      "name": "underlyingOracle",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slippageD",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "internalParams_": "Initial Internal Params"
            }
          },
          "delayedProtocolPerVaultParamsTimestamp(uint256)": {
            "params": {
              "nft": "Nft of the vault"
            }
          },
          "delayedStrategyParamsTimestamp(uint256)": {
            "params": {
              "nft": "Nft of the vault"
            }
          },
          "setStrategyParams(uint256,(((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256)[]))": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "stageInternalParams((address,address,address))": {
            "params": {
              "newParams": "New Internal Params"
            }
          },
          "stagedInternalParams()": {
            "details": "The Internal Params could be committed after internalParamsTimestamp"
          },
          "strategyParams(uint256)": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "commitInternalParams()": {
            "notice": "Commit staged Internal Params."
          },
          "constructor": {
            "notice": "Creates a new contract."
          },
          "delayedProtocolParamsTimestamp()": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed."
          },
          "delayedProtocolPerVaultParamsTimestamp(uint256)": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed."
          },
          "delayedStrategyParamsTimestamp(uint256)": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed."
          },
          "internalParams()": {
            "notice": "Internal Params of the contract."
          },
          "internalParamsTimestamp()": {
            "notice": "Timestamp in unix time seconds after which staged Internal Params could be committed."
          },
          "setStrategyParams(uint256,(((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256)[]))": {
            "notice": "Delayed Strategy Params staged for commit after delay."
          },
          "stageInternalParams((address,address,address))": {
            "notice": "Stage new Internal Params."
          },
          "stagedInternalParams()": {
            "notice": "Staged new Internal Params."
          },
          "strategyParams(uint256)": {
            "notice": "Delayed Strategy Params"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/vaults/AuraVaultGovernance.sol": "AuraVaultGovernance"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999",
        "urls": [
          "bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb",
          "dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolGovernance.sol": {
        "keccak256": "0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e",
        "urls": [
          "bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281",
          "dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b"
        ],
        "license": "MIT"
      },
      "src/interfaces/IUnitPricesGovernance.sol": {
        "keccak256": "0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081",
        "urls": [
          "bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87",
          "dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk"
        ],
        "license": "MIT"
      },
      "src/interfaces/IVaultRegistry.sol": {
        "keccak256": "0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55",
        "urls": [
          "bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50",
          "dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/aura/IAuraBaseRewardPool.sol": {
        "keccak256": "0x95407f87e02b389f9640bce9ac247a110facf8d2a7042871eb0e27ce8405a3ce",
        "urls": [
          "bzz-raw://40dc17373dce538e14ed941406ede29944afd204d8bc3395e1578502cb151c7b",
          "dweb:/ipfs/QmPJRQ5hZM19LiKN34yd1rKC7dAUQw7mmHFzLLQnxFtGKc"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/aura/IAuraBooster.sol": {
        "keccak256": "0x1dd80252ed7213917c7dfc56f0d724be4a93eb932a5545ed3ca76fc74f00ed00",
        "urls": [
          "bzz-raw://a1e9a1af9d65e80a1b92ad5d3dbcd5e0f268b8bcad69e258be03380d4cbc56e3",
          "dweb:/ipfs/QmPpkAHwSv6vgqeWjqSAN323YJfc2PDsaQMNVUE2hnchnY"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/balancer/pool-stable/StablePoolUserData.sol": {
        "keccak256": "0x0503d49c1242d38b10cb896d34d85a0bab80c5ce3f253016f4bb51833c359cc0",
        "urls": [
          "bzz-raw://f196af8f3d311b83993cbf85866597358635d5619b25bf33f863be7f093b087c",
          "dweb:/ipfs/QmSFcZUB1Lv4h4G89N2wR2yAgumtc2CszhRpnYcvYfzpmT"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/pool-utils/IManagedPool.sol": {
        "keccak256": "0x09b700bb2a67ad9cc0e19455a7d55d4e2efeaaa380e19969dcc7acceb795fd4f",
        "urls": [
          "bzz-raw://7b013e3dee42088da1b696c5f652535c4ebe68c86dbefc11573ff180df44d7d9",
          "dweb:/ipfs/QmR2yymvt2ACn3qz69gY3sMoUCY9zEnsR4kBF1489cw2si"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/pool-weighted/WeightedPoolUserData.sol": {
        "keccak256": "0xa14005e22ad66472bfe0552caa51b47811c0cee43d7f8ae20811aff63816766b",
        "urls": [
          "bzz-raw://a694b1a00727ce3e694782623eef5c48a1e5b095ceeaed0b33d73685ab69f392",
          "dweb:/ipfs/QmWuTEoUxU2D3y1ASnLdZnGb7joRsjn9RimizT19FVieot"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/helpers/IAuthentication.sol": {
        "keccak256": "0x8032fd6d7f660d9536d252897336462bb932d1e91bd3b87c087be017a35dc842",
        "urls": [
          "bzz-raw://3724cffd85daa36371999e0e9ea56617df12fd7f2cc5c123139705766e3b89a1",
          "dweb:/ipfs/QmaM2wHuKrpKcc8mRhdYmXqPVAimHjGK1xubPWXKafiKYa"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/helpers/ISignaturesValidator.sol": {
        "keccak256": "0x52bd09272e9ec2cff838df757e8b690ff4ca3f4f07e9edd9b711e31e474dd979",
        "urls": [
          "bzz-raw://92ae86c99ce4b92fc666a4c6053bc5ae2932d07b23471647cae7c541c68071b3",
          "dweb:/ipfs/QmeKHMVTVLfG5MKQ7ewM7uwB41WEXkDKhkkL3qCd7mokFo"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/helpers/ITemporarilyPausable.sol": {
        "keccak256": "0xf952ad04a5d4e8523212315e19b8d874e13ceadb7dbc1f5025510da1e153405c",
        "urls": [
          "bzz-raw://81d7e364e8c7a76879f9be650559d3de53879918ab721372931d0e51daa464b5",
          "dweb:/ipfs/QmNyXjvxr3cXzVeBaPrApS9fdjufyN6dXtjGy746xxtj2z"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/misc/IWETH.sol": {
        "keccak256": "0x90278f677649701309ab0902f5bca2fd0d9603e5ce7193b15cf05a7c5582c3b9",
        "urls": [
          "bzz-raw://991dce71671de9fb0f5fafda69994705e358a5cb235bc3acf961dbc9895b6dd6",
          "dweb:/ipfs/QmP7479cjgvMa2DjXNSB6gvHZ2WibU4TGb3DTjqw6UuFb6"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol": {
        "keccak256": "0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835",
        "urls": [
          "bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f",
          "dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/balancer/vault/IAsset.sol": {
        "keccak256": "0x746354db670eb3b94179963b522c4deb0b9854483ab293e3025689749923ebef",
        "urls": [
          "bzz-raw://bcd5a7e0519f94c25f4e3b568b8c0446b2240bd3808c56c3b498a6fed459b2e4",
          "dweb:/ipfs/QmRXvcCy9oKhwPMr8QQ74pg9jormcgq3GHmLSGTDhUWAsn"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IAuthorizer.sol": {
        "keccak256": "0x4adfebbc478ab323d0679386ef8e2384f5205eb280f72757c151eca62ea4f91b",
        "urls": [
          "bzz-raw://49a34c9ad9cb559931b465cea2d570ab015751c6dbc4a52eab8c36b5b949eec1",
          "dweb:/ipfs/QmUiUSZz8gjANUcTqaPCfNkUp3gpjt8Qq2z4UWuQWhaK34"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IBasePool.sol": {
        "keccak256": "0x2a655dcb1150402a7446dc41a9ff2f3cf1ae5caa6d2384bddee08aac1d417e77",
        "urls": [
          "bzz-raw://c506e6beb0542dcb9861f3d4b524f2ff716cdcf5513b2132c24f954ee22f25c9",
          "dweb:/ipfs/QmcJ1dLRHbLMGiYvS8TH1W6G61beZy8MmiSvzFw11UxLQv"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IFlashLoanRecipient.sol": {
        "keccak256": "0xef16377e5ee7ac8151fe8abc3f7b8f0a420008ae1c1336f3cbaea5e171403a43",
        "urls": [
          "bzz-raw://ca460a387ce27682beecc1f93a07c7ef6139504f2d4e2fce715abe82b6d2b039",
          "dweb:/ipfs/QmS8QgcAqhtHepcf8LYGToutbhsUXaTE7UNLQQi4fBJsUC"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IPoolSwapStructs.sol": {
        "keccak256": "0x6bcc1ff0bbbe512e442e1f5a10c79e124a67fb2eae15c7ef2885679f30abfb06",
        "urls": [
          "bzz-raw://cd2c36763fb58b288f317735ee23d464499c9c98056cca5c601ba0398c70a7b9",
          "dweb:/ipfs/QmUSgTJCuzNFrscqZZFWfLQsEvX6v2bqJ5piFQa4o8aiZy"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IProtocolFeesCollector.sol": {
        "keccak256": "0xa42e8b311517ce70dd7f2af6b497603a81c3dd678961a5ffd8a2968eff6b7b5a",
        "urls": [
          "bzz-raw://9a11ea954c234e348896cec60165624d71e9fe7b44d7341d74e3bdc7790f2b6a",
          "dweb:/ipfs/QmNq1f6yAeJawBKpMmfNyoQ84nZquQ78YtT3tt3dMBtyCK"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IVault.sol": {
        "keccak256": "0x08d254ba643e02507305b570f794a75b5439d2ae799f761d26d3a2fd77f6d2fb",
        "urls": [
          "bzz-raw://2de3bcdb5d5805a44e2c643bc76bc14858825b2b018049f89962c8bc532ac24d",
          "dweb:/ipfs/QmfWZGKRChzwe97R8nqShjKdRX5k8Tp9HKwr7UAq9rCg1m"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/chainlink/IAggregatorV3.sol": {
        "keccak256": "0xf195bb6bcab2877ab2cfb75351c0793d64e2ace9749f496f056ba62bebd5a1d9",
        "urls": [
          "bzz-raw://5960730ba2adbff9392dc85761144c2962a410e188032e6d0e32f7457ffc0886",
          "dweb:/ipfs/QmTnVyDhfmkk6zpUubUWZsBmC9qCPAPSWB9GGmtDebuEFV"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/erc/IERC1271.sol": {
        "keccak256": "0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36",
        "urls": [
          "bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779",
          "dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IContractMeta.sol": {
        "keccak256": "0x7ce236cea17798c2c9e60a659e727ef188f6579315b8227d0c6ad067a33900fb",
        "urls": [
          "bzz-raw://31c232f85d6565414bdf292adacc3054ab2355878e4d4508fc86fc2787436f24",
          "dweb:/ipfs/QmVhEUkN5Rwqpyufn7qqT88LLdq885igE57Pk4LzgJb9Kp"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IDefaultAccessControl.sol": {
        "keccak256": "0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60",
        "urls": [
          "bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add",
          "dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IAuraVault.sol": {
        "keccak256": "0x7aee99720d0c7c3e3239876e4a89276f6aa33ce901748d3f9297acc8e674d19a",
        "urls": [
          "bzz-raw://95a27850064ad5e5e94195c6ec26ed4e7227bf4096775c1b26d58d3d7fb84d22",
          "dweb:/ipfs/QmNXotpRMQrWKaayvAiFiYYHau9VrUvQVYz3jyTN1uafzp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/vaults/IAuraVaultGovernance.sol": {
        "keccak256": "0x650d2d9af6645474bce8c43ee03db7ef13eb2d224ed1ec8105c7598b354ff402",
        "urls": [
          "bzz-raw://f17f154d888c4c2998f2f9a45ed3f5467e152a41605b4e2944a2b8fd636e7a4f",
          "dweb:/ipfs/QmdKL44YFp54AfWKCyC7yhzXRfugCAMXTgdZRpXhurcBs2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/vaults/IIntegrationVault.sol": {
        "keccak256": "0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e",
        "urls": [
          "bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d",
          "dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVault.sol": {
        "keccak256": "0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43",
        "urls": [
          "bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1",
          "dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultGovernance.sol": {
        "keccak256": "0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813",
        "urls": [
          "bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375",
          "dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu"
        ],
        "license": "MIT"
      },
      "src/libraries/ExceptionsLibrary.sol": {
        "keccak256": "0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff",
        "urls": [
          "bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f",
          "dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX"
        ],
        "license": "MIT"
      },
      "src/libraries/PermissionIdsLibrary.sol": {
        "keccak256": "0xc6a4f2515d807b2ad95e9e8f7190c5ea85ab6603d2c1136632a8af9c479ecfcf",
        "urls": [
          "bzz-raw://4e16f3d1e595ffa5b20cd1588e839ee783b1ca246d489cbe42040fd3089bb8b1",
          "dweb:/ipfs/QmQdW5ykrjB5yMMxkU5zTR4GJ5kBhyrnAbmt3mvtB55kuC"
        ],
        "license": "MIT"
      },
      "src/utils/ContractMeta.sol": {
        "keccak256": "0x6e1fe2b6e0907a5388a5775be53bbfb55883aacc0ccb7597dfc6475fa9834c3f",
        "urls": [
          "bzz-raw://9f8a2c5073a97b514829bac140bf84391cc5702185c4d6813e47b61ce53515e6",
          "dweb:/ipfs/QmeuMJq2ciSaDZC8qiUGLPfAHBjpCE4v79fZiaWm8egAks"
        ],
        "license": "BUSL-1.1"
      },
      "src/vaults/AuraVaultGovernance.sol": {
        "keccak256": "0xc6b3e86718e00360f32596e5d9a272f991e5772c9dec75366b0f807fb9679444",
        "urls": [
          "bzz-raw://193d3c21d4aadd944f9ff81c517bbfca56de8b58081915df8053587a7bc453a7",
          "dweb:/ipfs/QmWYtRaT7dwZ5yDqaKGUF1ibpH16TAnyTHUwuQgZdRx4s1"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/vaults/VaultGovernance.sol": {
        "keccak256": "0xd484ec7eee06480da27027a0ac81f591440ecdd2ba7bd5bfdee58a3f9e88c22c",
        "urls": [
          "bzz-raw://8b4f08e9350fadeb03b9561a2fb2798821f7186fe8663207c91402ea62a53cc5",
          "dweb:/ipfs/QmUr73ghYfPzjtFgxE8mPjw5wFwQTQsbcLDGJNQVfT4rEV"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/vaults/AuraVaultGovernance.sol",
    "id": 135949,
    "exportedSymbols": {
      "AuraVaultGovernance": [
        135948
      ],
      "Clones": [
        43615
      ],
      "ContractMeta": [
        114987
      ],
      "ERC165": [
        48061
      ],
      "ExceptionsLibrary": [
        79454
      ],
      "IAccessControl": [
        43366
      ],
      "IAccessControlEnumerable": [
        43391
      ],
      "IAggregatorV3": [
        63323
      ],
      "IAsset": [
        61808
      ],
      "IAuraBaseRewardPool": [
        56364
      ],
      "IAuraBooster": [
        56408
      ],
      "IAuraVault": [
        76232
      ],
      "IAuraVaultGovernance": [
        76317
      ],
      "IBalancerERC20": [
        60345
      ],
      "IBalancerVault": [
        63277
      ],
      "IContractMeta": [
        75764
      ],
      "IDefaultAccessControl": [
        75786
      ],
      "IERC1271": [
        64026
      ],
      "IERC165": [
        48073
      ],
      "IERC721": [
        46687
      ],
      "IIntegrationVault": [
        77767
      ],
      "IManagedPool": [
        58882
      ],
      "IProtocolGovernance": [
        52868
      ],
      "IUnitPricesGovernance": [
        52921
      ],
      "IVault": [
        78599
      ],
      "IVaultGovernance": [
        78668
      ],
      "IVaultRegistry": [
        53012
      ],
      "PermissionIdsLibrary": [
        79479
      ],
      "StablePoolUserData": [
        58481
      ],
      "VaultGovernance": [
        158218
      ],
      "WeightedPoolUserData": [
        59492
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:3550:449",
    "nodes": [
      {
        "id": 135675,
        "nodeType": "PragmaDirective",
        "src": "45:23:449",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 135676,
        "nodeType": "ImportDirective",
        "src": "70:55:449",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/IAuraVaultGovernance.sol",
        "file": "../interfaces/vaults/IAuraVaultGovernance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 135949,
        "sourceUnit": 76318,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 135677,
        "nodeType": "ImportDirective",
        "src": "126:44:449",
        "nodes": [],
        "absolutePath": "src/libraries/ExceptionsLibrary.sol",
        "file": "../libraries/ExceptionsLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 135949,
        "sourceUnit": 79455,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 135678,
        "nodeType": "ImportDirective",
        "src": "171:35:449",
        "nodes": [],
        "absolutePath": "src/utils/ContractMeta.sol",
        "file": "../utils/ContractMeta.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 135949,
        "sourceUnit": 114988,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 135679,
        "nodeType": "ImportDirective",
        "src": "207:31:449",
        "nodes": [],
        "absolutePath": "src/vaults/VaultGovernance.sol",
        "file": "./VaultGovernance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 135949,
        "sourceUnit": 158219,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 135948,
        "nodeType": "ContractDefinition",
        "src": "344:3250:449",
        "nodes": [
          {
            "id": 135697,
            "nodeType": "FunctionDefinition",
            "src": "529:86:449",
            "nodes": [],
            "body": {
              "id": 135696,
              "nodeType": "Block",
              "src": "613:2:449",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 135687,
              "nodeType": "StructuredDocumentation",
              "src": "434:90:449",
              "text": "@notice Creates a new contract.\n @param internalParams_ Initial Internal Params"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 135693,
                    "name": "internalParams_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 135690,
                    "src": "596:15:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InternalParams_$78614_memory_ptr",
                      "typeString": "struct IVaultGovernance.InternalParams memory"
                    }
                  }
                ],
                "id": 135694,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 135692,
                  "name": "VaultGovernance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 158218,
                  "src": "580:15:449"
                },
                "nodeType": "ModifierInvocation",
                "src": "580:32:449"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 135691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135690,
                  "mutability": "mutable",
                  "name": "internalParams_",
                  "nameLocation": "563:15:449",
                  "nodeType": "VariableDeclaration",
                  "scope": 135697,
                  "src": "541:37:449",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InternalParams_$78614_memory_ptr",
                    "typeString": "struct IVaultGovernance.InternalParams"
                  },
                  "typeName": {
                    "id": 135689,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 135688,
                      "name": "InternalParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78614,
                      "src": "541:14:449"
                    },
                    "referencedDeclaration": 78614,
                    "src": "541:14:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InternalParams_$78614_storage_ptr",
                      "typeString": "struct IVaultGovernance.InternalParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "540:39:449"
            },
            "returnParameters": {
              "id": 135695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "613:0:449"
            },
            "scope": 135948,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 135733,
            "nodeType": "FunctionDefinition",
            "src": "727:291:449",
            "nodes": [],
            "body": {
              "id": 135732,
              "nodeType": "Block",
              "src": "810:208:449",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 135711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 135706,
                          "name": "_strategyParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157451,
                          "src": "824:15:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                            "typeString": "mapping(uint256 => bytes storage ref)"
                          }
                        },
                        "id": 135708,
                        "indexExpression": {
                          "id": 135707,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135700,
                          "src": "840:3:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "824:20:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 135709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "824:27:449",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 135710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "855:1:449",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "824:32:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 135722,
                  "nodeType": "IfStatement",
                  "src": "820:125:449",
                  "trueBody": {
                    "id": 135721,
                    "nodeType": "Block",
                    "src": "858:87:449",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 135717,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "930:1:449",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 135716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "913:16:449",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_SwapParams_$76277_memory_ptr_$dyn_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (struct IAuraVaultGovernance.SwapParams memory[] memory)"
                                },
                                "typeName": {
                                  "baseType": {
                                    "id": 135714,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 135713,
                                      "name": "SwapParams",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 76277,
                                      "src": "917:10:449"
                                    },
                                    "referencedDeclaration": 76277,
                                    "src": "917:10:449",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SwapParams_$76277_storage_ptr",
                                      "typeString": "struct IAuraVaultGovernance.SwapParams"
                                    }
                                  },
                                  "id": 135715,
                                  "nodeType": "ArrayTypeName",
                                  "src": "917:12:449",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_SwapParams_$76277_storage_$dyn_storage_ptr",
                                    "typeString": "struct IAuraVaultGovernance.SwapParams[]"
                                  }
                                }
                              },
                              "id": 135718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "913:19:449",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_SwapParams_$76277_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct IAuraVaultGovernance.SwapParams memory[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_SwapParams_$76277_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct IAuraVaultGovernance.SwapParams memory[] memory"
                              }
                            ],
                            "id": 135712,
                            "name": "StrategyParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76257,
                            "src": "879:14:449",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_StrategyParams_$76257_storage_ptr_$",
                              "typeString": "type(struct IAuraVaultGovernance.StrategyParams storage pointer)"
                            }
                          },
                          "id": 135719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "tokensSwapParams"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "879:55:449",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StrategyParams_$76257_memory_ptr",
                            "typeString": "struct IAuraVaultGovernance.StrategyParams memory"
                          }
                        },
                        "functionReturnParameters": 135705,
                        "id": 135720,
                        "nodeType": "Return",
                        "src": "872:62:449"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 135725,
                          "name": "_strategyParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157451,
                          "src": "972:15:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                            "typeString": "mapping(uint256 => bytes storage ref)"
                          }
                        },
                        "id": 135727,
                        "indexExpression": {
                          "id": 135726,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135700,
                          "src": "988:3:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "972:20:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 135728,
                            "name": "StrategyParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76257,
                            "src": "995:14:449",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_StrategyParams_$76257_storage_ptr_$",
                              "typeString": "type(struct IAuraVaultGovernance.StrategyParams storage pointer)"
                            }
                          }
                        ],
                        "id": 135729,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "994:16:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_StrategyParams_$76257_storage_ptr_$",
                          "typeString": "type(struct IAuraVaultGovernance.StrategyParams storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_StrategyParams_$76257_storage_ptr_$",
                          "typeString": "type(struct IAuraVaultGovernance.StrategyParams storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 135723,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "961:3:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 135724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "961:10:449",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 135730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "961:50:449",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$76257_memory_ptr",
                      "typeString": "struct IAuraVaultGovernance.StrategyParams memory"
                    }
                  },
                  "functionReturnParameters": 135705,
                  "id": 135731,
                  "nodeType": "Return",
                  "src": "954:57:449"
                }
              ]
            },
            "baseFunctions": [
              76307
            ],
            "documentation": {
              "id": 135698,
              "nodeType": "StructuredDocumentation",
              "src": "686:36:449",
              "text": "@inheritdoc IAuraVaultGovernance"
            },
            "functionSelector": "12466b68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "strategyParams",
            "nameLocation": "736:14:449",
            "parameters": {
              "id": 135701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135700,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "759:3:449",
                  "nodeType": "VariableDeclaration",
                  "scope": 135733,
                  "src": "751:11:449",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:7:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "750:13:449"
            },
            "returnParameters": {
              "id": 135705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135704,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 135733,
                  "src": "787:21:449",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$76257_memory_ptr",
                    "typeString": "struct IAuraVaultGovernance.StrategyParams"
                  },
                  "typeName": {
                    "id": 135703,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 135702,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76257,
                      "src": "787:14:449"
                    },
                    "referencedDeclaration": 76257,
                    "src": "787:14:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$76257_storage_ptr",
                      "typeString": "struct IAuraVaultGovernance.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "786:23:449"
            },
            "scope": 135948,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 135755,
            "nodeType": "FunctionDefinition",
            "src": "1052:208:449",
            "nodes": [],
            "body": {
              "id": 135754,
              "nodeType": "Block",
              "src": "1143:117:449",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 135752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 135744,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135736,
                          "src": "1184:11:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 135742,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1160:5:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_AuraVaultGovernance_$135948_$",
                            "typeString": "type(contract super AuraVaultGovernance)"
                          }
                        },
                        "id": 135743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 157598,
                        "src": "1160:23:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 135745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1160:36:449",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 135751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 135747,
                              "name": "IAuraVaultGovernance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76317,
                              "src": "1205:20:449",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IAuraVaultGovernance_$76317_$",
                                "typeString": "type(contract IAuraVaultGovernance)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IAuraVaultGovernance_$76317_$",
                                "typeString": "type(contract IAuraVaultGovernance)"
                              }
                            ],
                            "id": 135746,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1200:4:449",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 135748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1200:26:449",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IAuraVaultGovernance_$76317",
                            "typeString": "type(contract IAuraVaultGovernance)"
                          }
                        },
                        "id": 135749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "1200:38:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 135750,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135736,
                        "src": "1242:11:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "1200:53:449",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1160:93:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 135741,
                  "id": 135753,
                  "nodeType": "Return",
                  "src": "1153:100:449"
                }
              ]
            },
            "baseFunctions": [
              157598
            ],
            "documentation": {
              "id": 135734,
              "nodeType": "StructuredDocumentation",
              "src": "1024:23:449",
              "text": "@inheritdoc IERC165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1061:17:449",
            "overrides": {
              "id": 135738,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1119:8:449"
            },
            "parameters": {
              "id": 135737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135736,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1086:11:449",
                  "nodeType": "VariableDeclaration",
                  "scope": 135755,
                  "src": "1079:18:449",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 135735,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:6:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1078:20:449"
            },
            "returnParameters": {
              "id": 135741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135740,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 135755,
                  "src": "1137:4:449",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 135739,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1137:4:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1136:6:449"
            },
            "scope": 135948,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 135842,
            "nodeType": "FunctionDefinition",
            "src": "1376:671:449",
            "nodes": [],
            "body": {
              "id": 135841,
              "nodeType": "Block",
              "src": "1457:590:449",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 135822,
                    "nodeType": "Block",
                    "src": "1528:392:449",
                    "statements": [
                      {
                        "assignments": [
                          135778
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 135778,
                            "mutability": "mutable",
                            "name": "params_",
                            "nameLocation": "1560:7:449",
                            "nodeType": "VariableDeclaration",
                            "scope": 135822,
                            "src": "1542:25:449",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapParams_$76277_memory_ptr",
                              "typeString": "struct IAuraVaultGovernance.SwapParams"
                            },
                            "typeName": {
                              "id": 135777,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 135776,
                                "name": "SwapParams",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 76277,
                                "src": "1542:10:449"
                              },
                              "referencedDeclaration": 76277,
                              "src": "1542:10:449",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SwapParams_$76277_storage_ptr",
                                "typeString": "struct IAuraVaultGovernance.SwapParams"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135783,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 135779,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 135761,
                              "src": "1570:6:449",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StrategyParams_$76257_calldata_ptr",
                                "typeString": "struct IAuraVaultGovernance.StrategyParams calldata"
                              }
                            },
                            "id": 135780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokensSwapParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 76256,
                            "src": "1570:23:449",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_SwapParams_$76277_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct IAuraVaultGovernance.SwapParams calldata[] calldata"
                            }
                          },
                          "id": 135782,
                          "indexExpression": {
                            "id": 135781,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135765,
                            "src": "1594:1:449",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1570:26:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapParams_$76277_calldata_ptr",
                            "typeString": "struct IAuraVaultGovernance.SwapParams calldata"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1542:54:449"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 135817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 135806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 135795,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 135789,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 135785,
                                          "name": "params_",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 135778,
                                          "src": "1635:7:449",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_SwapParams_$76277_memory_ptr",
                                            "typeString": "struct IAuraVaultGovernance.SwapParams memory"
                                          }
                                        },
                                        "id": 135786,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "swaps",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 76261,
                                        "src": "1635:13:449",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$63145_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct IVault.BatchSwapStep memory[] memory"
                                        }
                                      },
                                      "id": 135787,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "1635:20:449",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 135788,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1658:1:449",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "1635:24:449",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 135794,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 135790,
                                          "name": "params_",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 135778,
                                          "src": "1683:7:449",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_SwapParams_$76277_memory_ptr",
                                            "typeString": "struct IAuraVaultGovernance.SwapParams memory"
                                          }
                                        },
                                        "id": 135791,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "assets",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 76265,
                                        "src": "1683:14:449",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_contract$_IAsset_$61808_$dyn_memory_ptr",
                                          "typeString": "contract IAsset[] memory"
                                        }
                                      },
                                      "id": 135792,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "1683:21:449",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 135793,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1707:1:449",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "1683:25:449",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "1635:73:449",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 135805,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 135798,
                                          "name": "params_",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 135778,
                                          "src": "1740:7:449",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_SwapParams_$76277_memory_ptr",
                                            "typeString": "struct IAuraVaultGovernance.SwapParams memory"
                                          }
                                        },
                                        "id": 135799,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "rewardOracle",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 76271,
                                        "src": "1740:20:449",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IAggregatorV3_$63323",
                                          "typeString": "contract IAggregatorV3"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IAggregatorV3_$63323",
                                          "typeString": "contract IAggregatorV3"
                                        }
                                      ],
                                      "id": 135797,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1732:7:449",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 135796,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1732:7:449",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 135800,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1732:29:449",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 135803,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1773:1:449",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 135802,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1765:7:449",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 135801,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1765:7:449",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 135804,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1765:10:449",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "1732:43:449",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "1635:140:449",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 135816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 135809,
                                        "name": "params_",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 135778,
                                        "src": "1807:7:449",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_SwapParams_$76277_memory_ptr",
                                          "typeString": "struct IAuraVaultGovernance.SwapParams memory"
                                        }
                                      },
                                      "id": 135810,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "underlyingOracle",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 76274,
                                      "src": "1807:24:449",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IAggregatorV3_$63323",
                                        "typeString": "contract IAggregatorV3"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IAggregatorV3_$63323",
                                        "typeString": "contract IAggregatorV3"
                                      }
                                    ],
                                    "id": 135808,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1799:7:449",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 135807,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1799:7:449",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 135811,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1799:33:449",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 135814,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1844:1:449",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 135813,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1836:7:449",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 135812,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1836:7:449",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 135815,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1836:10:449",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1799:47:449",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1635:211:449",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 135818,
                                "name": "ExceptionsLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79454,
                                "src": "1864:17:449",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                                  "typeString": "type(library ExceptionsLibrary)"
                                }
                              },
                              "id": 135819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "INVALID_VALUE",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 79426,
                              "src": "1864:31:449",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 135784,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1610:7:449",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 135820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1610:299:449",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 135821,
                        "nodeType": "ExpressionStatement",
                        "src": "1610:299:449"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 135772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 135768,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135765,
                      "src": "1487:1:449",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 135769,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135761,
                          "src": "1491:6:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StrategyParams_$76257_calldata_ptr",
                            "typeString": "struct IAuraVaultGovernance.StrategyParams calldata"
                          }
                        },
                        "id": 135770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokensSwapParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76256,
                        "src": "1491:23:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SwapParams_$76277_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IAuraVaultGovernance.SwapParams calldata[] calldata"
                        }
                      },
                      "id": 135771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1491:30:449",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1487:34:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 135823,
                  "initializationExpression": {
                    "assignments": [
                      135765
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 135765,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1480:1:449",
                        "nodeType": "VariableDeclaration",
                        "scope": 135823,
                        "src": "1472:9:449",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 135764,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1472:7:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 135767,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 135766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1484:1:449",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1472:13:449"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 135774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1523:3:449",
                      "subExpression": {
                        "id": 135773,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135765,
                        "src": "1523:1:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 135775,
                    "nodeType": "ExpressionStatement",
                    "src": "1523:3:449"
                  },
                  "nodeType": "ForStatement",
                  "src": "1467:453:449"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135825,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135758,
                        "src": "1948:3:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 135828,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135761,
                            "src": "1964:6:449",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyParams_$76257_calldata_ptr",
                              "typeString": "struct IAuraVaultGovernance.StrategyParams calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_StrategyParams_$76257_calldata_ptr",
                              "typeString": "struct IAuraVaultGovernance.StrategyParams calldata"
                            }
                          ],
                          "expression": {
                            "id": 135826,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1953:3:449",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 135827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1953:10:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 135829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1953:18:449",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 135824,
                      "name": "_setStrategyParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158149,
                      "src": "1929:18:449",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 135830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1929:43:449",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135831,
                  "nodeType": "ExpressionStatement",
                  "src": "1929:43:449"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 135833,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "2005:2:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 135834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "2005:9:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 135835,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2016:3:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 135836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2016:10:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 135837,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135758,
                        "src": "2028:3:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 135838,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135761,
                        "src": "2033:6:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StrategyParams_$76257_calldata_ptr",
                          "typeString": "struct IAuraVaultGovernance.StrategyParams calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_StrategyParams_$76257_calldata_ptr",
                          "typeString": "struct IAuraVaultGovernance.StrategyParams calldata"
                        }
                      ],
                      "id": 135832,
                      "name": "SetStrategyParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135947,
                      "src": "1987:17:449",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_StrategyParams_$76257_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct IAuraVaultGovernance.StrategyParams memory)"
                      }
                    },
                    "id": 135839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1987:53:449",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135840,
                  "nodeType": "EmitStatement",
                  "src": "1982:58:449"
                }
              ]
            },
            "baseFunctions": [
              76316
            ],
            "documentation": {
              "id": 135756,
              "nodeType": "StructuredDocumentation",
              "src": "1335:36:449",
              "text": "@inheritdoc IAuraVaultGovernance"
            },
            "functionSelector": "c6b22e0b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategyParams",
            "nameLocation": "1385:17:449",
            "parameters": {
              "id": 135762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135758,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "1411:3:449",
                  "nodeType": "VariableDeclaration",
                  "scope": 135842,
                  "src": "1403:11:449",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:7:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135761,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "1440:6:449",
                  "nodeType": "VariableDeclaration",
                  "scope": 135842,
                  "src": "1416:30:449",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$76257_calldata_ptr",
                    "typeString": "struct IAuraVaultGovernance.StrategyParams"
                  },
                  "typeName": {
                    "id": 135760,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 135759,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76257,
                      "src": "1416:14:449"
                    },
                    "referencedDeclaration": 76257,
                    "src": "1416:14:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$76257_storage_ptr",
                      "typeString": "struct IAuraVaultGovernance.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1402:45:449"
            },
            "returnParameters": {
              "id": 135763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1457:0:449"
            },
            "scope": 135948,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 135911,
            "nodeType": "FunctionDefinition",
            "src": "2094:742:449",
            "nodes": [],
            "body": {
              "id": 135910,
              "nodeType": "Block",
              "src": "2361:475:449",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    135865
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135865,
                      "mutability": "mutable",
                      "name": "vaddr",
                      "nameLocation": "2379:5:449",
                      "nodeType": "VariableDeclaration",
                      "scope": 135910,
                      "src": "2371:13:449",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 135864,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2371:7:449",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 135866,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2371:13:449"
                },
                {
                  "expression": {
                    "id": 135873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 135867,
                          "name": "vaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135865,
                          "src": "2395:5:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 135868,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135862,
                          "src": "2402:3:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 135869,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2394:12:449",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 135871,
                          "name": "owner_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135848,
                          "src": "2422:6:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 135870,
                        "name": "_createVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157867,
                        "src": "2409:12:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$_t_uint256_$",
                          "typeString": "function (address) returns (address,uint256)"
                        }
                      },
                      "id": 135872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2409:20:449",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "src": "2394:35:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135874,
                  "nodeType": "ExpressionStatement",
                  "src": "2394:35:449"
                },
                {
                  "expression": {
                    "id": 135879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 135875,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135860,
                      "src": "2439:5:449",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAuraVault_$76232",
                        "typeString": "contract IAuraVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 135877,
                          "name": "vaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135865,
                          "src": "2458:5:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 135876,
                        "name": "IAuraVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76232,
                        "src": "2447:10:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IAuraVault_$76232_$",
                          "typeString": "type(contract IAuraVault)"
                        }
                      },
                      "id": 135878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2447:17:449",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAuraVault_$76232",
                        "typeString": "contract IAuraVault"
                      }
                    },
                    "src": "2439:25:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuraVault_$76232",
                      "typeString": "contract IAuraVault"
                    }
                  },
                  "id": 135880,
                  "nodeType": "ExpressionStatement",
                  "src": "2439:25:449"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135884,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135862,
                        "src": "2492:3:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 135885,
                        "name": "vaultTokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135846,
                        "src": "2497:12:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 135886,
                        "name": "pool_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135850,
                        "src": "2511:5:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 135887,
                        "name": "balancerVault_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135852,
                        "src": "2518:14:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 135888,
                        "name": "stakingLiquidityGauge_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135854,
                        "src": "2534:22:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 135889,
                        "name": "balancerMinter_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135856,
                        "src": "2558:15:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 135881,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135860,
                        "src": "2475:5:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAuraVault_$76232",
                          "typeString": "contract IAuraVault"
                        }
                      },
                      "id": 135883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76215,
                      "src": "2475:16:449",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address[] memory,address,address,address,address) external"
                      }
                    },
                    "id": 135890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2475:99:449",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135891,
                  "nodeType": "ExpressionStatement",
                  "src": "2475:99:449"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 135893,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "2616:2:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 135894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "2616:9:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 135895,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2639:3:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 135896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2639:10:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 135897,
                        "name": "vaultTokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135846,
                        "src": "2663:12:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 135900,
                            "name": "pool_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135850,
                            "src": "2700:5:449",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 135901,
                            "name": "balancerVault_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135852,
                            "src": "2707:14:449",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 135902,
                            "name": "stakingLiquidityGauge_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135854,
                            "src": "2723:22:449",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 135903,
                            "name": "balancerMinter_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135856,
                            "src": "2747:15:449",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 135898,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2689:3:449",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 135899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2689:10:449",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 135904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2689:74:449",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 135905,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135848,
                        "src": "2777:6:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 135906,
                        "name": "vaddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135865,
                        "src": "2797:5:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 135907,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135862,
                        "src": "2816:3:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 135892,
                      "name": "DeployedVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158217,
                      "src": "2589:13:449",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address[] memory,bytes memory,address,address,uint256)"
                      }
                    },
                    "id": 135908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2589:240:449",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135909,
                  "nodeType": "EmitStatement",
                  "src": "2584:245:449"
                }
              ]
            },
            "baseFunctions": [
              76298
            ],
            "documentation": {
              "id": 135843,
              "nodeType": "StructuredDocumentation",
              "src": "2053:36:449",
              "text": "@inheritdoc IAuraVaultGovernance"
            },
            "functionSelector": "c6be9b22",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createVault",
            "nameLocation": "2103:11:449",
            "parameters": {
              "id": 135857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135846,
                  "mutability": "mutable",
                  "name": "vaultTokens_",
                  "nameLocation": "2141:12:449",
                  "nodeType": "VariableDeclaration",
                  "scope": 135911,
                  "src": "2124:29:449",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 135844,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2124:7:449",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 135845,
                    "nodeType": "ArrayTypeName",
                    "src": "2124:9:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135848,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "2171:6:449",
                  "nodeType": "VariableDeclaration",
                  "scope": 135911,
                  "src": "2163:14:449",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 135847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2163:7:449",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135850,
                  "mutability": "mutable",
                  "name": "pool_",
                  "nameLocation": "2195:5:449",
                  "nodeType": "VariableDeclaration",
                  "scope": 135911,
                  "src": "2187:13:449",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 135849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2187:7:449",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135852,
                  "mutability": "mutable",
                  "name": "balancerVault_",
                  "nameLocation": "2218:14:449",
                  "nodeType": "VariableDeclaration",
                  "scope": 135911,
                  "src": "2210:22:449",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 135851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2210:7:449",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135854,
                  "mutability": "mutable",
                  "name": "stakingLiquidityGauge_",
                  "nameLocation": "2250:22:449",
                  "nodeType": "VariableDeclaration",
                  "scope": 135911,
                  "src": "2242:30:449",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 135853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2242:7:449",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135856,
                  "mutability": "mutable",
                  "name": "balancerMinter_",
                  "nameLocation": "2290:15:449",
                  "nodeType": "VariableDeclaration",
                  "scope": 135911,
                  "src": "2282:23:449",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 135855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2282:7:449",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2114:197:449"
            },
            "returnParameters": {
              "id": 135863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135860,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2341:5:449",
                  "nodeType": "VariableDeclaration",
                  "scope": 135911,
                  "src": "2330:16:449",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAuraVault_$76232",
                    "typeString": "contract IAuraVault"
                  },
                  "typeName": {
                    "id": 135859,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 135858,
                      "name": "IAuraVault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76232,
                      "src": "2330:10:449"
                    },
                    "referencedDeclaration": 76232,
                    "src": "2330:10:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAuraVault_$76232",
                      "typeString": "contract IAuraVault"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135862,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "2356:3:449",
                  "nodeType": "VariableDeclaration",
                  "scope": 135911,
                  "src": "2348:11:449",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2348:7:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2329:31:449"
            },
            "scope": 135948,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 135923,
            "nodeType": "FunctionDefinition",
            "src": "2907:120:449",
            "nodes": [],
            "body": {
              "id": 135922,
              "nodeType": "Block",
              "src": "2973:54:449",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "417572615661756c74476f7665726e616e6365",
                        "id": 135919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2998:21:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_627398b5261d628b0ec9efc8bb4b41a080f8e7b01f8c9e91c22584a32ed23022",
                          "typeString": "literal_string \"AuraVaultGovernance\""
                        },
                        "value": "AuraVaultGovernance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_627398b5261d628b0ec9efc8bb4b41a080f8e7b01f8c9e91c22584a32ed23022",
                          "typeString": "literal_string \"AuraVaultGovernance\""
                        }
                      ],
                      "id": 135918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2990:7:449",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 135917,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2990:7:449",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 135920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2990:30:449",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 135916,
                  "id": 135921,
                  "nodeType": "Return",
                  "src": "2983:37:449"
                }
              ]
            },
            "baseFunctions": [
              114934
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_contractName",
            "nameLocation": "2916:13:449",
            "overrides": {
              "id": 135913,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2946:8:449"
            },
            "parameters": {
              "id": 135912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2929:2:449"
            },
            "returnParameters": {
              "id": 135916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135915,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 135923,
                  "src": "2964:7:449",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 135914,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2964:7:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2963:9:449"
            },
            "scope": 135948,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 135935,
            "nodeType": "FunctionDefinition",
            "src": "3033:109:449",
            "nodes": [],
            "body": {
              "id": 135934,
              "nodeType": "Block",
              "src": "3102:40:449",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "312e302e30",
                        "id": 135931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3127:7:449",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                          "typeString": "literal_string \"1.0.0\""
                        },
                        "value": "1.0.0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                          "typeString": "literal_string \"1.0.0\""
                        }
                      ],
                      "id": 135930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3119:7:449",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 135929,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3119:7:449",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 135932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3119:16:449",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 135928,
                  "id": 135933,
                  "nodeType": "Return",
                  "src": "3112:23:449"
                }
              ]
            },
            "baseFunctions": [
              114939
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_contractVersion",
            "nameLocation": "3042:16:449",
            "overrides": {
              "id": 135925,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3075:8:449"
            },
            "parameters": {
              "id": 135924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3058:2:449"
            },
            "returnParameters": {
              "id": 135928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135927,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 135935,
                  "src": "3093:7:449",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 135926,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3093:7:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3092:9:449"
            },
            "scope": 135948,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 135947,
            "nodeType": "EventDefinition",
            "src": "3476:116:449",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 135936,
              "nodeType": "StructuredDocumentation",
              "src": "3219:252:449",
              "text": "@notice Emitted when new StrategyParams are set\n @param origin Origin of the transaction (tx.origin)\n @param sender Sender of the call (msg.sender)\n @param nft VaultRegistry NFT of the vault\n @param params New set params"
            },
            "name": "SetStrategyParams",
            "nameLocation": "3482:17:449",
            "parameters": {
              "id": 135946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135938,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "origin",
                  "nameLocation": "3516:6:449",
                  "nodeType": "VariableDeclaration",
                  "scope": 135947,
                  "src": "3500:22:449",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 135937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3500:7:449",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135940,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3540:6:449",
                  "nodeType": "VariableDeclaration",
                  "scope": 135947,
                  "src": "3524:22:449",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 135939,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3524:7:449",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135942,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "3564:3:449",
                  "nodeType": "VariableDeclaration",
                  "scope": 135947,
                  "src": "3548:19:449",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135941,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3548:7:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135945,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "3584:6:449",
                  "nodeType": "VariableDeclaration",
                  "scope": 135947,
                  "src": "3569:21:449",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$76257_memory_ptr",
                    "typeString": "struct IAuraVaultGovernance.StrategyParams"
                  },
                  "typeName": {
                    "id": 135944,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 135943,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76257,
                      "src": "3569:14:449"
                    },
                    "referencedDeclaration": 76257,
                    "src": "3569:14:449",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$76257_storage_ptr",
                      "typeString": "struct IAuraVaultGovernance.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3499:92:449"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 135681,
              "name": "ContractMeta",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 114987,
              "src": "376:12:449"
            },
            "id": 135682,
            "nodeType": "InheritanceSpecifier",
            "src": "376:12:449"
          },
          {
            "baseName": {
              "id": 135683,
              "name": "IAuraVaultGovernance",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 76317,
              "src": "390:20:449"
            },
            "id": 135684,
            "nodeType": "InheritanceSpecifier",
            "src": "390:20:449"
          },
          {
            "baseName": {
              "id": 135685,
              "name": "VaultGovernance",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 158218,
              "src": "412:15:449"
            },
            "id": 135686,
            "nodeType": "InheritanceSpecifier",
            "src": "412:15:449"
          }
        ],
        "canonicalName": "AuraVaultGovernance",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 135680,
          "nodeType": "StructuredDocumentation",
          "src": "240:104:449",
          "text": "@notice Governance that manages all BalancerV2 Vaults params and can deploy a new BalancerV2 Vault."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          135948,
          158218,
          48061,
          48073,
          76317,
          78668,
          114987,
          75764
        ],
        "name": "AuraVaultGovernance",
        "nameLocation": "353:19:449",
        "scope": 135949,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 449
}