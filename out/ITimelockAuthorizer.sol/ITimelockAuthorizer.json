{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delay",
          "type": "uint256"
        }
      ],
      "name": "ActionDelaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "canceler",
          "type": "address"
        }
      ],
      "name": "CancelerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "canceler",
          "type": "address"
        }
      ],
      "name": "CancelerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newDelay",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        }
      ],
      "name": "DelayChangeScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        }
      ],
      "name": "ExecutionCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        }
      ],
      "name": "ExecutionExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        }
      ],
      "name": "ExecutionScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "executor",
          "type": "address"
        }
      ],
      "name": "ExecutorAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newDelay",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        }
      ],
      "name": "GrantDelayChangeScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delay",
          "type": "uint256"
        }
      ],
      "name": "GrantDelaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "where",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        }
      ],
      "name": "GrantPermissionScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "where",
          "type": "address"
        }
      ],
      "name": "GranterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "where",
          "type": "address"
        }
      ],
      "name": "GranterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pendingRoot",
          "type": "address"
        }
      ],
      "name": "PendingRootSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "where",
          "type": "address"
        }
      ],
      "name": "PermissionGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "where",
          "type": "address"
        }
      ],
      "name": "PermissionRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newDelay",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        }
      ],
      "name": "RevokeDelayChangeScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "delay",
          "type": "uint256"
        }
      ],
      "name": "RevokeDelaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "where",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        }
      ],
      "name": "RevokePermissionScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "where",
          "type": "address"
        }
      ],
      "name": "RevokerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "where",
          "type": "address"
        }
      ],
      "name": "RevokerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRoot",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        }
      ],
      "name": "RootChangeScheduled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "root",
          "type": "address"
        }
      ],
      "name": "RootSet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "EVERYWHERE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GLOBAL_CANCELER_SCHEDULED_EXECUTION_ID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINIMUM_CHANGE_DELAY_EXECUTION_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addCanceler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "where",
          "type": "address"
        }
      ],
      "name": "addGranter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "where",
          "type": "address"
        }
      ],
      "name": "addRevoker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        }
      ],
      "name": "canExecute",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        }
      ],
      "name": "getActionIdDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        }
      ],
      "name": "getActionIdGrantDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        }
      ],
      "name": "getActionIdRevokeDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPendingRoot",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRoot",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRootTransferDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        }
      ],
      "name": "getScheduledExecution",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "canceled",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "protected",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "executableAt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "scheduledBy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "scheduledAt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "executedBy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "executedAt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "canceledBy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "canceledAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct ITimelockAuthorizer.ScheduledExecution",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "skip",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSize",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "reverseOrder",
          "type": "bool"
        }
      ],
      "name": "getScheduledExecutions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "canceled",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "protected",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "executableAt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "scheduledBy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "scheduledAt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "executedBy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "executedAt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "canceledBy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "canceledAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct ITimelockAuthorizer.ScheduledExecution[]",
          "name": "items",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getScheduledExecutionsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimelockExecutionHelper",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "where",
          "type": "address"
        }
      ],
      "name": "grantPermission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "where",
          "type": "address"
        }
      ],
      "name": "hasPermission",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isCanceler",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isExecutor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "where",
          "type": "address"
        }
      ],
      "name": "isGranter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPendingRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "where",
          "type": "address"
        }
      ],
      "name": "isPermissionGrantedOnTarget",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "where",
          "type": "address"
        }
      ],
      "name": "isRevoker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "scheduledExecutionId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeCanceler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "where",
          "type": "address"
        }
      ],
      "name": "removeGranter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "where",
          "type": "address"
        }
      ],
      "name": "removeRevoker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "where",
          "type": "address"
        }
      ],
      "name": "renouncePermission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "where",
          "type": "address"
        }
      ],
      "name": "revokePermission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "where",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "address[]",
          "name": "executors",
          "type": "address[]"
        }
      ],
      "name": "schedule",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "newDelay",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "executors",
          "type": "address[]"
        }
      ],
      "name": "scheduleDelayChange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "newDelay",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "executors",
          "type": "address[]"
        }
      ],
      "name": "scheduleGrantDelayChange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "where",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "executors",
          "type": "address[]"
        }
      ],
      "name": "scheduleGrantPermission",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "newDelay",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "executors",
          "type": "address[]"
        }
      ],
      "name": "scheduleRevokeDelayChange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "where",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "executors",
          "type": "address[]"
        }
      ],
      "name": "scheduleRevokePermission",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newRoot",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "executors",
          "type": "address[]"
        }
      ],
      "name": "scheduleRootChange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "delay",
          "type": "uint256"
        }
      ],
      "name": "setDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "delay",
          "type": "uint256"
        }
      ],
      "name": "setGrantDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pendingRoot",
          "type": "address"
        }
      ],
      "name": "setPendingRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "actionId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "delay",
          "type": "uint256"
        }
      ],
      "name": "setRevokeDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "EVERYWHERE()": "62cde1ba",
    "GLOBAL_CANCELER_SCHEDULED_EXECUTION_ID()": "9299942e",
    "MAX_DELAY()": "4125ff90",
    "MINIMUM_CHANGE_DELAY_EXECUTION_DELAY()": "b1e31aa0",
    "addCanceler(uint256,address)": "f6ebcbaf",
    "addGranter(bytes32,address,address)": "2229edb4",
    "addRevoker(address,address)": "a44495d1",
    "canExecute(uint256)": "cc63604a",
    "cancel(uint256)": "40e58ee5",
    "claimRoot()": "14ea35e7",
    "execute(uint256)": "fe0d94c1",
    "getActionIdDelay(bytes32)": "3bf46797",
    "getActionIdGrantDelay(bytes32)": "8bd6bbc9",
    "getActionIdRevokeDelay(bytes32)": "b99db526",
    "getPendingRoot()": "d00bef4d",
    "getRoot()": "5ca1e165",
    "getRootTransferDelay()": "c284b6b9",
    "getScheduledExecution(uint256)": "6badd2ab",
    "getScheduledExecutions(uint256,uint256,bool)": "e4c00f4f",
    "getScheduledExecutionsCount()": "f23481e0",
    "getTimelockExecutionHelper()": "18ef871a",
    "getVault()": "8d928af8",
    "grantPermission(bytes32,address,address)": "8cc3d072",
    "hasPermission(bytes32,address,address)": "e2b4146b",
    "isCanceler(uint256,address)": "3e1df46d",
    "isExecutor(uint256,address)": "04434606",
    "isGranter(bytes32,address,address)": "b3eb281d",
    "isPendingRoot(address)": "0df322a6",
    "isPermissionGrantedOnTarget(bytes32,address,address)": "86ff254b",
    "isRevoker(address,address)": "c6192ee3",
    "isRoot(address)": "557a6403",
    "removeCanceler(uint256,address)": "72efb120",
    "removeGranter(bytes32,address,address)": "a8eae12d",
    "removeRevoker(address,address)": "90216812",
    "renouncePermission(bytes32,address)": "99a7f6e2",
    "revokePermission(bytes32,address,address)": "3ac5d439",
    "schedule(address,bytes,address[])": "169f1468",
    "scheduleDelayChange(bytes32,uint256,address[])": "f0845522",
    "scheduleGrantDelayChange(bytes32,uint256,address[])": "63cdbf36",
    "scheduleGrantPermission(bytes32,address,address,address[])": "863bac6b",
    "scheduleRevokeDelayChange(bytes32,uint256,address[])": "608dd7e4",
    "scheduleRevokePermission(bytes32,address,address,address[])": "5b78b780",
    "scheduleRootChange(address,address[])": "2e3ed05b",
    "setDelay(bytes32,uint256)": "f0bb9406",
    "setGrantDelay(bytes32,uint256)": "10d3ab2c",
    "setPendingRoot(address)": "1b3c85eb",
    "setRevokeDelay(bytes32,uint256)": "c80c23e1"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delay\",\"type\":\"uint256\"}],\"name\":\"ActionDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"canceler\",\"type\":\"address\"}],\"name\":\"CancelerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"canceler\",\"type\":\"address\"}],\"name\":\"CancelerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newDelay\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"}],\"name\":\"DelayChangeScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"}],\"name\":\"ExecutionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"}],\"name\":\"ExecutionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"}],\"name\":\"ExecutionScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"}],\"name\":\"ExecutorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newDelay\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"}],\"name\":\"GrantDelayChangeScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delay\",\"type\":\"uint256\"}],\"name\":\"GrantDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"}],\"name\":\"GrantPermissionScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"GranterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"GranterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pendingRoot\",\"type\":\"address\"}],\"name\":\"PendingRootSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"PermissionGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"PermissionRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newDelay\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"}],\"name\":\"RevokeDelayChangeScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"delay\",\"type\":\"uint256\"}],\"name\":\"RevokeDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"}],\"name\":\"RevokePermissionScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"RevokerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"RevokerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRoot\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"}],\"name\":\"RootChangeScheduled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"root\",\"type\":\"address\"}],\"name\":\"RootSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EVERYWHERE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GLOBAL_CANCELER_SCHEDULED_EXECUTION_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_CHANGE_DELAY_EXECUTION_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addCanceler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"addGranter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"addRevoker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"}],\"name\":\"canExecute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"}],\"name\":\"getActionIdDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"}],\"name\":\"getActionIdGrantDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"}],\"name\":\"getActionIdRevokeDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingRoot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRoot\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRootTransferDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"}],\"name\":\"getScheduledExecution\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"protected\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"executableAt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"scheduledBy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"scheduledAt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"executedBy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"executedAt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"canceledBy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"canceledAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ITimelockAuthorizer.ScheduledExecution\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"skip\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSize\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"reverseOrder\",\"type\":\"bool\"}],\"name\":\"getScheduledExecutions\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"protected\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"executableAt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"scheduledBy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"scheduledAt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"executedBy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"executedAt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"canceledBy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"canceledAt\",\"type\":\"uint256\"}],\"internalType\":\"struct ITimelockAuthorizer.ScheduledExecution[]\",\"name\":\"items\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getScheduledExecutionsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimelockExecutionHelper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"grantPermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"hasPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isCanceler\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExecutor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"isGranter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPendingRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"isPermissionGrantedOnTarget\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"isRevoker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"scheduledExecutionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeCanceler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"removeGranter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"removeRevoker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"renouncePermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"}],\"name\":\"revokePermission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address[]\",\"name\":\"executors\",\"type\":\"address[]\"}],\"name\":\"schedule\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"newDelay\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"executors\",\"type\":\"address[]\"}],\"name\":\"scheduleDelayChange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"newDelay\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"executors\",\"type\":\"address[]\"}],\"name\":\"scheduleGrantDelayChange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"executors\",\"type\":\"address[]\"}],\"name\":\"scheduleGrantPermission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"newDelay\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"executors\",\"type\":\"address[]\"}],\"name\":\"scheduleRevokeDelayChange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"executors\",\"type\":\"address[]\"}],\"name\":\"scheduleRevokePermission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRoot\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"executors\",\"type\":\"address[]\"}],\"name\":\"scheduleRootChange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"delay\",\"type\":\"uint256\"}],\"name\":\"setDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"delay\",\"type\":\"uint256\"}],\"name\":\"setGrantDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingRoot\",\"type\":\"address\"}],\"name\":\"setPendingRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"actionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"delay\",\"type\":\"uint256\"}],\"name\":\"setRevokeDelay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Balancer Labs\",\"details\":\"Authorizer with timelocks (delays). Users are allowed to perform actions if they have the permission to do so. This Authorizer implementation allows defining delays per action identifier. If a delay is set for an action, users are not allowed to execute it directly themselves. Instead, they schedule an execution that the Authorizer will run in the future. Glossary: - Action: Operation that can be performed on a target contract. These are identified by a unique bytes32 `actionId`   defined by each target contract following `IAuthentication.getActionId`. - Scheduled execution: The Authorizer can define a delay for an `actionId` to require that a specific   time window must pass before it can be executed. When a delay is set for an `actionId`, executions   must be scheduled. These executions are identified by an unsigned integer called `scheduledExecutionId`. - Permission: Accounts have or don't have permission to perform an action identified by its `actionId` on a specific   contract `where`. Note that if the action has a delay, then accounts with permission cannot perform the action   directly, but are instead allowed to schedule future executions for them. Note that the TimelockAuthorizer doesn't use reentrancy guard on its external functions. The only function which makes an external non-view call (and so could initate a reentrancy attack) is `execute` which executes a scheduled execution, protected by the Checks-Effects-Interactions pattern. In fact a number of the TimelockAuthorizer's functions may only be called through a scheduled execution so reentrancy is necessary in order to be able to call these.\",\"kind\":\"dev\",\"methods\":{\"addCanceler(uint256,address)\":{\"details\":\"Only the root can add a canceler. Note that there are no delays associated with adding or removing cancelers. This is based on the assumption that any action which a malicious user could exploit to damage the protocol can be mitigated by root. Root can remove any canceler and reschedule any task\"},\"addGranter(bytes32,address,address)\":{\"details\":\"Only the root can add granters. Note that there are no delays associated with adding or removing granters. This is based on the assumption that any action which a malicious user could exploit to damage the protocol will have a sufficiently long delay associated with either granting permission for or exercising that permission such that the root will be able to reestablish control and cancel either the granting or associated action before it can be executed, and then remove the granter. A malicious granter may also attempt to use their granter status to grant permission to multiple accounts, but they cannot add new granters. Therefore, the danger posed by a malicious granter is limited and self- contained. Root can mitigate the situation simply and completely by revoking first their granter status, and then any permissions granted by that account, knowing there cannot be any more.\"},\"addRevoker(address,address)\":{\"details\":\"Only the root can add revokers. Note that there are no delays associated with adding revokers. This is based on the assumption that any permissions for which revocation from key addresses would be dangerous (e.g. preventing the BalancerMinter from minting BAL) have sufficiently long delays associated with revoking them that the root will be able to reestablish control and cancel the revocation before the scheduled revocation can be executed. A malicious revoker cannot add new revokers, so root can simply revoke their status once.\"},\"claimRoot()\":{\"details\":\"This function prevents accidentally transferring root to an invalid address. To become root, the pending root must call this function to ensure that it's able to interact with this contract.\"},\"grantPermission(bytes32,address,address)\":{\"details\":\"This function can only be used for actions that have no grant delay. For those that do, use `scheduleGrantPermission` instead.\"},\"isPermissionGrantedOnTarget(bytes32,address,address)\":{\"details\":\"This function is specific for the strict permission defined by the tuple `(actionId, where)`: `account` may instead hold the global permission for the action `actionId`, also granting them permission on `where`, but this function would return false regardless. For this reason, it's recommended to use `hasPermission` if checking whether `account` is allowed to perform a given action.\"},\"removeCanceler(uint256,address)\":{\"details\":\"Only the root can remove a canceler.\"},\"removeGranter(bytes32,address,address)\":{\"details\":\"Only the root can remove granters. Note that there are no delays associated with removing granters. The only instance in which one might be useful is if we had contracts that were granters, and this was depended upon for operation of the system. This however doesn't seem like it will ever be required - granters are typically subDAOs. After removing a malicious granter, care should be taken to review their actions and remove any permissions granted by them, or cancel scheduled grants. This should be done *after* removing the granter, at which point they won't be able to create any more of these.\"},\"removeRevoker(address,address)\":{\"details\":\"Only the root can remove revokers. Note that there are no delays associated with removing revokers.  The only instance in which one might be useful is if we had contracts that were revoker, and this was depended upon for operation of the system. This however doesn't seem like it will ever be required - revokers are typically subDAOs.\"},\"renouncePermission(bytes32,address)\":{\"details\":\"Note that the caller can always renounce permissions, even if revoking them would typically be subject to a delay.\"},\"revokePermission(bytes32,address,address)\":{\"details\":\"This function can only be used for actions that have no revoke delay. For those that do, use `scheduleRevokePermission` instead.\"},\"setDelay(bytes32,uint256)\":{\"details\":\"This function can never be called directly - it is only ever called as part of a scheduled execution by the TimelockExecutionHelper after after calling `scheduleDelayChange`.\"},\"setGrantDelay(bytes32,uint256)\":{\"details\":\"This function can never be called directly - it is only ever called as part of a scheduled execution by the TimelockExecutor after after calling `scheduleGrantDelayChange`. Delay has to be shorter than the Authorizer delay.\"},\"setPendingRoot(address)\":{\"details\":\"This function can never be called directly - it is only ever called as part of a scheduled execution by the TimelockExecutionHelper after after calling `scheduleRootChange`. Once set as the pending root, `pendingRoot` may then call `claimRoot` to become the new root.\"},\"setRevokeDelay(bytes32,uint256)\":{\"details\":\"This function can never be called directly - it is only ever called as part of a scheduled execution by the TimelockExecutor after after calling `scheduleRevokeDelayChange`. Delay has to be shorter than the Authorizer delay.\"}},\"title\":\"Timelock Authorizer\",\"version\":1},\"userdoc\":{\"events\":{\"ActionDelaySet(bytes32,uint256)\":{\"notice\":\"Emitted when a new `delay` is set in order to perform action `actionId`.\"},\"CancelerAdded(uint256,address)\":{\"notice\":\"Emitted when a canceler is added for a scheduled execution `scheduledExecutionId`.\"},\"CancelerRemoved(uint256,address)\":{\"notice\":\"Emitted when a canceler is removed for a scheduled execution `scheduledExecutionId`.\"},\"DelayChangeScheduled(bytes32,uint256,uint256)\":{\"notice\":\"Emitted when a delay change is scheduled.\"},\"ExecutionCanceled(uint256)\":{\"notice\":\"Emitted when an execution `scheduledExecutionId` is canceled.\"},\"ExecutionExecuted(uint256)\":{\"notice\":\"Emitted when an execution `scheduledExecutionId` is executed.\"},\"ExecutionScheduled(bytes32,uint256)\":{\"notice\":\"Emitted when a new execution `scheduledExecutionId` is scheduled.\"},\"ExecutorAdded(uint256,address)\":{\"notice\":\"Emitted when an executor is added for a scheduled execution `scheduledExecutionId`.\"},\"GrantDelayChangeScheduled(bytes32,uint256,uint256)\":{\"notice\":\"Emitted when a grant delay change is scheduled.\"},\"GrantDelaySet(bytes32,uint256)\":{\"notice\":\"Emitted when a new `delay` is set in order to grant permission to execute action `actionId`.\"},\"GrantPermissionScheduled(bytes32,address,address,uint256)\":{\"notice\":\"Emitted when a grant permission is scheduled.\"},\"GranterAdded(bytes32,address,address)\":{\"notice\":\"Emitted when an account is added as a granter for `actionId` in `where`.\"},\"GranterRemoved(bytes32,address,address)\":{\"notice\":\"Emitted when an account is removed as a granter `actionId` in `where`.\"},\"PendingRootSet(address)\":{\"notice\":\"Emitted when a new `pendingRoot` is set. The new account must claim ownership for it to take effect.\"},\"PermissionGranted(bytes32,address,address)\":{\"notice\":\"Emitted when `account` is granted permission to perform action `actionId` in target `where`.\"},\"PermissionRevoked(bytes32,address,address)\":{\"notice\":\"Emitted when `account`'s permission to perform action `actionId` in target `where` is revoked.\"},\"RevokeDelayChangeScheduled(bytes32,uint256,uint256)\":{\"notice\":\"Emitted when a revoke delay change is scheduled.\"},\"RevokeDelaySet(bytes32,uint256)\":{\"notice\":\"Emitted when a new `delay` is set in order to revoke permission to execute action `actionId`.\"},\"RevokePermissionScheduled(bytes32,address,address,uint256)\":{\"notice\":\"Emitted when a revoke permission is scheduled.\"},\"RevokerAdded(address,address)\":{\"notice\":\"Emitted when `account` is added as a revoker in `where`.\"},\"RevokerRemoved(address,address)\":{\"notice\":\"Emitted when an account is removed as a revoker in `where`.\"},\"RootChangeScheduled(address,uint256)\":{\"notice\":\"Emitted when a root change is scheduled.\"},\"RootSet(address)\":{\"notice\":\"Emitted when a new `root` is set.\"}},\"kind\":\"user\",\"methods\":{\"EVERYWHERE()\":{\"notice\":\"A sentinel value for `where` that will match any address.\"},\"GLOBAL_CANCELER_SCHEDULED_EXECUTION_ID()\":{\"notice\":\"A constant value for `scheduledExecutionId` that will match any execution Id. Cancelers assigned to this Id will be able to cancel *any* scheduled execution, which is very useful for e.g. emergency response dedicated teams that analyze these.\"},\"MAX_DELAY()\":{\"notice\":\"We institute a maximum delay to ensure that actions cannot be accidentally/maliciously disabled through         setting an arbitrarily long delay.\"},\"MINIMUM_CHANGE_DELAY_EXECUTION_DELAY()\":{\"notice\":\"We need a minimum delay period to ensure that all delay changes may be properly scrutinised.\"},\"addCanceler(uint256,address)\":{\"notice\":\"Grants canceler status to `account` for scheduled execution `scheduledExecutionId`.\"},\"addGranter(bytes32,address,address)\":{\"notice\":\"Grants granter status to `account` for action `actionId` in target `where`.\"},\"addRevoker(address,address)\":{\"notice\":\"Grants revoker status to `account` in target `where` for all actions.\"},\"canExecute(uint256)\":{\"notice\":\"Returns true if execution `scheduledExecutionId` can be executed. Only true if it is not already executed or canceled, and if the execution delay has passed.\"},\"cancel(uint256)\":{\"notice\":\"Cancels a scheduled execution `scheduledExecutionId`, which prevents execution via `execute`. Canceling is irreversible. Scheduled executions that have already been executed cannot be canceled. This is the only way to prevent a scheduled execution from being executed (assuming there are willing executors). The caller must be a canceler, a permission which is managed by the `addCanceler` and `removeCanceler` functions. Note that root is always a canceler for all scheduled executions.\"},\"claimRoot()\":{\"notice\":\"Transfers root powers from the current to the pending root address.\"},\"execute(uint256)\":{\"notice\":\"Executes a scheduled execution `scheduledExecutionId`. This is used to execute all scheduled executions, not only those that originate from `schedule`, but also internal TimelockAuthorizer functions such as `scheduleRootChange` or `scheduleDelayChange`. If any executors were set up when scheduling, `execute` can only be called by them. If none were set, the scheduled execution is said to be 'unprotected', and can be executed by anyone. Once executed, a scheduled execution cannot be executed again. It also cannot be executed if canceled. We mark this function as `nonReentrant` out of an abundance of caution, as in theory this and the Authorizer should be resilient to reentrant executions. The non-reentrancy check means that it is not possible to execute a scheduled execution during the execution of another scheduled execution - an unlikely and convoluted scenario that we explicitly forbid. Note that while `execute` is nonReentrant, other functions are not - indeed, we rely on reentrancy to e.g. call `setPendingRoot` or `setDelay`.\"},\"getActionIdDelay(bytes32)\":{\"notice\":\"Returns the execution delay for action `actionId`.\"},\"getActionIdGrantDelay(bytes32)\":{\"notice\":\"Returns the execution delay for granting permission for action `actionId`.\"},\"getActionIdRevokeDelay(bytes32)\":{\"notice\":\"Returns the execution delay for revoking permission for action `actionId`.\"},\"getPendingRoot()\":{\"notice\":\"Returns the currently pending new root address.\"},\"getRoot()\":{\"notice\":\"Returns the root address.\"},\"getRootTransferDelay()\":{\"notice\":\"Returns the delay required to transfer the root address.\"},\"getScheduledExecution(uint256)\":{\"notice\":\"Returns the scheduled execution `scheduledExecutionId`.\"},\"getScheduledExecutions(uint256,uint256,bool)\":{\"notice\":\"Returns multiple scheduled executions, in either chronological or reverse chronological order (if `reverseOrder` is true). This function will return at most `maxSize` items, starting at index `skip` (meaning the first entries are skipped). Note that when querying in reverse order, it is the newest entries that are skipped, not the oldest. The value of `skip` must be lower than the return value of `getScheduledExecutionsCount()`, which means that not all scheduled executions can be skipped, and at least one execution will always be returned (assuming there are any). Example calls:  - { skip: 0, reverseOrder: false } : returns up to `maxSize` of oldest entries, with the oldest at index 0  - { skip: 0, reverseOrder: true } : returns up to `maxSize` of the newest entries, with the newest at index 0  - { skip: 5, reverseOrder: false } : returns up to `maxSize` of the oldest entries, skipping the 5 oldest    entries, with the globally sixth oldest at index 0  - { skip: 5, reverseOrder: true } : returns up to `maxSize` of the newest entries, skipping the 5 newest    entries, with the globally sixth nexest at index 0\"},\"getScheduledExecutionsCount()\":{\"notice\":\"Returns the lifetime count of scheduled executions. The most recent scheduled execution will always have a `scheduledExecutionId` of `getScheduledExecutionsCount() - 1`\"},\"getTimelockExecutionHelper()\":{\"notice\":\"Returns the TimelockExecutionHelper address.\"},\"getVault()\":{\"notice\":\"Returns the vault address.\"},\"grantPermission(bytes32,address,address)\":{\"notice\":\"Grants a permission to a single `account` at 'where' address.\"},\"hasPermission(bytes32,address,address)\":{\"notice\":\"Returns true if `account` has permission over the action `actionId` in target `where`.\"},\"isCanceler(uint256,address)\":{\"notice\":\"Returns true if `account` is an canceler for `scheduledExecutionId`.\"},\"isExecutor(uint256,address)\":{\"notice\":\"Returns true if `account` is an executor for `scheduledExecutionId`.\"},\"isGranter(bytes32,address,address)\":{\"notice\":\"Returns true if `account` is allowed to grant permissions for action `actionId` in target `where`.\"},\"isPendingRoot(address)\":{\"notice\":\"Returns true if `account` is the pending root.\"},\"isPermissionGrantedOnTarget(bytes32,address,address)\":{\"notice\":\"Returns true if `account` has the permission defined by action `actionId` and target `where`.\"},\"isRevoker(address,address)\":{\"notice\":\"Returns true if `account` is allowed to revoke permissions in target `where` for all actions.\"},\"isRoot(address)\":{\"notice\":\"Returns true if `account` is the root.\"},\"removeCanceler(uint256,address)\":{\"notice\":\"Remove canceler status from `account` for scheduled execution `scheduledExecutionId`.\"},\"removeGranter(bytes32,address,address)\":{\"notice\":\"Revokes granter status from `account` for action `actionId` in target `where`.\"},\"removeRevoker(address,address)\":{\"notice\":\"Removes revoker status from `account` in target `where` for all actions.\"},\"renouncePermission(bytes32,address)\":{\"notice\":\"Revokes a permission from the caller for `actionId` at `where` address\"},\"revokePermission(bytes32,address,address)\":{\"notice\":\"Revokes a permission from a single `account` at `where` address.\"},\"schedule(address,bytes,address[])\":{\"notice\":\"Schedules an arbitrary execution of `data` in target `where`. Returns a scheduledExecutionId that can be used to call `execute`, `cancel`, and associated getters such as `getScheduledExecution`. If `executors` is an empty array, then any account in the network will be able to initiate the scheduled execution. If not, only accounts in the `executors` array will be able to call `execute`. It is not possible to change this after scheduling: the list of executors is immutable, and cannot be changed by any account (including root). The caller of the `schedule` function is automatically made a canceler for the scheduled execution, meaning they can call the `cancel` function for it. Other accounts, such as root, may also have or be granted permission to cancel any scheduled execution. This is the only way to execute actions in external contracts that have a delay associated with them. Calling said functions directly will cause `canPerform` to return false, even if the caller has permission. An account that has permission over an action with a delay cannot call it directly, and must instead schedule a delayed execution by calling this function.\"},\"scheduleDelayChange(bytes32,uint256,address[])\":{\"notice\":\"Schedules an execution to set the delay for `actionId`' to `newDelay`. This makes it impossible to execute `actionId` without an immutable public on-chain commitment for the execution at least `newDelay` seconds in advance. Critical actions that are expected to be performed by EOAs or multisigs are typically subject to such delays to allow for public scrutiny. How long it will take to make this change will depend on the current and new delays: if increasing by more than 5 days, then the time difference between the delays must pass. Otherwise, the minimum delay change execution delay of 5 days must pass instead. Only `executors` will be able to execute the scheduled execution, unless `executors` is an empty array, in which case any account can execute it. Avoid scheduling multiple delay changes for the same action at the same time, as this makes it harder to reason about the state of the system. If there is already a scheduled delay change and there is a desire to change the future delay to some other value, cancel the first scheduled change and schedule a new one. Only root can call this function, but other accounts may be granted permission to cancel the scheduled execution (including global cancelers).\"},\"scheduleGrantDelayChange(bytes32,uint256,address[])\":{\"notice\":\"Schedules an execution to set the delay for granting permission over `actionId` to `newDelay`. This makes it impossible to grant permission to execute `actionId` without an immutable public on-chain commitment for the granting at least `newDelay` seconds in advance. Critical actions that are expected to be performed by smart contracts are typically subject to such grant delays to allow for public scrutiny of new contracts that are granted the permission. How long it will take to make this change will depend on the current and new grant delays: if increasing by more than 5 days, then the time difference between the grant delays must pass. Otherwise, the minimum delay change execution delay of 5 days must pass instead. Only `executors` will be able to execute the scheduled execution, unless `executors` is an empty array, in which case any account can execute it. Avoid scheduling multiple grant delay changes for the same action at the same time, as this makes it harder to reason about the state of the system. If there is already a scheduled grant delay change and there is a desire to change the future grant delay to some other value, cancel the first scheduled change and schedule a new one. Only root can call this function, but other accounts may be granted permission to cancel the scheduled execution (including global cancelers).\"},\"scheduleGrantPermission(bytes32,address,address,address[])\":{\"notice\":\"Schedules a grant permission to `account` for action `actionId` in target `where`. See `schedule` comments.\"},\"scheduleRevokeDelayChange(bytes32,uint256,address[])\":{\"notice\":\"Schedules an execution to set the delay for revoking permission over `actionId` to `newDelay`. This makes it impossible to revoke permission to execute `actionId` without an immutable public on-chain commitment for the revoking at least `newDelay` seconds in advance. Critical actions that are performed by smart contracts and to which there is a long term commitment (e.g. minting of BAL as part of the Liquidity Mining Program) are typically subject to such revoke delays, making it impossible to disable the system without sufficient notice. How long it will take to make this change will depend on the current and new revoke delays: if increasing by more than 5 days, then the time difference between the revoke delays must pass. Otherwise, the minimum delay change execution delay of 5 days must pass instead. Only `executors` will be able to execute the scheduled execution, unless `executors` is an empty array, in which case any account can execute it. Avoid scheduling multiple revoke delay changes for the same action at the same time, as this makes it harder to reason about the state of the system. If there is already a scheduled revoke delay change and there is a desire to change the future grant delay to some other value, cancel the first scheduled change and schedule a new one. Only root can call this function, but other accounts may be granted permission to cancel the scheduled execution (including global cancelers).\"},\"scheduleRevokePermission(bytes32,address,address,address[])\":{\"notice\":\"Schedules a revoke permission from `account` for action `actionId` in target `where`. See `schedule` comments.\"},\"scheduleRootChange(address,address[])\":{\"notice\":\"Schedules an execution to change the root address to `newRoot`.\"},\"setDelay(bytes32,uint256)\":{\"notice\":\"Sets a new delay `delay` for action `actionId`.\"},\"setGrantDelay(bytes32,uint256)\":{\"notice\":\"Sets a new grant action delay `delay` for action `actionId`\"},\"setPendingRoot(address)\":{\"notice\":\"Sets the pending root address to `pendingRoot`.\"},\"setRevokeDelay(bytes32,uint256)\":{\"notice\":\"Sets a new revoke action delay `delay` for action `actionId`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/external/balancer/vault/ITimelockAuthorizer.sol\":\"ITimelockAuthorizer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/interfaces/external/balancer/vault/ITimelockAuthorizer.sol\":{\"keccak256\":\"0xe6a065ad50b15f84151d288cc90006ca207df26a38cbe6a8563b2a7a441f8250\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1fcc5dedb3aadf1b55f2e5e67e00c7ee7f7c0c915217191676c7c56267889715\",\"dweb:/ipfs/QmQWE9Gnadq1Wba5bHutBzQrYgbdGuqfzfWsJpPGDiTM5j\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "delay",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ActionDelaySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "canceler",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CancelerAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "canceler",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CancelerRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newDelay",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DelayChangeScheduled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ExecutionCanceled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ExecutionExecuted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ExecutionScheduled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "executor",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ExecutorAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newDelay",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "GrantDelayChangeScheduled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "delay",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GrantDelaySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GrantPermissionScheduled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "GranterAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "GranterRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pendingRoot",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PendingRootSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PermissionGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PermissionRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newDelay",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokeDelayChangeScheduled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "delay",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RevokeDelaySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RevokePermissionScheduled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokerAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokerRemoved",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoot",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RootChangeScheduled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "root",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RootSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EVERYWHERE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GLOBAL_CANCELER_SCHEDULED_EXECUTION_ID",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_DELAY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MINIMUM_CHANGE_DELAY_EXECUTION_DELAY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addCanceler"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addGranter"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addRevoker"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canExecute",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRoot"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getActionIdDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getActionIdGrantDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getActionIdRevokeDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPendingRoot",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoot",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRootTransferDelay",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getScheduledExecution",
          "outputs": [
            {
              "internalType": "struct ITimelockAuthorizer.ScheduledExecution",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "where",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "executed",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "canceled",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "protected",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "executableAt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "scheduledBy",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "scheduledAt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "executedBy",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "executedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "canceledBy",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "canceledAt",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "skip",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxSize",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "reverseOrder",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getScheduledExecutions",
          "outputs": [
            {
              "internalType": "struct ITimelockAuthorizer.ScheduledExecution[]",
              "name": "items",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "where",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "executed",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "canceled",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "protected",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "executableAt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "scheduledBy",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "scheduledAt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "executedBy",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "executedAt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "canceledBy",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "canceledAt",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getScheduledExecutionsCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTimelockExecutionHelper",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getVault",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantPermission"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasPermission",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isCanceler",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isExecutor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isGranter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPendingRoot",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPermissionGrantedOnTarget",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRevoker",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRoot",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "scheduledExecutionId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeCanceler"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeGranter"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeRevoker"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renouncePermission"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokePermission"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "address[]",
              "name": "executors",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "schedule",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "newDelay",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "executors",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "scheduleDelayChange",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "newDelay",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "executors",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "scheduleGrantDelayChange",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "executors",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "scheduleGrantPermission",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "newDelay",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "executors",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "scheduleRevokeDelayChange",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "where",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "executors",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "scheduleRevokePermission",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRoot",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "executors",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "scheduleRootChange",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "delay",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDelay"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "delay",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGrantDelay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "pendingRoot",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPendingRoot"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "actionId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "delay",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRevokeDelay"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addCanceler(uint256,address)": {
            "details": "Only the root can add a canceler. Note that there are no delays associated with adding or removing cancelers. This is based on the assumption that any action which a malicious user could exploit to damage the protocol can be mitigated by root. Root can remove any canceler and reschedule any task"
          },
          "addGranter(bytes32,address,address)": {
            "details": "Only the root can add granters. Note that there are no delays associated with adding or removing granters. This is based on the assumption that any action which a malicious user could exploit to damage the protocol will have a sufficiently long delay associated with either granting permission for or exercising that permission such that the root will be able to reestablish control and cancel either the granting or associated action before it can be executed, and then remove the granter. A malicious granter may also attempt to use their granter status to grant permission to multiple accounts, but they cannot add new granters. Therefore, the danger posed by a malicious granter is limited and self- contained. Root can mitigate the situation simply and completely by revoking first their granter status, and then any permissions granted by that account, knowing there cannot be any more."
          },
          "addRevoker(address,address)": {
            "details": "Only the root can add revokers. Note that there are no delays associated with adding revokers. This is based on the assumption that any permissions for which revocation from key addresses would be dangerous (e.g. preventing the BalancerMinter from minting BAL) have sufficiently long delays associated with revoking them that the root will be able to reestablish control and cancel the revocation before the scheduled revocation can be executed. A malicious revoker cannot add new revokers, so root can simply revoke their status once."
          },
          "claimRoot()": {
            "details": "This function prevents accidentally transferring root to an invalid address. To become root, the pending root must call this function to ensure that it's able to interact with this contract."
          },
          "grantPermission(bytes32,address,address)": {
            "details": "This function can only be used for actions that have no grant delay. For those that do, use `scheduleGrantPermission` instead."
          },
          "isPermissionGrantedOnTarget(bytes32,address,address)": {
            "details": "This function is specific for the strict permission defined by the tuple `(actionId, where)`: `account` may instead hold the global permission for the action `actionId`, also granting them permission on `where`, but this function would return false regardless. For this reason, it's recommended to use `hasPermission` if checking whether `account` is allowed to perform a given action."
          },
          "removeCanceler(uint256,address)": {
            "details": "Only the root can remove a canceler."
          },
          "removeGranter(bytes32,address,address)": {
            "details": "Only the root can remove granters. Note that there are no delays associated with removing granters. The only instance in which one might be useful is if we had contracts that were granters, and this was depended upon for operation of the system. This however doesn't seem like it will ever be required - granters are typically subDAOs. After removing a malicious granter, care should be taken to review their actions and remove any permissions granted by them, or cancel scheduled grants. This should be done *after* removing the granter, at which point they won't be able to create any more of these."
          },
          "removeRevoker(address,address)": {
            "details": "Only the root can remove revokers. Note that there are no delays associated with removing revokers.  The only instance in which one might be useful is if we had contracts that were revoker, and this was depended upon for operation of the system. This however doesn't seem like it will ever be required - revokers are typically subDAOs."
          },
          "renouncePermission(bytes32,address)": {
            "details": "Note that the caller can always renounce permissions, even if revoking them would typically be subject to a delay."
          },
          "revokePermission(bytes32,address,address)": {
            "details": "This function can only be used for actions that have no revoke delay. For those that do, use `scheduleRevokePermission` instead."
          },
          "setDelay(bytes32,uint256)": {
            "details": "This function can never be called directly - it is only ever called as part of a scheduled execution by the TimelockExecutionHelper after after calling `scheduleDelayChange`."
          },
          "setGrantDelay(bytes32,uint256)": {
            "details": "This function can never be called directly - it is only ever called as part of a scheduled execution by the TimelockExecutor after after calling `scheduleGrantDelayChange`. Delay has to be shorter than the Authorizer delay."
          },
          "setPendingRoot(address)": {
            "details": "This function can never be called directly - it is only ever called as part of a scheduled execution by the TimelockExecutionHelper after after calling `scheduleRootChange`. Once set as the pending root, `pendingRoot` may then call `claimRoot` to become the new root."
          },
          "setRevokeDelay(bytes32,uint256)": {
            "details": "This function can never be called directly - it is only ever called as part of a scheduled execution by the TimelockExecutor after after calling `scheduleRevokeDelayChange`. Delay has to be shorter than the Authorizer delay."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "EVERYWHERE()": {
            "notice": "A sentinel value for `where` that will match any address."
          },
          "GLOBAL_CANCELER_SCHEDULED_EXECUTION_ID()": {
            "notice": "A constant value for `scheduledExecutionId` that will match any execution Id. Cancelers assigned to this Id will be able to cancel *any* scheduled execution, which is very useful for e.g. emergency response dedicated teams that analyze these."
          },
          "MAX_DELAY()": {
            "notice": "We institute a maximum delay to ensure that actions cannot be accidentally/maliciously disabled through         setting an arbitrarily long delay."
          },
          "MINIMUM_CHANGE_DELAY_EXECUTION_DELAY()": {
            "notice": "We need a minimum delay period to ensure that all delay changes may be properly scrutinised."
          },
          "addCanceler(uint256,address)": {
            "notice": "Grants canceler status to `account` for scheduled execution `scheduledExecutionId`."
          },
          "addGranter(bytes32,address,address)": {
            "notice": "Grants granter status to `account` for action `actionId` in target `where`."
          },
          "addRevoker(address,address)": {
            "notice": "Grants revoker status to `account` in target `where` for all actions."
          },
          "canExecute(uint256)": {
            "notice": "Returns true if execution `scheduledExecutionId` can be executed. Only true if it is not already executed or canceled, and if the execution delay has passed."
          },
          "cancel(uint256)": {
            "notice": "Cancels a scheduled execution `scheduledExecutionId`, which prevents execution via `execute`. Canceling is irreversible. Scheduled executions that have already been executed cannot be canceled. This is the only way to prevent a scheduled execution from being executed (assuming there are willing executors). The caller must be a canceler, a permission which is managed by the `addCanceler` and `removeCanceler` functions. Note that root is always a canceler for all scheduled executions."
          },
          "claimRoot()": {
            "notice": "Transfers root powers from the current to the pending root address."
          },
          "execute(uint256)": {
            "notice": "Executes a scheduled execution `scheduledExecutionId`. This is used to execute all scheduled executions, not only those that originate from `schedule`, but also internal TimelockAuthorizer functions such as `scheduleRootChange` or `scheduleDelayChange`. If any executors were set up when scheduling, `execute` can only be called by them. If none were set, the scheduled execution is said to be 'unprotected', and can be executed by anyone. Once executed, a scheduled execution cannot be executed again. It also cannot be executed if canceled. We mark this function as `nonReentrant` out of an abundance of caution, as in theory this and the Authorizer should be resilient to reentrant executions. The non-reentrancy check means that it is not possible to execute a scheduled execution during the execution of another scheduled execution - an unlikely and convoluted scenario that we explicitly forbid. Note that while `execute` is nonReentrant, other functions are not - indeed, we rely on reentrancy to e.g. call `setPendingRoot` or `setDelay`."
          },
          "getActionIdDelay(bytes32)": {
            "notice": "Returns the execution delay for action `actionId`."
          },
          "getActionIdGrantDelay(bytes32)": {
            "notice": "Returns the execution delay for granting permission for action `actionId`."
          },
          "getActionIdRevokeDelay(bytes32)": {
            "notice": "Returns the execution delay for revoking permission for action `actionId`."
          },
          "getPendingRoot()": {
            "notice": "Returns the currently pending new root address."
          },
          "getRoot()": {
            "notice": "Returns the root address."
          },
          "getRootTransferDelay()": {
            "notice": "Returns the delay required to transfer the root address."
          },
          "getScheduledExecution(uint256)": {
            "notice": "Returns the scheduled execution `scheduledExecutionId`."
          },
          "getScheduledExecutions(uint256,uint256,bool)": {
            "notice": "Returns multiple scheduled executions, in either chronological or reverse chronological order (if `reverseOrder` is true). This function will return at most `maxSize` items, starting at index `skip` (meaning the first entries are skipped). Note that when querying in reverse order, it is the newest entries that are skipped, not the oldest. The value of `skip` must be lower than the return value of `getScheduledExecutionsCount()`, which means that not all scheduled executions can be skipped, and at least one execution will always be returned (assuming there are any). Example calls:  - { skip: 0, reverseOrder: false } : returns up to `maxSize` of oldest entries, with the oldest at index 0  - { skip: 0, reverseOrder: true } : returns up to `maxSize` of the newest entries, with the newest at index 0  - { skip: 5, reverseOrder: false } : returns up to `maxSize` of the oldest entries, skipping the 5 oldest    entries, with the globally sixth oldest at index 0  - { skip: 5, reverseOrder: true } : returns up to `maxSize` of the newest entries, skipping the 5 newest    entries, with the globally sixth nexest at index 0"
          },
          "getScheduledExecutionsCount()": {
            "notice": "Returns the lifetime count of scheduled executions. The most recent scheduled execution will always have a `scheduledExecutionId` of `getScheduledExecutionsCount() - 1`"
          },
          "getTimelockExecutionHelper()": {
            "notice": "Returns the TimelockExecutionHelper address."
          },
          "getVault()": {
            "notice": "Returns the vault address."
          },
          "grantPermission(bytes32,address,address)": {
            "notice": "Grants a permission to a single `account` at 'where' address."
          },
          "hasPermission(bytes32,address,address)": {
            "notice": "Returns true if `account` has permission over the action `actionId` in target `where`."
          },
          "isCanceler(uint256,address)": {
            "notice": "Returns true if `account` is an canceler for `scheduledExecutionId`."
          },
          "isExecutor(uint256,address)": {
            "notice": "Returns true if `account` is an executor for `scheduledExecutionId`."
          },
          "isGranter(bytes32,address,address)": {
            "notice": "Returns true if `account` is allowed to grant permissions for action `actionId` in target `where`."
          },
          "isPendingRoot(address)": {
            "notice": "Returns true if `account` is the pending root."
          },
          "isPermissionGrantedOnTarget(bytes32,address,address)": {
            "notice": "Returns true if `account` has the permission defined by action `actionId` and target `where`."
          },
          "isRevoker(address,address)": {
            "notice": "Returns true if `account` is allowed to revoke permissions in target `where` for all actions."
          },
          "isRoot(address)": {
            "notice": "Returns true if `account` is the root."
          },
          "removeCanceler(uint256,address)": {
            "notice": "Remove canceler status from `account` for scheduled execution `scheduledExecutionId`."
          },
          "removeGranter(bytes32,address,address)": {
            "notice": "Revokes granter status from `account` for action `actionId` in target `where`."
          },
          "removeRevoker(address,address)": {
            "notice": "Removes revoker status from `account` in target `where` for all actions."
          },
          "renouncePermission(bytes32,address)": {
            "notice": "Revokes a permission from the caller for `actionId` at `where` address"
          },
          "revokePermission(bytes32,address,address)": {
            "notice": "Revokes a permission from a single `account` at `where` address."
          },
          "schedule(address,bytes,address[])": {
            "notice": "Schedules an arbitrary execution of `data` in target `where`. Returns a scheduledExecutionId that can be used to call `execute`, `cancel`, and associated getters such as `getScheduledExecution`. If `executors` is an empty array, then any account in the network will be able to initiate the scheduled execution. If not, only accounts in the `executors` array will be able to call `execute`. It is not possible to change this after scheduling: the list of executors is immutable, and cannot be changed by any account (including root). The caller of the `schedule` function is automatically made a canceler for the scheduled execution, meaning they can call the `cancel` function for it. Other accounts, such as root, may also have or be granted permission to cancel any scheduled execution. This is the only way to execute actions in external contracts that have a delay associated with them. Calling said functions directly will cause `canPerform` to return false, even if the caller has permission. An account that has permission over an action with a delay cannot call it directly, and must instead schedule a delayed execution by calling this function."
          },
          "scheduleDelayChange(bytes32,uint256,address[])": {
            "notice": "Schedules an execution to set the delay for `actionId`' to `newDelay`. This makes it impossible to execute `actionId` without an immutable public on-chain commitment for the execution at least `newDelay` seconds in advance. Critical actions that are expected to be performed by EOAs or multisigs are typically subject to such delays to allow for public scrutiny. How long it will take to make this change will depend on the current and new delays: if increasing by more than 5 days, then the time difference between the delays must pass. Otherwise, the minimum delay change execution delay of 5 days must pass instead. Only `executors` will be able to execute the scheduled execution, unless `executors` is an empty array, in which case any account can execute it. Avoid scheduling multiple delay changes for the same action at the same time, as this makes it harder to reason about the state of the system. If there is already a scheduled delay change and there is a desire to change the future delay to some other value, cancel the first scheduled change and schedule a new one. Only root can call this function, but other accounts may be granted permission to cancel the scheduled execution (including global cancelers)."
          },
          "scheduleGrantDelayChange(bytes32,uint256,address[])": {
            "notice": "Schedules an execution to set the delay for granting permission over `actionId` to `newDelay`. This makes it impossible to grant permission to execute `actionId` without an immutable public on-chain commitment for the granting at least `newDelay` seconds in advance. Critical actions that are expected to be performed by smart contracts are typically subject to such grant delays to allow for public scrutiny of new contracts that are granted the permission. How long it will take to make this change will depend on the current and new grant delays: if increasing by more than 5 days, then the time difference between the grant delays must pass. Otherwise, the minimum delay change execution delay of 5 days must pass instead. Only `executors` will be able to execute the scheduled execution, unless `executors` is an empty array, in which case any account can execute it. Avoid scheduling multiple grant delay changes for the same action at the same time, as this makes it harder to reason about the state of the system. If there is already a scheduled grant delay change and there is a desire to change the future grant delay to some other value, cancel the first scheduled change and schedule a new one. Only root can call this function, but other accounts may be granted permission to cancel the scheduled execution (including global cancelers)."
          },
          "scheduleGrantPermission(bytes32,address,address,address[])": {
            "notice": "Schedules a grant permission to `account` for action `actionId` in target `where`. See `schedule` comments."
          },
          "scheduleRevokeDelayChange(bytes32,uint256,address[])": {
            "notice": "Schedules an execution to set the delay for revoking permission over `actionId` to `newDelay`. This makes it impossible to revoke permission to execute `actionId` without an immutable public on-chain commitment for the revoking at least `newDelay` seconds in advance. Critical actions that are performed by smart contracts and to which there is a long term commitment (e.g. minting of BAL as part of the Liquidity Mining Program) are typically subject to such revoke delays, making it impossible to disable the system without sufficient notice. How long it will take to make this change will depend on the current and new revoke delays: if increasing by more than 5 days, then the time difference between the revoke delays must pass. Otherwise, the minimum delay change execution delay of 5 days must pass instead. Only `executors` will be able to execute the scheduled execution, unless `executors` is an empty array, in which case any account can execute it. Avoid scheduling multiple revoke delay changes for the same action at the same time, as this makes it harder to reason about the state of the system. If there is already a scheduled revoke delay change and there is a desire to change the future grant delay to some other value, cancel the first scheduled change and schedule a new one. Only root can call this function, but other accounts may be granted permission to cancel the scheduled execution (including global cancelers)."
          },
          "scheduleRevokePermission(bytes32,address,address,address[])": {
            "notice": "Schedules a revoke permission from `account` for action `actionId` in target `where`. See `schedule` comments."
          },
          "scheduleRootChange(address,address[])": {
            "notice": "Schedules an execution to change the root address to `newRoot`."
          },
          "setDelay(bytes32,uint256)": {
            "notice": "Sets a new delay `delay` for action `actionId`."
          },
          "setGrantDelay(bytes32,uint256)": {
            "notice": "Sets a new grant action delay `delay` for action `actionId`"
          },
          "setPendingRoot(address)": {
            "notice": "Sets the pending root address to `pendingRoot`."
          },
          "setRevokeDelay(bytes32,uint256)": {
            "notice": "Sets a new revoke action delay `delay` for action `actionId`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/external/balancer/vault/ITimelockAuthorizer.sol": "ITimelockAuthorizer"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/external/balancer/vault/ITimelockAuthorizer.sol": {
        "keccak256": "0xe6a065ad50b15f84151d288cc90006ca207df26a38cbe6a8563b2a7a441f8250",
        "urls": [
          "bzz-raw://1fcc5dedb3aadf1b55f2e5e67e00c7ee7f7c0c915217191676c7c56267889715",
          "dweb:/ipfs/QmQWE9Gnadq1Wba5bHutBzQrYgbdGuqfzfWsJpPGDiTM5j"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/external/balancer/vault/ITimelockAuthorizer.sol",
    "id": 62765,
    "exportedSymbols": {
      "ITimelockAuthorizer": [
        62764
      ]
    },
    "nodeType": "SourceUnit",
    "src": "688:29694:188",
    "nodes": [
      {
        "id": 62143,
        "nodeType": "PragmaDirective",
        "src": "688:23:188",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 62144,
        "nodeType": "PragmaDirective",
        "src": "712:33:188",
        "nodes": [],
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ]
      },
      {
        "id": 62764,
        "nodeType": "ContractDefinition",
        "src": "2518:27863:188",
        "nodes": [
          {
            "id": 62170,
            "nodeType": "StructDefinition",
            "src": "2554:346:188",
            "nodes": [],
            "canonicalName": "ITimelockAuthorizer.ScheduledExecution",
            "members": [
              {
                "constant": false,
                "id": 62147,
                "mutability": "mutable",
                "name": "where",
                "nameLocation": "2598:5:188",
                "nodeType": "VariableDeclaration",
                "scope": 62170,
                "src": "2590:13:188",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 62146,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2590:7:188",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62149,
                "mutability": "mutable",
                "name": "data",
                "nameLocation": "2619:4:188",
                "nodeType": "VariableDeclaration",
                "scope": 62170,
                "src": "2613:10:188",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 62148,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "2613:5:188",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62151,
                "mutability": "mutable",
                "name": "executed",
                "nameLocation": "2638:8:188",
                "nodeType": "VariableDeclaration",
                "scope": 62170,
                "src": "2633:13:188",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 62150,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2633:4:188",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62153,
                "mutability": "mutable",
                "name": "canceled",
                "nameLocation": "2661:8:188",
                "nodeType": "VariableDeclaration",
                "scope": 62170,
                "src": "2656:13:188",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 62152,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2656:4:188",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62155,
                "mutability": "mutable",
                "name": "protected",
                "nameLocation": "2684:9:188",
                "nodeType": "VariableDeclaration",
                "scope": 62170,
                "src": "2679:14:188",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 62154,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2679:4:188",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62157,
                "mutability": "mutable",
                "name": "executableAt",
                "nameLocation": "2711:12:188",
                "nodeType": "VariableDeclaration",
                "scope": 62170,
                "src": "2703:20:188",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 62156,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2703:7:188",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62159,
                "mutability": "mutable",
                "name": "scheduledBy",
                "nameLocation": "2741:11:188",
                "nodeType": "VariableDeclaration",
                "scope": 62170,
                "src": "2733:19:188",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 62158,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2733:7:188",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62161,
                "mutability": "mutable",
                "name": "scheduledAt",
                "nameLocation": "2770:11:188",
                "nodeType": "VariableDeclaration",
                "scope": 62170,
                "src": "2762:19:188",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 62160,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2762:7:188",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62163,
                "mutability": "mutable",
                "name": "executedBy",
                "nameLocation": "2799:10:188",
                "nodeType": "VariableDeclaration",
                "scope": 62170,
                "src": "2791:18:188",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 62162,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2791:7:188",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62165,
                "mutability": "mutable",
                "name": "executedAt",
                "nameLocation": "2827:10:188",
                "nodeType": "VariableDeclaration",
                "scope": 62170,
                "src": "2819:18:188",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 62164,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2819:7:188",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62167,
                "mutability": "mutable",
                "name": "canceledBy",
                "nameLocation": "2855:10:188",
                "nodeType": "VariableDeclaration",
                "scope": 62170,
                "src": "2847:18:188",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 62166,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2847:7:188",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 62169,
                "mutability": "mutable",
                "name": "canceledAt",
                "nameLocation": "2883:10:188",
                "nodeType": "VariableDeclaration",
                "scope": 62170,
                "src": "2875:18:188",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 62168,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2875:7:188",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ScheduledExecution",
            "nameLocation": "2561:18:188",
            "scope": 62764,
            "visibility": "public"
          },
          {
            "id": 62177,
            "nodeType": "EventDefinition",
            "src": "2978:89:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62171,
              "nodeType": "StructuredDocumentation",
              "src": "2906:67:188",
              "text": " @notice Emitted when a root change is scheduled."
            },
            "name": "RootChangeScheduled",
            "nameLocation": "2984:19:188",
            "parameters": {
              "id": 62176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62173,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newRoot",
                  "nameLocation": "3020:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62177,
                  "src": "3004:23:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3004:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62175,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "3045:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62177,
                  "src": "3029:36:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3029:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3003:63:188"
            }
          },
          {
            "id": 62184,
            "nodeType": "EventDefinition",
            "src": "3188:84:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62178,
              "nodeType": "StructuredDocumentation",
              "src": "3073:110:188",
              "text": " @notice Emitted when an executor is added for a scheduled execution `scheduledExecutionId`."
            },
            "name": "ExecutorAdded",
            "nameLocation": "3194:13:188",
            "parameters": {
              "id": 62183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62180,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "3224:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62184,
                  "src": "3208:36:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3208:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62182,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "executor",
                  "nameLocation": "3262:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62184,
                  "src": "3246:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3246:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3207:64:188"
            }
          },
          {
            "id": 62193,
            "nodeType": "EventDefinition",
            "src": "3382:93:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62185,
              "nodeType": "StructuredDocumentation",
              "src": "3278:99:188",
              "text": " @notice Emitted when an account is added as a granter for `actionId` in `where`."
            },
            "name": "GranterAdded",
            "nameLocation": "3388:12:188",
            "parameters": {
              "id": 62192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62187,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "3417:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62193,
                  "src": "3401:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62186,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3401:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62189,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3443:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62193,
                  "src": "3427:23:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3427:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62191,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "3468:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62193,
                  "src": "3452:21:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3452:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3400:74:188"
            }
          },
          {
            "id": 62202,
            "nodeType": "EventDefinition",
            "src": "3583:95:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62194,
              "nodeType": "StructuredDocumentation",
              "src": "3481:97:188",
              "text": " @notice Emitted when an account is removed as a granter `actionId` in `where`."
            },
            "name": "GranterRemoved",
            "nameLocation": "3589:14:188",
            "parameters": {
              "id": 62201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62196,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "3620:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62202,
                  "src": "3604:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62195,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3604:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62198,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3646:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62202,
                  "src": "3630:23:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3630:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62200,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "3671:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62202,
                  "src": "3655:21:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3655:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3603:74:188"
            }
          },
          {
            "id": 62209,
            "nodeType": "EventDefinition",
            "src": "3772:67:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62203,
              "nodeType": "StructuredDocumentation",
              "src": "3684:83:188",
              "text": " @notice Emitted when `account` is added as a revoker in `where`."
            },
            "name": "RevokerAdded",
            "nameLocation": "3778:12:188",
            "parameters": {
              "id": 62208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62205,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3807:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62209,
                  "src": "3791:23:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3791:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62207,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "3832:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62209,
                  "src": "3816:21:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62206,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3816:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3790:48:188"
            }
          },
          {
            "id": 62216,
            "nodeType": "EventDefinition",
            "src": "3936:69:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62210,
              "nodeType": "StructuredDocumentation",
              "src": "3845:86:188",
              "text": " @notice Emitted when an account is removed as a revoker in `where`."
            },
            "name": "RevokerRemoved",
            "nameLocation": "3942:14:188",
            "parameters": {
              "id": 62215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62212,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3973:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62216,
                  "src": "3957:23:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3957:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62214,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "3998:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62216,
                  "src": "3982:21:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3982:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3956:48:188"
            }
          },
          {
            "id": 62223,
            "nodeType": "EventDefinition",
            "src": "4125:84:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62217,
              "nodeType": "StructuredDocumentation",
              "src": "4011:109:188",
              "text": " @notice Emitted when a canceler is added for a scheduled execution `scheduledExecutionId`."
            },
            "name": "CancelerAdded",
            "nameLocation": "4131:13:188",
            "parameters": {
              "id": 62222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62219,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "4161:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62223,
                  "src": "4145:36:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4145:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62221,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "canceler",
                  "nameLocation": "4199:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62223,
                  "src": "4183:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4183:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4144:64:188"
            }
          },
          {
            "id": 62230,
            "nodeType": "EventDefinition",
            "src": "4331:86:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62224,
              "nodeType": "StructuredDocumentation",
              "src": "4215:111:188",
              "text": " @notice Emitted when a canceler is removed for a scheduled execution `scheduledExecutionId`."
            },
            "name": "CancelerRemoved",
            "nameLocation": "4337:15:188",
            "parameters": {
              "id": 62229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62226,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "4369:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62230,
                  "src": "4353:36:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4353:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62228,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "canceler",
                  "nameLocation": "4407:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62230,
                  "src": "4391:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4391:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4352:64:188"
            }
          },
          {
            "id": 62235,
            "nodeType": "EventDefinition",
            "src": "4516:62:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62231,
              "nodeType": "StructuredDocumentation",
              "src": "4423:88:188",
              "text": " @notice Emitted when an execution `scheduledExecutionId` is executed."
            },
            "name": "ExecutionExecuted",
            "nameLocation": "4522:17:188",
            "parameters": {
              "id": 62234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62233,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "4556:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62235,
                  "src": "4540:36:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4540:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4539:38:188"
            }
          },
          {
            "id": 62240,
            "nodeType": "EventDefinition",
            "src": "4677:62:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62236,
              "nodeType": "StructuredDocumentation",
              "src": "4584:88:188",
              "text": " @notice Emitted when an execution `scheduledExecutionId` is canceled."
            },
            "name": "ExecutionCanceled",
            "nameLocation": "4683:17:188",
            "parameters": {
              "id": 62239,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62238,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "4717:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62240,
                  "src": "4701:36:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4701:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4700:38:188"
            }
          },
          {
            "id": 62245,
            "nodeType": "EventDefinition",
            "src": "4810:36:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62241,
              "nodeType": "StructuredDocumentation",
              "src": "4745:60:188",
              "text": " @notice Emitted when a new `root` is set."
            },
            "name": "RootSet",
            "nameLocation": "4816:7:188",
            "parameters": {
              "id": 62244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62243,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "4840:4:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62245,
                  "src": "4824:20:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4824:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4823:22:188"
            }
          },
          {
            "id": 62250,
            "nodeType": "EventDefinition",
            "src": "4984:50:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62246,
              "nodeType": "StructuredDocumentation",
              "src": "4852:127:188",
              "text": " @notice Emitted when a new `pendingRoot` is set. The new account must claim ownership for it to take effect."
            },
            "name": "PendingRootSet",
            "nameLocation": "4990:14:188",
            "parameters": {
              "id": 62249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62248,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pendingRoot",
                  "nameLocation": "5021:11:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62250,
                  "src": "5005:27:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5005:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5004:29:188"
            }
          },
          {
            "id": 62261,
            "nodeType": "EventDefinition",
            "src": "5118:174:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62251,
              "nodeType": "StructuredDocumentation",
              "src": "5040:73:188",
              "text": " @notice Emitted when a revoke permission is scheduled."
            },
            "name": "RevokePermissionScheduled",
            "nameLocation": "5124:25:188",
            "parameters": {
              "id": 62260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62253,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "5175:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62261,
                  "src": "5159:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62252,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5159:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62255,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5209:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62261,
                  "src": "5193:23:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5193:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62257,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "5242:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62261,
                  "src": "5226:21:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5226:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62259,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "5265:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62261,
                  "src": "5257:28:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5257:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5149:142:188"
            }
          },
          {
            "id": 62272,
            "nodeType": "EventDefinition",
            "src": "5375:173:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62262,
              "nodeType": "StructuredDocumentation",
              "src": "5298:72:188",
              "text": " @notice Emitted when a grant permission is scheduled."
            },
            "name": "GrantPermissionScheduled",
            "nameLocation": "5381:24:188",
            "parameters": {
              "id": 62271,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62264,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "5431:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62272,
                  "src": "5415:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62263,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5415:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62266,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5465:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62272,
                  "src": "5449:23:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5449:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62268,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "5498:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62272,
                  "src": "5482:21:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62267,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5482:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62270,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "5521:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62272,
                  "src": "5513:28:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5513:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5405:142:188"
            }
          },
          {
            "id": 62281,
            "nodeType": "EventDefinition",
            "src": "5634:153:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62273,
              "nodeType": "StructuredDocumentation",
              "src": "5554:75:188",
              "text": " @notice Emitted when a revoke delay change is scheduled."
            },
            "name": "RevokeDelayChangeScheduled",
            "nameLocation": "5640:26:188",
            "parameters": {
              "id": 62280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62275,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "5692:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62281,
                  "src": "5676:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62274,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5676:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62277,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newDelay",
                  "nameLocation": "5726:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62281,
                  "src": "5710:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5710:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62279,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "5760:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62281,
                  "src": "5744:36:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5744:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5666:120:188"
            }
          },
          {
            "id": 62290,
            "nodeType": "EventDefinition",
            "src": "5872:152:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62282,
              "nodeType": "StructuredDocumentation",
              "src": "5793:74:188",
              "text": " @notice Emitted when a grant delay change is scheduled."
            },
            "name": "GrantDelayChangeScheduled",
            "nameLocation": "5878:25:188",
            "parameters": {
              "id": 62289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62284,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "5929:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62290,
                  "src": "5913:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62283,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5913:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62286,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newDelay",
                  "nameLocation": "5963:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62290,
                  "src": "5947:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5947:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62288,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "5997:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62290,
                  "src": "5981:36:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5981:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5903:120:188"
            }
          },
          {
            "id": 62299,
            "nodeType": "EventDefinition",
            "src": "6103:147:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62291,
              "nodeType": "StructuredDocumentation",
              "src": "6030:68:188",
              "text": " @notice Emitted when a delay change is scheduled."
            },
            "name": "DelayChangeScheduled",
            "nameLocation": "6109:20:188",
            "parameters": {
              "id": 62298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62293,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "6155:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62299,
                  "src": "6139:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62292,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6139:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62295,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newDelay",
                  "nameLocation": "6189:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62299,
                  "src": "6173:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6173:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62297,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "6223:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62299,
                  "src": "6207:36:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6207:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6129:120:188"
            }
          },
          {
            "id": 62306,
            "nodeType": "EventDefinition",
            "src": "6360:62:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62300,
              "nodeType": "StructuredDocumentation",
              "src": "6256:99:188",
              "text": " @notice Emitted when a new `delay` is set in order to perform action `actionId`."
            },
            "name": "ActionDelaySet",
            "nameLocation": "6366:14:188",
            "parameters": {
              "id": 62305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62302,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "6397:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62306,
                  "src": "6381:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62301,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6381:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62304,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "delay",
                  "nameLocation": "6415:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62306,
                  "src": "6407:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6407:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6380:41:188"
            }
          },
          {
            "id": 62313,
            "nodeType": "EventDefinition",
            "src": "6525:89:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62307,
              "nodeType": "StructuredDocumentation",
              "src": "6428:92:188",
              "text": " @notice Emitted when a new execution `scheduledExecutionId` is scheduled."
            },
            "name": "ExecutionScheduled",
            "nameLocation": "6531:18:188",
            "parameters": {
              "id": 62312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62309,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "6566:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62313,
                  "src": "6550:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62308,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6550:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62311,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "6592:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62313,
                  "src": "6576:36:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6576:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6549:64:188"
            }
          },
          {
            "id": 62320,
            "nodeType": "EventDefinition",
            "src": "6744:61:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62314,
              "nodeType": "StructuredDocumentation",
              "src": "6620:119:188",
              "text": " @notice Emitted when a new `delay` is set in order to grant permission to execute action `actionId`."
            },
            "name": "GrantDelaySet",
            "nameLocation": "6750:13:188",
            "parameters": {
              "id": 62319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62316,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "6780:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62320,
                  "src": "6764:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62315,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6764:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62318,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "delay",
                  "nameLocation": "6798:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62320,
                  "src": "6790:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6790:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6763:41:188"
            }
          },
          {
            "id": 62327,
            "nodeType": "EventDefinition",
            "src": "6936:62:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62321,
              "nodeType": "StructuredDocumentation",
              "src": "6811:120:188",
              "text": " @notice Emitted when a new `delay` is set in order to revoke permission to execute action `actionId`."
            },
            "name": "RevokeDelaySet",
            "nameLocation": "6942:14:188",
            "parameters": {
              "id": 62326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62323,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "6973:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62327,
                  "src": "6957:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62322,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6957:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62325,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "delay",
                  "nameLocation": "6991:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62327,
                  "src": "6983:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6983:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6956:41:188"
            }
          },
          {
            "id": 62336,
            "nodeType": "EventDefinition",
            "src": "7128:98:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62328,
              "nodeType": "StructuredDocumentation",
              "src": "7004:119:188",
              "text": " @notice Emitted when `account` is granted permission to perform action `actionId` in target `where`."
            },
            "name": "PermissionGranted",
            "nameLocation": "7134:17:188",
            "parameters": {
              "id": 62335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62330,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "7168:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62336,
                  "src": "7152:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62329,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7152:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62332,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7194:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62336,
                  "src": "7178:23:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7178:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62334,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "7219:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62336,
                  "src": "7203:21:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7203:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7151:74:188"
            }
          },
          {
            "id": 62345,
            "nodeType": "EventDefinition",
            "src": "7358:98:188",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 62337,
              "nodeType": "StructuredDocumentation",
              "src": "7232:121:188",
              "text": " @notice Emitted when `account`'s permission to perform action `actionId` in target `where` is revoked."
            },
            "name": "PermissionRevoked",
            "nameLocation": "7364:17:188",
            "parameters": {
              "id": 62344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62339,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "7398:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62345,
                  "src": "7382:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62338,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7382:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62341,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7424:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62345,
                  "src": "7408:23:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7408:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62343,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "7449:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62345,
                  "src": "7433:21:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7433:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7381:74:188"
            }
          },
          {
            "id": 62351,
            "nodeType": "FunctionDefinition",
            "src": "7803:82:188",
            "nodes": [],
            "documentation": {
              "id": 62346,
              "nodeType": "StructuredDocumentation",
              "src": "7462:283:188",
              "text": " @notice A constant value for `scheduledExecutionId` that will match any execution Id.\n Cancelers assigned to this Id will be able to cancel *any* scheduled execution,\n which is very useful for e.g. emergency response dedicated teams that analyze these."
            },
            "functionSelector": "9299942e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "GLOBAL_CANCELER_SCHEDULED_EXECUTION_ID",
            "nameLocation": "7812:38:188",
            "parameters": {
              "id": 62347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7850:2:188"
            },
            "returnParameters": {
              "id": 62350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62349,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62351,
                  "src": "7876:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7876:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7875:9:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62357,
            "nodeType": "FunctionDefinition",
            "src": "8033:54:188",
            "nodes": [],
            "documentation": {
              "id": 62352,
              "nodeType": "StructuredDocumentation",
              "src": "7891:84:188",
              "text": " @notice A sentinel value for `where` that will match any address."
            },
            "functionSelector": "62cde1ba",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "EVERYWHERE",
            "nameLocation": "8042:10:188",
            "parameters": {
              "id": 62353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8052:2:188"
            },
            "returnParameters": {
              "id": 62356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62355,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62357,
                  "src": "8078:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62354,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8078:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8077:9:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62363,
            "nodeType": "FunctionDefinition",
            "src": "8331:53:188",
            "nodes": [],
            "documentation": {
              "id": 62358,
              "nodeType": "StructuredDocumentation",
              "src": "8093:180:188",
              "text": " @notice We institute a maximum delay to ensure that actions cannot be accidentally/maliciously disabled through\n         setting an arbitrarily long delay."
            },
            "functionSelector": "4125ff90",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "MAX_DELAY",
            "nameLocation": "8340:9:188",
            "parameters": {
              "id": 62359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8349:2:188"
            },
            "returnParameters": {
              "id": 62362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62361,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62363,
                  "src": "8375:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8375:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8374:9:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62369,
            "nodeType": "FunctionDefinition",
            "src": "8567:80:188",
            "nodes": [],
            "documentation": {
              "id": 62364,
              "nodeType": "StructuredDocumentation",
              "src": "8390:119:188",
              "text": " @notice We need a minimum delay period to ensure that all delay changes may be properly scrutinised."
            },
            "functionSelector": "b1e31aa0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "MINIMUM_CHANGE_DELAY_EXECUTION_DELAY",
            "nameLocation": "8576:36:188",
            "parameters": {
              "id": 62365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8612:2:188"
            },
            "returnParameters": {
              "id": 62368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62367,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62369,
                  "src": "8638:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8638:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8637:9:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62377,
            "nodeType": "FunctionDefinition",
            "src": "8723:62:188",
            "nodes": [],
            "documentation": {
              "id": 62370,
              "nodeType": "StructuredDocumentation",
              "src": "8653:65:188",
              "text": " @notice Returns true if `account` is the root."
            },
            "functionSelector": "557a6403",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isRoot",
            "nameLocation": "8732:6:188",
            "parameters": {
              "id": 62373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62372,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8747:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62377,
                  "src": "8739:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8739:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8738:17:188"
            },
            "returnParameters": {
              "id": 62376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62375,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62377,
                  "src": "8779:4:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62374,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8779:4:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8778:6:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62385,
            "nodeType": "FunctionDefinition",
            "src": "8869:69:188",
            "nodes": [],
            "documentation": {
              "id": 62378,
              "nodeType": "StructuredDocumentation",
              "src": "8791:73:188",
              "text": " @notice Returns true if `account` is the pending root."
            },
            "functionSelector": "0df322a6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isPendingRoot",
            "nameLocation": "8878:13:188",
            "parameters": {
              "id": 62381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62380,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8900:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62385,
                  "src": "8892:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8892:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8891:17:188"
            },
            "returnParameters": {
              "id": 62384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62383,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62385,
                  "src": "8932:4:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62382,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8932:4:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8931:6:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62391,
            "nodeType": "FunctionDefinition",
            "src": "9032:64:188",
            "nodes": [],
            "documentation": {
              "id": 62386,
              "nodeType": "StructuredDocumentation",
              "src": "8944:83:188",
              "text": " @notice Returns the delay required to transfer the root address."
            },
            "functionSelector": "c284b6b9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRootTransferDelay",
            "nameLocation": "9041:20:188",
            "parameters": {
              "id": 62387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9061:2:188"
            },
            "returnParameters": {
              "id": 62390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62389,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62391,
                  "src": "9087:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9087:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9086:9:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62397,
            "nodeType": "FunctionDefinition",
            "src": "9160:52:188",
            "nodes": [],
            "documentation": {
              "id": 62392,
              "nodeType": "StructuredDocumentation",
              "src": "9102:53:188",
              "text": " @notice Returns the vault address."
            },
            "functionSelector": "8d928af8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getVault",
            "nameLocation": "9169:8:188",
            "parameters": {
              "id": 62393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9177:2:188"
            },
            "returnParameters": {
              "id": 62396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62395,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62397,
                  "src": "9203:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9203:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9202:9:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62403,
            "nodeType": "FunctionDefinition",
            "src": "9294:70:188",
            "nodes": [],
            "documentation": {
              "id": 62398,
              "nodeType": "StructuredDocumentation",
              "src": "9218:71:188",
              "text": " @notice Returns the TimelockExecutionHelper address."
            },
            "functionSelector": "18ef871a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTimelockExecutionHelper",
            "nameLocation": "9303:26:188",
            "parameters": {
              "id": 62399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9329:2:188"
            },
            "returnParameters": {
              "id": 62402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62401,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62403,
                  "src": "9355:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9355:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9354:9:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62409,
            "nodeType": "FunctionDefinition",
            "src": "9427:51:188",
            "nodes": [],
            "documentation": {
              "id": 62404,
              "nodeType": "StructuredDocumentation",
              "src": "9370:52:188",
              "text": " @notice Returns the root address."
            },
            "functionSelector": "5ca1e165",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRoot",
            "nameLocation": "9436:7:188",
            "parameters": {
              "id": 62405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9443:2:188"
            },
            "returnParameters": {
              "id": 62408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62407,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62409,
                  "src": "9469:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9469:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9468:9:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62415,
            "nodeType": "FunctionDefinition",
            "src": "9563:58:188",
            "nodes": [],
            "documentation": {
              "id": 62410,
              "nodeType": "StructuredDocumentation",
              "src": "9484:74:188",
              "text": " @notice Returns the currently pending new root address."
            },
            "functionSelector": "d00bef4d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingRoot",
            "nameLocation": "9572:14:188",
            "parameters": {
              "id": 62411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9586:2:188"
            },
            "returnParameters": {
              "id": 62414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62413,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62415,
                  "src": "9612:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9612:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9611:9:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62427,
            "nodeType": "FunctionDefinition",
            "src": "9757:98:188",
            "nodes": [],
            "documentation": {
              "id": 62416,
              "nodeType": "StructuredDocumentation",
              "src": "9627:125:188",
              "text": " @notice Returns true if `account` is allowed to grant permissions for action `actionId` in target `where`."
            },
            "functionSelector": "b3eb281d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isGranter",
            "nameLocation": "9766:9:188",
            "parameters": {
              "id": 62423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62418,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "9784:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62427,
                  "src": "9776:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62417,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9776:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62420,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9802:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62427,
                  "src": "9794:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9794:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62422,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "9819:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62427,
                  "src": "9811:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9811:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9775:50:188"
            },
            "returnParameters": {
              "id": 62426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62425,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62427,
                  "src": "9849:4:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62424,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9849:4:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9848:6:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62437,
            "nodeType": "FunctionDefinition",
            "src": "9986:80:188",
            "nodes": [],
            "documentation": {
              "id": 62428,
              "nodeType": "StructuredDocumentation",
              "src": "9861:120:188",
              "text": " @notice Returns true if `account` is allowed to revoke permissions in target `where` for all actions."
            },
            "functionSelector": "c6192ee3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isRevoker",
            "nameLocation": "9995:9:188",
            "parameters": {
              "id": 62433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62430,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10013:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62437,
                  "src": "10005:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10005:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62432,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "10030:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62437,
                  "src": "10022:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10022:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10004:32:188"
            },
            "returnParameters": {
              "id": 62436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62435,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62437,
                  "src": "10060:4:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62434,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10060:4:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10059:6:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62446,
            "nodeType": "FunctionDefinition",
            "src": "10159:111:188",
            "nodes": [],
            "documentation": {
              "id": 62438,
              "nodeType": "StructuredDocumentation",
              "src": "10072:82:188",
              "text": " @notice Returns the scheduled execution `scheduledExecutionId`."
            },
            "functionSelector": "6badd2ab",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getScheduledExecution",
            "nameLocation": "10168:21:188",
            "parameters": {
              "id": 62441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62440,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "10198:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62446,
                  "src": "10190:28:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10190:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10189:30:188"
            },
            "returnParameters": {
              "id": 62445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62444,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62446,
                  "src": "10243:25:188",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ScheduledExecution_$62170_memory_ptr",
                    "typeString": "struct ITimelockAuthorizer.ScheduledExecution"
                  },
                  "typeName": {
                    "id": 62443,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62442,
                      "name": "ScheduledExecution",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62170,
                      "src": "10243:18:188"
                    },
                    "referencedDeclaration": 62170,
                    "src": "10243:18:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ScheduledExecution_$62170_storage_ptr",
                      "typeString": "struct ITimelockAuthorizer.ScheduledExecution"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10242:27:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62452,
            "nodeType": "FunctionDefinition",
            "src": "10483:71:188",
            "nodes": [],
            "documentation": {
              "id": 62447,
              "nodeType": "StructuredDocumentation",
              "src": "10276:202:188",
              "text": " @notice Returns the lifetime count of scheduled executions. The most recent scheduled execution will always have\n a `scheduledExecutionId` of `getScheduledExecutionsCount() - 1`"
            },
            "functionSelector": "f23481e0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getScheduledExecutionsCount",
            "nameLocation": "10492:27:188",
            "parameters": {
              "id": 62448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10519:2:188"
            },
            "returnParameters": {
              "id": 62451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62450,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62452,
                  "src": "10545:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10545:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10544:9:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62466,
            "nodeType": "FunctionDefinition",
            "src": "11830:190:188",
            "nodes": [],
            "documentation": {
              "id": 62453,
              "nodeType": "StructuredDocumentation",
              "src": "10560:1265:188",
              "text": " @notice Returns multiple scheduled executions, in either chronological or reverse chronological order (if\n `reverseOrder` is true).\n This function will return at most `maxSize` items, starting at index `skip` (meaning the first entries are\n skipped). Note that when querying in reverse order, it is the newest entries that are skipped, not the oldest.\n The value of `skip` must be lower than the return value of `getScheduledExecutionsCount()`, which means that not\n all scheduled executions can be skipped, and at least one execution will always be returned (assuming there are\n any).\n Example calls:\n  - { skip: 0, reverseOrder: false } : returns up to `maxSize` of oldest entries, with the oldest at index 0\n  - { skip: 0, reverseOrder: true } : returns up to `maxSize` of the newest entries, with the newest at index 0\n  - { skip: 5, reverseOrder: false } : returns up to `maxSize` of the oldest entries, skipping the 5 oldest\n    entries, with the globally sixth oldest at index 0\n  - { skip: 5, reverseOrder: true } : returns up to `maxSize` of the newest entries, skipping the 5 newest\n    entries, with the globally sixth nexest at index 0"
            },
            "functionSelector": "e4c00f4f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getScheduledExecutions",
            "nameLocation": "11839:22:188",
            "parameters": {
              "id": 62460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62455,
                  "mutability": "mutable",
                  "name": "skip",
                  "nameLocation": "11879:4:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62466,
                  "src": "11871:12:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11871:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62457,
                  "mutability": "mutable",
                  "name": "maxSize",
                  "nameLocation": "11901:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62466,
                  "src": "11893:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11893:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62459,
                  "mutability": "mutable",
                  "name": "reverseOrder",
                  "nameLocation": "11923:12:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62466,
                  "src": "11918:17:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62458,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11918:4:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11861:80:188"
            },
            "returnParameters": {
              "id": 62465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62464,
                  "mutability": "mutable",
                  "name": "items",
                  "nameLocation": "12013:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62466,
                  "src": "11965:53:188",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ScheduledExecution_$62170_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ITimelockAuthorizer.ScheduledExecution[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 62462,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 62461,
                        "name": "ITimelockAuthorizer.ScheduledExecution",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 62170,
                        "src": "11965:38:188"
                      },
                      "referencedDeclaration": 62170,
                      "src": "11965:38:188",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ScheduledExecution_$62170_storage_ptr",
                        "typeString": "struct ITimelockAuthorizer.ScheduledExecution"
                      }
                    },
                    "id": 62463,
                    "nodeType": "ArrayTypeName",
                    "src": "11965:40:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ScheduledExecution_$62170_storage_$dyn_storage_ptr",
                      "typeString": "struct ITimelockAuthorizer.ScheduledExecution[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11964:55:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62476,
            "nodeType": "FunctionDefinition",
            "src": "12126:96:188",
            "nodes": [],
            "documentation": {
              "id": 62467,
              "nodeType": "StructuredDocumentation",
              "src": "12026:95:188",
              "text": " @notice Returns true if `account` is an executor for `scheduledExecutionId`."
            },
            "functionSelector": "04434606",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isExecutor",
            "nameLocation": "12135:10:188",
            "parameters": {
              "id": 62472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62469,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "12154:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62476,
                  "src": "12146:28:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12146:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62471,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "12184:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62476,
                  "src": "12176:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62470,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12176:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12145:47:188"
            },
            "returnParameters": {
              "id": 62475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62474,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62476,
                  "src": "12216:4:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62473,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12216:4:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12215:6:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62484,
            "nodeType": "FunctionDefinition",
            "src": "12424:79:188",
            "nodes": [],
            "documentation": {
              "id": 62477,
              "nodeType": "StructuredDocumentation",
              "src": "12228:191:188",
              "text": " @notice Returns true if execution `scheduledExecutionId` can be executed.\n Only true if it is not already executed or canceled, and if the execution delay has passed."
            },
            "functionSelector": "cc63604a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "canExecute",
            "nameLocation": "12433:10:188",
            "parameters": {
              "id": 62480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62479,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "12452:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62484,
                  "src": "12444:28:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12444:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12443:30:188"
            },
            "returnParameters": {
              "id": 62483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62482,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62484,
                  "src": "12497:4:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62481,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12497:4:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12496:6:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62494,
            "nodeType": "FunctionDefinition",
            "src": "12609:96:188",
            "nodes": [],
            "documentation": {
              "id": 62485,
              "nodeType": "StructuredDocumentation",
              "src": "12509:95:188",
              "text": " @notice Returns true if `account` is an canceler for `scheduledExecutionId`."
            },
            "functionSelector": "3e1df46d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isCanceler",
            "nameLocation": "12618:10:188",
            "parameters": {
              "id": 62490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62487,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "12637:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62494,
                  "src": "12629:28:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12629:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62489,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "12667:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62494,
                  "src": "12659:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12659:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12628:47:188"
            },
            "returnParameters": {
              "id": 62493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62492,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62494,
                  "src": "12699:4:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62491,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12699:4:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12698:6:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62505,
            "nodeType": "FunctionDefinition",
            "src": "12806:100:188",
            "nodes": [],
            "documentation": {
              "id": 62495,
              "nodeType": "StructuredDocumentation",
              "src": "12711:90:188",
              "text": " @notice Schedules an execution to change the root address to `newRoot`."
            },
            "functionSelector": "2e3ed05b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "scheduleRootChange",
            "nameLocation": "12815:18:188",
            "parameters": {
              "id": 62501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62497,
                  "mutability": "mutable",
                  "name": "newRoot",
                  "nameLocation": "12842:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62505,
                  "src": "12834:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12834:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62500,
                  "mutability": "mutable",
                  "name": "executors",
                  "nameLocation": "12868:9:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62505,
                  "src": "12851:26:188",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 62498,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "12851:7:188",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 62499,
                    "nodeType": "ArrayTypeName",
                    "src": "12851:9:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12833:45:188"
            },
            "returnParameters": {
              "id": 62504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62503,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62505,
                  "src": "12897:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12897:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12896:9:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62513,
            "nodeType": "FunctionDefinition",
            "src": "12994:76:188",
            "nodes": [],
            "documentation": {
              "id": 62506,
              "nodeType": "StructuredDocumentation",
              "src": "12912:77:188",
              "text": " @notice Returns the execution delay for action `actionId`."
            },
            "functionSelector": "3bf46797",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getActionIdDelay",
            "nameLocation": "13003:16:188",
            "parameters": {
              "id": 62509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62508,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "13028:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62513,
                  "src": "13020:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62507,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13020:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13019:18:188"
            },
            "returnParameters": {
              "id": 62512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62511,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62513,
                  "src": "13061:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13061:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13060:9:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62521,
            "nodeType": "FunctionDefinition",
            "src": "13182:81:188",
            "nodes": [],
            "documentation": {
              "id": 62514,
              "nodeType": "StructuredDocumentation",
              "src": "13076:101:188",
              "text": " @notice Returns the execution delay for granting permission for action `actionId`."
            },
            "functionSelector": "8bd6bbc9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getActionIdGrantDelay",
            "nameLocation": "13191:21:188",
            "parameters": {
              "id": 62517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62516,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "13221:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62521,
                  "src": "13213:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62515,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13213:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13212:18:188"
            },
            "returnParameters": {
              "id": 62520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62519,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62521,
                  "src": "13254:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13254:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13253:9:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62529,
            "nodeType": "FunctionDefinition",
            "src": "13375:82:188",
            "nodes": [],
            "documentation": {
              "id": 62522,
              "nodeType": "StructuredDocumentation",
              "src": "13269:101:188",
              "text": " @notice Returns the execution delay for revoking permission for action `actionId`."
            },
            "functionSelector": "b99db526",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getActionIdRevokeDelay",
            "nameLocation": "13384:22:188",
            "parameters": {
              "id": 62525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62524,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "13415:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62529,
                  "src": "13407:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62523,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13407:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13406:18:188"
            },
            "returnParameters": {
              "id": 62528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62527,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62529,
                  "src": "13448:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62526,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13448:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13447:9:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62541,
            "nodeType": "FunctionDefinition",
            "src": "14021:116:188",
            "nodes": [],
            "documentation": {
              "id": 62530,
              "nodeType": "StructuredDocumentation",
              "src": "13463:553:188",
              "text": " @notice Returns true if `account` has the permission defined by action `actionId` and target `where`.\n @dev This function is specific for the strict permission defined by the tuple `(actionId, where)`: `account` may\n instead hold the global permission for the action `actionId`, also granting them permission on `where`, but this\n function would return false regardless.\n For this reason, it's recommended to use `hasPermission` if checking whether `account` is allowed to perform\n a given action."
            },
            "functionSelector": "86ff254b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isPermissionGrantedOnTarget",
            "nameLocation": "14030:27:188",
            "parameters": {
              "id": 62537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62532,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "14066:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62541,
                  "src": "14058:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62531,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14058:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62534,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "14084:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62541,
                  "src": "14076:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14076:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62536,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "14101:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62541,
                  "src": "14093:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14093:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14057:50:188"
            },
            "returnParameters": {
              "id": 62540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62539,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62541,
                  "src": "14131:4:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62538,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14131:4:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14130:6:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62553,
            "nodeType": "FunctionDefinition",
            "src": "14261:102:188",
            "nodes": [],
            "documentation": {
              "id": 62542,
              "nodeType": "StructuredDocumentation",
              "src": "14143:113:188",
              "text": " @notice Returns true if `account` has permission over the action `actionId` in target `where`."
            },
            "functionSelector": "e2b4146b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "hasPermission",
            "nameLocation": "14270:13:188",
            "parameters": {
              "id": 62549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62544,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "14292:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62553,
                  "src": "14284:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62543,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14284:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62546,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "14310:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62553,
                  "src": "14302:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14302:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62548,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "14327:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62553,
                  "src": "14319:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14319:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14283:50:188"
            },
            "returnParameters": {
              "id": 62552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62551,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62553,
                  "src": "14357:4:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 62550,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14357:4:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14356:6:188"
            },
            "scope": 62764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62559,
            "nodeType": "FunctionDefinition",
            "src": "14749:54:188",
            "nodes": [],
            "documentation": {
              "id": 62554,
              "nodeType": "StructuredDocumentation",
              "src": "14369:375:188",
              "text": " @notice Sets the pending root address to `pendingRoot`.\n @dev This function can never be called directly - it is only ever called as part of a scheduled execution by\n the TimelockExecutionHelper after after calling `scheduleRootChange`.\n Once set as the pending root, `pendingRoot` may then call `claimRoot` to become the new root."
            },
            "functionSelector": "1b3c85eb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setPendingRoot",
            "nameLocation": "14758:14:188",
            "parameters": {
              "id": 62557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62556,
                  "mutability": "mutable",
                  "name": "pendingRoot",
                  "nameLocation": "14781:11:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62559,
                  "src": "14773:19:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14773:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14772:21:188"
            },
            "returnParameters": {
              "id": 62558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14802:0:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62563,
            "nodeType": "FunctionDefinition",
            "src": "15118:30:188",
            "nodes": [],
            "documentation": {
              "id": 62560,
              "nodeType": "StructuredDocumentation",
              "src": "14809:304:188",
              "text": " @notice Transfers root powers from the current to the pending root address.\n @dev This function prevents accidentally transferring root to an invalid address.\n To become root, the pending root must call this function to ensure that it's able to interact with this contract."
            },
            "functionSelector": "14ea35e7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claimRoot",
            "nameLocation": "15127:9:188",
            "parameters": {
              "id": 62561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15136:2:188"
            },
            "returnParameters": {
              "id": 62562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15147:0:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62571,
            "nodeType": "FunctionDefinition",
            "src": "16336:86:188",
            "nodes": [],
            "documentation": {
              "id": 62564,
              "nodeType": "StructuredDocumentation",
              "src": "15154:1177:188",
              "text": " @notice Executes a scheduled execution `scheduledExecutionId`. This is used to execute all scheduled executions,\n not only those that originate from `schedule`, but also internal TimelockAuthorizer functions such as\n `scheduleRootChange` or `scheduleDelayChange`.\n If any executors were set up when scheduling, `execute` can only be called by them. If none were set, the\n scheduled execution is said to be 'unprotected', and can be executed by anyone.\n Once executed, a scheduled execution cannot be executed again. It also cannot be executed if canceled.\n We mark this function as `nonReentrant` out of an abundance of caution, as in theory this and the Authorizer\n should be resilient to reentrant executions. The non-reentrancy check means that it is not possible to execute a\n scheduled execution during the execution of another scheduled execution - an unlikely and convoluted scenario\n that we explicitly forbid.\n Note that while `execute` is nonReentrant, other functions are not - indeed, we rely on reentrancy to e.g. call\n `setPendingRoot` or `setDelay`."
            },
            "functionSelector": "fe0d94c1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "16345:7:188",
            "parameters": {
              "id": 62567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62566,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "16361:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62571,
                  "src": "16353:28:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16353:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16352:30:188"
            },
            "returnParameters": {
              "id": 62570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62569,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "16414:6:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62571,
                  "src": "16401:19:188",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 62568,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16401:5:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16400:21:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62577,
            "nodeType": "FunctionDefinition",
            "src": "16982:55:188",
            "nodes": [],
            "documentation": {
              "id": 62572,
              "nodeType": "StructuredDocumentation",
              "src": "16428:549:188",
              "text": " @notice Cancels a scheduled execution `scheduledExecutionId`, which prevents execution via `execute`. Canceling\n is irreversible. Scheduled executions that have already been executed cannot be canceled. This is the only way to\n prevent a scheduled execution from being executed (assuming there are willing executors).\n The caller must be a canceler, a permission which is managed by the `addCanceler` and `removeCanceler` functions.\n Note that root is always a canceler for all scheduled executions."
            },
            "functionSelector": "40e58ee5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cancel",
            "nameLocation": "16991:6:188",
            "parameters": {
              "id": 62575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62574,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "17006:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62577,
                  "src": "16998:28:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62573,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16998:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16997:30:188"
            },
            "returnParameters": {
              "id": 62576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17036:0:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62585,
            "nodeType": "FunctionDefinition",
            "src": "17495:77:188",
            "nodes": [],
            "documentation": {
              "id": 62578,
              "nodeType": "StructuredDocumentation",
              "src": "17043:447:188",
              "text": " @notice Grants canceler status to `account` for scheduled execution `scheduledExecutionId`.\n @dev Only the root can add a canceler.\n Note that there are no delays associated with adding or removing cancelers. This is based on the assumption that\n any action which a malicious user could exploit to damage the protocol can be mitigated by root.\n Root can remove any canceler and reschedule any task"
            },
            "functionSelector": "f6ebcbaf",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addCanceler",
            "nameLocation": "17504:11:188",
            "parameters": {
              "id": 62583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62580,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "17524:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62585,
                  "src": "17516:28:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17516:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62582,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "17554:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62585,
                  "src": "17546:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17546:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17515:47:188"
            },
            "returnParameters": {
              "id": 62584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17571:0:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62593,
            "nodeType": "FunctionDefinition",
            "src": "17744:80:188",
            "nodes": [],
            "documentation": {
              "id": 62586,
              "nodeType": "StructuredDocumentation",
              "src": "17578:161:188",
              "text": " @notice Remove canceler status from `account` for scheduled execution `scheduledExecutionId`.\n @dev Only the root can remove a canceler."
            },
            "functionSelector": "72efb120",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeCanceler",
            "nameLocation": "17753:14:188",
            "parameters": {
              "id": 62591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62588,
                  "mutability": "mutable",
                  "name": "scheduledExecutionId",
                  "nameLocation": "17776:20:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62593,
                  "src": "17768:28:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17768:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62590,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "17806:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62593,
                  "src": "17798:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17798:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17767:47:188"
            },
            "returnParameters": {
              "id": 62592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17823:0:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62603,
            "nodeType": "FunctionDefinition",
            "src": "18919:79:188",
            "nodes": [],
            "documentation": {
              "id": 62594,
              "nodeType": "StructuredDocumentation",
              "src": "17830:1084:188",
              "text": " @notice Grants granter status to `account` for action `actionId` in target `where`.\n @dev Only the root can add granters.\n Note that there are no delays associated with adding or removing granters. This is based on the assumption that\n any action which a malicious user could exploit to damage the protocol will have a sufficiently long delay\n associated with either granting permission for or exercising that permission such that the root will be able to\n reestablish control and cancel either the granting or associated action before it can be executed, and then\n remove the granter.\n A malicious granter may also attempt to use their granter status to grant permission to multiple accounts, but\n they cannot add new granters. Therefore, the danger posed by a malicious granter is limited and self-\n contained. Root can mitigate the situation simply and completely by revoking first their granter status,\n and then any permissions granted by that account, knowing there cannot be any more."
            },
            "functionSelector": "2229edb4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addGranter",
            "nameLocation": "18928:10:188",
            "parameters": {
              "id": 62601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62596,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "18947:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62603,
                  "src": "18939:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62595,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "18939:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62598,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "18965:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62603,
                  "src": "18957:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18957:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62600,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "18982:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62603,
                  "src": "18974:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18974:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18938:50:188"
            },
            "returnParameters": {
              "id": 62602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18997:0:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62613,
            "nodeType": "FunctionDefinition",
            "src": "19784:82:188",
            "nodes": [],
            "documentation": {
              "id": 62604,
              "nodeType": "StructuredDocumentation",
              "src": "19004:775:188",
              "text": " @notice Revokes granter status from `account` for action `actionId` in target `where`.\n @dev Only the root can remove granters.\n Note that there are no delays associated with removing granters. The only instance in which one might be useful\n is if we had contracts that were granters, and this was depended upon for operation of the system. This however\n doesn't seem like it will ever be required - granters are typically subDAOs.\n After removing a malicious granter, care should be taken to review their actions and remove any permissions\n granted by them, or cancel scheduled grants. This should be done *after* removing the granter, at which point\n they won't be able to create any more of these."
            },
            "functionSelector": "a8eae12d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeGranter",
            "nameLocation": "19793:13:188",
            "parameters": {
              "id": 62611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62606,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "19815:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62613,
                  "src": "19807:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62605,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "19807:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62608,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "19833:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62613,
                  "src": "19825:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19825:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62610,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "19850:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62613,
                  "src": "19842:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19842:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19806:50:188"
            },
            "returnParameters": {
              "id": 62612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19865:0:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62621,
            "nodeType": "FunctionDefinition",
            "src": "20570:61:188",
            "nodes": [],
            "documentation": {
              "id": 62614,
              "nodeType": "StructuredDocumentation",
              "src": "19872:693:188",
              "text": " @notice Grants revoker status to `account` in target `where` for all actions.\n @dev Only the root can add revokers.\n Note that there are no delays associated with adding revokers. This is based on the assumption that any\n permissions for which revocation from key addresses would be dangerous (e.g. preventing the BalancerMinter from\n minting BAL) have sufficiently long delays associated with revoking them that the root will be able to\n reestablish control and cancel the revocation before the scheduled revocation can be executed.\n A malicious revoker cannot add new revokers, so root can simply revoke their status once."
            },
            "functionSelector": "a44495d1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addRevoker",
            "nameLocation": "20579:10:188",
            "parameters": {
              "id": 62619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62616,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "20598:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62621,
                  "src": "20590:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20590:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62618,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "20615:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62621,
                  "src": "20607:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20607:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20589:32:188"
            },
            "returnParameters": {
              "id": 62620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20630:0:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62629,
            "nodeType": "FunctionDefinition",
            "src": "21117:64:188",
            "nodes": [],
            "documentation": {
              "id": 62622,
              "nodeType": "StructuredDocumentation",
              "src": "20637:475:188",
              "text": " @notice Removes revoker status from `account` in target `where` for all actions.\n @dev Only the root can remove revokers.\n Note that there are no delays associated with removing revokers.  The only instance in which one might be useful\n is if we had contracts that were revoker, and this was depended upon for operation of the system. This however\n doesn't seem like it will ever be required - revokers are typically subDAOs."
            },
            "functionSelector": "90216812",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeRevoker",
            "nameLocation": "21126:13:188",
            "parameters": {
              "id": 62627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62624,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "21148:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62629,
                  "src": "21140:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21140:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62626,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "21165:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62629,
                  "src": "21157:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21157:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21139:32:188"
            },
            "returnParameters": {
              "id": 62628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21180:0:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62637,
            "nodeType": "FunctionDefinition",
            "src": "21460:60:188",
            "nodes": [],
            "documentation": {
              "id": 62630,
              "nodeType": "StructuredDocumentation",
              "src": "21187:268:188",
              "text": " @notice Sets a new delay `delay` for action `actionId`.\n @dev This function can never be called directly - it is only ever called as part of a scheduled execution by\n the TimelockExecutionHelper after after calling `scheduleDelayChange`."
            },
            "functionSelector": "f0bb9406",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setDelay",
            "nameLocation": "21469:8:188",
            "parameters": {
              "id": 62635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62632,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "21486:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62637,
                  "src": "21478:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62631,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21478:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62634,
                  "mutability": "mutable",
                  "name": "delay",
                  "nameLocation": "21504:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62637,
                  "src": "21496:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21496:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21477:33:188"
            },
            "returnParameters": {
              "id": 62636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21519:0:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62645,
            "nodeType": "FunctionDefinition",
            "src": "21867:65:188",
            "nodes": [],
            "documentation": {
              "id": 62638,
              "nodeType": "StructuredDocumentation",
              "src": "21526:336:188",
              "text": " @notice Sets a new grant action delay `delay` for action `actionId`\n @dev This function can never be called directly - it is only ever called as part of a scheduled execution by\n the TimelockExecutor after after calling `scheduleGrantDelayChange`.\n Delay has to be shorter than the Authorizer delay."
            },
            "functionSelector": "10d3ab2c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setGrantDelay",
            "nameLocation": "21876:13:188",
            "parameters": {
              "id": 62643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62640,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "21898:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62645,
                  "src": "21890:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62639,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21890:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62642,
                  "mutability": "mutable",
                  "name": "delay",
                  "nameLocation": "21916:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62645,
                  "src": "21908:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21908:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21889:33:188"
            },
            "returnParameters": {
              "id": 62644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21931:0:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62653,
            "nodeType": "FunctionDefinition",
            "src": "22281:66:188",
            "nodes": [],
            "documentation": {
              "id": 62646,
              "nodeType": "StructuredDocumentation",
              "src": "21938:338:188",
              "text": " @notice Sets a new revoke action delay `delay` for action `actionId`\n @dev This function can never be called directly - it is only ever called as part of a scheduled execution by\n the TimelockExecutor after after calling `scheduleRevokeDelayChange`.\n Delay has to be shorter than the Authorizer delay."
            },
            "functionSelector": "c80c23e1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setRevokeDelay",
            "nameLocation": "22290:14:188",
            "parameters": {
              "id": 62651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62648,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "22313:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62653,
                  "src": "22305:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62647,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22305:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62650,
                  "mutability": "mutable",
                  "name": "delay",
                  "nameLocation": "22331:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62653,
                  "src": "22323:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62649,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22323:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22304:33:188"
            },
            "returnParameters": {
              "id": 62652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22346:0:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62666,
            "nodeType": "FunctionDefinition",
            "src": "23741:150:188",
            "nodes": [],
            "documentation": {
              "id": 62654,
              "nodeType": "StructuredDocumentation",
              "src": "22353:1383:188",
              "text": " @notice Schedules an execution to set the delay for `actionId`' to `newDelay`. This makes it impossible to\n execute `actionId` without an immutable public on-chain commitment for the execution at least `newDelay` seconds\n in advance.\n Critical actions that are expected to be performed by EOAs or multisigs are typically subject to such delays to\n allow for public scrutiny.\n How long it will take to make this change will depend on the current and new delays: if increasing by more than\n 5 days, then the time difference between the delays must pass. Otherwise, the minimum delay change execution\n delay of 5 days must pass instead.\n Only `executors` will be able to execute the scheduled execution, unless `executors` is an empty array, in which\n case any account can execute it.\n Avoid scheduling multiple delay changes for the same action at the same time, as this makes it harder to reason\n about the state of the system. If there is already a scheduled delay change and there is a desire to change the\n future delay to some other value, cancel the first scheduled change and schedule a new one.\n Only root can call this function, but other accounts may be granted permission to cancel the scheduled execution\n (including global cancelers)."
            },
            "functionSelector": "f0845522",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "scheduleDelayChange",
            "nameLocation": "23750:19:188",
            "parameters": {
              "id": 62662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62656,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "23787:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62666,
                  "src": "23779:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62655,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23779:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62658,
                  "mutability": "mutable",
                  "name": "newDelay",
                  "nameLocation": "23813:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62666,
                  "src": "23805:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62657,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23805:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62661,
                  "mutability": "mutable",
                  "name": "executors",
                  "nameLocation": "23848:9:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62666,
                  "src": "23831:26:188",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 62659,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "23831:7:188",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 62660,
                    "nodeType": "ArrayTypeName",
                    "src": "23831:9:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23769:94:188"
            },
            "returnParameters": {
              "id": 62665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62664,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62666,
                  "src": "23882:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23882:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23881:9:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62679,
            "nodeType": "FunctionDefinition",
            "src": "25411:155:188",
            "nodes": [],
            "documentation": {
              "id": 62667,
              "nodeType": "StructuredDocumentation",
              "src": "23897:1509:188",
              "text": " @notice Schedules an execution to set the delay for granting permission over `actionId` to `newDelay`. This makes\n it impossible to grant permission to execute `actionId` without an immutable public on-chain commitment for the\n granting at least `newDelay` seconds in advance.\n Critical actions that are expected to be performed by smart contracts are typically subject to such grant delays\n to allow for public scrutiny of new contracts that are granted the permission.\n How long it will take to make this change will depend on the current and new grant delays: if increasing by more\n than 5 days, then the time difference between the grant delays must pass. Otherwise, the minimum delay change\n execution delay of 5 days must pass instead.\n Only `executors` will be able to execute the scheduled execution, unless `executors` is an empty array, in which\n case any account can execute it.\n Avoid scheduling multiple grant delay changes for the same action at the same time, as this makes it harder to\n reason about the state of the system. If there is already a scheduled grant delay change and there is a desire to\n change the future grant delay to some other value, cancel the first scheduled change and schedule a new one.\n Only root can call this function, but other accounts may be granted permission to cancel the scheduled execution\n (including global cancelers)."
            },
            "functionSelector": "63cdbf36",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "scheduleGrantDelayChange",
            "nameLocation": "25420:24:188",
            "parameters": {
              "id": 62675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62669,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "25462:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62679,
                  "src": "25454:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62668,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "25454:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62671,
                  "mutability": "mutable",
                  "name": "newDelay",
                  "nameLocation": "25488:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62679,
                  "src": "25480:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25480:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62674,
                  "mutability": "mutable",
                  "name": "executors",
                  "nameLocation": "25523:9:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62679,
                  "src": "25506:26:188",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 62672,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "25506:7:188",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 62673,
                    "nodeType": "ArrayTypeName",
                    "src": "25506:9:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25444:94:188"
            },
            "returnParameters": {
              "id": 62678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62677,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62679,
                  "src": "25557:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25557:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25556:9:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62692,
            "nodeType": "FunctionDefinition",
            "src": "27183:156:188",
            "nodes": [],
            "documentation": {
              "id": 62680,
              "nodeType": "StructuredDocumentation",
              "src": "25572:1606:188",
              "text": " @notice Schedules an execution to set the delay for revoking permission over `actionId` to `newDelay`. This makes\n it impossible to revoke permission to execute `actionId` without an immutable public on-chain commitment for the\n revoking at least `newDelay` seconds in advance.\n Critical actions that are performed by smart contracts and to which there is a long term commitment (e.g. minting\n of BAL as part of the Liquidity Mining Program) are typically subject to such revoke delays, making it impossible\n to disable the system without sufficient notice.\n How long it will take to make this change will depend on the current and new revoke delays: if increasing by more\n than 5 days, then the time difference between the revoke delays must pass. Otherwise, the minimum delay change\n execution delay of 5 days must pass instead.\n Only `executors` will be able to execute the scheduled execution, unless `executors` is an empty array, in which\n case any account can execute it.\n Avoid scheduling multiple revoke delay changes for the same action at the same time, as this makes it harder to\n reason about the state of the system. If there is already a scheduled revoke delay change and there is a desire\n to change the future grant delay to some other value, cancel the first scheduled change and schedule a new one.\n Only root can call this function, but other accounts may be granted permission to cancel the scheduled execution\n (including global cancelers)."
            },
            "functionSelector": "608dd7e4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "scheduleRevokeDelayChange",
            "nameLocation": "27192:25:188",
            "parameters": {
              "id": 62688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62682,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "27235:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62692,
                  "src": "27227:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62681,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "27227:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62684,
                  "mutability": "mutable",
                  "name": "newDelay",
                  "nameLocation": "27261:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62692,
                  "src": "27253:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27253:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62687,
                  "mutability": "mutable",
                  "name": "executors",
                  "nameLocation": "27296:9:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62692,
                  "src": "27279:26:188",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 62685,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "27279:7:188",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 62686,
                    "nodeType": "ArrayTypeName",
                    "src": "27279:9:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27217:94:188"
            },
            "returnParameters": {
              "id": 62691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62690,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62692,
                  "src": "27330:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27330:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27329:9:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62705,
            "nodeType": "FunctionDefinition",
            "src": "28636:107:188",
            "nodes": [],
            "documentation": {
              "id": 62693,
              "nodeType": "StructuredDocumentation",
              "src": "27345:1286:188",
              "text": " @notice Schedules an arbitrary execution of `data` in target `where`. Returns a scheduledExecutionId that can be\n used to call `execute`, `cancel`, and associated getters such as `getScheduledExecution`.\n If `executors` is an empty array, then any account in the network will be able to initiate the scheduled\n execution. If not, only accounts in the `executors` array will be able to call `execute`. It is not possible to\n change this after scheduling: the list of executors is immutable, and cannot be changed by any account (including\n root).\n The caller of the `schedule` function is automatically made a canceler for the scheduled execution, meaning they\n can call the `cancel` function for it. Other accounts, such as root, may also have or be granted permission to\n cancel any scheduled execution.\n This is the only way to execute actions in external contracts that have a delay associated with them. Calling\n said functions directly will cause `canPerform` to return false, even if the caller has permission. An account\n that has permission over an action with a delay cannot call it directly, and must instead schedule a delayed\n execution by calling this function."
            },
            "functionSelector": "169f1468",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "schedule",
            "nameLocation": "28645:8:188",
            "parameters": {
              "id": 62701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62695,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "28662:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62705,
                  "src": "28654:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28654:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62697,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "28682:4:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62705,
                  "src": "28669:17:188",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 62696,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "28669:5:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62700,
                  "mutability": "mutable",
                  "name": "executors",
                  "nameLocation": "28705:9:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62705,
                  "src": "28688:26:188",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 62698,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "28688:7:188",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 62699,
                    "nodeType": "ArrayTypeName",
                    "src": "28688:9:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28653:62:188"
            },
            "returnParameters": {
              "id": 62704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62703,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62705,
                  "src": "28734:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28734:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28733:9:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62715,
            "nodeType": "FunctionDefinition",
            "src": "28988:84:188",
            "nodes": [],
            "documentation": {
              "id": 62706,
              "nodeType": "StructuredDocumentation",
              "src": "28749:234:188",
              "text": " @notice Grants a permission to a single `account` at 'where' address.\n @dev This function can only be used for actions that have no grant delay. For those that do, use\n `scheduleGrantPermission` instead."
            },
            "functionSelector": "8cc3d072",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "grantPermission",
            "nameLocation": "28997:15:188",
            "parameters": {
              "id": 62713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62708,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "29021:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62715,
                  "src": "29013:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62707,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "29013:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62710,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "29039:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62715,
                  "src": "29031:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29031:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62712,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "29056:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62715,
                  "src": "29048:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29048:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29012:50:188"
            },
            "returnParameters": {
              "id": 62714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29071:0:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62730,
            "nodeType": "FunctionDefinition",
            "src": "29224:176:188",
            "nodes": [],
            "documentation": {
              "id": 62716,
              "nodeType": "StructuredDocumentation",
              "src": "29078:141:188",
              "text": " @notice Schedules a grant permission to `account` for action `actionId` in target `where`.\n See `schedule` comments."
            },
            "functionSelector": "863bac6b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "scheduleGrantPermission",
            "nameLocation": "29233:23:188",
            "parameters": {
              "id": 62726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62718,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "29274:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62730,
                  "src": "29266:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62717,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "29266:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62720,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "29300:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62730,
                  "src": "29292:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62719,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29292:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62722,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "29325:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62730,
                  "src": "29317:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29317:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62725,
                  "mutability": "mutable",
                  "name": "executors",
                  "nameLocation": "29357:9:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62730,
                  "src": "29340:26:188",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 62723,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "29340:7:188",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 62724,
                    "nodeType": "ArrayTypeName",
                    "src": "29340:9:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29256:116:188"
            },
            "returnParameters": {
              "id": 62729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62728,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62730,
                  "src": "29391:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62727,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29391:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29390:9:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62740,
            "nodeType": "FunctionDefinition",
            "src": "29650:85:188",
            "nodes": [],
            "documentation": {
              "id": 62731,
              "nodeType": "StructuredDocumentation",
              "src": "29406:239:188",
              "text": " @notice Revokes a permission from a single `account` at `where` address.\n @dev This function can only be used for actions that have no revoke delay. For those that do, use\n `scheduleRevokePermission` instead."
            },
            "functionSelector": "3ac5d439",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revokePermission",
            "nameLocation": "29659:16:188",
            "parameters": {
              "id": 62738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62733,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "29684:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62740,
                  "src": "29676:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62732,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "29676:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62735,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "29702:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62740,
                  "src": "29694:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29694:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62737,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "29719:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62740,
                  "src": "29711:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29711:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29675:50:188"
            },
            "returnParameters": {
              "id": 62739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29734:0:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62755,
            "nodeType": "FunctionDefinition",
            "src": "29890:177:188",
            "nodes": [],
            "documentation": {
              "id": 62741,
              "nodeType": "StructuredDocumentation",
              "src": "29741:144:188",
              "text": " @notice Schedules a revoke permission from `account` for action `actionId` in target `where`.\n See `schedule` comments."
            },
            "functionSelector": "5b78b780",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "scheduleRevokePermission",
            "nameLocation": "29899:24:188",
            "parameters": {
              "id": 62751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62743,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "29941:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62755,
                  "src": "29933:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62742,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "29933:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62745,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "29967:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62755,
                  "src": "29959:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29959:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62747,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "29992:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62755,
                  "src": "29984:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29984:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62750,
                  "mutability": "mutable",
                  "name": "executors",
                  "nameLocation": "30024:9:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62755,
                  "src": "30007:26:188",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 62748,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "30007:7:188",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 62749,
                    "nodeType": "ArrayTypeName",
                    "src": "30007:9:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29923:116:188"
            },
            "returnParameters": {
              "id": 62754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62753,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 62755,
                  "src": "30058:7:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30058:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30057:9:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 62763,
            "nodeType": "FunctionDefinition",
            "src": "30309:70:188",
            "nodes": [],
            "documentation": {
              "id": 62756,
              "nodeType": "StructuredDocumentation",
              "src": "30073:231:188",
              "text": " @notice Revokes a permission from the caller for `actionId` at `where` address\n @dev Note that the caller can always renounce permissions, even if revoking them would typically be\n subject to a delay."
            },
            "functionSelector": "99a7f6e2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "renouncePermission",
            "nameLocation": "30318:18:188",
            "parameters": {
              "id": 62761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62758,
                  "mutability": "mutable",
                  "name": "actionId",
                  "nameLocation": "30345:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62763,
                  "src": "30337:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62757,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "30337:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62760,
                  "mutability": "mutable",
                  "name": "where",
                  "nameLocation": "30363:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 62763,
                  "src": "30355:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30355:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30336:33:188"
            },
            "returnParameters": {
              "id": 62762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30378:0:188"
            },
            "scope": 62764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ITimelockAuthorizer",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 62145,
          "nodeType": "StructuredDocumentation",
          "src": "747:1770:188",
          "text": " @title Timelock Authorizer\n @author Balancer Labs\n @dev Authorizer with timelocks (delays).\n Users are allowed to perform actions if they have the permission to do so.\n This Authorizer implementation allows defining delays per action identifier. If a delay is set for an action, users\n are not allowed to execute it directly themselves. Instead, they schedule an execution that the Authorizer will\n run in the future.\n Glossary:\n - Action: Operation that can be performed on a target contract. These are identified by a unique bytes32 `actionId`\n   defined by each target contract following `IAuthentication.getActionId`.\n - Scheduled execution: The Authorizer can define a delay for an `actionId` to require that a specific\n   time window must pass before it can be executed. When a delay is set for an `actionId`, executions\n   must be scheduled. These executions are identified by an unsigned integer called `scheduledExecutionId`.\n - Permission: Accounts have or don't have permission to perform an action identified by its `actionId` on a specific\n   contract `where`. Note that if the action has a delay, then accounts with permission cannot perform the action\n   directly, but are instead allowed to schedule future executions for them.\n Note that the TimelockAuthorizer doesn't use reentrancy guard on its external functions.\n The only function which makes an external non-view call (and so could initate a reentrancy attack) is `execute`\n which executes a scheduled execution, protected by the Checks-Effects-Interactions pattern.\n In fact a number of the TimelockAuthorizer's functions may only be called through a scheduled execution so reentrancy\n is necessary in order to be able to call these."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          62764
        ],
        "name": "ITimelockAuthorizer",
        "nameLocation": "2528:19:188",
        "scope": 62765,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 188
}