{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastCheckpointTimestamp",
          "type": "uint256"
        }
      ],
      "name": "TokenCheckpointed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "userTokenTimeCursor",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "checkpoint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "checkpointToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "checkpointTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "checkpointUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "claimToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "claimTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "depositTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeCursor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getTokenLastBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getTokenTimeCursor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "getTokensDistributedInWeek",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "getTotalSupplyAtTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "getUserBalanceAtTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserTimeCursor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getUserTokenTimeCursor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotingEscrow",
      "outputs": [
        {
          "internalType": "contract IVotingEscrow",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "checkpoint()": "c2c4c5c1",
    "checkpointToken(address)": "3902b9bc",
    "checkpointTokens(address[])": "905d10ac",
    "checkpointUser(address)": "14866e08",
    "claimToken(address,address)": "ca31879d",
    "claimTokens(address,address[])": "88720467",
    "depositToken(address,uint256)": "338b5dea",
    "depositTokens(address[],uint256[])": "7b8d6221",
    "getTimeCursor()": "82aa5ad4",
    "getTokenLastBalance(address)": "2308805b",
    "getTokenTimeCursor(address)": "acbc1428",
    "getTokensDistributedInWeek(address,uint256)": "d3dc4ca1",
    "getTotalSupplyAtTimestamp(uint256)": "4f3c5090",
    "getUserBalanceAtTimestamp(address,uint256)": "de681faf",
    "getUserTimeCursor(address)": "876e69a1",
    "getUserTokenTimeCursor(address,address)": "8050a7ee",
    "getVotingEscrow()": "08b0308a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastCheckpointTimestamp\",\"type\":\"uint256\"}],\"name\":\"TokenCheckpointed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"userTokenTimeCursor\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"checkpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"checkpointToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"checkpointTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"checkpointUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"claimToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"claimTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"depositTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeCursor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenLastBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenTimeCursor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getTokensDistributedInWeek\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getTotalSupplyAtTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"getUserBalanceAtTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserTimeCursor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getUserTokenTimeCursor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotingEscrow\",\"outputs\":[{\"internalType\":\"contract IVotingEscrow\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Supports distributing arbitrarily many different tokens. In order to start distributing a new token to veBAL holders simply transfer the tokens to the `FeeDistributor` contract and then call `checkpointToken`.\",\"kind\":\"dev\",\"methods\":{\"checkpointToken(address)\":{\"details\":\"Any `token` balance held by the FeeDistributor above that which is returned by `getTokenLastBalance` will be distributed evenly across the time period since `token` was last checkpointed. This function will be called automatically before claiming tokens to ensure the contract is properly updated.\",\"params\":{\"token\":\"- The ERC20 token address to be checkpointed.\"}},\"checkpointTokens(address[])\":{\"details\":\"A version of `checkpointToken` which supports checkpointing multiple tokens. See `checkpointToken` for more details.\",\"params\":{\"tokens\":\"- An array of ERC20 token addresses to be checkpointed.\"}},\"checkpointUser(address)\":{\"params\":{\"user\":\"- The address of the user to be checkpointed.\"}},\"claimToken(address,address)\":{\"details\":\"It's not necessary to explicitly checkpoint before calling this function, it will ensure the FeeDistributor is up to date before calculating the amount of tokens to be claimed.\",\"params\":{\"token\":\"- The ERC20 token address to be claimed.\",\"user\":\"- The user on behalf of which to claim.\"},\"returns\":{\"_0\":\"The amount of `token` sent to `user` as a result of claiming.\"}},\"claimTokens(address,address[])\":{\"details\":\"A version of `claimToken` which supports claiming multiple `tokens` on behalf of `user`. See `claimToken` for more details.\",\"params\":{\"tokens\":\"- An array of ERC20 token addresses to be claimed.\",\"user\":\"- The user on behalf of which to claim.\"},\"returns\":{\"_0\":\"An array of the amounts of each token in `tokens` sent to `user` as a result of claiming.\"}},\"depositToken(address,uint256)\":{\"details\":\"Sending tokens directly to the FeeDistributor instead of using `depositTokens` may result in tokens being retroactively distributed to past weeks, or for the distribution to carry over to future weeks. If for some reason `depositTokens` cannot be called, in order to ensure that all tokens are correctly distributed manually call `checkpointToken` before and after the token transfer.\",\"params\":{\"amount\":\"- The amount of tokens to deposit.\",\"token\":\"- The ERC20 token address to distribute.\"}},\"depositTokens(address[],uint256[])\":{\"details\":\"A version of `depositToken` which supports depositing multiple `tokens` at once. See `depositToken` for more details.\",\"params\":{\"amounts\":\"- An array of token amounts to deposit.\",\"tokens\":\"- An array of ERC20 token addresses to distribute.\"}},\"getTokenTimeCursor(address)\":{\"params\":{\"token\":\"- The ERC20 token address to query.\"}},\"getTokensDistributedInWeek(address,uint256)\":{\"params\":{\"timestamp\":\"- The timestamp corresponding to the beginning of the week of interest.\",\"token\":\"- The ERC20 token address to query.\"}},\"getTotalSupplyAtTimestamp(uint256)\":{\"details\":\"Only timestamps which fall on Thursdays 00:00:00 UTC will return correct values. This function requires the contract to have been checkpointed past `timestamp` so that the supply is cached.\",\"params\":{\"timestamp\":\"- The timestamp at which to read the cached total supply at.\"}},\"getUserBalanceAtTimestamp(address,uint256)\":{\"details\":\"Only timestamps which fall on Thursdays 00:00:00 UTC will return correct values. This function requires `user` to have been checkpointed past `timestamp` so that their balance is cached.\",\"params\":{\"timestamp\":\"- The timestamp at which to read the `user`'s cached balance at.\",\"user\":\"- The address of the user of which to read the cached balance of.\"}},\"getUserTimeCursor(address)\":{\"params\":{\"user\":\"- The address of the user to query.\"}},\"getUserTokenTimeCursor(address,address)\":{\"params\":{\"token\":\"- The ERC20 token address to query.\",\"user\":\"- The address of the user to query.\"}}},\"title\":\"Fee Distributor\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkpoint()\":{\"notice\":\"Caches the total supply of veBAL at the beginning of each week. This function will be called automatically before claiming tokens to ensure the contract is properly updated.\"},\"checkpointToken(address)\":{\"notice\":\"Assigns any newly-received tokens held by the FeeDistributor to weekly distributions.\"},\"checkpointTokens(address[])\":{\"notice\":\"Assigns any newly-received tokens held by the FeeDistributor to weekly distributions.\"},\"checkpointUser(address)\":{\"notice\":\"Caches the user's balance of veBAL at the beginning of each week. This function will be called automatically before claiming tokens to ensure the contract is properly updated.\"},\"claimToken(address,address)\":{\"notice\":\"Claims all pending distributions of the provided token for a user.\"},\"claimTokens(address,address[])\":{\"notice\":\"Claims a number of tokens on behalf of a user.\"},\"depositToken(address,uint256)\":{\"notice\":\"Deposits tokens to be distributed in the current week.\"},\"depositTokens(address[],uint256[])\":{\"notice\":\"Deposits tokens to be distributed in the current week.\"},\"getTimeCursor()\":{\"notice\":\"Returns the global time cursor representing the most earliest uncheckpointed week.\"},\"getTokenLastBalance(address)\":{\"notice\":\"Returns the FeeDistributor's cached balance of `token`.\"},\"getTokenTimeCursor(address)\":{\"notice\":\"Returns the token-level time cursor storing the timestamp at up to which tokens have been distributed.\"},\"getTokensDistributedInWeek(address,uint256)\":{\"notice\":\"Returns the amount of `token` which the FeeDistributor received in the week beginning at `timestamp`.\"},\"getTotalSupplyAtTimestamp(uint256)\":{\"notice\":\"Returns the cached total supply of veBAL as of the provided timestamp.\"},\"getUserBalanceAtTimestamp(address,uint256)\":{\"notice\":\"Returns the user's cached balance of veBAL as of the provided timestamp.\"},\"getUserTimeCursor(address)\":{\"notice\":\"Returns the user-level time cursor representing the most earliest uncheckpointed week.\"},\"getUserTokenTimeCursor(address,address)\":{\"notice\":\"Returns the user-level time cursor storing the timestamp of the latest token distribution claimed.\"},\"getVotingEscrow()\":{\"notice\":\"Returns the VotingEscrow (veBAL) token contract\"}},\"notice\":\"Distributes any tokens transferred to the contract (e.g. Protocol fees and any BAL emissions) among veBAL holders proportionally based on a snapshot of the week at which the tokens are sent to the FeeDistributor contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/external/balancer/liquidity-mining/IFeeDistributor.sol\":\"IFeeDistributor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/interfaces/external/balancer/liquidity-mining/IAuthorizerAdaptor.sol\":{\"keccak256\":\"0x1a9bad00c0084984cd3364cfcdeaece137157816fe8078f706ed78adc803cad7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d69ccb7c506a7b56fe8f4e59ee10595d3e5cbb881e8215fdda879ec7bf34a5c6\",\"dweb:/ipfs/QmZc3HoxcdRivJ8xePXBxceAtvxo8LA7P8Rf3pjjED9e7y\"]},\"src/interfaces/external/balancer/liquidity-mining/IFeeDistributor.sol\":{\"keccak256\":\"0x928c6886cb65b70b092d8c5b6b92308e946fb0bb596a225816707f3f94286262\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f770e990fe6a666be0a08c9358783cde5bed660424a74866f84041e8d8ec44bf\",\"dweb:/ipfs/QmTVhX9EEXDfokcxS7GQ4HS9mERdfa83zZzbZbkuAofnJ6\"]},\"src/interfaces/external/balancer/liquidity-mining/ISmartWalletChecker.sol\":{\"keccak256\":\"0x8f76f086f3d153b7542a027abdf7a5c5ca71acef1525d9a0a2219e561133c42c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://10e75e488da4be267b28819a0fad4507a42476f14136a8cf6c283bc2d14515d9\",\"dweb:/ipfs/QmfXQibu6k9zCT55DGWTTHaD4JkeTyu8Rnugfkx7GpknWk\"]},\"src/interfaces/external/balancer/liquidity-mining/IVotingEscrow.sol\":{\"keccak256\":\"0xbf08c2800a22fb2f2b6bdfb6fc18aefb8a1fe302958a1053c6cc952b5e64b5e0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://41375a51dd8822d3c46047621dcad60e66e272af7f7d58b0dfd7712d40c30ed6\",\"dweb:/ipfs/QmbsaZkB5NEQJ1UtiWRja8LuLesyKaFVfq9g1L1HxSLC6g\"]},\"src/interfaces/external/balancer/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x8032fd6d7f660d9536d252897336462bb932d1e91bd3b87c087be017a35dc842\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3724cffd85daa36371999e0e9ea56617df12fd7f2cc5c123139705766e3b89a1\",\"dweb:/ipfs/QmaM2wHuKrpKcc8mRhdYmXqPVAimHjGK1xubPWXKafiKYa\"]},\"src/interfaces/external/balancer/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x52bd09272e9ec2cff838df757e8b690ff4ca3f4f07e9edd9b711e31e474dd979\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://92ae86c99ce4b92fc666a4c6053bc5ae2932d07b23471647cae7c541c68071b3\",\"dweb:/ipfs/QmeKHMVTVLfG5MKQ7ewM7uwB41WEXkDKhkkL3qCd7mokFo\"]},\"src/interfaces/external/balancer/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xf952ad04a5d4e8523212315e19b8d874e13ceadb7dbc1f5025510da1e153405c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://81d7e364e8c7a76879f9be650559d3de53879918ab721372931d0e51daa464b5\",\"dweb:/ipfs/QmNyXjvxr3cXzVeBaPrApS9fdjufyN6dXtjGy746xxtj2z\"]},\"src/interfaces/external/balancer/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x90278f677649701309ab0902f5bca2fd0d9603e5ce7193b15cf05a7c5582c3b9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://991dce71671de9fb0f5fafda69994705e358a5cb235bc3acf961dbc9895b6dd6\",\"dweb:/ipfs/QmP7479cjgvMa2DjXNSB6gvHZ2WibU4TGb3DTjqw6UuFb6\"]},\"src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"src/interfaces/external/balancer/vault/IAsset.sol\":{\"keccak256\":\"0x746354db670eb3b94179963b522c4deb0b9854483ab293e3025689749923ebef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bcd5a7e0519f94c25f4e3b568b8c0446b2240bd3808c56c3b498a6fed459b2e4\",\"dweb:/ipfs/QmRXvcCy9oKhwPMr8QQ74pg9jormcgq3GHmLSGTDhUWAsn\"]},\"src/interfaces/external/balancer/vault/IAuthorizer.sol\":{\"keccak256\":\"0x4adfebbc478ab323d0679386ef8e2384f5205eb280f72757c151eca62ea4f91b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://49a34c9ad9cb559931b465cea2d570ab015751c6dbc4a52eab8c36b5b949eec1\",\"dweb:/ipfs/QmUiUSZz8gjANUcTqaPCfNkUp3gpjt8Qq2z4UWuQWhaK34\"]},\"src/interfaces/external/balancer/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xef16377e5ee7ac8151fe8abc3f7b8f0a420008ae1c1336f3cbaea5e171403a43\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ca460a387ce27682beecc1f93a07c7ef6139504f2d4e2fce715abe82b6d2b039\",\"dweb:/ipfs/QmS8QgcAqhtHepcf8LYGToutbhsUXaTE7UNLQQi4fBJsUC\"]},\"src/interfaces/external/balancer/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xa42e8b311517ce70dd7f2af6b497603a81c3dd678961a5ffd8a2968eff6b7b5a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9a11ea954c234e348896cec60165624d71e9fe7b44d7341d74e3bdc7790f2b6a\",\"dweb:/ipfs/QmNq1f6yAeJawBKpMmfNyoQ84nZquQ78YtT3tt3dMBtyCK\"]},\"src/interfaces/external/balancer/vault/IVault.sol\":{\"keccak256\":\"0x08d254ba643e02507305b570f794a75b5439d2ae799f761d26d3a2fd77f6d2fb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2de3bcdb5d5805a44e2c643bc76bc14858825b2b018049f89962c8bc532ac24d\",\"dweb:/ipfs/QmfWZGKRChzwe97R8nqShjKdRX5k8Tp9HKwr7UAq9rCg1m\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "lastCheckpointTimestamp",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenCheckpointed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "userTokenTimeCursor",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "checkpoint"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "checkpointToken"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "checkpointTokens"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "checkpointUser"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimToken",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimTokens",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositToken"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositTokens"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTimeCursor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenLastBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenTimeCursor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokensDistributedInWeek",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalSupplyAtTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserBalanceAtTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserTimeCursor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserTokenTimeCursor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getVotingEscrow",
          "outputs": [
            {
              "internalType": "contract IVotingEscrow",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "checkpointToken(address)": {
            "details": "Any `token` balance held by the FeeDistributor above that which is returned by `getTokenLastBalance` will be distributed evenly across the time period since `token` was last checkpointed. This function will be called automatically before claiming tokens to ensure the contract is properly updated.",
            "params": {
              "token": "- The ERC20 token address to be checkpointed."
            }
          },
          "checkpointTokens(address[])": {
            "details": "A version of `checkpointToken` which supports checkpointing multiple tokens. See `checkpointToken` for more details.",
            "params": {
              "tokens": "- An array of ERC20 token addresses to be checkpointed."
            }
          },
          "checkpointUser(address)": {
            "params": {
              "user": "- The address of the user to be checkpointed."
            }
          },
          "claimToken(address,address)": {
            "details": "It's not necessary to explicitly checkpoint before calling this function, it will ensure the FeeDistributor is up to date before calculating the amount of tokens to be claimed.",
            "params": {
              "token": "- The ERC20 token address to be claimed.",
              "user": "- The user on behalf of which to claim."
            },
            "returns": {
              "_0": "The amount of `token` sent to `user` as a result of claiming."
            }
          },
          "claimTokens(address,address[])": {
            "details": "A version of `claimToken` which supports claiming multiple `tokens` on behalf of `user`. See `claimToken` for more details.",
            "params": {
              "tokens": "- An array of ERC20 token addresses to be claimed.",
              "user": "- The user on behalf of which to claim."
            },
            "returns": {
              "_0": "An array of the amounts of each token in `tokens` sent to `user` as a result of claiming."
            }
          },
          "depositToken(address,uint256)": {
            "details": "Sending tokens directly to the FeeDistributor instead of using `depositTokens` may result in tokens being retroactively distributed to past weeks, or for the distribution to carry over to future weeks. If for some reason `depositTokens` cannot be called, in order to ensure that all tokens are correctly distributed manually call `checkpointToken` before and after the token transfer.",
            "params": {
              "amount": "- The amount of tokens to deposit.",
              "token": "- The ERC20 token address to distribute."
            }
          },
          "depositTokens(address[],uint256[])": {
            "details": "A version of `depositToken` which supports depositing multiple `tokens` at once. See `depositToken` for more details.",
            "params": {
              "amounts": "- An array of token amounts to deposit.",
              "tokens": "- An array of ERC20 token addresses to distribute."
            }
          },
          "getTokenTimeCursor(address)": {
            "params": {
              "token": "- The ERC20 token address to query."
            }
          },
          "getTokensDistributedInWeek(address,uint256)": {
            "params": {
              "timestamp": "- The timestamp corresponding to the beginning of the week of interest.",
              "token": "- The ERC20 token address to query."
            }
          },
          "getTotalSupplyAtTimestamp(uint256)": {
            "details": "Only timestamps which fall on Thursdays 00:00:00 UTC will return correct values. This function requires the contract to have been checkpointed past `timestamp` so that the supply is cached.",
            "params": {
              "timestamp": "- The timestamp at which to read the cached total supply at."
            }
          },
          "getUserBalanceAtTimestamp(address,uint256)": {
            "details": "Only timestamps which fall on Thursdays 00:00:00 UTC will return correct values. This function requires `user` to have been checkpointed past `timestamp` so that their balance is cached.",
            "params": {
              "timestamp": "- The timestamp at which to read the `user`'s cached balance at.",
              "user": "- The address of the user of which to read the cached balance of."
            }
          },
          "getUserTimeCursor(address)": {
            "params": {
              "user": "- The address of the user to query."
            }
          },
          "getUserTokenTimeCursor(address,address)": {
            "params": {
              "token": "- The ERC20 token address to query.",
              "user": "- The address of the user to query."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "checkpoint()": {
            "notice": "Caches the total supply of veBAL at the beginning of each week. This function will be called automatically before claiming tokens to ensure the contract is properly updated."
          },
          "checkpointToken(address)": {
            "notice": "Assigns any newly-received tokens held by the FeeDistributor to weekly distributions."
          },
          "checkpointTokens(address[])": {
            "notice": "Assigns any newly-received tokens held by the FeeDistributor to weekly distributions."
          },
          "checkpointUser(address)": {
            "notice": "Caches the user's balance of veBAL at the beginning of each week. This function will be called automatically before claiming tokens to ensure the contract is properly updated."
          },
          "claimToken(address,address)": {
            "notice": "Claims all pending distributions of the provided token for a user."
          },
          "claimTokens(address,address[])": {
            "notice": "Claims a number of tokens on behalf of a user."
          },
          "depositToken(address,uint256)": {
            "notice": "Deposits tokens to be distributed in the current week."
          },
          "depositTokens(address[],uint256[])": {
            "notice": "Deposits tokens to be distributed in the current week."
          },
          "getTimeCursor()": {
            "notice": "Returns the global time cursor representing the most earliest uncheckpointed week."
          },
          "getTokenLastBalance(address)": {
            "notice": "Returns the FeeDistributor's cached balance of `token`."
          },
          "getTokenTimeCursor(address)": {
            "notice": "Returns the token-level time cursor storing the timestamp at up to which tokens have been distributed."
          },
          "getTokensDistributedInWeek(address,uint256)": {
            "notice": "Returns the amount of `token` which the FeeDistributor received in the week beginning at `timestamp`."
          },
          "getTotalSupplyAtTimestamp(uint256)": {
            "notice": "Returns the cached total supply of veBAL as of the provided timestamp."
          },
          "getUserBalanceAtTimestamp(address,uint256)": {
            "notice": "Returns the user's cached balance of veBAL as of the provided timestamp."
          },
          "getUserTimeCursor(address)": {
            "notice": "Returns the user-level time cursor representing the most earliest uncheckpointed week."
          },
          "getUserTokenTimeCursor(address,address)": {
            "notice": "Returns the user-level time cursor storing the timestamp of the latest token distribution claimed."
          },
          "getVotingEscrow()": {
            "notice": "Returns the VotingEscrow (veBAL) token contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/external/balancer/liquidity-mining/IFeeDistributor.sol": "IFeeDistributor"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/external/balancer/liquidity-mining/IAuthorizerAdaptor.sol": {
        "keccak256": "0x1a9bad00c0084984cd3364cfcdeaece137157816fe8078f706ed78adc803cad7",
        "urls": [
          "bzz-raw://d69ccb7c506a7b56fe8f4e59ee10595d3e5cbb881e8215fdda879ec7bf34a5c6",
          "dweb:/ipfs/QmZc3HoxcdRivJ8xePXBxceAtvxo8LA7P8Rf3pjjED9e7y"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/IFeeDistributor.sol": {
        "keccak256": "0x928c6886cb65b70b092d8c5b6b92308e946fb0bb596a225816707f3f94286262",
        "urls": [
          "bzz-raw://f770e990fe6a666be0a08c9358783cde5bed660424a74866f84041e8d8ec44bf",
          "dweb:/ipfs/QmTVhX9EEXDfokcxS7GQ4HS9mERdfa83zZzbZbkuAofnJ6"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/ISmartWalletChecker.sol": {
        "keccak256": "0x8f76f086f3d153b7542a027abdf7a5c5ca71acef1525d9a0a2219e561133c42c",
        "urls": [
          "bzz-raw://10e75e488da4be267b28819a0fad4507a42476f14136a8cf6c283bc2d14515d9",
          "dweb:/ipfs/QmfXQibu6k9zCT55DGWTTHaD4JkeTyu8Rnugfkx7GpknWk"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/IVotingEscrow.sol": {
        "keccak256": "0xbf08c2800a22fb2f2b6bdfb6fc18aefb8a1fe302958a1053c6cc952b5e64b5e0",
        "urls": [
          "bzz-raw://41375a51dd8822d3c46047621dcad60e66e272af7f7d58b0dfd7712d40c30ed6",
          "dweb:/ipfs/QmbsaZkB5NEQJ1UtiWRja8LuLesyKaFVfq9g1L1HxSLC6g"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/helpers/IAuthentication.sol": {
        "keccak256": "0x8032fd6d7f660d9536d252897336462bb932d1e91bd3b87c087be017a35dc842",
        "urls": [
          "bzz-raw://3724cffd85daa36371999e0e9ea56617df12fd7f2cc5c123139705766e3b89a1",
          "dweb:/ipfs/QmaM2wHuKrpKcc8mRhdYmXqPVAimHjGK1xubPWXKafiKYa"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/helpers/ISignaturesValidator.sol": {
        "keccak256": "0x52bd09272e9ec2cff838df757e8b690ff4ca3f4f07e9edd9b711e31e474dd979",
        "urls": [
          "bzz-raw://92ae86c99ce4b92fc666a4c6053bc5ae2932d07b23471647cae7c541c68071b3",
          "dweb:/ipfs/QmeKHMVTVLfG5MKQ7ewM7uwB41WEXkDKhkkL3qCd7mokFo"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/helpers/ITemporarilyPausable.sol": {
        "keccak256": "0xf952ad04a5d4e8523212315e19b8d874e13ceadb7dbc1f5025510da1e153405c",
        "urls": [
          "bzz-raw://81d7e364e8c7a76879f9be650559d3de53879918ab721372931d0e51daa464b5",
          "dweb:/ipfs/QmNyXjvxr3cXzVeBaPrApS9fdjufyN6dXtjGy746xxtj2z"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/misc/IWETH.sol": {
        "keccak256": "0x90278f677649701309ab0902f5bca2fd0d9603e5ce7193b15cf05a7c5582c3b9",
        "urls": [
          "bzz-raw://991dce71671de9fb0f5fafda69994705e358a5cb235bc3acf961dbc9895b6dd6",
          "dweb:/ipfs/QmP7479cjgvMa2DjXNSB6gvHZ2WibU4TGb3DTjqw6UuFb6"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol": {
        "keccak256": "0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835",
        "urls": [
          "bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f",
          "dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/balancer/vault/IAsset.sol": {
        "keccak256": "0x746354db670eb3b94179963b522c4deb0b9854483ab293e3025689749923ebef",
        "urls": [
          "bzz-raw://bcd5a7e0519f94c25f4e3b568b8c0446b2240bd3808c56c3b498a6fed459b2e4",
          "dweb:/ipfs/QmRXvcCy9oKhwPMr8QQ74pg9jormcgq3GHmLSGTDhUWAsn"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IAuthorizer.sol": {
        "keccak256": "0x4adfebbc478ab323d0679386ef8e2384f5205eb280f72757c151eca62ea4f91b",
        "urls": [
          "bzz-raw://49a34c9ad9cb559931b465cea2d570ab015751c6dbc4a52eab8c36b5b949eec1",
          "dweb:/ipfs/QmUiUSZz8gjANUcTqaPCfNkUp3gpjt8Qq2z4UWuQWhaK34"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IFlashLoanRecipient.sol": {
        "keccak256": "0xef16377e5ee7ac8151fe8abc3f7b8f0a420008ae1c1336f3cbaea5e171403a43",
        "urls": [
          "bzz-raw://ca460a387ce27682beecc1f93a07c7ef6139504f2d4e2fce715abe82b6d2b039",
          "dweb:/ipfs/QmS8QgcAqhtHepcf8LYGToutbhsUXaTE7UNLQQi4fBJsUC"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IProtocolFeesCollector.sol": {
        "keccak256": "0xa42e8b311517ce70dd7f2af6b497603a81c3dd678961a5ffd8a2968eff6b7b5a",
        "urls": [
          "bzz-raw://9a11ea954c234e348896cec60165624d71e9fe7b44d7341d74e3bdc7790f2b6a",
          "dweb:/ipfs/QmNq1f6yAeJawBKpMmfNyoQ84nZquQ78YtT3tt3dMBtyCK"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IVault.sol": {
        "keccak256": "0x08d254ba643e02507305b570f794a75b5439d2ae799f761d26d3a2fd77f6d2fb",
        "urls": [
          "bzz-raw://2de3bcdb5d5805a44e2c643bc76bc14858825b2b018049f89962c8bc532ac24d",
          "dweb:/ipfs/QmfWZGKRChzwe97R8nqShjKdRX5k8Tp9HKwr7UAq9rCg1m"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/external/balancer/liquidity-mining/IFeeDistributor.sol",
    "id": 57087,
    "exportedSymbols": {
      "IAsset": [
        61808
      ],
      "IAuthentication": [
        60077
      ],
      "IAuthorizer": [
        61823
      ],
      "IAuthorizerAdaptor": [
        56468
      ],
      "IERC20": [
        60345
      ],
      "IFeeDistributor": [
        57086
      ],
      "IFlashLoanRecipient": [
        62001
      ],
      "IProtocolFeesCollector": [
        62141
      ],
      "ISignaturesValidator": [
        60129
      ],
      "ISmartWalletChecker": [
        57680
      ],
      "ITemporarilyPausable": [
        60148
      ],
      "IVault": [
        63277
      ],
      "IVotingEscrow": [
        58008
      ],
      "IWETH": [
        60253
      ]
    },
    "nodeType": "SourceUnit",
    "src": "688:7560:104",
    "nodes": [
      {
        "id": 56913,
        "nodeType": "PragmaDirective",
        "src": "688:23:104",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 56914,
        "nodeType": "PragmaDirective",
        "src": "712:33:104",
        "nodes": [],
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ]
      },
      {
        "id": 56915,
        "nodeType": "ImportDirective",
        "src": "747:51:104",
        "nodes": [],
        "absolutePath": "src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol",
        "file": "../solidity-utils/openzeppelin/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57087,
        "sourceUnit": 60346,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 56916,
        "nodeType": "ImportDirective",
        "src": "800:29:104",
        "nodes": [],
        "absolutePath": "src/interfaces/external/balancer/liquidity-mining/IVotingEscrow.sol",
        "file": "./IVotingEscrow.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57087,
        "sourceUnit": 58009,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 57086,
        "nodeType": "ContractDefinition",
        "src": "1322:6925:104",
        "nodes": [
          {
            "id": 56926,
            "nodeType": "EventDefinition",
            "src": "1354:87:104",
            "nodes": [],
            "anonymous": false,
            "name": "TokenCheckpointed",
            "nameLocation": "1360:17:104",
            "parameters": {
              "id": 56925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56920,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1385:5:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 56926,
                  "src": "1378:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$60345",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 56919,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56918,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60345,
                      "src": "1378:6:104"
                    },
                    "referencedDeclaration": 60345,
                    "src": "1378:6:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$60345",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56922,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1400:6:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 56926,
                  "src": "1392:14:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56921,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1392:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56924,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lastCheckpointTimestamp",
                  "nameLocation": "1416:23:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 56926,
                  "src": "1408:31:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1377:63:104"
            }
          },
          {
            "id": 56937,
            "nodeType": "EventDefinition",
            "src": "1446:93:104",
            "nodes": [],
            "anonymous": false,
            "name": "TokensClaimed",
            "nameLocation": "1452:13:104",
            "parameters": {
              "id": 56936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56928,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1474:4:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 56937,
                  "src": "1466:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1466:7:104",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56931,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1487:5:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 56937,
                  "src": "1480:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$60345",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 56930,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56929,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60345,
                      "src": "1480:6:104"
                    },
                    "referencedDeclaration": 60345,
                    "src": "1480:6:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$60345",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56933,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1502:6:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 56937,
                  "src": "1494:14:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1494:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56935,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "userTokenTimeCursor",
                  "nameLocation": "1518:19:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 56937,
                  "src": "1510:27:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1465:73:104"
            }
          },
          {
            "id": 56944,
            "nodeType": "FunctionDefinition",
            "src": "1624:65:104",
            "nodes": [],
            "documentation": {
              "id": 56938,
              "nodeType": "StructuredDocumentation",
              "src": "1545:74:104",
              "text": " @notice Returns the VotingEscrow (veBAL) token contract"
            },
            "functionSelector": "08b0308a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getVotingEscrow",
            "nameLocation": "1633:15:104",
            "parameters": {
              "id": 56939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1648:2:104"
            },
            "returnParameters": {
              "id": 56943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56942,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56944,
                  "src": "1674:13:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVotingEscrow_$58008",
                    "typeString": "contract IVotingEscrow"
                  },
                  "typeName": {
                    "id": 56941,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56940,
                      "name": "IVotingEscrow",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58008,
                      "src": "1674:13:104"
                    },
                    "referencedDeclaration": 58008,
                    "src": "1674:13:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVotingEscrow_$58008",
                      "typeString": "contract IVotingEscrow"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1673:15:104"
            },
            "scope": 57086,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56950,
            "nodeType": "FunctionDefinition",
            "src": "1809:57:104",
            "nodes": [],
            "documentation": {
              "id": 56945,
              "nodeType": "StructuredDocumentation",
              "src": "1695:109:104",
              "text": " @notice Returns the global time cursor representing the most earliest uncheckpointed week."
            },
            "functionSelector": "82aa5ad4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTimeCursor",
            "nameLocation": "1818:13:104",
            "parameters": {
              "id": 56946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1831:2:104"
            },
            "returnParameters": {
              "id": 56949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56948,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56950,
                  "src": "1857:7:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1857:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1856:9:104"
            },
            "scope": 57086,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56958,
            "nodeType": "FunctionDefinition",
            "src": "2045:73:104",
            "nodes": [],
            "documentation": {
              "id": 56951,
              "nodeType": "StructuredDocumentation",
              "src": "1872:168:104",
              "text": " @notice Returns the user-level time cursor representing the most earliest uncheckpointed week.\n @param user - The address of the user to query."
            },
            "functionSelector": "876e69a1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTimeCursor",
            "nameLocation": "2054:17:104",
            "parameters": {
              "id": 56954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56953,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2080:4:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 56958,
                  "src": "2072:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2072:7:104",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2071:14:104"
            },
            "returnParameters": {
              "id": 56957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56956,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56958,
                  "src": "2109:7:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2109:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2108:9:104"
            },
            "scope": 57086,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56967,
            "nodeType": "FunctionDefinition",
            "src": "2314:74:104",
            "nodes": [],
            "documentation": {
              "id": 56959,
              "nodeType": "StructuredDocumentation",
              "src": "2124:185:104",
              "text": " @notice Returns the token-level time cursor storing the timestamp at up to which tokens have been distributed.\n @param token - The ERC20 token address to query."
            },
            "functionSelector": "acbc1428",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenTimeCursor",
            "nameLocation": "2323:18:104",
            "parameters": {
              "id": 56963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56962,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2349:5:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 56967,
                  "src": "2342:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$60345",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 56961,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56960,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60345,
                      "src": "2342:6:104"
                    },
                    "referencedDeclaration": 60345,
                    "src": "2342:6:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$60345",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2341:14:104"
            },
            "returnParameters": {
              "id": 56966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56965,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56967,
                  "src": "2379:7:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2379:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2378:9:104"
            },
            "scope": 57086,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56978,
            "nodeType": "FunctionDefinition",
            "src": "2635:92:104",
            "nodes": [],
            "documentation": {
              "id": 56968,
              "nodeType": "StructuredDocumentation",
              "src": "2394:236:104",
              "text": " @notice Returns the user-level time cursor storing the timestamp of the latest token distribution claimed.\n @param user - The address of the user to query.\n @param token - The ERC20 token address to query."
            },
            "functionSelector": "8050a7ee",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTokenTimeCursor",
            "nameLocation": "2644:22:104",
            "parameters": {
              "id": 56974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56970,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2675:4:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 56978,
                  "src": "2667:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2667:7:104",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56973,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2688:5:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 56978,
                  "src": "2681:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$60345",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 56972,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56971,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60345,
                      "src": "2681:6:104"
                    },
                    "referencedDeclaration": 60345,
                    "src": "2681:6:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$60345",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2666:28:104"
            },
            "returnParameters": {
              "id": 56977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56976,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56978,
                  "src": "2718:7:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2718:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2717:9:104"
            },
            "scope": 57086,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56988,
            "nodeType": "FunctionDefinition",
            "src": "3217:100:104",
            "nodes": [],
            "documentation": {
              "id": 56979,
              "nodeType": "StructuredDocumentation",
              "src": "2733:479:104",
              "text": " @notice Returns the user's cached balance of veBAL as of the provided timestamp.\n @dev Only timestamps which fall on Thursdays 00:00:00 UTC will return correct values.\n This function requires `user` to have been checkpointed past `timestamp` so that their balance is cached.\n @param user - The address of the user of which to read the cached balance of.\n @param timestamp - The timestamp at which to read the `user`'s cached balance at."
            },
            "functionSelector": "de681faf",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getUserBalanceAtTimestamp",
            "nameLocation": "3226:25:104",
            "parameters": {
              "id": 56984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56981,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3260:4:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 56988,
                  "src": "3252:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3252:7:104",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56983,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3274:9:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 56988,
                  "src": "3266:17:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3266:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3251:33:104"
            },
            "returnParameters": {
              "id": 56987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56986,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56988,
                  "src": "3308:7:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56985,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3308:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3307:9:104"
            },
            "scope": 57086,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56996,
            "nodeType": "FunctionDefinition",
            "src": "3719:86:104",
            "nodes": [],
            "documentation": {
              "id": 56989,
              "nodeType": "StructuredDocumentation",
              "src": "3323:391:104",
              "text": " @notice Returns the cached total supply of veBAL as of the provided timestamp.\n @dev Only timestamps which fall on Thursdays 00:00:00 UTC will return correct values.\n This function requires the contract to have been checkpointed past `timestamp` so that the supply is cached.\n @param timestamp - The timestamp at which to read the cached total supply at."
            },
            "functionSelector": "4f3c5090",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalSupplyAtTimestamp",
            "nameLocation": "3728:25:104",
            "parameters": {
              "id": 56992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56991,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3762:9:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 56996,
                  "src": "3754:17:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3754:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3753:19:104"
            },
            "returnParameters": {
              "id": 56995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56994,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56996,
                  "src": "3796:7:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3796:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3795:9:104"
            },
            "scope": 57086,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57005,
            "nodeType": "FunctionDefinition",
            "src": "3898:75:104",
            "nodes": [],
            "documentation": {
              "id": 56997,
              "nodeType": "StructuredDocumentation",
              "src": "3811:82:104",
              "text": " @notice Returns the FeeDistributor's cached balance of `token`."
            },
            "functionSelector": "2308805b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenLastBalance",
            "nameLocation": "3907:19:104",
            "parameters": {
              "id": 57001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57000,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3934:5:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 57005,
                  "src": "3927:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$60345",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 56999,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56998,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60345,
                      "src": "3927:6:104"
                    },
                    "referencedDeclaration": 60345,
                    "src": "3927:6:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$60345",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3926:14:104"
            },
            "returnParameters": {
              "id": 57004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57003,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57005,
                  "src": "3964:7:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3964:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3963:9:104"
            },
            "scope": 57086,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57016,
            "nodeType": "FunctionDefinition",
            "src": "4264:101:104",
            "nodes": [],
            "documentation": {
              "id": 57006,
              "nodeType": "StructuredDocumentation",
              "src": "3979:280:104",
              "text": " @notice Returns the amount of `token` which the FeeDistributor received in the week beginning at `timestamp`.\n @param token - The ERC20 token address to query.\n @param timestamp - The timestamp corresponding to the beginning of the week of interest."
            },
            "functionSelector": "d3dc4ca1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTokensDistributedInWeek",
            "nameLocation": "4273:26:104",
            "parameters": {
              "id": 57012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57009,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4307:5:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 57016,
                  "src": "4300:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$60345",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 57008,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57007,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60345,
                      "src": "4300:6:104"
                    },
                    "referencedDeclaration": 60345,
                    "src": "4300:6:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$60345",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57011,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "4322:9:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 57016,
                  "src": "4314:17:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57010,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4314:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4299:33:104"
            },
            "returnParameters": {
              "id": 57015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57014,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57016,
                  "src": "4356:7:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4356:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4355:9:104"
            },
            "scope": 57086,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57025,
            "nodeType": "FunctionDefinition",
            "src": "5018:61:104",
            "nodes": [],
            "documentation": {
              "id": 57017,
              "nodeType": "StructuredDocumentation",
              "src": "4390:623:104",
              "text": " @notice Deposits tokens to be distributed in the current week.\n @dev Sending tokens directly to the FeeDistributor instead of using `depositTokens` may result in tokens being\n retroactively distributed to past weeks, or for the distribution to carry over to future weeks.\n If for some reason `depositTokens` cannot be called, in order to ensure that all tokens are correctly distributed\n manually call `checkpointToken` before and after the token transfer.\n @param token - The ERC20 token address to distribute.\n @param amount - The amount of tokens to deposit."
            },
            "functionSelector": "338b5dea",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositToken",
            "nameLocation": "5027:12:104",
            "parameters": {
              "id": 57023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57020,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5047:5:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 57025,
                  "src": "5040:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$60345",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 57019,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57018,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60345,
                      "src": "5040:6:104"
                    },
                    "referencedDeclaration": 60345,
                    "src": "5040:6:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$60345",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57022,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5062:6:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 57025,
                  "src": "5054:14:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5054:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5039:30:104"
            },
            "returnParameters": {
              "id": 57024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5078:0:104"
            },
            "scope": 57086,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57036,
            "nodeType": "FunctionDefinition",
            "src": "5442:86:104",
            "nodes": [],
            "documentation": {
              "id": 57026,
              "nodeType": "StructuredDocumentation",
              "src": "5085:352:104",
              "text": " @notice Deposits tokens to be distributed in the current week.\n @dev A version of `depositToken` which supports depositing multiple `tokens` at once.\n See `depositToken` for more details.\n @param tokens - An array of ERC20 token addresses to distribute.\n @param amounts - An array of token amounts to deposit."
            },
            "functionSelector": "7b8d6221",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositTokens",
            "nameLocation": "5451:13:104",
            "parameters": {
              "id": 57034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57030,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "5483:6:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 57036,
                  "src": "5465:24:104",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$60345_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 57028,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 57027,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 60345,
                        "src": "5465:6:104"
                      },
                      "referencedDeclaration": 60345,
                      "src": "5465:6:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$60345",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 57029,
                    "nodeType": "ArrayTypeName",
                    "src": "5465:8:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$60345_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57033,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "5510:7:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 57036,
                  "src": "5491:26:104",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 57031,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5491:7:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 57032,
                    "nodeType": "ArrayTypeName",
                    "src": "5491:9:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5464:54:104"
            },
            "returnParameters": {
              "id": 57035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5527:0:104"
            },
            "scope": 57086,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57040,
            "nodeType": "FunctionDefinition",
            "src": "5768:31:104",
            "nodes": [],
            "documentation": {
              "id": 57037,
              "nodeType": "StructuredDocumentation",
              "src": "5556:207:104",
              "text": " @notice Caches the total supply of veBAL at the beginning of each week.\n This function will be called automatically before claiming tokens to ensure the contract is properly updated."
            },
            "functionSelector": "c2c4c5c1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkpoint",
            "nameLocation": "5777:10:104",
            "parameters": {
              "id": 57038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5787:2:104"
            },
            "returnParameters": {
              "id": 57039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5798:0:104"
            },
            "scope": 57086,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57046,
            "nodeType": "FunctionDefinition",
            "src": "6084:47:104",
            "nodes": [],
            "documentation": {
              "id": 57041,
              "nodeType": "StructuredDocumentation",
              "src": "5805:274:104",
              "text": " @notice Caches the user's balance of veBAL at the beginning of each week.\n This function will be called automatically before claiming tokens to ensure the contract is properly updated.\n @param user - The address of the user to be checkpointed."
            },
            "functionSelector": "14866e08",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkpointUser",
            "nameLocation": "6093:14:104",
            "parameters": {
              "id": 57044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57043,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "6116:4:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 57046,
                  "src": "6108:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6108:7:104",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6107:14:104"
            },
            "returnParameters": {
              "id": 57045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6130:0:104"
            },
            "scope": 57086,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57053,
            "nodeType": "FunctionDefinition",
            "src": "6651:48:104",
            "nodes": [],
            "documentation": {
              "id": 57047,
              "nodeType": "StructuredDocumentation",
              "src": "6137:509:104",
              "text": " @notice Assigns any newly-received tokens held by the FeeDistributor to weekly distributions.\n @dev Any `token` balance held by the FeeDistributor above that which is returned by `getTokenLastBalance`\n will be distributed evenly across the time period since `token` was last checkpointed.\n This function will be called automatically before claiming tokens to ensure the contract is properly updated.\n @param token - The ERC20 token address to be checkpointed."
            },
            "functionSelector": "3902b9bc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkpointToken",
            "nameLocation": "6660:15:104",
            "parameters": {
              "id": 57051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57050,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6683:5:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 57053,
                  "src": "6676:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$60345",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 57049,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57048,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60345,
                      "src": "6676:6:104"
                    },
                    "referencedDeclaration": 60345,
                    "src": "6676:6:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$60345",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6675:14:104"
            },
            "returnParameters": {
              "id": 57052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6698:0:104"
            },
            "scope": 57086,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57061,
            "nodeType": "FunctionDefinition",
            "src": "7035:61:104",
            "nodes": [],
            "documentation": {
              "id": 57054,
              "nodeType": "StructuredDocumentation",
              "src": "6705:325:104",
              "text": " @notice Assigns any newly-received tokens held by the FeeDistributor to weekly distributions.\n @dev A version of `checkpointToken` which supports checkpointing multiple tokens.\n See `checkpointToken` for more details.\n @param tokens - An array of ERC20 token addresses to be checkpointed."
            },
            "functionSelector": "905d10ac",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkpointTokens",
            "nameLocation": "7044:16:104",
            "parameters": {
              "id": 57059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57058,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "7079:6:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 57061,
                  "src": "7061:24:104",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$60345_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 57056,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 57055,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 60345,
                        "src": "7061:6:104"
                      },
                      "referencedDeclaration": 60345,
                      "src": "7061:6:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$60345",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 57057,
                    "nodeType": "ArrayTypeName",
                    "src": "7061:8:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$60345_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7060:26:104"
            },
            "returnParameters": {
              "id": 57060,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7095:0:104"
            },
            "scope": 57086,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57072,
            "nodeType": "FunctionDefinition",
            "src": "7610:75:104",
            "nodes": [],
            "documentation": {
              "id": 57062,
              "nodeType": "StructuredDocumentation",
              "src": "7119:486:104",
              "text": " @notice Claims all pending distributions of the provided token for a user.\n @dev It's not necessary to explicitly checkpoint before calling this function, it will ensure the FeeDistributor\n is up to date before calculating the amount of tokens to be claimed.\n @param user - The user on behalf of which to claim.\n @param token - The ERC20 token address to be claimed.\n @return The amount of `token` sent to `user` as a result of claiming."
            },
            "functionSelector": "ca31879d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claimToken",
            "nameLocation": "7619:10:104",
            "parameters": {
              "id": 57068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57064,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "7638:4:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 57072,
                  "src": "7630:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7630:7:104",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57067,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7651:5:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 57072,
                  "src": "7644:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$60345",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 57066,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57065,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60345,
                      "src": "7644:6:104"
                    },
                    "referencedDeclaration": 60345,
                    "src": "7644:6:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$60345",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7629:28:104"
            },
            "returnParameters": {
              "id": 57071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57070,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57072,
                  "src": "7676:7:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7676:7:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7675:9:104"
            },
            "scope": 57086,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57085,
            "nodeType": "FunctionDefinition",
            "src": "8148:97:104",
            "nodes": [],
            "documentation": {
              "id": 57073,
              "nodeType": "StructuredDocumentation",
              "src": "7691:452:104",
              "text": " @notice Claims a number of tokens on behalf of a user.\n @dev A version of `claimToken` which supports claiming multiple `tokens` on behalf of `user`.\n See `claimToken` for more details.\n @param user - The user on behalf of which to claim.\n @param tokens - An array of ERC20 token addresses to be claimed.\n @return An array of the amounts of each token in `tokens` sent to `user` as a result of claiming."
            },
            "functionSelector": "88720467",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claimTokens",
            "nameLocation": "8157:11:104",
            "parameters": {
              "id": 57080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57075,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "8177:4:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 57085,
                  "src": "8169:12:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57074,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8169:7:104",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57079,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "8201:6:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 57085,
                  "src": "8183:24:104",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$60345_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 57077,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 57076,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 60345,
                        "src": "8183:6:104"
                      },
                      "referencedDeclaration": 60345,
                      "src": "8183:6:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$60345",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 57078,
                    "nodeType": "ArrayTypeName",
                    "src": "8183:8:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$60345_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8168:40:104"
            },
            "returnParameters": {
              "id": 57084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57083,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57085,
                  "src": "8227:16:104",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 57081,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8227:7:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 57082,
                    "nodeType": "ArrayTypeName",
                    "src": "8227:9:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8226:18:104"
            },
            "scope": 57086,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IFeeDistributor",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 56917,
          "nodeType": "StructuredDocumentation",
          "src": "831:490:104",
          "text": " @title Fee Distributor\n @notice Distributes any tokens transferred to the contract (e.g. Protocol fees and any BAL emissions) among veBAL\n holders proportionally based on a snapshot of the week at which the tokens are sent to the FeeDistributor contract.\n @dev Supports distributing arbitrarily many different tokens. In order to start distributing a new token to veBAL\n holders simply transfer the tokens to the `FeeDistributor` contract and then call `checkpointToken`."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          57086
        ],
        "name": "IFeeDistributor",
        "nameLocation": "1332:15:104",
        "scope": 57087,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 104
}