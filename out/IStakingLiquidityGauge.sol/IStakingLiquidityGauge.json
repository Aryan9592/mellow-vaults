{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "new_relative_weight_cap",
          "type": "uint256"
        }
      ],
      "name": "RelativeWeightCapChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "distributor",
          "type": "address"
        }
      ],
      "name": "add_reward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "claim_rewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "claimable_reward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "claimable_reward_write",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "rewardToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit_reward_token",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "getCappedRelativeWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRelativeWeightCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lpToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "relativeWeightCap",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "integrate_fraction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "is_killed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "killGauge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lp_token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "reward_data",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "distributor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "period_finish",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "rate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "last_update",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "integral",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRewardTokenDistributor.Reward",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "reward_tokens",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "relativeWeightCap",
          "type": "uint256"
        }
      ],
      "name": "setRelativeWeightCap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "rewardToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "distributor",
          "type": "address"
        }
      ],
      "name": "set_reward_distributor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unkillGauge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "user_checkpoint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "add_reward(address,address)": "e8de0d4d",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "claim_rewards(address)": "84e9bd7e",
    "claimable_reward(address,address)": "33fd6f74",
    "claimable_reward_write(address,address)": "59b7e409",
    "deposit(uint256,address)": "6e553f65",
    "deposit_reward_token(address,uint256)": "93f7aa67",
    "getCappedRelativeWeight(uint256)": "14e956f5",
    "getRelativeWeightCap()": "83f5c39b",
    "initialize(address,uint256)": "cd6dc687",
    "integrate_fraction(address)": "09400707",
    "is_killed()": "9c868ac0",
    "killGauge()": "ab8f0945",
    "lp_token()": "82c63066",
    "reward_data(address)": "48e9c65e",
    "reward_tokens(uint256)": "54c49fe9",
    "setRelativeWeightCap(uint256)": "10d3eb04",
    "set_reward_distributor(address,address)": "058a3a24",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "unkillGauge()": "d34fb267",
    "user_checkpoint(address)": "4b820093",
    "withdraw(uint256)": "2e1a7d4d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"new_relative_weight_cap\",\"type\":\"uint256\"}],\"name\":\"RelativeWeightCapChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributor\",\"type\":\"address\"}],\"name\":\"add_reward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claim_rewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimable_reward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"claimable_reward_write\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit_reward_token\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getCappedRelativeWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelativeWeightCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"relativeWeightCap\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"integrate_fraction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"is_killed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"killGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lp_token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"reward_data\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"period_finish\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"last_update\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"integral\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardTokenDistributor.Reward\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"reward_tokens\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"relativeWeightCap\",\"type\":\"uint256\"}],\"name\":\"setRelativeWeightCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"distributor\",\"type\":\"address\"}],\"name\":\"set_reward_distributor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unkillGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"user_checkpoint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"getCappedRelativeWeight(uint256)\":{\"params\":{\"time\":\"Timestamp in the past or present.\"}},\"integrate_fraction(address)\":{\"params\":{\"user\":\"User address.\"},\"returns\":{\"_0\":\"uint256 BAL amount to issue for the address.\"}},\"setRelativeWeightCap(uint256)\":{\"params\":{\"relativeWeightCap\":\"New relative weight cap.\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"user_checkpoint(address)\":{\"params\":{\"user\":\"User address.\"},\"returns\":{\"_0\":\"bool Always true.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getCappedRelativeWeight(uint256)\":{\"notice\":\"Returns the gauge's relative weight for a given time, capped to its relative weight cap attribute.\"},\"getRelativeWeightCap()\":{\"notice\":\"Gets the relative weight cap for the gauge.\"},\"integrate_fraction(address)\":{\"notice\":\"Returns BAL liquidity emissions calculated during checkpoints for the given user.\"},\"is_killed()\":{\"notice\":\"Returns true if gauge is killed; false otherwise.\"},\"killGauge()\":{\"notice\":\"Kills the gauge so it cannot mint BAL.\"},\"setRelativeWeightCap(uint256)\":{\"notice\":\"Sets a new relative weight cap for the gauge. The value shall be normalized to 1e18, and not greater than MAX_RELATIVE_WEIGHT_CAP.\"},\"unkillGauge()\":{\"notice\":\"Unkills the gauge so it can mint BAL again.\"},\"user_checkpoint(address)\":{\"notice\":\"Record a checkpoint for a given user.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/external/balancer/liquidity-mining/IStakingLiquidityGauge.sol\":\"IStakingLiquidityGauge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/interfaces/external/balancer/liquidity-mining/ILiquidityGauge.sol\":{\"keccak256\":\"0xa22f0c0868adb9d06d097ecb0a8d8370a6e59d223ef1e07a58340191c402e9ea\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://558942e9f7ff6c6f2becffc28da21bf897e043ceea6bed95d2a362e0eceedbe6\",\"dweb:/ipfs/QmU51CezK36UmBpArAcBmXrDmC5ozDmTrconGfj8pr8NYL\"]},\"src/interfaces/external/balancer/liquidity-mining/IRewardTokenDistributor.sol\":{\"keccak256\":\"0xd9476c8423eab4c40a3f4a25d343c7ab194985ef5ad2498758ae8cfd569dcd2a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4eedabb61c239ecd3e6f2b675cf176db87bbd2b8e54f6190f47001a1a455f875\",\"dweb:/ipfs/QmRsR9KiVJWBuQK3EBRfCVxdDZBTYmfK7CeBebdkeBX6HE\"]},\"src/interfaces/external/balancer/liquidity-mining/IStakingLiquidityGauge.sol\":{\"keccak256\":\"0xa99cdc7d85b012b7d64eb26a4dafde52314bfe9162973eb66d0bd9241b342877\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bb5a8c580619a9cb730fe9d333d424db6ed9f5187ba7729beb0df474a64f6733\",\"dweb:/ipfs/QmboYxDELyqkNW7jjb8Ut5g7meDA1HcxsKsX5zmPNyFBPr\"]},\"src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "new_relative_weight_cap",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RelativeWeightCapChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "rewardToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "distributor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "add_reward"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim_rewards"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "rewardToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "claimable_reward",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "rewardToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimable_reward_write",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "rewardToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit_reward_token"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCappedRelativeWeight",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRelativeWeightCap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "lpToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "relativeWeightCap",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "integrate_fraction",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "is_killed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "killGauge"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lp_token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "reward_data",
          "outputs": [
            {
              "internalType": "struct IRewardTokenDistributor.Reward",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "distributor",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "period_finish",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "last_update",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "integral",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "reward_tokens",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "relativeWeightCap",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRelativeWeightCap"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "rewardToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "distributor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set_reward_distributor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unkillGauge"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "user_checkpoint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
          },
          "approve(address,uint256)": {
            "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
          },
          "balanceOf(address)": {
            "details": "Returns the amount of tokens owned by `account`."
          },
          "getCappedRelativeWeight(uint256)": {
            "params": {
              "time": "Timestamp in the past or present."
            }
          },
          "integrate_fraction(address)": {
            "params": {
              "user": "User address."
            },
            "returns": {
              "_0": "uint256 BAL amount to issue for the address."
            }
          },
          "setRelativeWeightCap(uint256)": {
            "params": {
              "relativeWeightCap": "New relative weight cap."
            }
          },
          "totalSupply()": {
            "details": "Returns the amount of tokens in existence."
          },
          "transfer(address,uint256)": {
            "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
          },
          "user_checkpoint(address)": {
            "params": {
              "user": "User address."
            },
            "returns": {
              "_0": "bool Always true."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getCappedRelativeWeight(uint256)": {
            "notice": "Returns the gauge's relative weight for a given time, capped to its relative weight cap attribute."
          },
          "getRelativeWeightCap()": {
            "notice": "Gets the relative weight cap for the gauge."
          },
          "integrate_fraction(address)": {
            "notice": "Returns BAL liquidity emissions calculated during checkpoints for the given user."
          },
          "is_killed()": {
            "notice": "Returns true if gauge is killed; false otherwise."
          },
          "killGauge()": {
            "notice": "Kills the gauge so it cannot mint BAL."
          },
          "setRelativeWeightCap(uint256)": {
            "notice": "Sets a new relative weight cap for the gauge. The value shall be normalized to 1e18, and not greater than MAX_RELATIVE_WEIGHT_CAP."
          },
          "unkillGauge()": {
            "notice": "Unkills the gauge so it can mint BAL again."
          },
          "user_checkpoint(address)": {
            "notice": "Record a checkpoint for a given user."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/external/balancer/liquidity-mining/IStakingLiquidityGauge.sol": "IStakingLiquidityGauge"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/external/balancer/liquidity-mining/ILiquidityGauge.sol": {
        "keccak256": "0xa22f0c0868adb9d06d097ecb0a8d8370a6e59d223ef1e07a58340191c402e9ea",
        "urls": [
          "bzz-raw://558942e9f7ff6c6f2becffc28da21bf897e043ceea6bed95d2a362e0eceedbe6",
          "dweb:/ipfs/QmU51CezK36UmBpArAcBmXrDmC5ozDmTrconGfj8pr8NYL"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/IRewardTokenDistributor.sol": {
        "keccak256": "0xd9476c8423eab4c40a3f4a25d343c7ab194985ef5ad2498758ae8cfd569dcd2a",
        "urls": [
          "bzz-raw://4eedabb61c239ecd3e6f2b675cf176db87bbd2b8e54f6190f47001a1a455f875",
          "dweb:/ipfs/QmRsR9KiVJWBuQK3EBRfCVxdDZBTYmfK7CeBebdkeBX6HE"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/IStakingLiquidityGauge.sol": {
        "keccak256": "0xa99cdc7d85b012b7d64eb26a4dafde52314bfe9162973eb66d0bd9241b342877",
        "urls": [
          "bzz-raw://bb5a8c580619a9cb730fe9d333d424db6ed9f5187ba7729beb0df474a64f6733",
          "dweb:/ipfs/QmboYxDELyqkNW7jjb8Ut5g7meDA1HcxsKsX5zmPNyFBPr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol": {
        "keccak256": "0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835",
        "urls": [
          "bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f",
          "dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/external/balancer/liquidity-mining/IStakingLiquidityGauge.sol",
    "id": 57900,
    "exportedSymbols": {
      "IERC20": [
        60345
      ],
      "ILiquidityGauge": [
        57381
      ],
      "IRewardTokenDistributor": [
        57626
      ],
      "IStakingLiquidityGauge": [
        57899
      ]
    },
    "nodeType": "SourceUnit",
    "src": "688:721:121",
    "nodes": [
      {
        "id": 57863,
        "nodeType": "PragmaDirective",
        "src": "688:23:121",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 57864,
        "nodeType": "PragmaDirective",
        "src": "712:33:121",
        "nodes": [],
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ]
      },
      {
        "id": 57865,
        "nodeType": "ImportDirective",
        "src": "747:51:121",
        "nodes": [],
        "absolutePath": "src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol",
        "file": "../solidity-utils/openzeppelin/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57900,
        "sourceUnit": 60346,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 57866,
        "nodeType": "ImportDirective",
        "src": "800:31:121",
        "nodes": [],
        "absolutePath": "src/interfaces/external/balancer/liquidity-mining/ILiquidityGauge.sol",
        "file": "./ILiquidityGauge.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57900,
        "sourceUnit": 57382,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 57867,
        "nodeType": "ImportDirective",
        "src": "832:39:121",
        "nodes": [],
        "absolutePath": "src/interfaces/external/balancer/liquidity-mining/IRewardTokenDistributor.sol",
        "file": "./IRewardTokenDistributor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57900,
        "sourceUnit": 57627,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 57899,
        "nodeType": "ContractDefinition",
        "src": "1071:337:121",
        "nodes": [
          {
            "id": 57880,
            "nodeType": "FunctionDefinition",
            "src": "1162:73:121",
            "nodes": [],
            "functionSelector": "cd6dc687",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1171:10:121",
            "parameters": {
              "id": 57878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57875,
                  "mutability": "mutable",
                  "name": "lpToken",
                  "nameLocation": "1190:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 57880,
                  "src": "1182:15:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1182:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57877,
                  "mutability": "mutable",
                  "name": "relativeWeightCap",
                  "nameLocation": "1207:17:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 57880,
                  "src": "1199:25:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1199:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1181:44:121"
            },
            "returnParameters": {
              "id": 57879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1234:0:121"
            },
            "scope": 57899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57886,
            "nodeType": "FunctionDefinition",
            "src": "1241:51:121",
            "nodes": [],
            "functionSelector": "82c63066",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lp_token",
            "nameLocation": "1250:8:121",
            "parameters": {
              "id": 57881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1258:2:121"
            },
            "returnParameters": {
              "id": 57885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57884,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57886,
                  "src": "1284:6:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$60345",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 57883,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57882,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60345,
                      "src": "1284:6:121"
                    },
                    "referencedDeclaration": 60345,
                    "src": "1284:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$60345",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1283:8:121"
            },
            "scope": 57899,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57893,
            "nodeType": "FunctionDefinition",
            "src": "1298:60:121",
            "nodes": [],
            "functionSelector": "6e553f65",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1307:7:121",
            "parameters": {
              "id": 57891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57888,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1323:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 57893,
                  "src": "1315:13:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57887,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1315:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57890,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1338:9:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 57893,
                  "src": "1330:17:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1330:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1314:34:121"
            },
            "returnParameters": {
              "id": 57892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1357:0:121"
            },
            "scope": 57899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57898,
            "nodeType": "FunctionDefinition",
            "src": "1364:42:121",
            "nodes": [],
            "functionSelector": "2e1a7d4d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1373:8:121",
            "parameters": {
              "id": 57896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57895,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1390:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 57898,
                  "src": "1382:13:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57894,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1382:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1381:15:121"
            },
            "returnParameters": {
              "id": 57897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1405:0:121"
            },
            "scope": 57899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 57868,
              "name": "IRewardTokenDistributor",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57626,
              "src": "1107:23:121"
            },
            "id": 57869,
            "nodeType": "InheritanceSpecifier",
            "src": "1107:23:121"
          },
          {
            "baseName": {
              "id": 57870,
              "name": "ILiquidityGauge",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57381,
              "src": "1132:15:121"
            },
            "id": 57871,
            "nodeType": "InheritanceSpecifier",
            "src": "1132:15:121"
          },
          {
            "baseName": {
              "id": 57872,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 60345,
              "src": "1149:6:121"
            },
            "id": 57873,
            "nodeType": "InheritanceSpecifier",
            "src": "1149:6:121"
          }
        ],
        "canonicalName": "IStakingLiquidityGauge",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          57899,
          60345,
          57381,
          57626
        ],
        "name": "IStakingLiquidityGauge",
        "nameLocation": "1081:22:121",
        "scope": 57900,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 121
}