{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "internalParams_",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "CommitedInternalParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "vaultTokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "vaultAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vaultNft",
          "type": "uint256"
        }
      ],
      "name": "DeployedVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "bonusRewardToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IAlgebraPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IIncentiveKey.IncentiveKey",
              "name": "key",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "bonusTokenToUnderlying",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "rewardTokenToUnderlying",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "swapSlippageD",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "rewardPoolTimespan",
              "type": "uint32"
            }
          ],
          "indexed": false,
          "internalType": "struct IQuickSwapVaultGovernance.StrategyParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "SetStrategyParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "params",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        }
      ],
      "name": "StagedInternalParams",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "commitInternalParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractNameBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersionBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "erc20Vault_",
          "type": "address"
        }
      ],
      "name": "createVault",
      "outputs": [
        {
          "internalType": "contract IQuickSwapVault",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delayedProtocolParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedProtocolPerVaultParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedStrategyParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "internalParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "internalParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "bonusRewardToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IAlgebraPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IIncentiveKey.IncentiveKey",
              "name": "key",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "bonusTokenToUnderlying",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "rewardTokenToUnderlying",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "swapSlippageD",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "rewardPoolTimespan",
              "type": "uint32"
            }
          ],
          "internalType": "struct IQuickSwapVaultGovernance.StrategyParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "setStrategyParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "newParams",
          "type": "tuple"
        }
      ],
      "name": "stageInternalParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stagedInternalParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "strategyParams",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20Minimal",
                  "name": "bonusRewardToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IAlgebraPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IIncentiveKey.IncentiveKey",
              "name": "key",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "bonusTokenToUnderlying",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "rewardTokenToUnderlying",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "swapSlippageD",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "rewardPoolTimespan",
              "type": "uint32"
            }
          ],
          "internalType": "struct IQuickSwapVaultGovernance.StrategyParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "389:3843:473:-:0;;;584:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1762:34:477;;1813:30;;;;;;;;;;;;-1:-1:-1;;;1813:30:477;;;;651:15:473;;-1:-1:-1;;;;;1754:57:477;1746:98;;;;-1:-1:-1;;;1746:98:477;;;;;;;;:::i;:::-;;;;;;;;;;1907:1;-1:-1:-1;;;;;1862:47:477;1870:15;:24;;;-1:-1:-1;;;;;1862:47:477;;;1911:30;;;;;;;;;;;;;-1:-1:-1;;;1911:30:477;;;1854:88;;;;;-1:-1:-1;;;1854:88:477;;;;;;;;:::i;:::-;-1:-1:-1;1968:25:477;;;;;2010:30;;;;;;;;;;;-1:-1:-1;;;2010:30:477;;;;-1:-1:-1;;;;;1960:48:477;1952:89;;;;-1:-1:-1;;;1952:89:477;;;;;;;;:::i;:::-;-1:-1:-1;2051:33:477;;:15;:33;;-1:-1:-1;;;;;;2051:33:477;;;-1:-1:-1;;;;;2051:33:477;;;;;;;;;;;-1:-1:-1;2051:33:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;389:3843:473;;14:152:488;-1:-1:-1;;;;;110:31:488;;100:42;;90:70;;156:1;153;146:12;90:70;14:152;:::o;171:941::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;376:2;370:9;418:2;406:15;;-1:-1:-1;;;;;436:34:488;;472:22;;;433:62;430:185;;;537:10;532:3;528:20;525:1;518:31;572:4;569:1;562:15;600:4;597:1;590:15;430:185;631:2;624:22;668:16;;693:52;668:16;693:52;:::i;:::-;754:21;;820:2;805:18;;799:25;833:54;799:25;833:54;:::i;:::-;915:2;903:15;;896:32;973:2;958:18;;952:25;986:54;952:25;986:54;:::i;:::-;1068:2;1056:15;;1049:32;1060:6;171:941;-1:-1:-1;;;171:941:488:o;1117:597::-;1229:4;1258:2;1287;1276:9;1269:21;1319:6;1313:13;1362:6;1357:2;1346:9;1342:18;1335:34;1387:1;1397:140;1411:6;1408:1;1405:13;1397:140;;;1506:14;;;1502:23;;1496:30;1472:17;;;1491:2;1468:26;1461:66;1426:10;;1397:140;;;1555:6;1552:1;1549:13;1546:91;;;1625:1;1620:2;1611:6;1600:9;1596:22;1592:31;1585:42;1546:91;-1:-1:-1;1698:2:488;1677:15;-1:-1:-1;;1673:29:488;1658:45;;;;1705:2;1654:54;;1117:597;-1:-1:-1;;;1117:597:488:o;:::-;389:3843:473;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806375d0c0dc11610097578063a0a8e46011610066578063a0a8e46014610326578063d4a07d341461032e578063de2f76a414610336578063e4af6e791461036857600080fd5b806375d0c0dc1461024b5780637ac46fbb1461026057806386c6be3e146102c05780638f34822f1461031357600080fd5b806312466b68116100d357806312466b681461017b5780631c7f4c7314610203578063511ce7981461020b5780636707acee1461022b57600080fd5b806301ffc9a71461010557806306a462391461012d57806309946538146101455780630e3e80ac1461015a575b600080fd5b610118610113366004611307565b610370565b60405190151581526020015b60405180910390f35b640312e312e360dc1b5b604051908152602001610124565b6101586101533660046113bd565b6103a1565b005b77517569636b537761705661756c74476f7665726e616e636560401b610137565b61018e61018936600461142f565b610593565b60408051825180516001600160a01b03908116835260208083015182168185015282850151821684860152606080840151818601526080938401518486015290860151821660a0850152938501511660c08301529183015160e082015291015163ffffffff1661010082015261012001610124565b600654610137565b61013761021936600461142f565b6000908152600c602052604090205490565b61013761023936600461142f565b60009081526009602052604090205490565b610253610703565b6040516101249190611495565b6102b3604080516060810182526000808252602082018190529181019190915250604080516060810182526000546001600160a01b03908116825260015481166020830152600254169181019190915290565b60405161012491906114a8565b6102b3604080516060810182526000808252602082018190529181019190915250604080516060810182526003546001600160a01b03908116825260045481166020830152600554169181019190915290565b6101586103213660046114d8565b610729565b610253610a63565b610158610a76565b610349610344366004611522565b610ba0565b604080516001600160a01b039093168352602083019190915201610124565b600f54610137565b600061037b82610c86565b80610396575063435d9fe360e01b6001600160e01b03198316145b92915050565b905090565b6103a9610cbc565b805160408051808201909152600281526120ad60f11b6020820152906001600160a01b03166103f45760405162461bcd60e51b81526004016103eb9190611495565b60405180910390fd5b5060006001600160a01b031681602001516001600160a01b031614156040518060400160405280600281526020016120ad60f11b815250906104495760405162461bcd60e51b81526004016103eb9190611495565b506040808201518151808301909252600282526120ad60f11b60208301526001600160a01b031661048d5760405162461bcd60e51b81526004016103eb9190611495565b508051600380546001600160a01b03199081166001600160a01b03938416179091556020808401516004805484169185169190911781556040808601516005805490951690861617909355600054835163bba3293960e01b8152935194169363bba3293993808301939290829003018186803b15801561050c57600080fd5b505afa158015610520573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054491906115f6565b61054e9042611625565b6006819055604051339132917f0887cab3184f7c02b16978ab31f8acee05979f59fc3da6abe5bf71105ec3179d916105889186919061163d565b60405180910390a350565b6040805161014081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052825260208201819052918101829052606081018290526080810191909152600082815260106020526040902080546105fc9061167a565b151590506106595750506040805161014081018252600060a0820181815260c0830182905260e083018290526101008301829052610120830182905282526020820181905291810182905260608101829052608081019190915290565b600082815260106020526040902080546106729061167a565b80601f016020809104026020016040519081016040528092919081815260200182805461069e9061167a565b80156106eb5780601f106106c0576101008083540402835291602001916106eb565b820191906000526020600020905b8154815290600101906020018083116106ce57829003601f168201915b505050505080602001905181019061039691906116dd565b606061039c77517569636b537761705661756c74476f7665726e616e636560401b610d74565b600061073b60c0830160a084016117a3565b6001600160a01b031614156040518060400160405280600281526020016120ad60f11b8152509061077f5760405162461bcd60e51b81526004016103eb9190611495565b50600061079260e0830160c084016117a3565b6001600160a01b031614156040518060400160405280600281526020016120ad60f11b815250906107d65760405162461bcd60e51b81526004016103eb9190611495565b506040805180820190915260048152634c494d4f60e01b6020820152633b9aca0060e08301351061081a5760405162461bcd60e51b81526004016103eb9190611495565b50600061082a60208301836117a3565b6001600160a01b031614156040518060400160405280600281526020016120ad60f11b8152509061086e5760405162461bcd60e51b81526004016103eb9190611495565b50600061088160408301602084016117a3565b6001600160a01b031614156040518060400160405280600281526020016120ad60f11b815250906108c55760405162461bcd60e51b81526004016103eb9190611495565b5060006108d860608301604084016117a3565b6001600160a01b031614156040518060400160405280600281526020016120ad60f11b8152509061091c5760405162461bcd60e51b81526004016103eb9190611495565b506040805180820190915260028152612b2d60f11b602082015260608201356109585760405162461bcd60e51b81526004016103eb9190611495565b506040805180820190915260028152612b2d60f11b602082015260808201356109945760405162461bcd60e51b81526004016103eb9190611495565b5060006109a9610120830161010084016117cb565b63ffffffff1611604051806040016040528060028152602001612b2d60f11b815250906109e95760405162461bcd60e51b81526004016103eb9190611495565b50610a1382826040516020016109ff91906117e8565b604051602081830303815290604052610de0565b81336001600160a01b0316326001600160a01b03167f49ca8d21dd11eb401e8328284a7a1a5ae51c53dd810d0afde842e341debded7c84604051610a5791906117e8565b60405180910390a45050565b606061039c640312e312e360dc1b610d74565b610a7e610cbc565b6006546040805180820190915260048152631395531360e21b602082015290610aba5760405162461bcd60e51b81526004016103eb9190611495565b5060065442101560405180604001604052806002815260200161545360f01b81525090610afa5760405162461bcd60e51b81526004016103eb9190611495565b5060038054600080546001600160a01b038084166001600160a01b03199283168117845560048054600180548286169087168117909155600580546002805497821697891688179055600698909855978616909855841690559290911690925560408051918252602082019390935291820152339032907fef3e4bc9725fa684957d7de03c6dcd01078ee86cf78ceef25c5f8346df69cc999060600160405180910390a3565b6000806000610bae85610e0d565b60405163231f1a5f60e11b815291945092508391506001600160a01b0382169063463e34be90610be690859088908b906004016118e6565b600060405180830381600087803b158015610c0057600080fd5b505af1158015610c14573d6000803e3d6000fd5b5050604080516001600160a01b03881660208201523393503292507f8a4513c05d15df8ece912856923273e166e39f5c9c2b43d2b38594023494a0e0918a910160408051601f1981840301815290829052610c7592918b9088908a90611919565b60405180910390a350935093915050565b60006301ffc9a760e01b6001600160e01b03198316148061039657506001600160e01b0319821663effda0f560e01b1492915050565b600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610cff57600080fd5b505afa158015610d13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d379190611963565b6040518060400160405280600381526020016223292160e91b81525090610d715760405162461bcd60e51b81526004016103eb9190611495565b50565b604080516020808252818301909252606091602082018180368337019050509050602060005b6020811015610dd257838160208110610db557610db5611985565b1a610dc257809150610dd2565b610dcb8161199b565b9050610d9a565b508152602081019190915290565b610de982610ffe565b60008281526010602090815260409091208251610e089284019061126e565b505050565b600080546040516363e85d2d60e01b81523360048201526001602482015282916001600160a01b03169081906363e85d2d9060440160206040518083038186803b158015610e5a57600080fd5b505afa158015610e6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e929190611963565b6040518060400160405280600381526020016223292160e91b81525090610ecc5760405162461bcd60e51b81526004016103eb9190611495565b5060015460408051631112eee760e31b815290516001600160a01b039092169182916388977738916004808301926020929190829003018186803b158015610f1357600080fd5b505afa158015610f27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4b91906115f6565b610f56906001611625565b600254909350610f6f906001600160a01b0316846111d1565b6040516305c4fdf960e01b81526001600160a01b0380831660048301528781166024830152919550908216906305c4fdf990604401602060405180830381600087803b158015610fbe57600080fd5b505af1158015610fd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff691906115f6565b505050915091565b600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561104157600080fd5b505afa158015611055573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110799190611963565b80611106575060015460405163020604bf60e21b81526004810183905233916001600160a01b03169063081812fc9060240160206040518083038186803b1580156110c357600080fd5b505afa1580156110d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fb91906119b6565b6001600160a01b0316145b8061119357506001546040516331a9108f60e11b81526004810183905233916001600160a01b031690636352211e9060240160206040518083038186803b15801561115057600080fd5b505afa158015611164573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118891906119b6565b6001600160a01b0316145b6040518060400160405280600381526020016223292160e91b815250906111cd5760405162461bcd60e51b81526004016103eb9190611495565b5050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166103965760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c656400000000000000000060448201526064016103eb565b82805461127a9061167a565b90600052602060002090601f01602090048101928261129c57600085556112e2565b82601f106112b557805160ff19168380011785556112e2565b828001600101855582156112e2579182015b828111156112e25782518255916020019190600101906112c7565b506112ee9291506112f2565b5090565b5b808211156112ee57600081556001016112f3565b60006020828403121561131957600080fd5b81356001600160e01b03198116811461133157600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561137157611371611338565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156113a0576113a0611338565b604052919050565b6001600160a01b0381168114610d7157600080fd5b6000606082840312156113cf57600080fd5b6040516060810181811067ffffffffffffffff821117156113f2576113f2611338565b6040528235611400816113a8565b81526020830135611410816113a8565b60208201526040830135611423816113a8565b60408201529392505050565b60006020828403121561144157600080fd5b5035919050565b6000815180845260005b8181101561146e57602081850181015186830182015201611452565b81811115611480576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006113316020830184611448565b60608101610396828480516001600160a01b03908116835260208083015182169084015260409182015116910152565b6000808284036101408112156114ed57600080fd5b83359250610120601f198201121561150457600080fd5b506020830190509250929050565b803561151d816113a8565b919050565b60008060006060848603121561153757600080fd5b833567ffffffffffffffff8082111561154f57600080fd5b818601915086601f83011261156357600080fd5b813560208282111561157757611577611338565b8160051b9250611588818401611377565b828152928401810192818101908a8511156115a257600080fd5b948201945b848610156115cc57853593506115bc846113a8565b83825294820194908201906115a7565b97506115db9050888201611512565b9550505050506115ed60408501611512565b90509250925092565b60006020828403121561160857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156116385761163861160f565b500190565b6080810161166d828580516001600160a01b03908116835260208083015182169084015260409182015116910152565b8260608301529392505050565b600181811c9082168061168e57607f821691505b602082108114156116af57634e487b7160e01b600052602260045260246000fd5b50919050565b805161151d816113a8565b63ffffffff81168114610d7157600080fd5b805161151d816116c0565b60008183036101208112156116f157600080fd5b6116f961134e565b60a082121561170757600080fd5b61170f61134e565b9150835161171c816113a8565b8252602084015161172c816113a8565b6020830152604084015161173f816113a8565b80604084015250606084015160608301526080840151608083015281815261176960a085016116b5565b602082015261177a60c085016116b5565b604082015260e0840151606082015261179661010085016116d2565b6080820152949350505050565b6000602082840312156117b557600080fd5b8135611331816113a8565b803561151d816116c0565b6000602082840312156117dd57600080fd5b8135611331816116c0565b610120810182356117f8816113a8565b6001600160a01b039081168352602084013590611814826113a8565b908116602084015260408401359061182b826113a8565b166040830152606083810135908301526080808401359083015261185160a08401611512565b6001600160a01b031660a083015261186b60c08401611512565b6001600160a01b031660c083015260e083810135908301526101006118918185016117c0565b63ffffffff16920191909152919050565b600081518084526020808501945080840160005b838110156118db5781516001600160a01b0316875295820195908201906001016118b6565b509495945050505050565b8381526001600160a01b0383166020820152606060408201819052600090611910908301846118a2565b95945050505050565b60a08152600061192c60a08301886118a2565b828103602084015261193e8188611448565b6001600160a01b03968716604085015294909516606083015250608001529392505050565b60006020828403121561197557600080fd5b8151801515811461133157600080fd5b634e487b7160e01b600052603260045260246000fd5b60006000198214156119af576119af61160f565b5060010190565b6000602082840312156119c857600080fd5b8151611331816113a856fea264697066735822122077e3a703cac66deb37ad12b2a8f6e2a57909cbf2b8ed4525eff3f6a3664e639b64736f6c63430008090033",
    "sourceMap": "389:3843:473:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1641:213;;;;;;:::i;:::-;;:::i;:::-;;;470:14:488;;463:22;445:41;;433:2;418:18;1641:213:473;;;;;;;;592:106:410;-1:-1:-1;;;592:106:410;;;643:25:488;;;631:2;616:18;592:106:410;497:177:488;3528:643:477;;;;;;:::i;:::-;;:::i;:::-;;355:100:410;-1:-1:-1;;;355:100:410;592:106;787:820:473;;;;;;:::i;:::-;;:::i;:::-;;;;2981:13:488;;3063:9;;-1:-1:-1;;;;;3059:18:488;;;3041:37;;3134:4;3126:13;;;3120:20;3116:29;;3094:20;;;3087:59;3194:13;;;3188:20;3184:29;;3162:20;;;3155:59;3266:4;3258:13;;;3252:20;3230;;;3223:50;3325:4;3317:13;;;3311:20;3289;;;3282:50;3367:17;;;3361:24;2616:31;;3021:3;3427:20;;2604:44;3485:17;;;3479:24;2616:31;3562:4;3547:20;;2604:44;3612:17;;;3606:24;3599:4;3584:20;;3577:54;3668:17;;3662:24;2735:10;2724:22;3744:6;3729:22;;2712:35;2958:3;2943:19;787:820:473;2758:1000:488;2763:115:477;2847:24;;2763:115;;2387:161;;;;;;:::i;:::-;2471:7;2497:44;;;:39;:44;;;;;;;2387:161;2199:145;;;;;;:::i;:::-;2275:7;2301:36;;;:31;:36;;;;;;;2199:145;230:119:410;;;:::i;:::-;;;;;;;:::i;2921:111:477:-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;3003:22:477;;;;;;;;3010:15;3003:22;-1:-1:-1;;;;;3003:22:477;;;;;;;;;;;;;;;;;;;;;;;;2921:111;;;;;;;;:::i;3075:123::-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;3163:28:477;;;;;;;;3170:21;3163:28;-1:-1:-1;;;;;3163:28:477;;;;;;;;;;;;;;;;;;;;;;;;3075:123;1975:987:473;;;;;;:::i;:::-;;:::i;461:125:410:-;;;:::i;4214:449:477:-;;;:::i;3014:456:473:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;7127:32:488;;;7109:51;;7191:2;7176:18;;7169:34;;;;7082:18;3014:456:473;6910:299:488;2591:129:477;2682:31;;2591:129;;1641:213:473;1726:4;1749:36;1773:11;1749:23;:36::i;:::-;:98;;;-1:-1:-1;;;;;;;;;;1789:58:473;;;1749:98;1742:105;1641:213;-1:-1:-1;;1641:213:473:o;673:18:410:-;666:25;;592:106;:::o;3528:643:477:-;3609:23;:21;:23::i;:::-;3658:28;;3703:30;;;;;;;;;;;;-1:-1:-1;;;3703:30:477;;;;;-1:-1:-1;;;;;3650:51:477;3642:92;;;;-1:-1:-1;;;3642:92:477;;;;;;;;:::i;:::-;;;;;;;;;;3791:1;-1:-1:-1;;;;;3752:41:477;3760:9;:18;;;-1:-1:-1;;;;;3752:41:477;;;3795:30;;;;;;;;;;;;;-1:-1:-1;;;3795:30:477;;;3744:82;;;;;-1:-1:-1;;;3744:82:477;;;;;;;;:::i;:::-;-1:-1:-1;3852:19:477;;;;;3888:30;;;;;;;;;;;-1:-1:-1;;;3888:30:477;;;;-1:-1:-1;;;;;3844:42:477;3836:83;;;;-1:-1:-1;;;3836:83:477;;;;;;;;:::i;:::-;-1:-1:-1;3929:33:477;;:21;:33;;-1:-1:-1;;;;;;3929:33:477;;;-1:-1:-1;;;;;3929:33:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4017:34:477;:52;;-1:-1:-1;;;4017:52:477;;;;:34;;;:50;;:52;;;;3929:33;4017:52;;;;;;:34;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3999:70;;:15;:70;:::i;:::-;3972:24;:97;;;4084:80;;4116:10;;4105:9;;4084:80;;;;4128:9;;3972:97;4084:80;:::i;:::-;;;;;;;;3528:643;:::o;787:820:473:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;884:20:473;;;;:15;:20;;;;;:27;;;;;:::i;:::-;:32;880:654;;-1:-1:-1;880:654:473;;-1:-1:-1;;955:568:473;;;997:313;;;;;-1:-1:-1;955:568:473;;;997:313;;;;;;;;;;;;;;;;;;;;;;;;;;;955:568;;997:313;955:568;;;;;;;;;;;-1:-1:-1;955:568:473;;;;;-1:-1:-1;955:568:473;;;;;;;787:820::o;880:654::-;1561:20;;;;:15;:20;;;;;1550:50;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;230:119:410:-;277:13;309:33;-1:-1:-1;;;309:16:410;:33::i;1975:987:473:-;2115:1;2074:29;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2074:43:473;;;2119:30;;;;;;;;;;;;;-1:-1:-1;;;2119:30:473;;;2066:84;;;;;-1:-1:-1;;;2066:84:473;;;;;;;;:::i;:::-;-1:-1:-1;2210:1:473;2168:30;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2168:44:473;;;2214:30;;;;;;;;;;;;;-1:-1:-1;;;2214:30:473;;;2160:85;;;;;-1:-1:-1;;;2160:85:473;;;;;;;;:::i;:::-;-1:-1:-1;2293:32:473;;;;;;;;;;;;-1:-1:-1;;;2293:32:473;;;;2286:5;2263:20;;;;:28;2255:71;;;;-1:-1:-1;;;2255:71:473;;;;;;;;:::i;:::-;-1:-1:-1;2387:1:473;2352:22;;;;:6;:22;:::i;:::-;-1:-1:-1;;;;;2344:45:473;;;2391:30;;;;;;;;;;;;;-1:-1:-1;;;2391:30:473;;;2336:86;;;;;-1:-1:-1;;;2336:86:473;;;;;;;;:::i;:::-;-1:-1:-1;2488:1:473;2448:27;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2440:50:473;;;2492:30;;;;;;;;;;;;;-1:-1:-1;;;2492:30:473;;;2432:91;;;;;-1:-1:-1;;;2432:91:473;;;;;;;;:::i;:::-;-1:-1:-1;2577:1:473;2549:15;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2541:38:473;;;2581:30;;;;;;;;;;;;;-1:-1:-1;;;2581:30:473;;;2533:79;;;;;-1:-1:-1;;;2533:79:473;;;;;;;;:::i;:::-;-1:-1:-1;2656:28:473;;;;;;;;;;;;-1:-1:-1;;;2656:28:473;;;;2630:20;;;;2622:63;;;;-1:-1:-1;;;2622:63:473;;;;;;;;:::i;:::-;-1:-1:-1;2727:28:473;;;;;;;;;;;;-1:-1:-1;;;2727:28:473;;;;2703:18;;;;2695:61;;;;-1:-1:-1;;;2695:61:473;;;;;;;;:::i;:::-;-1:-1:-1;2802:1:473;2774:25;;;;;;;;:::i;:::-;:29;;;2805:28;;;;;;;;;;;;;-1:-1:-1;;;2805:28:473;;;2766:68;;;;;-1:-1:-1;;;2766:68:473;;;;;;;;:::i;:::-;;2844:43;2863:3;2879:6;2868:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;2844;:43::i;:::-;2943:3;2931:10;-1:-1:-1;;;;;2902:53:473;2920:9;-1:-1:-1;;;;;2902:53:473;;2948:6;2902:53;;;;;;:::i;:::-;;;;;;;;1975:987;;:::o;461:125:410:-;511:13;543:36;-1:-1:-1;;;309:16:410;:33::i;4214:449:477:-;4265:23;:21;:23::i;:::-;4306:24;;4337:22;;;;;;;;;;;;-1:-1:-1;;;4337:22:477;;;;;4298:62;;;;-1:-1:-1;;;4298:62:477;;;;;;;;:::i;:::-;;4397:24;;4378:15;:43;;4423:27;;;;;;;;;;;;;-1:-1:-1;;;4423:27:477;;;4370:81;;;;;-1:-1:-1;;;4370:81:477;;;;;;;;:::i;:::-;-1:-1:-1;4479:21:477;4461:39;;:15;:39;;-1:-1:-1;;;;;4461:39:477;;;-1:-1:-1;;;;;;4461:39:477;;;;;;;;;;-1:-1:-1;4461:39:477;;;;;;;;;;;;;;;;-1:-1:-1;4461:39:477;;;;;;;;;;;;4517:24;4510:31;;;;4551:28;;;;;;;;;;;;;;;;;4594:62;;;12969:41:488;;;13041:4;13026:20;;13019:63;;;;13098:20;;;13091:63;4628:10:477;;4617:9;;4594:62;;12919:2:488;12904:18;4594:62:477;;;;;;;4214:449::o;3014:456:473:-;3151:21;3174:11;3197:13;3235:20;3248:6;3235:12;:20::i;:::-;3305:48;;-1:-1:-1;;;3305:48:473;;3220:35;;-1:-1:-1;3220:35:473;-1:-1:-1;3220:35:473;;-1:-1:-1;;;;;;3305:16:473;;;;;:48;;3220:35;;3327:11;;3340:12;;3305:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3419:23:473;;;-1:-1:-1;;;;;14229:32:488;;3419:23:473;;;14211:51:488;3393:10:473;;-1:-1:-1;3382:9:473;;-1:-1:-1;3368:95:473;;3405:12;;14184:18:488;3419:23:473;;;-1:-1:-1;;3419:23:473;;;;;;;;;;3368:95;;;3444:6;;3452:5;;3459:3;;3368:95;:::i;:::-;;;;;;;;3187:283;3014:456;;;;;;:::o;3204:212:477:-;3297:4;-1:-1:-1;;;;;;;;;937:40:49;;;3320:89:477;;;-1:-1:-1;;;;;;;3360:49:477;;-1:-1:-1;;;3360:49:477;3313:96;3204:212;-1:-1:-1;;3204:212:477:o;5093:156::-;5158:15;:34;:54;;-1:-1:-1;;;5158:54:477;;5201:10;5158:54;;;14211:51:488;-1:-1:-1;;;;;5158:34:477;;;;:42;;14184:18:488;;5158:54:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5214:27;;;;;;;;;;;;;-1:-1:-1;;;5214:27:477;;;5150:92;;;;;-1:-1:-1;;;5150:92:477;;;;;;;;:::i;:::-;;5093:156::o;914:381:410:-;1005:14;;;1016:2;1005:14;;;;;;;;;974:15;;1005:14;;;;;;;;;;-1:-1:-1;;1001:18:410;-1:-1:-1;1043:2:410;1029:11;1055:142;1079:2;1075:1;:6;1055:142;;;1112:1;1114;1112:4;;;;;;;:::i;:::-;;1102:85;;1148:1;1142:7;;1167:5;;1102:85;1083:3;;;:::i;:::-;;;1055:142;;;-1:-1:-1;1229:14:410;;1270:4;1263:12;;1256:23;;;;1236:1;914:381::o;9725:155:477:-;9806:28;9830:3;9806:23;:28::i;:::-;9844:20;;;;:15;:20;;;;;;;;:29;;;;;;;;:::i;:::-;;9725:155;;:::o;5578:622::-;5633:13;5732:34;;5798:79;;-1:-1:-1;;;5798:79:477;;5831:10;5798:79;;;15696:51:488;5732:34:477;15763:18:488;;;15756:45;5633:13:477;;-1:-1:-1;;;;;5732:34:477;;;;5798:32;;15669:18:488;;5798:79:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5891:27;;;;;;;;;;;;;-1:-1:-1;;;5891:27:477;;;5777:151;;;;;-1:-1:-1;;;5777:151:477;;;;;;;;:::i;:::-;-1:-1:-1;5969:24:477;;6009:27;;;-1:-1:-1;;;6009:27:477;;;;-1:-1:-1;;;;;5969:24:477;;;;;;6009:25;;:27;;;;;;;;;;;;;;5969:24;6009:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;;6039:1;6009:31;:::i;:::-;6092:25;;6003:37;;-1:-1:-1;6058:75:477;;-1:-1:-1;;;;;6092:25:477;6003:37;6058:25;:75::i;:::-;6143:50;;-1:-1:-1;;;6143:50:477;;-1:-1:-1;;;;;16042:15:488;;;6143:50:477;;;16024:34:488;16094:15;;;16074:18;;;16067:43;6050:83:477;;-1:-1:-1;6143:27:477;;;;;;15959:18:488;;6143:50:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5661:539;;5578:622;;;:::o;4734:353::-;4826:15;:34;:54;;-1:-1:-1;;;4826:54:477;;4869:10;4826:54;;;14211:51:488;-1:-1:-1;;;;;4826:34:477;;;;:42;;14184:18:488;;4826:54:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:129;;;-1:-1:-1;4900:24:477;;:41;;-1:-1:-1;;;4900:41:477;;;;;643:25:488;;;4945:10:477;;-1:-1:-1;;;;;4900:24:477;;:36;;616:18:488;;4900:41:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4900:55:477;;4826:129;:202;;;-1:-1:-1;4976:24:477;;:37;;-1:-1:-1;;;4976:37:477;;;;;643:25:488;;;5017:10:477;;-1:-1:-1;;;;;4976:24:477;;:32;;616:18:488;;4976:37:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4976:51:477;;4826:202;5043:27;;;;;;;;;;;;;-1:-1:-1;;;5043:27:477;;;4804:276;;;;;-1:-1:-1;;;4804:276:477;;;;;;;;:::i;:::-;;4734:353;:::o;2107:794:25:-;2191:16;2523:48;2505:14;2499:4;2495:25;2489:4;2485:36;2482:90;2476:4;2469:104;2730:32;2713:14;2707:4;2703:25;2700:63;2694:4;2687:77;2812:4;2806;2800;2797:1;2789:28;2777:40;-1:-1:-1;;;;;;2844:22:25;;2836:58;;;;-1:-1:-1;;;2836:58:25;;16600:2:488;2836:58:25;;;16582:21:488;16639:2;16619:18;;;16612:30;16678:25;16658:18;;;16651:53;16721:18;;2836:58:25;16398:347:488;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:286:488;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:488;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:488:o;679:127::-;740:10;735:3;731:20;728:1;721:31;771:4;768:1;761:15;795:4;792:1;785:15;811:253;883:2;877:9;925:4;913:17;;960:18;945:34;;981:22;;;942:62;939:88;;;1007:18;;:::i;:::-;1043:2;1036:22;811:253;:::o;1069:275::-;1140:2;1134:9;1205:2;1186:13;;-1:-1:-1;;1182:27:488;1170:40;;1240:18;1225:34;;1261:22;;;1222:62;1219:88;;;1287:18;;:::i;:::-;1323:2;1316:22;1069:275;;-1:-1:-1;1069:275:488:o;1349:152::-;-1:-1:-1;;;;;1445:31:488;;1435:42;;1425:70;;1491:1;1488;1481:12;1506:854;1598:6;1651:2;1639:9;1630:7;1626:23;1622:32;1619:52;;;1667:1;1664;1657:12;1619:52;1700:2;1694:9;1742:2;1734:6;1730:15;1811:6;1799:10;1796:22;1775:18;1763:10;1760:34;1757:62;1754:88;;;1822:18;;:::i;:::-;1858:2;1851:22;1895:23;;1927:52;1895:23;1927:52;:::i;:::-;1988:21;;2061:2;2046:18;;2033:32;2074:54;2033:32;2074:54;:::i;:::-;2156:2;2144:15;;2137:32;2221:2;2206:18;;2193:32;2234:54;2193:32;2234:54;:::i;:::-;2316:2;2304:15;;2297:32;2308:6;1506:854;-1:-1:-1;;;1506:854:488:o;2365:180::-;2424:6;2477:2;2465:9;2456:7;2452:23;2448:32;2445:52;;;2493:1;2490;2483:12;2445:52;-1:-1:-1;2516:23:488;;2365:180;-1:-1:-1;2365:180:488:o;3945:472::-;3987:3;4025:5;4019:12;4052:6;4047:3;4040:19;4077:1;4087:162;4101:6;4098:1;4095:13;4087:162;;;4163:4;4219:13;;;4215:22;;4209:29;4191:11;;;4187:20;;4180:59;4116:12;4087:162;;;4267:6;4264:1;4261:13;4258:87;;;4333:1;4326:4;4317:6;4312:3;4308:16;4304:27;4297:38;4258:87;-1:-1:-1;4399:2:488;4378:15;-1:-1:-1;;4374:29:488;4365:39;;;;4406:4;4361:50;;3945:472;-1:-1:-1;;3945:472:488:o;4422:220::-;4571:2;4560:9;4553:21;4534:4;4591:45;4632:2;4621:9;4617:18;4609:6;4591:45;:::i;4928:269::-;5128:2;5113:18;;5140:51;5117:9;5173:6;4769:12;;-1:-1:-1;;;;;4765:21:488;;;4753:34;;4840:4;4829:16;;;4823:23;4819:32;;4803:14;;;4796:56;4905:4;4894:16;;;4888:23;4884:32;4868:14;;4861:56;4647:276;5202:346;5305:6;5313;5357:9;5348:7;5344:23;5387:3;5383:2;5379:12;5376:32;;;5404:1;5401;5394:12;5376:32;5427:23;;;-1:-1:-1;5484:3:488;-1:-1:-1;;5466:16:488;;5462:26;5459:46;;;5501:1;5498;5491:12;5459:46;;5539:2;5528:9;5524:18;5514:28;;5202:346;;;;;:::o;5553:155::-;5621:20;;5650:52;5621:20;5650:52;:::i;:::-;5553:155;;;:::o;5713:1192::-;5815:6;5823;5831;5884:2;5872:9;5863:7;5859:23;5855:32;5852:52;;;5900:1;5897;5890:12;5852:52;5940:9;5927:23;5969:18;6010:2;6002:6;5999:14;5996:34;;;6026:1;6023;6016:12;5996:34;6064:6;6053:9;6049:22;6039:32;;6109:7;6102:4;6098:2;6094:13;6090:27;6080:55;;6131:1;6128;6121:12;6080:55;6167:2;6154:16;6189:4;6212:2;6208;6205:10;6202:36;;;6218:18;;:::i;:::-;6264:2;6261:1;6257:10;6247:20;;6287:28;6311:2;6307;6303:11;6287:28;:::i;:::-;6349:15;;;6419:11;;;6415:20;;;6380:12;;;;6447:19;;;6444:39;;;6479:1;6476;6469:12;6444:39;6503:11;;;;6523:238;6539:6;6534:3;6531:15;6523:238;;;6619:3;6606:17;6593:30;;6636:52;6682:5;6636:52;:::i;:::-;6701:18;;;6556:12;;;;6739;;;;6523:238;;;6780:5;-1:-1:-1;6804:38:488;;-1:-1:-1;6823:18:488;;;6804:38;:::i;:::-;6794:48;;;;;;6861:38;6895:2;6884:9;6880:18;6861:38;:::i;:::-;6851:48;;5713:1192;;;;;:::o;7214:184::-;7284:6;7337:2;7325:9;7316:7;7312:23;7308:32;7305:52;;;7353:1;7350;7343:12;7305:52;-1:-1:-1;7376:16:488;;7214:184;-1:-1:-1;7214:184:488:o;7403:127::-;7464:10;7459:3;7455:20;7452:1;7445:31;7495:4;7492:1;7485:15;7519:4;7516:1;7509:15;7535:128;7575:3;7606:1;7602:6;7599:1;7596:13;7593:39;;;7612:18;;:::i;:::-;-1:-1:-1;7648:9:488;;7535:128::o;7668:341::-;7896:3;7881:19;;7909:51;7885:9;7942:6;4769:12;;-1:-1:-1;;;;;4765:21:488;;;4753:34;;4840:4;4829:16;;;4823:23;4819:32;;4803:14;;;4796:56;4905:4;4894:16;;;4888:23;4884:32;4868:14;;4861:56;4647:276;7909:51;7996:6;7991:2;7980:9;7976:18;7969:34;7668:341;;;;;:::o;8014:380::-;8093:1;8089:12;;;;8136;;;8157:61;;8211:4;8203:6;8199:17;8189:27;;8157:61;8264:2;8256:6;8253:14;8233:18;8230:38;8227:161;;;8310:10;8305:3;8301:20;8298:1;8291:31;8345:4;8342:1;8335:15;8373:4;8370:1;8363:15;8227:161;;8014:380;;;:::o;8399:159::-;8478:13;;8500:52;8478:13;8500:52;:::i;8563:121::-;8648:10;8641:5;8637:22;8630:5;8627:33;8617:61;;8674:1;8671;8664:12;8689:136;8767:13;;8789:30;8767:13;8789:30;:::i;8830:1266::-;8933:6;8977:9;8968:7;8964:23;9007:3;9003:2;8999:12;8996:32;;;9024:1;9021;9014:12;8996:32;9050:22;;:::i;:::-;9092:4;9088:2;9084:13;9081:33;;;9110:1;9107;9100:12;9081:33;9138:22;;:::i;:::-;9123:37;;9190:9;9184:16;9209:54;9255:7;9209:54;:::i;:::-;9272:24;;9341:2;9326:18;;9320:25;9354:54;9320:25;9354:54;:::i;:::-;9437:2;9424:16;;9417:33;9495:2;9480:18;;9474:25;9508:54;9474:25;9508:54;:::i;:::-;9596:7;9591:2;9582:7;9578:16;9571:33;;9659:2;9648:9;9644:18;9638:25;9633:2;9624:7;9620:16;9613:51;9720:3;9709:9;9705:19;9699:26;9693:3;9684:7;9680:17;9673:53;9749:7;9742:5;9735:22;9789:51;9834:4;9823:9;9819:20;9789:51;:::i;:::-;9784:2;9777:5;9773:14;9766:75;9873:50;9918:3;9907:9;9903:19;9873:50;:::i;:::-;9868:2;9861:5;9857:14;9850:74;9977:3;9966:9;9962:19;9956:26;9951:2;9944:5;9940:14;9933:50;10016:49;10060:3;10049:9;10045:19;10016:49;:::i;:::-;10010:3;9999:15;;9992:74;10003:5;8830:1266;-1:-1:-1;;;;8830:1266:488:o;10101:268::-;10160:6;10213:2;10201:9;10192:7;10188:23;10184:32;10181:52;;;10229:1;10226;10219:12;10181:52;10268:9;10255:23;10287:52;10333:5;10287:52;:::i;10965:132::-;11032:20;;11061:30;11032:20;11061:30;:::i;11102:245::-;11160:6;11213:2;11201:9;11192:7;11188:23;11184:32;11181:52;;;11229:1;11226;11219:12;11181:52;11268:9;11255:23;11287:30;11311:5;11287:30;:::i;11352:1365::-;11554:3;11539:19;;11580:20;;11609:52;11580:20;11609:52;:::i;:::-;-1:-1:-1;;;;;11726:14:488;;;11708:33;;11790:4;11778:17;;11765:31;;11805:54;11765:31;11805:54;:::i;:::-;11897:16;;;11890:4;11875:20;;11868:46;11963:4;11951:17;;11938:31;;11978:54;11938:31;11978:54;:::i;:::-;12070:16;12063:4;12048:20;;12041:46;12150:4;12138:17;;;12125:31;12103:20;;;12096:61;12220:4;12208:17;;;12195:31;12173:20;;;12166:61;12256:37;12287:4;12275:17;;12256:37;:::i;:::-;-1:-1:-1;;;;;2616:31:488;12350:4;12335:20;;2604:44;12387:37;12418:4;12406:17;;12387:37;:::i;:::-;-1:-1:-1;;;;;2616:31:488;12483:4;12468:20;;2604:44;12552:4;12540:17;;;12527:31;12505:20;;;12498:61;12578:6;12615:34;12633:15;;;12615:34;:::i;:::-;2735:10;2724:22;12692:18;;2712:35;;;;11352:1365;;-1:-1:-1;11352:1365:488:o;13165:461::-;13218:3;13256:5;13250:12;13283:6;13278:3;13271:19;13309:4;13338:2;13333:3;13329:12;13322:19;;13375:2;13368:5;13364:14;13396:1;13406:195;13420:6;13417:1;13414:13;13406:195;;;13485:13;;-1:-1:-1;;;;;13481:39:488;13469:52;;13541:12;;;;13576:15;;;;13517:1;13435:9;13406:195;;;-1:-1:-1;13617:3:488;;13165:461;-1:-1:-1;;;;;13165:461:488:o;13631:429::-;13848:25;;;-1:-1:-1;;;;;13909:32:488;;13904:2;13889:18;;13882:60;13978:2;13973;13958:18;;13951:30;;;-1:-1:-1;;13998:56:488;;14035:18;;14027:6;13998:56;:::i;:::-;13990:64;13631:429;-1:-1:-1;;;;;13631:429:488:o;14273:694::-;14582:3;14571:9;14564:22;14545:4;14609:57;14661:3;14650:9;14646:19;14638:6;14609:57;:::i;:::-;14714:9;14706:6;14702:22;14697:2;14686:9;14682:18;14675:50;14742:33;14768:6;14760;14742:33;:::i;:::-;-1:-1:-1;;;;;14849:15:488;;;14844:2;14829:18;;14822:43;14901:15;;;;14896:2;14881:18;;14874:43;-1:-1:-1;14948:3:488;14933:19;14926:35;14734:41;14273:694;-1:-1:-1;;;14273:694:488:o;14972:277::-;15039:6;15092:2;15080:9;15071:7;15067:23;15063:32;15060:52;;;15108:1;15105;15098:12;15060:52;15140:9;15134:16;15193:5;15186:13;15179:21;15172:5;15169:32;15159:60;;15215:1;15212;15205:12;15254:127;15315:10;15310:3;15306:20;15303:1;15296:31;15346:4;15343:1;15336:15;15370:4;15367:1;15360:15;15386:135;15425:3;-1:-1:-1;;15446:17:488;;15443:43;;;15466:18;;:::i;:::-;-1:-1:-1;15513:1:488;15502:13;;15386:135::o;16121:272::-;16191:6;16244:2;16232:9;16223:7;16219:23;16215:32;16212:52;;;16260:1;16257;16250:12;16212:52;16292:9;16286:16;16311:52;16357:5;16311:52;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "commitInternalParams()": "d4a07d34",
    "contractName()": "75d0c0dc",
    "contractNameBytes()": "0e3e80ac",
    "contractVersion()": "a0a8e460",
    "contractVersionBytes()": "06a46239",
    "createVault(address[],address,address)": "de2f76a4",
    "delayedProtocolParamsTimestamp()": "e4af6e79",
    "delayedProtocolPerVaultParamsTimestamp(uint256)": "511ce798",
    "delayedStrategyParamsTimestamp(uint256)": "6707acee",
    "internalParams()": "7ac46fbb",
    "internalParamsTimestamp()": "1c7f4c73",
    "setStrategyParams(uint256,((address,address,address,uint256,uint256),address,address,uint256,uint32))": "8f34822f",
    "stageInternalParams((address,address,address))": "09946538",
    "stagedInternalParams()": "86c6be3e",
    "strategyParams(uint256)": "12466b68",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"internalParams_\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"CommitedInternalParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"vaultTokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultNft\",\"type\":\"uint256\"}],\"name\":\"DeployedVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Minimal\",\"name\":\"bonusRewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IAlgebraPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"internalType\":\"struct IIncentiveKey.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"bonusTokenToUnderlying\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardTokenToUnderlying\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapSlippageD\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"rewardPoolTimespan\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IQuickSwapVaultGovernance.StrategyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"SetStrategyParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"StagedInternalParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"commitInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractNameBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersionBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Vault_\",\"type\":\"address\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"contract IQuickSwapVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedProtocolParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedProtocolPerVaultParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedStrategyParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Minimal\",\"name\":\"bonusRewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IAlgebraPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"internalType\":\"struct IIncentiveKey.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"bonusTokenToUnderlying\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardTokenToUnderlying\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapSlippageD\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"rewardPoolTimespan\",\"type\":\"uint32\"}],\"internalType\":\"struct IQuickSwapVaultGovernance.StrategyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"setStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"newParams\",\"type\":\"tuple\"}],\"name\":\"stageInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedInternalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"strategyParams\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IERC20Minimal\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Minimal\",\"name\":\"bonusRewardToken\",\"type\":\"address\"},{\"internalType\":\"contract IAlgebraPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"internalType\":\"struct IIncentiveKey.IncentiveKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"bonusTokenToUnderlying\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardTokenToUnderlying\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapSlippageD\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"rewardPoolTimespan\",\"type\":\"uint32\"}],\"internalType\":\"struct IQuickSwapVaultGovernance.StrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"SetStrategyParams(address,address,uint256,((address,address,address,uint256,uint256),address,address,uint256,uint32))\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\",\"origin\":\"Origin of the transaction (tx.origin)\",\"params\":\"New set params\",\"sender\":\"Sender of the call (msg.sender)\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"internalParams_\":\"Initial Internal Params\"}},\"createVault(address[],address,address)\":{\"params\":{\"owner_\":\"Owner of the vault NFT\",\"quickSwapHelper_\":\"address of helper\",\"vaultTokens_\":\"ERC20 tokens that will be managed by this Vault\"}},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"delayedStrategyParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"setStrategyParams(uint256,((address,address,address,uint256,uint256),address,address,uint256,uint32))\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"stageInternalParams((address,address,address))\":{\"params\":{\"newParams\":\"New Internal Params\"}},\"stagedInternalParams()\":{\"details\":\"The Internal Params could be committed after internalParamsTimestamp\"},\"strategyParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"events\":{\"CommitedInternalParams(address,address,(address,address,address))\":{\"notice\":\"Emitted when InternalParams are staged for commit\"},\"DeployedVault(address,address,address[],bytes,address,address,uint256)\":{\"notice\":\"Emitted when New Vault is deployed\"},\"SetStrategyParams(address,address,uint256,((address,address,address,uint256,uint256),address,address,uint256,uint32))\":{\"notice\":\"Emitted when new StrategyParams are set\"},\"StagedInternalParams(address,address,(address,address,address),uint256)\":{\"notice\":\"Emitted when InternalParams are staged for commit\"}},\"kind\":\"user\",\"methods\":{\"commitInternalParams()\":{\"notice\":\"Commit staged Internal Params.\"},\"constructor\":{\"notice\":\"Creates a new contract.\"},\"createVault(address[],address,address)\":{\"notice\":\"Deploys a new vault.\"},\"delayedProtocolParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed.\"},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed.\"},\"delayedStrategyParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed.\"},\"internalParams()\":{\"notice\":\"Internal Params of the contract.\"},\"internalParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Internal Params could be committed.\"},\"setStrategyParams(uint256,((address,address,address,uint256,uint256),address,address,uint256,uint32))\":{\"notice\":\"Delayed Strategy Params staged for commit after delay.\"},\"stageInternalParams((address,address,address))\":{\"notice\":\"Stage new Internal Params.\"},\"stagedInternalParams()\":{\"notice\":\"Staged new Internal Params.\"},\"strategyParams(uint256)\":{\"notice\":\"Delayed Strategy Params\"}},\"notice\":\"Governance that manages all QuickSwap Vaults params and can deploy a new QuickSwap Vault.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vaults/QuickSwapVaultGovernance.sol\":\"QuickSwapVaultGovernance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281\",\"dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b\"]},\"src/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87\",\"dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk\"]},\"src/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50\",\"dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1\"]},\"src/interfaces/external/erc/IERC1271.sol\":{\"keccak256\":\"0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779\",\"dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd\"]},\"src/interfaces/external/quickswap/IAlgebraEternalFarming.sol\":{\"keccak256\":\"0x508ded73b3e5b04422bfc2274bc87ca7e6ad630119bc9a5b3449fed601578864\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e7e97db9413d4c77652c9a2fca8077dfc707de3e72864cced5fea7d2f9b63520\",\"dweb:/ipfs/QmaYB3ragMT2WWo4SbkRrAoNNYjTJcSotVwPdWuJggMCuQ\"]},\"src/interfaces/external/quickswap/IAlgebraEternalVirtualPool.sol\":{\"keccak256\":\"0x7faebe5008d24f2871c962e1ca3c14e5b75ff11fc024a85179f03512d5423913\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3651b67f97562e23f7fc9ac0bdeb964150422cd6ba93b76fadc2f148f4f7a7ea\",\"dweb:/ipfs/QmPiYRDdgHE7hFoCHdXLeF99amNCsbuiY5zMJGphoMwHKg\"]},\"src/interfaces/external/quickswap/IAlgebraFactory.sol\":{\"keccak256\":\"0x1a5bdb5897ec134b6f739be18553cab2598f2502d5543410c6a9a5900e181049\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4c5f0a0f050f8cbb6912bc6e411c9da48a97a4e914852f89765facd0f700c26\",\"dweb:/ipfs/QmUvFZEP3W9fSf8CQZBn6GrKj1ikX488VXUhw2RUCZJndT\"]},\"src/interfaces/external/quickswap/IAlgebraFarming.sol\":{\"keccak256\":\"0xc969d9606ecbe14130580694636b48cefff8993e072bdf010cf950698c044cde\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://90206c5831a4a80239f9a19d80fae167e179c3f4a254691856c38e2da719aa4e\",\"dweb:/ipfs/QmbW3QMXukuRDouqRjZYGJHy9L71yoM9qwnxk5Fwq5DRih\"]},\"src/interfaces/external/quickswap/IAlgebraNonfungiblePositionManager.sol\":{\"keccak256\":\"0x748d1da7089c2e67cbb89cf32f3b2e0c5b68fa8bfe3b2224fdb013ce5018f5b9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4e8da442662dbb2686517ffd7c510536a300df5fd628a44110dfd66e4dfe9118\",\"dweb:/ipfs/QmYsVLngrQraRH6qvfxRKajBwDC6vbgfDvi5tquB1AK2Aw\"]},\"src/interfaces/external/quickswap/IAlgebraPool.sol\":{\"keccak256\":\"0x02eae359613685be534c86446df6789b258dc542695878b197d7c3507c0bf3d5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c53eb72ebe4528b44e67eeef53655e94af45cd879dcdc66e9972d3a652241b03\",\"dweb:/ipfs/QmZrZDSAErvr2PLFbb4oTMAog6BD2NmMfmvgNH4FPX6NLb\"]},\"src/interfaces/external/quickswap/IAlgebraPoolDeployer.sol\":{\"keccak256\":\"0x9679c5a3f636b65dc19a5a2dc76fa8500695170787fefa5b4f0306044e5cc637\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://330f326d9cf607ca7ac250d24f4f0b2117b1bb69977c7c150846713caa1d556a\",\"dweb:/ipfs/QmZNQhce7K6uNAaaSGh858PBrSxMb9NuUhhATKtAxxGBon\"]},\"src/interfaces/external/quickswap/IAlgebraPoolDerivedState.sol\":{\"keccak256\":\"0xa75adbad960516b5c255b734caa01a970ff1ba27d7a7812e7cb80b95f09829c5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9fdb3c44733dddd52b82be55f816e1a8c2bb1c222dc80e373dc9b4783b19bb0\",\"dweb:/ipfs/QmbULE7ZEyYutnCGH9ezrfVc4LNqyptwSjBYPtkgsToQD1\"]},\"src/interfaces/external/quickswap/IAlgebraPoolImmutables.sol\":{\"keccak256\":\"0xf078d9ec2d8f5451f9b7927ab1da0788fc5eefcc4951641b1840a939860c5a52\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://514f98170722ef31765ced410f939c8ec92f878d384560de93c534279539943d\",\"dweb:/ipfs/QmXGwqz9cTHcWxJWbrmcugNUmYeREaPgo238x1YmCM1Rfv\"]},\"src/interfaces/external/quickswap/IAlgebraPoolState.sol\":{\"keccak256\":\"0x7952dc437f7f6ac5933d2477cde00e77522cfb97943898a763e12654f4182ec2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54fc3daee446ababc863dcf4495dad13befa9438a26211d13b5c21c005278aaa\",\"dweb:/ipfs/QmdYxiEeFJpjMRHxc2v9cvMgPfB1uCmXHUbYQfhGSfdLET\"]},\"src/interfaces/external/quickswap/IAlgebraSwapCallback.sol\":{\"keccak256\":\"0x0e8ee107fbd0cf4ea76c63b9c80323bbb797b999000c1d288bc22fa27c6a5848\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://24781e079f4893f31f6542e1eb22f153f8fa398a71f953c74ed3a6c29225d279\",\"dweb:/ipfs/QmcNwjFyWUAHKgkPMP3emn6kdLH2eZCZgNezuCKMEwjcq1\"]},\"src/interfaces/external/quickswap/IAlgebraSwapRouter.sol\":{\"keccak256\":\"0x231861c4733f7630e30e376a31fd8ebb732723de17ff206e12bf448f9d3c0903\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4aab1f66a51687aa945aebfedd716bb5e6ae41fd5ff112c6d0efbaa56ecd9202\",\"dweb:/ipfs/QmWeDuJeCj5DvvFPQeM2p1pbFtBgxJbVaEFS7vGZrESN7d\"]},\"src/interfaces/external/quickswap/IAlgebraVirtualPool.sol\":{\"keccak256\":\"0x4c3e6cd89e7578df2496425787acc67c4275a586dcfc37510fc11f7a24e43407\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://87820690aa1df0506525236cfa979147d26ae7641a0cfee176fbc481c3b43676\",\"dweb:/ipfs/QmZEszmYZR15tRVCWheS62cw8VbBF4pBL1DJEp8E31ftsR\"]},\"src/interfaces/external/quickswap/IAlgebraVirtualPoolBase.sol\":{\"keccak256\":\"0x9ade2fbf7155e224d896b4f4e300bebd880ad91c58bccbe4aa75fb67dee62286\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f21ae8cbc0f01ed2e6567dab18bcbf642ce3a82b1ce8600510d14d2153557cfa\",\"dweb:/ipfs/QmWky37EjMVh6uRyjxRhenwrPuxVUqTZSvC2ESkRkXT7it\"]},\"src/interfaces/external/quickswap/IDragonLair.sol\":{\"keccak256\":\"0x0a9d79b8f568935e2bf38f2f65b52dadce8eb13739ead1611df3ed0a3264f8b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81df0f6bd7061948269602ca346ad6d91a59f28a355b4dcf6eb36182b14448e5\",\"dweb:/ipfs/QmQySzrtNKPa6WDAQiE81XFxcTrabJUbZPv5HqYWoXXvN1\"]},\"src/interfaces/external/quickswap/IERC20Minimal.sol\":{\"keccak256\":\"0xae86fd456b2debc8df50066a3d8f570bf07174ef089374ee012c3f56438665d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8a647c2a7ae4b8cd12926e33ef917fcc3d491047cd9235e743db6af61a83bc81\",\"dweb:/ipfs/QmXFhzpmLiCfT4ZeXQxhmFNWzL3Mf6t6PgceDgAtoWM1RZ\"]},\"src/interfaces/external/quickswap/IERC721Permit.sol\":{\"keccak256\":\"0x8ba99444f79b7c00ec747f69b1ef7084d751536cb880769f0bcdbdc967be1038\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2729f42c8f45acf3897138c2ac085141aa462450058bf7a0156ad4d8dbdfac9d\",\"dweb:/ipfs/QmZCk5oNUQKdSwa1FDu9FpWrzgDuVBy1Wk8eygC2driNTc\"]},\"src/interfaces/external/quickswap/IFarmingCenter.sol\":{\"keccak256\":\"0x4aa568d5326671113fc95ce3b2b75004378b9ad69acc42b400459d03d56eef9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7bbebdc6f0fc8eb17bbef8949588722a136aa0db96ce6b6ed2176d02c26f316\",\"dweb:/ipfs/Qmeb2ykvvJantBEBBgkKVzwM8TDEmdSHaSd9hzLotSwJXJ\"]},\"src/interfaces/external/quickswap/IIncentiveKey.sol\":{\"keccak256\":\"0xa55899db3f56078bdf7ba9285b0857c0e63033e6483bb7971afb4856317d05e4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0c68a1905e5765fcd09d9687a8e82d6dea1e25ce20d969ab6c830aed82536ecc\",\"dweb:/ipfs/QmSEmM2EhpGua6UXrbVZundqkRhoHuPCtfK7eCbbGE569p\"]},\"src/interfaces/external/quickswap/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x0800c4b7adcd9d1cd99b059678da5faa7d93198e44f4785426fd83890066df15\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://22d197e0a671881dfafd8f1ebe4adb81416e1b5a0b55abc80e8b508d44ca1685\",\"dweb:/ipfs/QmfNuzafVCpimS2DhLtgiq3LVyNTFGQRzug2Cw55r31A9u\"]},\"src/interfaces/external/quickswap/IPeripheryPayments.sol\":{\"keccak256\":\"0x4de12e9bbd92769551c950e10dd7995aa39e009487c9523f1c6dcf8f37afa47b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c11620b8ad005c5907eccfa394344dda850b44aad29b437c95b0b321b18b15dd\",\"dweb:/ipfs/QmQ7ziKM3GkVvuj644c9H8vhvB3N5xe3Z5HjbjMRGzQNCx\"]},\"src/interfaces/external/quickswap/IPoolInitializer.sol\":{\"keccak256\":\"0xc13eb6f11ceb388bffae85e7965c79213eb8108c9f8744691200f707adc86f4e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://115e0510940bb6416ea9e3a2aaab988051af6203ec68c8e3f1d2b79e822c5ea2\",\"dweb:/ipfs/QmcM9C2q75Jw4XZ5zX4svs8eR9yhSTYFJXLA3fHzRoCHLm\"]},\"src/interfaces/utils/IContractMeta.sol\":{\"keccak256\":\"0x7ce236cea17798c2c9e60a659e727ef188f6579315b8227d0c6ad067a33900fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31c232f85d6565414bdf292adacc3054ab2355878e4d4508fc86fc2787436f24\",\"dweb:/ipfs/QmVhEUkN5Rwqpyufn7qqT88LLdq885igE57Pk4LzgJb9Kp\"]},\"src/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add\",\"dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu\"]},\"src/interfaces/utils/IQuickSwapHelper.sol\":{\"keccak256\":\"0x0d24c6472f5a575d660561c351d7ad3a927b255fe3b46c309083a0e3dbff6ad3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://18cab205369651fd886759473f5befa21a99e4a8e9374329d379bd20fc4c2541\",\"dweb:/ipfs/QmdAKKuTaCA4zMJaYDqmrJoraFXVzjknAeeGeWnmBsezTv\"]},\"src/interfaces/vaults/IIntegrationVault.sol\":{\"keccak256\":\"0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d\",\"dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy\"]},\"src/interfaces/vaults/IQuickSwapVault.sol\":{\"keccak256\":\"0xa49dbc4f7400393585219c0e5e584042c5e81d02dedef3261946086757bb8b19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea2eb1c87b11b8884f3801e05dcd58ff60fd1a27ededf11e1a8f03c3c5c6eaaf\",\"dweb:/ipfs/QmTZ2azv6yysJoTiuT7M5Y1UMyvkQVs3rCCjr7uemvWZ9Q\"]},\"src/interfaces/vaults/IQuickSwapVaultGovernance.sol\":{\"keccak256\":\"0xb11227a38068b1a94382969a2d311a2edc417a0657e2f094f480956a6e472dcc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b3dbb465ffe780028fde2acf1deb377398a1c05e52e63d47896f7dd95319b3e1\",\"dweb:/ipfs/QmbVMLW5PKZNyqccZzZoVh8gvxG8drSfzSPLgSyUTJb7qe\"]},\"src/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1\",\"dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw\"]},\"src/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375\",\"dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu\"]},\"src/libraries/ExceptionsLibrary.sol\":{\"keccak256\":\"0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f\",\"dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX\"]},\"src/libraries/PermissionIdsLibrary.sol\":{\"keccak256\":\"0xc6a4f2515d807b2ad95e9e8f7190c5ea85ab6603d2c1136632a8af9c479ecfcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e16f3d1e595ffa5b20cd1588e839ee783b1ca246d489cbe42040fd3089bb8b1\",\"dweb:/ipfs/QmQdW5ykrjB5yMMxkU5zTR4GJ5kBhyrnAbmt3mvtB55kuC\"]},\"src/utils/ContractMeta.sol\":{\"keccak256\":\"0x6e1fe2b6e0907a5388a5775be53bbfb55883aacc0ccb7597dfc6475fa9834c3f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9f8a2c5073a97b514829bac140bf84391cc5702185c4d6813e47b61ce53515e6\",\"dweb:/ipfs/QmeuMJq2ciSaDZC8qiUGLPfAHBjpCE4v79fZiaWm8egAks\"]},\"src/vaults/QuickSwapVaultGovernance.sol\":{\"keccak256\":\"0x0d6b7f299e4ec055cb6522f26c6b083bf73e01ba66b74ee8723fbb855a44454e\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://240d374cdf5cd671c9f7e098bbef933fc406ae4e14a092f9813a4094fe3c1ca8\",\"dweb:/ipfs/QmYU94rojbaXtU2snPac6wD5rWwNmdPKxLp9btCeaZ3gQE\"]},\"src/vaults/VaultGovernance.sol\":{\"keccak256\":\"0xd484ec7eee06480da27027a0ac81f591440ecdd2ba7bd5bfdee58a3f9e88c22c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8b4f08e9350fadeb03b9561a2fb2798821f7186fe8663207c91402ea62a53cc5\",\"dweb:/ipfs/QmUr73ghYfPzjtFgxE8mPjw5wFwQTQsbcLDGJNQVfT4rEV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "internalParams_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CommitedInternalParams",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address[]",
              "name": "vaultTokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "vaultAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "vaultNft",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DeployedVault",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct IQuickSwapVaultGovernance.StrategyParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "bonusTokenToUnderlying",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "rewardTokenToUnderlying",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "swapSlippageD",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "rewardPoolTimespan",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetStrategyParams",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "when",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StagedInternalParams",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitInternalParams"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractName",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractNameBytes",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersionBytes",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "vaultTokens_",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc20Vault_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createVault",
          "outputs": [
            {
              "internalType": "contract IQuickSwapVault",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolPerVaultParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedStrategyParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "internalParams",
          "outputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "internalParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            },
            {
              "internalType": "struct IQuickSwapVaultGovernance.StrategyParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "bonusTokenToUnderlying",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "rewardTokenToUnderlying",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "swapSlippageD",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "rewardPoolTimespan",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategyParams"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "newParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stageInternalParams"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stagedInternalParams",
          "outputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyParams",
          "outputs": [
            {
              "internalType": "struct IQuickSwapVaultGovernance.StrategyParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IIncentiveKey.IncentiveKey",
                  "name": "key",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "rewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20Minimal",
                      "name": "bonusRewardToken",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IAlgebraPool",
                      "name": "pool",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "bonusTokenToUnderlying",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "rewardTokenToUnderlying",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "swapSlippageD",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "rewardPoolTimespan",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "internalParams_": "Initial Internal Params"
            }
          },
          "createVault(address[],address,address)": {
            "params": {
              "owner_": "Owner of the vault NFT",
              "quickSwapHelper_": "address of helper",
              "vaultTokens_": "ERC20 tokens that will be managed by this Vault"
            }
          },
          "delayedProtocolPerVaultParamsTimestamp(uint256)": {
            "params": {
              "nft": "Nft of the vault"
            }
          },
          "delayedStrategyParamsTimestamp(uint256)": {
            "params": {
              "nft": "Nft of the vault"
            }
          },
          "setStrategyParams(uint256,((address,address,address,uint256,uint256),address,address,uint256,uint32))": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "stageInternalParams((address,address,address))": {
            "params": {
              "newParams": "New Internal Params"
            }
          },
          "stagedInternalParams()": {
            "details": "The Internal Params could be committed after internalParamsTimestamp"
          },
          "strategyParams(uint256)": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "commitInternalParams()": {
            "notice": "Commit staged Internal Params."
          },
          "constructor": {
            "notice": "Creates a new contract."
          },
          "createVault(address[],address,address)": {
            "notice": "Deploys a new vault."
          },
          "delayedProtocolParamsTimestamp()": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed."
          },
          "delayedProtocolPerVaultParamsTimestamp(uint256)": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed."
          },
          "delayedStrategyParamsTimestamp(uint256)": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed."
          },
          "internalParams()": {
            "notice": "Internal Params of the contract."
          },
          "internalParamsTimestamp()": {
            "notice": "Timestamp in unix time seconds after which staged Internal Params could be committed."
          },
          "setStrategyParams(uint256,((address,address,address,uint256,uint256),address,address,uint256,uint32))": {
            "notice": "Delayed Strategy Params staged for commit after delay."
          },
          "stageInternalParams((address,address,address))": {
            "notice": "Stage new Internal Params."
          },
          "stagedInternalParams()": {
            "notice": "Staged new Internal Params."
          },
          "strategyParams(uint256)": {
            "notice": "Delayed Strategy Params"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/vaults/QuickSwapVaultGovernance.sol": "QuickSwapVaultGovernance"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999",
        "urls": [
          "bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb",
          "dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolGovernance.sol": {
        "keccak256": "0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e",
        "urls": [
          "bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281",
          "dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b"
        ],
        "license": "MIT"
      },
      "src/interfaces/IUnitPricesGovernance.sol": {
        "keccak256": "0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081",
        "urls": [
          "bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87",
          "dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk"
        ],
        "license": "MIT"
      },
      "src/interfaces/IVaultRegistry.sol": {
        "keccak256": "0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55",
        "urls": [
          "bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50",
          "dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/erc/IERC1271.sol": {
        "keccak256": "0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36",
        "urls": [
          "bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779",
          "dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/quickswap/IAlgebraEternalFarming.sol": {
        "keccak256": "0x508ded73b3e5b04422bfc2274bc87ca7e6ad630119bc9a5b3449fed601578864",
        "urls": [
          "bzz-raw://e7e97db9413d4c77652c9a2fca8077dfc707de3e72864cced5fea7d2f9b63520",
          "dweb:/ipfs/QmaYB3ragMT2WWo4SbkRrAoNNYjTJcSotVwPdWuJggMCuQ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IAlgebraEternalVirtualPool.sol": {
        "keccak256": "0x7faebe5008d24f2871c962e1ca3c14e5b75ff11fc024a85179f03512d5423913",
        "urls": [
          "bzz-raw://3651b67f97562e23f7fc9ac0bdeb964150422cd6ba93b76fadc2f148f4f7a7ea",
          "dweb:/ipfs/QmPiYRDdgHE7hFoCHdXLeF99amNCsbuiY5zMJGphoMwHKg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IAlgebraFactory.sol": {
        "keccak256": "0x1a5bdb5897ec134b6f739be18553cab2598f2502d5543410c6a9a5900e181049",
        "urls": [
          "bzz-raw://a4c5f0a0f050f8cbb6912bc6e411c9da48a97a4e914852f89765facd0f700c26",
          "dweb:/ipfs/QmUvFZEP3W9fSf8CQZBn6GrKj1ikX488VXUhw2RUCZJndT"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IAlgebraFarming.sol": {
        "keccak256": "0xc969d9606ecbe14130580694636b48cefff8993e072bdf010cf950698c044cde",
        "urls": [
          "bzz-raw://90206c5831a4a80239f9a19d80fae167e179c3f4a254691856c38e2da719aa4e",
          "dweb:/ipfs/QmbW3QMXukuRDouqRjZYGJHy9L71yoM9qwnxk5Fwq5DRih"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IAlgebraNonfungiblePositionManager.sol": {
        "keccak256": "0x748d1da7089c2e67cbb89cf32f3b2e0c5b68fa8bfe3b2224fdb013ce5018f5b9",
        "urls": [
          "bzz-raw://4e8da442662dbb2686517ffd7c510536a300df5fd628a44110dfd66e4dfe9118",
          "dweb:/ipfs/QmYsVLngrQraRH6qvfxRKajBwDC6vbgfDvi5tquB1AK2Aw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IAlgebraPool.sol": {
        "keccak256": "0x02eae359613685be534c86446df6789b258dc542695878b197d7c3507c0bf3d5",
        "urls": [
          "bzz-raw://c53eb72ebe4528b44e67eeef53655e94af45cd879dcdc66e9972d3a652241b03",
          "dweb:/ipfs/QmZrZDSAErvr2PLFbb4oTMAog6BD2NmMfmvgNH4FPX6NLb"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IAlgebraPoolDeployer.sol": {
        "keccak256": "0x9679c5a3f636b65dc19a5a2dc76fa8500695170787fefa5b4f0306044e5cc637",
        "urls": [
          "bzz-raw://330f326d9cf607ca7ac250d24f4f0b2117b1bb69977c7c150846713caa1d556a",
          "dweb:/ipfs/QmZNQhce7K6uNAaaSGh858PBrSxMb9NuUhhATKtAxxGBon"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IAlgebraPoolDerivedState.sol": {
        "keccak256": "0xa75adbad960516b5c255b734caa01a970ff1ba27d7a7812e7cb80b95f09829c5",
        "urls": [
          "bzz-raw://f9fdb3c44733dddd52b82be55f816e1a8c2bb1c222dc80e373dc9b4783b19bb0",
          "dweb:/ipfs/QmbULE7ZEyYutnCGH9ezrfVc4LNqyptwSjBYPtkgsToQD1"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IAlgebraPoolImmutables.sol": {
        "keccak256": "0xf078d9ec2d8f5451f9b7927ab1da0788fc5eefcc4951641b1840a939860c5a52",
        "urls": [
          "bzz-raw://514f98170722ef31765ced410f939c8ec92f878d384560de93c534279539943d",
          "dweb:/ipfs/QmXGwqz9cTHcWxJWbrmcugNUmYeREaPgo238x1YmCM1Rfv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IAlgebraPoolState.sol": {
        "keccak256": "0x7952dc437f7f6ac5933d2477cde00e77522cfb97943898a763e12654f4182ec2",
        "urls": [
          "bzz-raw://54fc3daee446ababc863dcf4495dad13befa9438a26211d13b5c21c005278aaa",
          "dweb:/ipfs/QmdYxiEeFJpjMRHxc2v9cvMgPfB1uCmXHUbYQfhGSfdLET"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IAlgebraSwapCallback.sol": {
        "keccak256": "0x0e8ee107fbd0cf4ea76c63b9c80323bbb797b999000c1d288bc22fa27c6a5848",
        "urls": [
          "bzz-raw://24781e079f4893f31f6542e1eb22f153f8fa398a71f953c74ed3a6c29225d279",
          "dweb:/ipfs/QmcNwjFyWUAHKgkPMP3emn6kdLH2eZCZgNezuCKMEwjcq1"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IAlgebraSwapRouter.sol": {
        "keccak256": "0x231861c4733f7630e30e376a31fd8ebb732723de17ff206e12bf448f9d3c0903",
        "urls": [
          "bzz-raw://4aab1f66a51687aa945aebfedd716bb5e6ae41fd5ff112c6d0efbaa56ecd9202",
          "dweb:/ipfs/QmWeDuJeCj5DvvFPQeM2p1pbFtBgxJbVaEFS7vGZrESN7d"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IAlgebraVirtualPool.sol": {
        "keccak256": "0x4c3e6cd89e7578df2496425787acc67c4275a586dcfc37510fc11f7a24e43407",
        "urls": [
          "bzz-raw://87820690aa1df0506525236cfa979147d26ae7641a0cfee176fbc481c3b43676",
          "dweb:/ipfs/QmZEszmYZR15tRVCWheS62cw8VbBF4pBL1DJEp8E31ftsR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IAlgebraVirtualPoolBase.sol": {
        "keccak256": "0x9ade2fbf7155e224d896b4f4e300bebd880ad91c58bccbe4aa75fb67dee62286",
        "urls": [
          "bzz-raw://f21ae8cbc0f01ed2e6567dab18bcbf642ce3a82b1ce8600510d14d2153557cfa",
          "dweb:/ipfs/QmWky37EjMVh6uRyjxRhenwrPuxVUqTZSvC2ESkRkXT7it"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IDragonLair.sol": {
        "keccak256": "0x0a9d79b8f568935e2bf38f2f65b52dadce8eb13739ead1611df3ed0a3264f8b2",
        "urls": [
          "bzz-raw://81df0f6bd7061948269602ca346ad6d91a59f28a355b4dcf6eb36182b14448e5",
          "dweb:/ipfs/QmQySzrtNKPa6WDAQiE81XFxcTrabJUbZPv5HqYWoXXvN1"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/quickswap/IERC20Minimal.sol": {
        "keccak256": "0xae86fd456b2debc8df50066a3d8f570bf07174ef089374ee012c3f56438665d4",
        "urls": [
          "bzz-raw://8a647c2a7ae4b8cd12926e33ef917fcc3d491047cd9235e743db6af61a83bc81",
          "dweb:/ipfs/QmXFhzpmLiCfT4ZeXQxhmFNWzL3Mf6t6PgceDgAtoWM1RZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IERC721Permit.sol": {
        "keccak256": "0x8ba99444f79b7c00ec747f69b1ef7084d751536cb880769f0bcdbdc967be1038",
        "urls": [
          "bzz-raw://2729f42c8f45acf3897138c2ac085141aa462450058bf7a0156ad4d8dbdfac9d",
          "dweb:/ipfs/QmZCk5oNUQKdSwa1FDu9FpWrzgDuVBy1Wk8eygC2driNTc"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IFarmingCenter.sol": {
        "keccak256": "0x4aa568d5326671113fc95ce3b2b75004378b9ad69acc42b400459d03d56eef9f",
        "urls": [
          "bzz-raw://d7bbebdc6f0fc8eb17bbef8949588722a136aa0db96ce6b6ed2176d02c26f316",
          "dweb:/ipfs/Qmeb2ykvvJantBEBBgkKVzwM8TDEmdSHaSd9hzLotSwJXJ"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/quickswap/IIncentiveKey.sol": {
        "keccak256": "0xa55899db3f56078bdf7ba9285b0857c0e63033e6483bb7971afb4856317d05e4",
        "urls": [
          "bzz-raw://0c68a1905e5765fcd09d9687a8e82d6dea1e25ce20d969ab6c830aed82536ecc",
          "dweb:/ipfs/QmSEmM2EhpGua6UXrbVZundqkRhoHuPCtfK7eCbbGE569p"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IPeripheryImmutableState.sol": {
        "keccak256": "0x0800c4b7adcd9d1cd99b059678da5faa7d93198e44f4785426fd83890066df15",
        "urls": [
          "bzz-raw://22d197e0a671881dfafd8f1ebe4adb81416e1b5a0b55abc80e8b508d44ca1685",
          "dweb:/ipfs/QmfNuzafVCpimS2DhLtgiq3LVyNTFGQRzug2Cw55r31A9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IPeripheryPayments.sol": {
        "keccak256": "0x4de12e9bbd92769551c950e10dd7995aa39e009487c9523f1c6dcf8f37afa47b",
        "urls": [
          "bzz-raw://c11620b8ad005c5907eccfa394344dda850b44aad29b437c95b0b321b18b15dd",
          "dweb:/ipfs/QmQ7ziKM3GkVvuj644c9H8vhvB3N5xe3Z5HjbjMRGzQNCx"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/quickswap/IPoolInitializer.sol": {
        "keccak256": "0xc13eb6f11ceb388bffae85e7965c79213eb8108c9f8744691200f707adc86f4e",
        "urls": [
          "bzz-raw://115e0510940bb6416ea9e3a2aaab988051af6203ec68c8e3f1d2b79e822c5ea2",
          "dweb:/ipfs/QmcM9C2q75Jw4XZ5zX4svs8eR9yhSTYFJXLA3fHzRoCHLm"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/utils/IContractMeta.sol": {
        "keccak256": "0x7ce236cea17798c2c9e60a659e727ef188f6579315b8227d0c6ad067a33900fb",
        "urls": [
          "bzz-raw://31c232f85d6565414bdf292adacc3054ab2355878e4d4508fc86fc2787436f24",
          "dweb:/ipfs/QmVhEUkN5Rwqpyufn7qqT88LLdq885igE57Pk4LzgJb9Kp"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IDefaultAccessControl.sol": {
        "keccak256": "0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60",
        "urls": [
          "bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add",
          "dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IQuickSwapHelper.sol": {
        "keccak256": "0x0d24c6472f5a575d660561c351d7ad3a927b255fe3b46c309083a0e3dbff6ad3",
        "urls": [
          "bzz-raw://18cab205369651fd886759473f5befa21a99e4a8e9374329d379bd20fc4c2541",
          "dweb:/ipfs/QmdAKKuTaCA4zMJaYDqmrJoraFXVzjknAeeGeWnmBsezTv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/vaults/IIntegrationVault.sol": {
        "keccak256": "0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e",
        "urls": [
          "bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d",
          "dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IQuickSwapVault.sol": {
        "keccak256": "0xa49dbc4f7400393585219c0e5e584042c5e81d02dedef3261946086757bb8b19",
        "urls": [
          "bzz-raw://ea2eb1c87b11b8884f3801e05dcd58ff60fd1a27ededf11e1a8f03c3c5c6eaaf",
          "dweb:/ipfs/QmTZ2azv6yysJoTiuT7M5Y1UMyvkQVs3rCCjr7uemvWZ9Q"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IQuickSwapVaultGovernance.sol": {
        "keccak256": "0xb11227a38068b1a94382969a2d311a2edc417a0657e2f094f480956a6e472dcc",
        "urls": [
          "bzz-raw://b3dbb465ffe780028fde2acf1deb377398a1c05e52e63d47896f7dd95319b3e1",
          "dweb:/ipfs/QmbVMLW5PKZNyqccZzZoVh8gvxG8drSfzSPLgSyUTJb7qe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/vaults/IVault.sol": {
        "keccak256": "0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43",
        "urls": [
          "bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1",
          "dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultGovernance.sol": {
        "keccak256": "0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813",
        "urls": [
          "bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375",
          "dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu"
        ],
        "license": "MIT"
      },
      "src/libraries/ExceptionsLibrary.sol": {
        "keccak256": "0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff",
        "urls": [
          "bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f",
          "dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX"
        ],
        "license": "MIT"
      },
      "src/libraries/PermissionIdsLibrary.sol": {
        "keccak256": "0xc6a4f2515d807b2ad95e9e8f7190c5ea85ab6603d2c1136632a8af9c479ecfcf",
        "urls": [
          "bzz-raw://4e16f3d1e595ffa5b20cd1588e839ee783b1ca246d489cbe42040fd3089bb8b1",
          "dweb:/ipfs/QmQdW5ykrjB5yMMxkU5zTR4GJ5kBhyrnAbmt3mvtB55kuC"
        ],
        "license": "MIT"
      },
      "src/utils/ContractMeta.sol": {
        "keccak256": "0x6e1fe2b6e0907a5388a5775be53bbfb55883aacc0ccb7597dfc6475fa9834c3f",
        "urls": [
          "bzz-raw://9f8a2c5073a97b514829bac140bf84391cc5702185c4d6813e47b61ce53515e6",
          "dweb:/ipfs/QmeuMJq2ciSaDZC8qiUGLPfAHBjpCE4v79fZiaWm8egAks"
        ],
        "license": "BUSL-1.1"
      },
      "src/vaults/QuickSwapVaultGovernance.sol": {
        "keccak256": "0x0d6b7f299e4ec055cb6522f26c6b083bf73e01ba66b74ee8723fbb855a44454e",
        "urls": [
          "bzz-raw://240d374cdf5cd671c9f7e098bbef933fc406ae4e14a092f9813a4094fe3c1ca8",
          "dweb:/ipfs/QmYU94rojbaXtU2snPac6wD5rWwNmdPKxLp9btCeaZ3gQE"
        ],
        "license": "BSL-1.1"
      },
      "src/vaults/VaultGovernance.sol": {
        "keccak256": "0xd484ec7eee06480da27027a0ac81f591440ecdd2ba7bd5bfdee58a3f9e88c22c",
        "urls": [
          "bzz-raw://8b4f08e9350fadeb03b9561a2fb2798821f7186fe8663207c91402ea62a53cc5",
          "dweb:/ipfs/QmUr73ghYfPzjtFgxE8mPjw5wFwQTQsbcLDGJNQVfT4rEV"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/vaults/QuickSwapVaultGovernance.sol",
    "id": 155555,
    "exportedSymbols": {
      "Clones": [
        43615
      ],
      "ContractMeta": [
        114987
      ],
      "ERC165": [
        48061
      ],
      "ExceptionsLibrary": [
        79454
      ],
      "IAccessControl": [
        43366
      ],
      "IAccessControlEnumerable": [
        43391
      ],
      "IAlgebraEternalFarming": [
        71582
      ],
      "IAlgebraFactory": [
        71776
      ],
      "IAlgebraFarming": [
        72038
      ],
      "IAlgebraNonfungiblePositionManager": [
        72236
      ],
      "IAlgebraPool": [
        72249
      ],
      "IAlgebraPoolDeployer": [
        72290
      ],
      "IAlgebraPoolDerivedState": [
        72327
      ],
      "IAlgebraPoolImmutables": [
        72367
      ],
      "IAlgebraPoolState": [
        72487
      ],
      "IAlgebraSwapCallback": [
        72501
      ],
      "IAlgebraSwapRouter": [
        72608
      ],
      "IContractMeta": [
        75764
      ],
      "IDefaultAccessControl": [
        75786
      ],
      "IDragonLair": [
        72725
      ],
      "IERC1271": [
        64026
      ],
      "IERC165": [
        48073
      ],
      "IERC20Minimal": [
        72797
      ],
      "IERC721": [
        46687
      ],
      "IERC721Enumerable": [
        46736
      ],
      "IERC721Metadata": [
        46763
      ],
      "IERC721Permit": [
        72832
      ],
      "IERC721Receiver": [
        46705
      ],
      "IFarmingCenter": [
        72966
      ],
      "IIncentiveKey": [
        72985
      ],
      "IIntegrationVault": [
        77767
      ],
      "IPeripheryImmutableState": [
        73007
      ],
      "IPeripheryPayments": [
        73033
      ],
      "IPoolInitializer": [
        73050
      ],
      "IProtocolGovernance": [
        52868
      ],
      "IQuickSwapHelper": [
        76032
      ],
      "IQuickSwapVault": [
        78317
      ],
      "IQuickSwapVaultGovernance": [
        78371
      ],
      "IUnitPricesGovernance": [
        52921
      ],
      "IVault": [
        78599
      ],
      "IVaultGovernance": [
        78668
      ],
      "IVaultRegistry": [
        53012
      ],
      "PermissionIdsLibrary": [
        79479
      ],
      "QuickSwapVaultGovernance": [
        155554
      ],
      "VaultGovernance": [
        158218
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:4197:473",
    "nodes": [
      {
        "id": 155213,
        "nodeType": "PragmaDirective",
        "src": "36:23:473",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 155214,
        "nodeType": "ImportDirective",
        "src": "61:60:473",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/IQuickSwapVaultGovernance.sol",
        "file": "../interfaces/vaults/IQuickSwapVaultGovernance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 155555,
        "sourceUnit": 78372,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 155215,
        "nodeType": "ImportDirective",
        "src": "122:50:473",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/IQuickSwapVault.sol",
        "file": "../interfaces/vaults/IQuickSwapVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 155555,
        "sourceUnit": 78318,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 155216,
        "nodeType": "ImportDirective",
        "src": "173:44:473",
        "nodes": [],
        "absolutePath": "src/libraries/ExceptionsLibrary.sol",
        "file": "../libraries/ExceptionsLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 155555,
        "sourceUnit": 79455,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 155217,
        "nodeType": "ImportDirective",
        "src": "218:35:473",
        "nodes": [],
        "absolutePath": "src/utils/ContractMeta.sol",
        "file": "../utils/ContractMeta.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 155555,
        "sourceUnit": 114988,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 155218,
        "nodeType": "ImportDirective",
        "src": "254:31:473",
        "nodes": [],
        "absolutePath": "src/vaults/VaultGovernance.sol",
        "file": "./VaultGovernance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 155555,
        "sourceUnit": 158219,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 155554,
        "nodeType": "ContractDefinition",
        "src": "389:3843:473",
        "nodes": [
          {
            "id": 155236,
            "nodeType": "FunctionDefinition",
            "src": "584:86:473",
            "nodes": [],
            "body": {
              "id": 155235,
              "nodeType": "Block",
              "src": "668:2:473",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 155226,
              "nodeType": "StructuredDocumentation",
              "src": "489:90:473",
              "text": "@notice Creates a new contract.\n @param internalParams_ Initial Internal Params"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 155232,
                    "name": "internalParams_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 155229,
                    "src": "651:15:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InternalParams_$78614_memory_ptr",
                      "typeString": "struct IVaultGovernance.InternalParams memory"
                    }
                  }
                ],
                "id": 155233,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 155231,
                  "name": "VaultGovernance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 158218,
                  "src": "635:15:473"
                },
                "nodeType": "ModifierInvocation",
                "src": "635:32:473"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 155230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155229,
                  "mutability": "mutable",
                  "name": "internalParams_",
                  "nameLocation": "618:15:473",
                  "nodeType": "VariableDeclaration",
                  "scope": 155236,
                  "src": "596:37:473",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InternalParams_$78614_memory_ptr",
                    "typeString": "struct IVaultGovernance.InternalParams"
                  },
                  "typeName": {
                    "id": 155228,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 155227,
                      "name": "InternalParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78614,
                      "src": "596:14:473"
                    },
                    "referencedDeclaration": 78614,
                    "src": "596:14:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InternalParams_$78614_storage_ptr",
                      "typeString": "struct IVaultGovernance.InternalParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "595:39:473"
            },
            "returnParameters": {
              "id": 155234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "668:0:473"
            },
            "scope": 155554,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 155299,
            "nodeType": "FunctionDefinition",
            "src": "787:820:473",
            "nodes": [],
            "body": {
              "id": 155298,
              "nodeType": "Block",
              "src": "870:737:473",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 155250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 155245,
                          "name": "_strategyParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157451,
                          "src": "884:15:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                            "typeString": "mapping(uint256 => bytes storage ref)"
                          }
                        },
                        "id": 155247,
                        "indexExpression": {
                          "id": 155246,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155239,
                          "src": "900:3:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "884:20:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 155248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "884:27:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 155249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "915:1:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "884:32:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 155288,
                  "nodeType": "IfStatement",
                  "src": "880:654:473",
                  "trueBody": {
                    "id": 155287,
                    "nodeType": "Block",
                    "src": "918:616:473",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 155257,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1085:1:473",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 155256,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1077:7:473",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 155255,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1077:7:473",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 155258,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1077:10:473",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 155254,
                                    "name": "IERC20Minimal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72797,
                                    "src": "1063:13:473",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20Minimal_$72797_$",
                                      "typeString": "type(contract IERC20Minimal)"
                                    }
                                  },
                                  "id": 155259,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1063:25:473",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Minimal_$72797",
                                    "typeString": "contract IERC20Minimal"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 155263,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1154:1:473",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 155262,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1146:7:473",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 155261,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1146:7:473",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 155264,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1146:10:473",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 155260,
                                    "name": "IERC20Minimal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72797,
                                    "src": "1132:13:473",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20Minimal_$72797_$",
                                      "typeString": "type(contract IERC20Minimal)"
                                    }
                                  },
                                  "id": 155265,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1132:25:473",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Minimal_$72797",
                                    "typeString": "contract IERC20Minimal"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 155269,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1210:1:473",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 155268,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1202:7:473",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 155267,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1202:7:473",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 155270,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1202:10:473",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 155266,
                                    "name": "IAlgebraPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 72249,
                                    "src": "1189:12:473",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IAlgebraPool_$72249_$",
                                      "typeString": "type(contract IAlgebraPool)"
                                    }
                                  },
                                  "id": 155271,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1189:24:473",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAlgebraPool_$72249",
                                    "typeString": "contract IAlgebraPool"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 155272,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1250:1:473",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "hexValue": "30",
                                  "id": 155273,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1286:1:473",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20Minimal_$72797",
                                    "typeString": "contract IERC20Minimal"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_IERC20Minimal_$72797",
                                    "typeString": "contract IERC20Minimal"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_IAlgebraPool_$72249",
                                    "typeString": "contract IAlgebraPool"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "expression": {
                                  "id": 155252,
                                  "name": "IIncentiveKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 72985,
                                  "src": "997:13:473",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IIncentiveKey_$72985_$",
                                    "typeString": "type(contract IIncentiveKey)"
                                  }
                                },
                                "id": 155253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "IncentiveKey",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 72984,
                                "src": "997:26:473",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_IncentiveKey_$72984_storage_ptr_$",
                                  "typeString": "type(struct IIncentiveKey.IncentiveKey storage pointer)"
                                }
                              },
                              "id": 155274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "rewardToken",
                                "bonusRewardToken",
                                "pool",
                                "startTime",
                                "endTime"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "997:313:473",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_IncentiveKey_$72984_memory_ptr",
                                "typeString": "struct IIncentiveKey.IncentiveKey memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 155277,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1364:1:473",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 155276,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1356:7:473",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 155275,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1356:7:473",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 155278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1356:10:473",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 155281,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1421:1:473",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 155280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1413:7:473",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 155279,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1413:7:473",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 155282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1413:10:473",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 155283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1460:1:473",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "30",
                              "id": 155284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1503:1:473",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_IncentiveKey_$72984_memory_ptr",
                                "typeString": "struct IIncentiveKey.IncentiveKey memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 155251,
                            "name": "StrategyParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78336,
                            "src": "955:14:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_StrategyParams_$78336_storage_ptr_$",
                              "typeString": "type(struct IQuickSwapVaultGovernance.StrategyParams storage pointer)"
                            }
                          },
                          "id": 155285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "key",
                            "bonusTokenToUnderlying",
                            "rewardTokenToUnderlying",
                            "swapSlippageD",
                            "rewardPoolTimespan"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "955:568:473",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StrategyParams_$78336_memory_ptr",
                            "typeString": "struct IQuickSwapVaultGovernance.StrategyParams memory"
                          }
                        },
                        "functionReturnParameters": 155244,
                        "id": 155286,
                        "nodeType": "Return",
                        "src": "932:591:473"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 155291,
                          "name": "_strategyParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157451,
                          "src": "1561:15:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                            "typeString": "mapping(uint256 => bytes storage ref)"
                          }
                        },
                        "id": 155293,
                        "indexExpression": {
                          "id": 155292,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155239,
                          "src": "1577:3:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1561:20:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 155294,
                            "name": "StrategyParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78336,
                            "src": "1584:14:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_StrategyParams_$78336_storage_ptr_$",
                              "typeString": "type(struct IQuickSwapVaultGovernance.StrategyParams storage pointer)"
                            }
                          }
                        ],
                        "id": 155295,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1583:16:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_StrategyParams_$78336_storage_ptr_$",
                          "typeString": "type(struct IQuickSwapVaultGovernance.StrategyParams storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_StrategyParams_$78336_storage_ptr_$",
                          "typeString": "type(struct IQuickSwapVaultGovernance.StrategyParams storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 155289,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1550:3:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 155290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1550:10:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 155296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1550:50:473",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$78336_memory_ptr",
                      "typeString": "struct IQuickSwapVaultGovernance.StrategyParams memory"
                    }
                  },
                  "functionReturnParameters": 155244,
                  "id": 155297,
                  "nodeType": "Return",
                  "src": "1543:57:473"
                }
              ]
            },
            "baseFunctions": [
              78345
            ],
            "documentation": {
              "id": 155237,
              "nodeType": "StructuredDocumentation",
              "src": "741:41:473",
              "text": "@inheritdoc IQuickSwapVaultGovernance"
            },
            "functionSelector": "12466b68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "strategyParams",
            "nameLocation": "796:14:473",
            "parameters": {
              "id": 155240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155239,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "819:3:473",
                  "nodeType": "VariableDeclaration",
                  "scope": 155299,
                  "src": "811:11:473",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:7:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "810:13:473"
            },
            "returnParameters": {
              "id": 155244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155243,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 155299,
                  "src": "847:21:473",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$78336_memory_ptr",
                    "typeString": "struct IQuickSwapVaultGovernance.StrategyParams"
                  },
                  "typeName": {
                    "id": 155242,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 155241,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78336,
                      "src": "847:14:473"
                    },
                    "referencedDeclaration": 78336,
                    "src": "847:14:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$78336_storage_ptr",
                      "typeString": "struct IQuickSwapVaultGovernance.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "846:23:473"
            },
            "scope": 155554,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 155321,
            "nodeType": "FunctionDefinition",
            "src": "1641:213:473",
            "nodes": [],
            "body": {
              "id": 155320,
              "nodeType": "Block",
              "src": "1732:122:473",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 155318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 155310,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155302,
                          "src": "1773:11:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 155308,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1749:5:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_QuickSwapVaultGovernance_$155554_$",
                            "typeString": "type(contract super QuickSwapVaultGovernance)"
                          }
                        },
                        "id": 155309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 157598,
                        "src": "1749:23:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 155311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1749:36:473",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 155317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 155313,
                              "name": "IQuickSwapVaultGovernance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78371,
                              "src": "1794:25:473",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IQuickSwapVaultGovernance_$78371_$",
                                "typeString": "type(contract IQuickSwapVaultGovernance)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IQuickSwapVaultGovernance_$78371_$",
                                "typeString": "type(contract IQuickSwapVaultGovernance)"
                              }
                            ],
                            "id": 155312,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1789:4:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 155314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1789:31:473",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IQuickSwapVaultGovernance_$78371",
                            "typeString": "type(contract IQuickSwapVaultGovernance)"
                          }
                        },
                        "id": 155315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "1789:43:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 155316,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155302,
                        "src": "1836:11:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "1789:58:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1749:98:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 155307,
                  "id": 155319,
                  "nodeType": "Return",
                  "src": "1742:105:473"
                }
              ]
            },
            "baseFunctions": [
              157598
            ],
            "documentation": {
              "id": 155300,
              "nodeType": "StructuredDocumentation",
              "src": "1613:23:473",
              "text": "@inheritdoc IERC165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1650:17:473",
            "overrides": {
              "id": 155304,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1708:8:473"
            },
            "parameters": {
              "id": 155303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155302,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1675:11:473",
                  "nodeType": "VariableDeclaration",
                  "scope": 155321,
                  "src": "1668:18:473",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 155301,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1668:6:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1667:20:473"
            },
            "returnParameters": {
              "id": 155307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155306,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 155321,
                  "src": "1726:4:473",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 155305,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1726:4:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1725:6:473"
            },
            "scope": 155554,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 155460,
            "nodeType": "FunctionDefinition",
            "src": "1975:987:473",
            "nodes": [],
            "body": {
              "id": 155459,
              "nodeType": "Block",
              "src": "2056:906:473",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 155337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 155331,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 155327,
                            "src": "2074:6:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyParams_$78336_calldata_ptr",
                              "typeString": "struct IQuickSwapVaultGovernance.StrategyParams calldata"
                            }
                          },
                          "id": 155332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bonusTokenToUnderlying",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78329,
                          "src": "2074:29:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 155335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2115:1:473",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 155334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2107:7:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 155333,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2107:7:473",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 155336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2107:10:473",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2074:43:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 155338,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "2119:17:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 155339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ADDRESS_ZERO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79390,
                        "src": "2119:30:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 155330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2066:7:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2066:84:473",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155341,
                  "nodeType": "ExpressionStatement",
                  "src": "2066:84:473"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 155349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 155343,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 155327,
                            "src": "2168:6:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyParams_$78336_calldata_ptr",
                              "typeString": "struct IQuickSwapVaultGovernance.StrategyParams calldata"
                            }
                          },
                          "id": 155344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardTokenToUnderlying",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78331,
                          "src": "2168:30:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 155347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2210:1:473",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 155346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2202:7:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 155345,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2202:7:473",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 155348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2202:10:473",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2168:44:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 155350,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "2214:17:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 155351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ADDRESS_ZERO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79390,
                        "src": "2214:30:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 155342,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2160:7:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2160:85:473",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155353,
                  "nodeType": "ExpressionStatement",
                  "src": "2160:85:473"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 155360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 155355,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 155327,
                            "src": "2263:6:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyParams_$78336_calldata_ptr",
                              "typeString": "struct IQuickSwapVaultGovernance.StrategyParams calldata"
                            }
                          },
                          "id": 155356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "swapSlippageD",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78333,
                          "src": "2263:20:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000_by_1",
                            "typeString": "int_const 1000000000"
                          },
                          "id": 155359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 155357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2286:2:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "39",
                            "id": 155358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2290:1:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9_by_1",
                              "typeString": "int_const 9"
                            },
                            "value": "9"
                          },
                          "src": "2286:5:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000_by_1",
                            "typeString": "int_const 1000000000"
                          }
                        },
                        "src": "2263:28:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 155361,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "2293:17:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 155362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LIMIT_OVERFLOW",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79420,
                        "src": "2293:32:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 155354,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2255:7:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2255:71:473",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155364,
                  "nodeType": "ExpressionStatement",
                  "src": "2255:71:473"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 155376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 155368,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 155327,
                                  "src": "2352:6:473",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StrategyParams_$78336_calldata_ptr",
                                    "typeString": "struct IQuickSwapVaultGovernance.StrategyParams calldata"
                                  }
                                },
                                "id": 155369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 78327,
                                "src": "2352:10:473",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IncentiveKey_$72984_calldata_ptr",
                                  "typeString": "struct IIncentiveKey.IncentiveKey calldata"
                                }
                              },
                              "id": 155370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 72973,
                              "src": "2352:22:473",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Minimal_$72797",
                                "typeString": "contract IERC20Minimal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20Minimal_$72797",
                                "typeString": "contract IERC20Minimal"
                              }
                            ],
                            "id": 155367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2344:7:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 155366,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2344:7:473",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 155371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2344:31:473",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 155374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2387:1:473",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 155373,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2379:7:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 155372,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2379:7:473",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 155375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2379:10:473",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2344:45:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 155377,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "2391:17:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 155378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ADDRESS_ZERO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79390,
                        "src": "2391:30:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 155365,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2336:7:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2336:86:473",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155380,
                  "nodeType": "ExpressionStatement",
                  "src": "2336:86:473"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 155392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 155384,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 155327,
                                  "src": "2448:6:473",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StrategyParams_$78336_calldata_ptr",
                                    "typeString": "struct IQuickSwapVaultGovernance.StrategyParams calldata"
                                  }
                                },
                                "id": 155385,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 78327,
                                "src": "2448:10:473",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IncentiveKey_$72984_calldata_ptr",
                                  "typeString": "struct IIncentiveKey.IncentiveKey calldata"
                                }
                              },
                              "id": 155386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "bonusRewardToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 72976,
                              "src": "2448:27:473",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Minimal_$72797",
                                "typeString": "contract IERC20Minimal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20Minimal_$72797",
                                "typeString": "contract IERC20Minimal"
                              }
                            ],
                            "id": 155383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2440:7:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 155382,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2440:7:473",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 155387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2440:36:473",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 155390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2488:1:473",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 155389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2480:7:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 155388,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2480:7:473",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 155391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2480:10:473",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2440:50:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 155393,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "2492:17:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 155394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ADDRESS_ZERO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79390,
                        "src": "2492:30:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 155381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2432:7:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2432:91:473",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155396,
                  "nodeType": "ExpressionStatement",
                  "src": "2432:91:473"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 155408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 155400,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 155327,
                                  "src": "2549:6:473",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StrategyParams_$78336_calldata_ptr",
                                    "typeString": "struct IQuickSwapVaultGovernance.StrategyParams calldata"
                                  }
                                },
                                "id": 155401,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "key",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 78327,
                                "src": "2549:10:473",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_IncentiveKey_$72984_calldata_ptr",
                                  "typeString": "struct IIncentiveKey.IncentiveKey calldata"
                                }
                              },
                              "id": 155402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "pool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 72979,
                              "src": "2549:15:473",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAlgebraPool_$72249",
                                "typeString": "contract IAlgebraPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAlgebraPool_$72249",
                                "typeString": "contract IAlgebraPool"
                              }
                            ],
                            "id": 155399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2541:7:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 155398,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2541:7:473",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 155403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2541:24:473",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 155406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2577:1:473",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 155405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2569:7:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 155404,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2569:7:473",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 155407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2569:10:473",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2541:38:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 155409,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "2581:17:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 155410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ADDRESS_ZERO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79390,
                        "src": "2581:30:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 155397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2533:7:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2533:79:473",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155412,
                  "nodeType": "ExpressionStatement",
                  "src": "2533:79:473"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 155418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 155414,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 155327,
                              "src": "2630:6:473",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StrategyParams_$78336_calldata_ptr",
                                "typeString": "struct IQuickSwapVaultGovernance.StrategyParams calldata"
                              }
                            },
                            "id": 155415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "key",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78327,
                            "src": "2630:10:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IncentiveKey_$72984_calldata_ptr",
                              "typeString": "struct IIncentiveKey.IncentiveKey calldata"
                            }
                          },
                          "id": 155416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "startTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 72981,
                          "src": "2630:20:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 155417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2653:1:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2630:24:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 155419,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "2656:17:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 155420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "VALUE_ZERO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79393,
                        "src": "2656:28:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 155413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2622:7:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2622:63:473",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155422,
                  "nodeType": "ExpressionStatement",
                  "src": "2622:63:473"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 155428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 155424,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 155327,
                              "src": "2703:6:473",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StrategyParams_$78336_calldata_ptr",
                                "typeString": "struct IQuickSwapVaultGovernance.StrategyParams calldata"
                              }
                            },
                            "id": 155425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "key",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78327,
                            "src": "2703:10:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_IncentiveKey_$72984_calldata_ptr",
                              "typeString": "struct IIncentiveKey.IncentiveKey calldata"
                            }
                          },
                          "id": 155426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 72983,
                          "src": "2703:18:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 155427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2724:1:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2703:22:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 155429,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "2727:17:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 155430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "VALUE_ZERO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79393,
                        "src": "2727:28:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 155423,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2695:7:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2695:61:473",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155432,
                  "nodeType": "ExpressionStatement",
                  "src": "2695:61:473"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 155437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 155434,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 155327,
                            "src": "2774:6:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyParams_$78336_calldata_ptr",
                              "typeString": "struct IQuickSwapVaultGovernance.StrategyParams calldata"
                            }
                          },
                          "id": 155435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardPoolTimespan",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78335,
                          "src": "2774:25:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 155436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2802:1:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2774:29:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 155438,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "2805:17:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 155439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "VALUE_ZERO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79393,
                        "src": "2805:28:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 155433,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2766:7:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 155440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2766:68:473",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155441,
                  "nodeType": "ExpressionStatement",
                  "src": "2766:68:473"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 155443,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155324,
                        "src": "2863:3:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 155446,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 155327,
                            "src": "2879:6:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyParams_$78336_calldata_ptr",
                              "typeString": "struct IQuickSwapVaultGovernance.StrategyParams calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_StrategyParams_$78336_calldata_ptr",
                              "typeString": "struct IQuickSwapVaultGovernance.StrategyParams calldata"
                            }
                          ],
                          "expression": {
                            "id": 155444,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2868:3:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 155445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2868:10:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 155447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2868:18:473",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 155442,
                      "name": "_setStrategyParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158149,
                      "src": "2844:18:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 155448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2844:43:473",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155449,
                  "nodeType": "ExpressionStatement",
                  "src": "2844:43:473"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 155451,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "2920:2:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 155452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "2920:9:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 155453,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2931:3:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 155454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2931:10:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 155455,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155324,
                        "src": "2943:3:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 155456,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155327,
                        "src": "2948:6:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StrategyParams_$78336_calldata_ptr",
                          "typeString": "struct IQuickSwapVaultGovernance.StrategyParams calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_StrategyParams_$78336_calldata_ptr",
                          "typeString": "struct IQuickSwapVaultGovernance.StrategyParams calldata"
                        }
                      ],
                      "id": 155450,
                      "name": "SetStrategyParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155553,
                      "src": "2902:17:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_StrategyParams_$78336_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct IQuickSwapVaultGovernance.StrategyParams memory)"
                      }
                    },
                    "id": 155457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2902:53:473",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155458,
                  "nodeType": "EmitStatement",
                  "src": "2897:58:473"
                }
              ]
            },
            "baseFunctions": [
              78354
            ],
            "documentation": {
              "id": 155322,
              "nodeType": "StructuredDocumentation",
              "src": "1929:41:473",
              "text": "@inheritdoc IQuickSwapVaultGovernance"
            },
            "functionSelector": "8f34822f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategyParams",
            "nameLocation": "1984:17:473",
            "parameters": {
              "id": 155328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155324,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "2010:3:473",
                  "nodeType": "VariableDeclaration",
                  "scope": 155460,
                  "src": "2002:11:473",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2002:7:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155327,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "2039:6:473",
                  "nodeType": "VariableDeclaration",
                  "scope": 155460,
                  "src": "2015:30:473",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$78336_calldata_ptr",
                    "typeString": "struct IQuickSwapVaultGovernance.StrategyParams"
                  },
                  "typeName": {
                    "id": 155326,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 155325,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78336,
                      "src": "2015:14:473"
                    },
                    "referencedDeclaration": 78336,
                    "src": "2015:14:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$78336_storage_ptr",
                      "typeString": "struct IQuickSwapVaultGovernance.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2001:45:473"
            },
            "returnParameters": {
              "id": 155329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2056:0:473"
            },
            "scope": 155554,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 155517,
            "nodeType": "FunctionDefinition",
            "src": "3014:456:473",
            "nodes": [],
            "body": {
              "id": 155516,
              "nodeType": "Block",
              "src": "3187:283:473",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    155477
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 155477,
                      "mutability": "mutable",
                      "name": "vaddr",
                      "nameLocation": "3205:5:473",
                      "nodeType": "VariableDeclaration",
                      "scope": 155516,
                      "src": "3197:13:473",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 155476,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3197:7:473",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 155478,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3197:13:473"
                },
                {
                  "expression": {
                    "id": 155485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 155479,
                          "name": "vaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155477,
                          "src": "3221:5:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 155480,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155474,
                          "src": "3228:3:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 155481,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3220:12:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 155483,
                          "name": "owner_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155466,
                          "src": "3248:6:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 155482,
                        "name": "_createVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157867,
                        "src": "3235:12:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$_t_uint256_$",
                          "typeString": "function (address) returns (address,uint256)"
                        }
                      },
                      "id": 155484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3235:20:473",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "src": "3220:35:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155486,
                  "nodeType": "ExpressionStatement",
                  "src": "3220:35:473"
                },
                {
                  "expression": {
                    "id": 155491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 155487,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 155472,
                      "src": "3265:5:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IQuickSwapVault_$78317",
                        "typeString": "contract IQuickSwapVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 155489,
                          "name": "vaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 155477,
                          "src": "3289:5:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 155488,
                        "name": "IQuickSwapVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78317,
                        "src": "3273:15:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IQuickSwapVault_$78317_$",
                          "typeString": "type(contract IQuickSwapVault)"
                        }
                      },
                      "id": 155490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3273:22:473",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IQuickSwapVault_$78317",
                        "typeString": "contract IQuickSwapVault"
                      }
                    },
                    "src": "3265:30:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IQuickSwapVault_$78317",
                      "typeString": "contract IQuickSwapVault"
                    }
                  },
                  "id": 155492,
                  "nodeType": "ExpressionStatement",
                  "src": "3265:30:473"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 155496,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155474,
                        "src": "3322:3:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 155497,
                        "name": "erc20Vault_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155468,
                        "src": "3327:11:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 155498,
                        "name": "vaultTokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155464,
                        "src": "3340:12:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "id": 155493,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155472,
                        "src": "3305:5:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IQuickSwapVault_$78317",
                          "typeString": "contract IQuickSwapVault"
                        }
                      },
                      "id": 155495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78277,
                      "src": "3305:16:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,address[] memory) external"
                      }
                    },
                    "id": 155499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3305:48:473",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155500,
                  "nodeType": "ExpressionStatement",
                  "src": "3305:48:473"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 155502,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "3382:2:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 155503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "3382:9:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 155504,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3393:3:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 155505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3393:10:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 155506,
                        "name": "vaultTokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155464,
                        "src": "3405:12:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 155509,
                            "name": "erc20Vault_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 155468,
                            "src": "3430:11:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 155507,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3419:3:473",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 155508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "3419:10:473",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 155510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3419:23:473",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 155511,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155466,
                        "src": "3444:6:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 155512,
                        "name": "vaddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155477,
                        "src": "3452:5:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 155513,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 155474,
                        "src": "3459:3:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 155501,
                      "name": "DeployedVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158217,
                      "src": "3368:13:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address[] memory,bytes memory,address,address,uint256)"
                      }
                    },
                    "id": 155514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3368:95:473",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155515,
                  "nodeType": "EmitStatement",
                  "src": "3363:100:473"
                }
              ]
            },
            "baseFunctions": [
              78370
            ],
            "documentation": {
              "id": 155461,
              "nodeType": "StructuredDocumentation",
              "src": "2968:41:473",
              "text": "@inheritdoc IQuickSwapVaultGovernance"
            },
            "functionSelector": "de2f76a4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createVault",
            "nameLocation": "3023:11:473",
            "parameters": {
              "id": 155469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155464,
                  "mutability": "mutable",
                  "name": "vaultTokens_",
                  "nameLocation": "3061:12:473",
                  "nodeType": "VariableDeclaration",
                  "scope": 155517,
                  "src": "3044:29:473",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 155462,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3044:7:473",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 155463,
                    "nodeType": "ArrayTypeName",
                    "src": "3044:9:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155466,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "3091:6:473",
                  "nodeType": "VariableDeclaration",
                  "scope": 155517,
                  "src": "3083:14:473",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 155465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3083:7:473",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155468,
                  "mutability": "mutable",
                  "name": "erc20Vault_",
                  "nameLocation": "3115:11:473",
                  "nodeType": "VariableDeclaration",
                  "scope": 155517,
                  "src": "3107:19:473",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 155467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3107:7:473",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3034:98:473"
            },
            "returnParameters": {
              "id": 155475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155472,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "3167:5:473",
                  "nodeType": "VariableDeclaration",
                  "scope": 155517,
                  "src": "3151:21:473",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IQuickSwapVault_$78317",
                    "typeString": "contract IQuickSwapVault"
                  },
                  "typeName": {
                    "id": 155471,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 155470,
                      "name": "IQuickSwapVault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78317,
                      "src": "3151:15:473"
                    },
                    "referencedDeclaration": 78317,
                    "src": "3151:15:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IQuickSwapVault_$78317",
                      "typeString": "contract IQuickSwapVault"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155474,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "3182:3:473",
                  "nodeType": "VariableDeclaration",
                  "scope": 155517,
                  "src": "3174:11:473",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3174:7:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3150:36:473"
            },
            "scope": 155554,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 155529,
            "nodeType": "FunctionDefinition",
            "src": "3541:125:473",
            "nodes": [],
            "body": {
              "id": 155528,
              "nodeType": "Block",
              "src": "3607:59:473",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "517569636b537761705661756c74476f7665726e616e6365",
                        "id": 155525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3632:26:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_645dc6cbf06ff47747ed29e93c7562899c536a4e4256dee547ff1531f37bef83",
                          "typeString": "literal_string \"QuickSwapVaultGovernance\""
                        },
                        "value": "QuickSwapVaultGovernance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_645dc6cbf06ff47747ed29e93c7562899c536a4e4256dee547ff1531f37bef83",
                          "typeString": "literal_string \"QuickSwapVaultGovernance\""
                        }
                      ],
                      "id": 155524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3624:7:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 155523,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3624:7:473",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 155526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3624:35:473",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 155522,
                  "id": 155527,
                  "nodeType": "Return",
                  "src": "3617:42:473"
                }
              ]
            },
            "baseFunctions": [
              114934
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_contractName",
            "nameLocation": "3550:13:473",
            "overrides": {
              "id": 155519,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3580:8:473"
            },
            "parameters": {
              "id": 155518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3563:2:473"
            },
            "returnParameters": {
              "id": 155522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155521,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 155529,
                  "src": "3598:7:473",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 155520,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3598:7:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3597:9:473"
            },
            "scope": 155554,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 155541,
            "nodeType": "FunctionDefinition",
            "src": "3672:109:473",
            "nodes": [],
            "body": {
              "id": 155540,
              "nodeType": "Block",
              "src": "3741:40:473",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "312e312e30",
                        "id": 155537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3766:7:473",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6815ba53416ba06aff1932cc76b3832272bafab9bc8e066be382e32b06ba5546",
                          "typeString": "literal_string \"1.1.0\""
                        },
                        "value": "1.1.0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6815ba53416ba06aff1932cc76b3832272bafab9bc8e066be382e32b06ba5546",
                          "typeString": "literal_string \"1.1.0\""
                        }
                      ],
                      "id": 155536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3758:7:473",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 155535,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3758:7:473",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 155538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3758:16:473",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 155534,
                  "id": 155539,
                  "nodeType": "Return",
                  "src": "3751:23:473"
                }
              ]
            },
            "baseFunctions": [
              114939
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_contractVersion",
            "nameLocation": "3681:16:473",
            "overrides": {
              "id": 155531,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3714:8:473"
            },
            "parameters": {
              "id": 155530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3697:2:473"
            },
            "returnParameters": {
              "id": 155534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155533,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 155541,
                  "src": "3732:7:473",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 155532,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3732:7:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3731:9:473"
            },
            "scope": 155554,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 155553,
            "nodeType": "EventDefinition",
            "src": "4114:116:473",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 155542,
              "nodeType": "StructuredDocumentation",
              "src": "3857:252:473",
              "text": "@notice Emitted when new StrategyParams are set\n @param origin Origin of the transaction (tx.origin)\n @param sender Sender of the call (msg.sender)\n @param nft VaultRegistry NFT of the vault\n @param params New set params"
            },
            "name": "SetStrategyParams",
            "nameLocation": "4120:17:473",
            "parameters": {
              "id": 155552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155544,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "origin",
                  "nameLocation": "4154:6:473",
                  "nodeType": "VariableDeclaration",
                  "scope": 155553,
                  "src": "4138:22:473",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 155543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4138:7:473",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155546,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4178:6:473",
                  "nodeType": "VariableDeclaration",
                  "scope": 155553,
                  "src": "4162:22:473",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 155545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4162:7:473",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155548,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "4202:3:473",
                  "nodeType": "VariableDeclaration",
                  "scope": 155553,
                  "src": "4186:19:473",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4186:7:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 155551,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "4222:6:473",
                  "nodeType": "VariableDeclaration",
                  "scope": 155553,
                  "src": "4207:21:473",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$78336_memory_ptr",
                    "typeString": "struct IQuickSwapVaultGovernance.StrategyParams"
                  },
                  "typeName": {
                    "id": 155550,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 155549,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78336,
                      "src": "4207:14:473"
                    },
                    "referencedDeclaration": 78336,
                    "src": "4207:14:473",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$78336_storage_ptr",
                      "typeString": "struct IQuickSwapVaultGovernance.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4137:92:473"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 155220,
              "name": "ContractMeta",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 114987,
              "src": "426:12:473"
            },
            "id": 155221,
            "nodeType": "InheritanceSpecifier",
            "src": "426:12:473"
          },
          {
            "baseName": {
              "id": 155222,
              "name": "IQuickSwapVaultGovernance",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 78371,
              "src": "440:25:473"
            },
            "id": 155223,
            "nodeType": "InheritanceSpecifier",
            "src": "440:25:473"
          },
          {
            "baseName": {
              "id": 155224,
              "name": "VaultGovernance",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 158218,
              "src": "467:15:473"
            },
            "id": 155225,
            "nodeType": "InheritanceSpecifier",
            "src": "467:15:473"
          }
        ],
        "canonicalName": "QuickSwapVaultGovernance",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 155219,
          "nodeType": "StructuredDocumentation",
          "src": "287:102:473",
          "text": "@notice Governance that manages all QuickSwap Vaults params and can deploy a new QuickSwap Vault."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          155554,
          158218,
          48061,
          48073,
          78371,
          78668,
          114987,
          75764
        ],
        "name": "QuickSwapVaultGovernance",
        "nameLocation": "398:24:473",
        "scope": 155555,
        "usedErrors": []
      }
    ],
    "license": "BSL-1.1"
  },
  "id": 473
}