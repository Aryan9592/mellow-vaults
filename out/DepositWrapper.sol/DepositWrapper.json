{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenMinted",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_DELEGATE_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OPERATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "needToCallCallback",
          "type": "bool"
        }
      ],
      "name": "addNewStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20RootVault",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minLpTokens",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "vaultOptions",
          "type": "bytes"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "depositInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "needToCallCallback",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "isOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162001f5a38038062001f5a833981016040819052620000349162000302565b60408051808201909152600281526120ad60f11b602082015281906001600160a01b038216620000825760405162461bcd60e51b815260040162000079919062000334565b60405180910390fd5b506200009e60008051602062001f3a8339815191528262000152565b620000b960008051602062001f1a8339815191528262000152565b620000d460008051602062001f1a8339815191528062000162565b6200010f7fc171260023d22a25a00a2789664c9334017843b831138c8ef03cc8897e5873d760008051602062001f1a83398151915262000162565b6200014a60008051602062001f3a8339815191527fc171260023d22a25a00a2789664c9334017843b831138c8ef03cc8897e5873d762000162565b50506200038c565b6200015e8282620001ad565b5050565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b620001c48282620001f060201b62000a471760201c565b6000828152600160209081526040909120620001eb91839062000acb62000290821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166200015e576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200024c3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620002a7836001600160a01b038416620002b0565b90505b92915050565b6000818152600183016020526040812054620002f957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620002aa565b506000620002aa565b6000602082840312156200031557600080fd5b81516001600160a01b03811681146200032d57600080fd5b9392505050565b600060208083528351808285015260005b81811015620003635785810183015185820160400152820162000345565b8181111562000376576000604083870101525b50601f01601f1916929092016040019392505050565b611b7e806200039c6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806375b238fc116100a2578063a217fddf11610071578063a217fddf146102be578063bdfd62d4146102c6578063ca15c873146102e6578063d547741f146102f9578063e8456d4c1461030c57600080fd5b806375b238fc146102325780639010d07c1461025957806391d1485414610284578063983d27371461029757600080fd5b80632f2ff15d116100de5780632f2ff15d146101a357806336568abe146101b857806363445989146101cb5780636d70f7ae1461021f57600080fd5b806301ffc9a7146101105780630952ff5414610138578063248a9ca31461016d57806324d7806c14610190575b600080fd5b61012361011e36600461148f565b61031f565b60405190151581526020015b60405180910390f35b61015f7fc171260023d22a25a00a2789664c9334017843b831138c8ef03cc8897e5873d781565b60405190815260200161012f565b61015f61017b3660046114b9565b60009081526020819052604090206001015490565b61012361019e3660046114e7565b61034a565b6101b66101b1366004611504565b6103a6565b005b6101b66101c6366004611504565b6103d0565b6102006101d93660046114e7565b6002602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b03909316835290151560208301520161012f565b61012361022d3660046114e7565b610453565b61015f7ff23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d881565b61026c610267366004611534565b61047f565b6040516001600160a01b03909116815260200161012f565b610123610292366004611504565b61049e565b61015f7f46a52cf33029de9f84853745a87af28464c80bf0346df1b32e205fc73319f62281565b61015f600081565b6102d96102d436600461159f565b6104c7565b60405161012f9190611697565b61015f6102f43660046114b9565b6109ab565b6101b6610307366004611504565b6109c2565b6101b661031a3660046116b8565b6109e7565b60006001600160e01b03198216635a05180f60e01b1480610344575061034482610ae0565b92915050565b60006103767ff23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d88361049e565b8061034457506103447fc171260023d22a25a00a2789664c9334017843b831138c8ef03cc8897e5873d78361049e565b6000828152602081905260409020600101546103c181610b15565b6103cb8383610b22565b505050565b6001600160a01b03811633146104455760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61044f8282610b44565b5050565b60006103447f46a52cf33029de9f84853745a87af28464c80bf0346df1b32e205fc73319f6228361049e565b60008281526001602052604081206104979083610b66565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6001600160a01b03868116600090815260026020818152604092839020835180850185529054948516808252600160a01b90950460ff1615158183015283518085019094529183526120ad60f11b9083015260609290919061053c5760405162461bcd60e51b815260040161043c919061172f565b506000886001600160a01b031663697222336040518163ffffffff1660e01b815260040160006040518083038186803b15801561057857600080fd5b505afa15801561058c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105b491908101906117cd565b80516040805180820190915260048152631253959360e21b602082015291925088146105f35760405162461bcd60e51b815260040161043c919061172f565b5060005b81518110156106b05761065133308b8b8581811061061757610617611861565b9050602002013585858151811061063057610630611861565b60200260200101516001600160a01b0316610b72909392919063ffffffff16565b6106a08a8a8a8481811061066757610667611861565b9050602002013584848151811061068057610680611861565b60200260200101516001600160a01b0316610be39092919063ffffffff16565b6106a98161188d565b90506105f7565b50604051631528fd1d60e21b81526001600160a01b038a16906354a3f474906106e5908b908b908b908b908b906004016118a8565b600060405180830381600087803b1580156106ff57600080fd5b505af1158015610713573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261073b9190810190611918565b925081602001511561079f5781600001516001600160a01b031663e521826f6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561078657600080fd5b505af115801561079a573d6000803e3d6000fd5b505050505b60005b81518110156108be576107e38a60008484815181106107c3576107c3611861565b60200260200101516001600160a01b0316610c9f9092919063ffffffff16565b6108ae338383815181106107f9576107f9611861565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561084457600080fd5b505afa158015610858573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087c919061199e565b84848151811061088e5761088e611861565b60200260200101516001600160a01b0316610dc39092919063ffffffff16565b6108b78161188d565b90506107a2565b506040516370a0823160e01b81523060048201526000906001600160a01b038b16906370a082319060240160206040518083038186803b15801561090157600080fd5b505afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610939919061199e565b905061094f6001600160a01b038b163383610dc3565b896001600160a01b0316336001600160a01b03167fcca721777a6ecfefca61eb6abe93dd4f6bc3798df0cf7aacedffc26fbd7521c0848785604051610996939291906119b7565b60405180910390a35050509695505050505050565b600081815260016020526040812061034490610df3565b6000828152602081905260409020600101546109dd81610b15565b6103cb8383610b44565b6109ef610dfd565b6040805180820182526001600160a01b03938416815291151560208084019182529484166000908152600290955293209051815493511515600160a01b026001600160a81b0319909416921691909117919091179055565b610a51828261049e565b61044f576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610a873390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610497836001600160a01b038416610e40565b60006001600160e01b03198216637965db0b60e01b148061034457506301ffc9a760e01b6001600160e01b0319831614610344565b610b1f8133610e8f565b50565b610b2c8282610a47565b60008281526001602052604090206103cb9082610acb565b610b4e8282610ee8565b60008281526001602052604090206103cb9082610f4d565b60006104978383610f62565b6040516001600160a01b0380851660248301528316604482015260648101829052610bdd9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f8c565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b158015610c2e57600080fd5b505afa158015610c42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c66919061199e565b9050610bdd8463095ea7b360e01b85610c7f8686611a1f565b6040516001600160a01b0390921660248301526044820152606401610ba6565b801580610d285750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610cee57600080fd5b505afa158015610d02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d26919061199e565b155b610d935760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161043c565b6040516001600160a01b0383166024820152604481018290526103cb90849063095ea7b360e01b90606401610ba6565b6040516001600160a01b0383166024820152604481018290526103cb90849063a9059cbb60e01b90606401610ba6565b6000610344825490565b610e063361034a565b6040518060400160405280600381526020016223292160e91b81525090610b1f5760405162461bcd60e51b815260040161043c919061172f565b6000818152600183016020526040812054610e8757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610344565b506000610344565b610e99828261049e565b61044f57610ea681611061565b610eb1836020611073565b604051602001610ec2929190611a37565b60408051601f198184030181529082905262461bcd60e51b825261043c9160040161172f565b610ef2828261049e565b1561044f576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610497836001600160a01b03841661120f565b6000826000018281548110610f7957610f79611861565b9060005260206000200154905092915050565b6000610fe1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113029092919063ffffffff16565b90508051600014806110025750808060200190518101906110029190611aac565b6103cb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161043c565b60606103446001600160a01b03831660145b60606000611082836002611ac9565b61108d906002611a1f565b67ffffffffffffffff8111156110a5576110a5611762565b6040519080825280601f01601f1916602001820160405280156110cf576020820181803683370190505b509050600360fc1b816000815181106110ea576110ea611861565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061111957611119611861565b60200101906001600160f81b031916908160001a905350600061113d846002611ac9565b611148906001611a1f565b90505b60018111156111c0576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061117c5761117c611861565b1a60f81b82828151811061119257611192611861565b60200101906001600160f81b031916908160001a90535060049490941c936111b981611ae8565b905061114b565b5083156104975760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161043c565b600081815260018301602052604081205480156112f8576000611233600183611aff565b855490915060009061124790600190611aff565b90508181146112ac57600086600001828154811061126757611267611861565b906000526020600020015490508087600001848154811061128a5761128a611861565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806112bd576112bd611b16565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610344565b6000915050610344565b60606113118484600085611319565b949350505050565b60608247101561137a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161043c565b600080866001600160a01b031685876040516113969190611b2c565b60006040518083038185875af1925050503d80600081146113d3576040519150601f19603f3d011682016040523d82523d6000602084013e6113d8565b606091505b50915091506113e9878383876113f4565b979650505050505050565b60608315611460578251611459576001600160a01b0385163b6114595760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161043c565b5081611311565b61131183838151156114755781518083602001fd5b8060405162461bcd60e51b815260040161043c919061172f565b6000602082840312156114a157600080fd5b81356001600160e01b03198116811461049757600080fd5b6000602082840312156114cb57600080fd5b5035919050565b6001600160a01b0381168114610b1f57600080fd5b6000602082840312156114f957600080fd5b8135610497816114d2565b6000806040838503121561151757600080fd5b823591506020830135611529816114d2565b809150509250929050565b6000806040838503121561154757600080fd5b50508035926020909101359150565b60008083601f84011261156857600080fd5b50813567ffffffffffffffff81111561158057600080fd5b60208301915083602082850101111561159857600080fd5b9250929050565b600080600080600080608087890312156115b857600080fd5b86356115c3816114d2565b9550602087013567ffffffffffffffff808211156115e057600080fd5b818901915089601f8301126115f457600080fd5b81358181111561160357600080fd5b8a60208260051b850101111561161857600080fd5b6020830197508096505060408901359450606089013591508082111561163d57600080fd5b5061164a89828a01611556565b979a9699509497509295939492505050565b600081518084526020808501945080840160005b8381101561168c57815187529582019590820190600101611670565b509495945050505050565b602081526000610497602083018461165c565b8015158114610b1f57600080fd5b6000806000606084860312156116cd57600080fd5b83356116d8816114d2565b925060208401356116e8816114d2565b915060408401356116f8816116aa565b809150509250925092565b60005b8381101561171e578181015183820152602001611706565b83811115610bdd5750506000910152565b602081526000825180602084015261174e816040850160208701611703565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156117a1576117a1611762565b604052919050565b600067ffffffffffffffff8211156117c3576117c3611762565b5060051b60200190565b600060208083850312156117e057600080fd5b825167ffffffffffffffff8111156117f757600080fd5b8301601f8101851361180857600080fd5b805161181b611816826117a9565b611778565b81815260059190911b8201830190838101908783111561183a57600080fd5b928401925b828410156113e9578351611852816114d2565b8252928401929084019061183f565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156118a1576118a1611877565b5060010190565b6060808252810185905260006001600160fb1b038611156118c857600080fd5b8560051b80886080850137602083018690528201828103608090810160408501528101849052838560a0830137600060a0858301015260a0601f19601f8601168201019150509695505050505050565b6000602080838503121561192b57600080fd5b825167ffffffffffffffff81111561194257600080fd5b8301601f8101851361195357600080fd5b8051611961611816826117a9565b81815260059190911b8201830190838101908783111561198057600080fd5b928401925b828410156113e957835182529284019290840190611985565b6000602082840312156119b057600080fd5b5051919050565b606080825284519082018190526000906020906080840190828801845b828110156119f95781516001600160a01b0316845292840192908401906001016119d4565b50505083810382850152611a0d818761165c565b92505050826040830152949350505050565b60008219821115611a3257611a32611877565b500190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611a6f816017850160208801611703565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611aa0816028840160208801611703565b01602801949350505050565b600060208284031215611abe57600080fd5b8151610497816116aa565b6000816000190483118215151615611ae357611ae3611877565b500290565b600081611af757611af7611877565b506000190190565b600082821015611b1157611b11611877565b500390565b634e487b7160e01b600052603160045260246000fd5b60008251611b3e818460208701611703565b919091019291505056fea2646970667358221220f14a02e65673748fb217263708ff90781e163d5038ddcce6093c94924e2e2f1264736f6c63430008090033f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d846a52cf33029de9f84853745a87af28464c80bf0346df1b32e205fc73319f622",
    "sourceMap": "310:2559:416:-:0;;;588:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;935:30:412;;;;;;;;;;;;-1:-1:-1;;;935:30:412;;;;636:5:416;;-1:-1:-1;;;;;914:19:412;;906:60;;;;-1:-1:-1;;;906:60:412;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;977:27:412;-1:-1:-1;;;;;;;;;;;998:5:412;977:10;:27::i;:::-;1014:29;-1:-1:-1;;;;;;;;;;;1037:5:412;1014:10;:29::i;:::-;1054:37;-1:-1:-1;;;;;;;;;;;682:18:412;1054:13;:37::i;:::-;1101:46;752:27;-1:-1:-1;;;;;;;;;;;1101:13:412;:46::i;:::-;1157:44;-1:-1:-1;;;;;;;;;;;752:27:412;1157:13;:44::i;:::-;869:339;588:57:416;310:2559;;6937:110:18;7015:25;7026:4;7032:7;7015:10;:25::i;:::-;6937:110;;:::o;7172:247::-;7255:25;4604:12;;;;;;;;;;;:22;;;;7311:34;;;;7360:52;;4604:22;;7311:34;;4604:22;;:12;;7360:52;;7255:25;7360:52;7245:174;7172:247;;:::o;1978:166:19:-;2065:31;2082:4;2088:7;2065:16;;;;;:31;;:::i;:::-;2106:18;;;;:12;:18;;;;;;;;:31;;2129:7;;2106:22;;;;;:31;;:::i;:::-;;1978:166;;:::o;7587:233:18:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:18;;;;;;;;;;;;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:18;;;;;;;;;:36;;-1:-1:-1;;7708:36:18;7740:4;7708:36;;;7790:12;719:10:44;;640:96;7790:12:18;-1:-1:-1;;;;;7763:40:18;7781:7;-1:-1:-1;;;;;7763:40:18;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;8305:150:53:-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:53;;8398:4;:50::i;:::-;8391:57;;8305:150;;;;;:::o;2214:404::-;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:53;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:53;2589:12;;14:290:488;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:488;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:488:o;309:597::-;421:4;450:2;479;468:9;461:21;511:6;505:13;554:6;549:2;538:9;534:18;527:34;579:1;589:140;603:6;600:1;597:13;589:140;;;698:14;;;694:23;;688:30;664:17;;;683:2;660:26;653:66;618:10;;589:140;;;747:6;744:1;741:13;738:91;;;817:1;812:2;803:6;792:9;788:22;784:31;777:42;738:91;-1:-1:-1;890:2:488;869:15;-1:-1:-1;;865:29:488;850:45;;;;897:2;846:54;;309:597;-1:-1:-1;;;309:597:488:o;:::-;310:2559:416;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c806375b238fc116100a2578063a217fddf11610071578063a217fddf146102be578063bdfd62d4146102c6578063ca15c873146102e6578063d547741f146102f9578063e8456d4c1461030c57600080fd5b806375b238fc146102325780639010d07c1461025957806391d1485414610284578063983d27371461029757600080fd5b80632f2ff15d116100de5780632f2ff15d146101a357806336568abe146101b857806363445989146101cb5780636d70f7ae1461021f57600080fd5b806301ffc9a7146101105780630952ff5414610138578063248a9ca31461016d57806324d7806c14610190575b600080fd5b61012361011e36600461148f565b61031f565b60405190151581526020015b60405180910390f35b61015f7fc171260023d22a25a00a2789664c9334017843b831138c8ef03cc8897e5873d781565b60405190815260200161012f565b61015f61017b3660046114b9565b60009081526020819052604090206001015490565b61012361019e3660046114e7565b61034a565b6101b66101b1366004611504565b6103a6565b005b6101b66101c6366004611504565b6103d0565b6102006101d93660046114e7565b6002602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b03909316835290151560208301520161012f565b61012361022d3660046114e7565b610453565b61015f7ff23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d881565b61026c610267366004611534565b61047f565b6040516001600160a01b03909116815260200161012f565b610123610292366004611504565b61049e565b61015f7f46a52cf33029de9f84853745a87af28464c80bf0346df1b32e205fc73319f62281565b61015f600081565b6102d96102d436600461159f565b6104c7565b60405161012f9190611697565b61015f6102f43660046114b9565b6109ab565b6101b6610307366004611504565b6109c2565b6101b661031a3660046116b8565b6109e7565b60006001600160e01b03198216635a05180f60e01b1480610344575061034482610ae0565b92915050565b60006103767ff23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d88361049e565b8061034457506103447fc171260023d22a25a00a2789664c9334017843b831138c8ef03cc8897e5873d78361049e565b6000828152602081905260409020600101546103c181610b15565b6103cb8383610b22565b505050565b6001600160a01b03811633146104455760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61044f8282610b44565b5050565b60006103447f46a52cf33029de9f84853745a87af28464c80bf0346df1b32e205fc73319f6228361049e565b60008281526001602052604081206104979083610b66565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6001600160a01b03868116600090815260026020818152604092839020835180850185529054948516808252600160a01b90950460ff1615158183015283518085019094529183526120ad60f11b9083015260609290919061053c5760405162461bcd60e51b815260040161043c919061172f565b506000886001600160a01b031663697222336040518163ffffffff1660e01b815260040160006040518083038186803b15801561057857600080fd5b505afa15801561058c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105b491908101906117cd565b80516040805180820190915260048152631253959360e21b602082015291925088146105f35760405162461bcd60e51b815260040161043c919061172f565b5060005b81518110156106b05761065133308b8b8581811061061757610617611861565b9050602002013585858151811061063057610630611861565b60200260200101516001600160a01b0316610b72909392919063ffffffff16565b6106a08a8a8a8481811061066757610667611861565b9050602002013584848151811061068057610680611861565b60200260200101516001600160a01b0316610be39092919063ffffffff16565b6106a98161188d565b90506105f7565b50604051631528fd1d60e21b81526001600160a01b038a16906354a3f474906106e5908b908b908b908b908b906004016118a8565b600060405180830381600087803b1580156106ff57600080fd5b505af1158015610713573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261073b9190810190611918565b925081602001511561079f5781600001516001600160a01b031663e521826f6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561078657600080fd5b505af115801561079a573d6000803e3d6000fd5b505050505b60005b81518110156108be576107e38a60008484815181106107c3576107c3611861565b60200260200101516001600160a01b0316610c9f9092919063ffffffff16565b6108ae338383815181106107f9576107f9611861565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561084457600080fd5b505afa158015610858573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087c919061199e565b84848151811061088e5761088e611861565b60200260200101516001600160a01b0316610dc39092919063ffffffff16565b6108b78161188d565b90506107a2565b506040516370a0823160e01b81523060048201526000906001600160a01b038b16906370a082319060240160206040518083038186803b15801561090157600080fd5b505afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610939919061199e565b905061094f6001600160a01b038b163383610dc3565b896001600160a01b0316336001600160a01b03167fcca721777a6ecfefca61eb6abe93dd4f6bc3798df0cf7aacedffc26fbd7521c0848785604051610996939291906119b7565b60405180910390a35050509695505050505050565b600081815260016020526040812061034490610df3565b6000828152602081905260409020600101546109dd81610b15565b6103cb8383610b44565b6109ef610dfd565b6040805180820182526001600160a01b03938416815291151560208084019182529484166000908152600290955293209051815493511515600160a01b026001600160a81b0319909416921691909117919091179055565b610a51828261049e565b61044f576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610a873390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610497836001600160a01b038416610e40565b60006001600160e01b03198216637965db0b60e01b148061034457506301ffc9a760e01b6001600160e01b0319831614610344565b610b1f8133610e8f565b50565b610b2c8282610a47565b60008281526001602052604090206103cb9082610acb565b610b4e8282610ee8565b60008281526001602052604090206103cb9082610f4d565b60006104978383610f62565b6040516001600160a01b0380851660248301528316604482015260648101829052610bdd9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f8c565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b158015610c2e57600080fd5b505afa158015610c42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c66919061199e565b9050610bdd8463095ea7b360e01b85610c7f8686611a1f565b6040516001600160a01b0390921660248301526044820152606401610ba6565b801580610d285750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610cee57600080fd5b505afa158015610d02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d26919061199e565b155b610d935760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161043c565b6040516001600160a01b0383166024820152604481018290526103cb90849063095ea7b360e01b90606401610ba6565b6040516001600160a01b0383166024820152604481018290526103cb90849063a9059cbb60e01b90606401610ba6565b6000610344825490565b610e063361034a565b6040518060400160405280600381526020016223292160e91b81525090610b1f5760405162461bcd60e51b815260040161043c919061172f565b6000818152600183016020526040812054610e8757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610344565b506000610344565b610e99828261049e565b61044f57610ea681611061565b610eb1836020611073565b604051602001610ec2929190611a37565b60408051601f198184030181529082905262461bcd60e51b825261043c9160040161172f565b610ef2828261049e565b1561044f576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610497836001600160a01b03841661120f565b6000826000018281548110610f7957610f79611861565b9060005260206000200154905092915050565b6000610fe1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113029092919063ffffffff16565b90508051600014806110025750808060200190518101906110029190611aac565b6103cb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161043c565b60606103446001600160a01b03831660145b60606000611082836002611ac9565b61108d906002611a1f565b67ffffffffffffffff8111156110a5576110a5611762565b6040519080825280601f01601f1916602001820160405280156110cf576020820181803683370190505b509050600360fc1b816000815181106110ea576110ea611861565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061111957611119611861565b60200101906001600160f81b031916908160001a905350600061113d846002611ac9565b611148906001611a1f565b90505b60018111156111c0576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061117c5761117c611861565b1a60f81b82828151811061119257611192611861565b60200101906001600160f81b031916908160001a90535060049490941c936111b981611ae8565b905061114b565b5083156104975760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161043c565b600081815260018301602052604081205480156112f8576000611233600183611aff565b855490915060009061124790600190611aff565b90508181146112ac57600086600001828154811061126757611267611861565b906000526020600020015490508087600001848154811061128a5761128a611861565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806112bd576112bd611b16565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610344565b6000915050610344565b60606113118484600085611319565b949350505050565b60608247101561137a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161043c565b600080866001600160a01b031685876040516113969190611b2c565b60006040518083038185875af1925050503d80600081146113d3576040519150601f19603f3d011682016040523d82523d6000602084013e6113d8565b606091505b50915091506113e9878383876113f4565b979650505050505050565b60608315611460578251611459576001600160a01b0385163b6114595760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161043c565b5081611311565b61131183838151156114755781518083602001fd5b8060405162461bcd60e51b815260040161043c919061172f565b6000602082840312156114a157600080fd5b81356001600160e01b03198116811461049757600080fd5b6000602082840312156114cb57600080fd5b5035919050565b6001600160a01b0381168114610b1f57600080fd5b6000602082840312156114f957600080fd5b8135610497816114d2565b6000806040838503121561151757600080fd5b823591506020830135611529816114d2565b809150509250929050565b6000806040838503121561154757600080fd5b50508035926020909101359150565b60008083601f84011261156857600080fd5b50813567ffffffffffffffff81111561158057600080fd5b60208301915083602082850101111561159857600080fd5b9250929050565b600080600080600080608087890312156115b857600080fd5b86356115c3816114d2565b9550602087013567ffffffffffffffff808211156115e057600080fd5b818901915089601f8301126115f457600080fd5b81358181111561160357600080fd5b8a60208260051b850101111561161857600080fd5b6020830197508096505060408901359450606089013591508082111561163d57600080fd5b5061164a89828a01611556565b979a9699509497509295939492505050565b600081518084526020808501945080840160005b8381101561168c57815187529582019590820190600101611670565b509495945050505050565b602081526000610497602083018461165c565b8015158114610b1f57600080fd5b6000806000606084860312156116cd57600080fd5b83356116d8816114d2565b925060208401356116e8816114d2565b915060408401356116f8816116aa565b809150509250925092565b60005b8381101561171e578181015183820152602001611706565b83811115610bdd5750506000910152565b602081526000825180602084015261174e816040850160208701611703565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156117a1576117a1611762565b604052919050565b600067ffffffffffffffff8211156117c3576117c3611762565b5060051b60200190565b600060208083850312156117e057600080fd5b825167ffffffffffffffff8111156117f757600080fd5b8301601f8101851361180857600080fd5b805161181b611816826117a9565b611778565b81815260059190911b8201830190838101908783111561183a57600080fd5b928401925b828410156113e9578351611852816114d2565b8252928401929084019061183f565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156118a1576118a1611877565b5060010190565b6060808252810185905260006001600160fb1b038611156118c857600080fd5b8560051b80886080850137602083018690528201828103608090810160408501528101849052838560a0830137600060a0858301015260a0601f19601f8601168201019150509695505050505050565b6000602080838503121561192b57600080fd5b825167ffffffffffffffff81111561194257600080fd5b8301601f8101851361195357600080fd5b8051611961611816826117a9565b81815260059190911b8201830190838101908783111561198057600080fd5b928401925b828410156113e957835182529284019290840190611985565b6000602082840312156119b057600080fd5b5051919050565b606080825284519082018190526000906020906080840190828801845b828110156119f95781516001600160a01b0316845292840192908401906001016119d4565b50505083810382850152611a0d818761165c565b92505050826040830152949350505050565b60008219821115611a3257611a32611877565b500190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611a6f816017850160208801611703565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611aa0816028840160208801611703565b01602801949350505050565b600060208284031215611abe57600080fd5b8151610497816116aa565b6000816000190483118215151615611ae357611ae3611877565b500290565b600081611af757611af7611877565b506000190190565b600082821015611b1157611b11611877565b500390565b634e487b7160e01b600052603160045260246000fd5b60008251611b3e818460208701611703565b919091019291505056fea2646970667358221220f14a02e65673748fb217263708ff90781e163d5038ddcce6093c94924e2e2f1264736f6c63430008090033",
    "sourceMap": "310:2559:416:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:212:19;;;;;;:::i;:::-;;:::i;:::-;;;470:14:488;;463:22;445:41;;433:2;418:18;634:212:19;;;;;;;;706:73:412;;752:27;706:73;;;;;643:25:488;;;631:2;616:18;706:73:412;497:177:488;4504:129:18;;;;;;:::i;:::-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129;1466:151:412;;;;;;:::i;:::-;;:::i;4929:145:18:-;;;;;;:::i;:::-;;:::i;:::-;;6038:214;;;;;;:::i;:::-;;:::i;530:51:416:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;530:51:416;;;-1:-1:-1;;;530:51:416;;;;;;;;;;-1:-1:-1;;;;;1758:32:488;;;1740:51;;1834:14;;1827:22;1822:2;1807:18;;1800:50;1713:18;530:51:416;1572:284:488;1778:112:412;;;;;;:::i;:::-;;:::i;645:55::-;;682:18;645:55;;1431:151:19;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2278:32:488;;;2260:51;;2248:2;2233:18;1431:151:19;2114:203:488;3021:145:18;;;;;;:::i;:::-;;:::i;583:56:412:-;;618:21;583:56;;2153:49:18;;2198:4;2153:49;;720:1418:416;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1750:140:19:-;;;;;;:::i;:::-;;:::i;5354:147:18:-;;;;;;:::i;:::-;;:::i;2144:258:416:-;;;;;;:::i;:::-;;:::i;634:212:19:-;719:4;-1:-1:-1;;;;;;742:57:19;;-1:-1:-1;;;742:57:19;;:97;;;803:36;827:11;803:23;:36::i;:::-;735:104;634:212;-1:-1:-1;;634:212:19:o;1466:151:412:-;1520:4;1543:27;682:18;1563:6;1543:7;:27::i;:::-;:67;;;;1574:36;752:27;1603:6;1574:7;:36::i;4929:145:18:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;-1:-1:-1;;;;;6133:23:18;;719:10:44;6133:23:18;6125:83;;;;-1:-1:-1;;;6125:83:18;;5551:2:488;6125:83:18;;;5533:21:488;5590:2;5570:18;;;5563:30;5629:34;5609:18;;;5602:62;-1:-1:-1;;;5680:18:488;;;5673:45;5735:19;;6125:83:18;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;1778:112:412:-;1835:4;1858:25;618:21;1876:6;1858:7;:25::i;1431:151:19:-;1521:7;1547:18;;;:12;:18;;;;;:28;;1569:5;1547:21;:28::i;:::-;1540:35;1431:151;-1:-1:-1;;;1431:151:19:o;3021:145:18:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:18;;;;;;;;;;;;;;;3021:145::o;720:1418:416:-;-1:-1:-1;;;;;981:27:416;;;946:32;981:27;;;:11;:27;;;;;;;;;946:62;;;;;;;;;;;;;;;-1:-1:-1;;;946:62:416;;;;;;;;;;;1063:30;;;;;;;;;;;-1:-1:-1;;;1063:30:416;;;;899:35;;946:62;;1063:30;1018:76;;;;-1:-1:-1;;;1018:76:416;;;;;;;;:::i;:::-;;1105:23;1131:5;-1:-1:-1;;;;;1131:17:416;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1131:19:416;;;;;;;;;;;;:::i;:::-;1168:13;;1206:32;;;;;;;;;;;;-1:-1:-1;;;1206:32:416;;;;1105:45;;-1:-1:-1;1168:36:416;;1160:79;;;;-1:-1:-1;;;1160:79:416;;;;;;;;:::i;:::-;;1254:9;1249:233;1273:6;:13;1269:1;:17;1249:233;;;1307:78;1342:10;1362:4;1369:12;;1382:1;1369:15;;;;;;;:::i;:::-;;;;;;;1314:6;1321:1;1314:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1307:34:416;;;:78;;;;;;:::i;:::-;1399:72;1447:5;1455:12;;1468:1;1455:15;;;;;;;:::i;:::-;;;;;;;1406:6;1413:1;1406:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1399:39:416;;;:72;;;;;:::i;:::-;1288:3;;;:::i;:::-;;;1249:233;;;-1:-1:-1;1513:54:416;;-1:-1:-1;;;1513:54:416;;-1:-1:-1;;;;;1513:13:416;;;;;:54;;1527:12;;;;1541:11;;1554:12;;;;1513:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1513:54:416;;;;;;;;;;;;:::i;:::-;1492:75;;1581:12;:31;;;1577:114;;;1640:12;:21;;;-1:-1:-1;;;;;1628:50:416;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1577:114;1706:9;1701:217;1725:6;:13;1721:1;:17;1701:217;;;1759:48;1797:5;1805:1;1766:6;1773:1;1766:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1759:29:416;;;:48;;;;;:::i;:::-;1821:86;1852:10;1871:6;1878:1;1871:9;;;;;;;;:::i;:::-;;;;;;;;;;;1864:42;;-1:-1:-1;;;1864:42:416;;1900:4;1864:42;;;2260:51:488;-1:-1:-1;;;;;1864:27:416;;;;;;2233:18:488;;1864:42:416;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1828:6;1835:1;1828:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1821:30:416;;;:86;;;;;:::i;:::-;1740:3;;;:::i;:::-;;;1701:217;;;-1:-1:-1;1952:30:416;;-1:-1:-1;;;1952:30:416;;1976:4;1952:30;;;2260:51:488;1928:21:416;;-1:-1:-1;;;;;1952:15:416;;;;;2233:18:488;;1952:30:416;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1928:54;-1:-1:-1;1992:45:416;-1:-1:-1;;;;;1992:18:416;;2011:10;1928:54;1992:18;:45::i;:::-;2081:5;-1:-1:-1;;;;;2053:78:416;2061:10;-1:-1:-1;;;;;2053:78:416;;2089:6;2097:18;2117:13;2053:78;;;;;;;;:::i;:::-;;;;;;;;936:1202;;;720:1418;;;;;;;;:::o;1750:140:19:-;1830:7;1856:18;;;:12;:18;;;;;:27;;:25;:27::i;5354:147:18:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;2144:258:416:-:0;2275:15;:13;:15::i;:::-;2321:74;;;;;;;;-1:-1:-1;;;;;2321:74:416;;;;;;;;;;;;;;;2300:18;;;-1:-1:-1;2300:18:416;;;:11;:18;;;;;:95;;;;;;;;-1:-1:-1;;;2300:95:416;-1:-1:-1;;;;;;2300:95:416;;;;;;;;;;;;;;;2144:258::o;7587:233:18:-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:18;;;;;;;;;:36;;-1:-1:-1;;7708:36:18;7740:4;7708:36;;;7790:12;719:10:44;;640:96;7790:12:18;-1:-1:-1;;;;;7763:40:18;7781:7;-1:-1:-1;;;;;7763:40:18;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;8305:150:53:-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:53;;8398:4;:50::i;2732:202:18:-;2817:4;-1:-1:-1;;;;;;2840:47:18;;-1:-1:-1;;;2840:47:18;;:87;;-1:-1:-1;;;;;;;;;;937:40:49;;;2891:36:18;829:155:49;3460:103:18;3526:30;3537:4;719:10:44;3526::18;:30::i;:::-;3460:103;:::o;1978:166:19:-;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106:18;;;;:12;:18;;;;;:31;;2129:7;2106:22;:31::i;2233:171::-;2321:32;2339:4;2345:7;2321:17;:32::i;:::-;2363:18;;;;:12;:18;;;;;:34;;2389:7;2363:25;:34::i;9563:156:53:-;9637:7;9687:22;9691:3;9703:5;9687:3;:22::i;1355:203:37:-;1482:68;;-1:-1:-1;;;;;11500:15:488;;;1482:68:37;;;11482:34:488;11552:15;;11532:18;;;11525:43;11584:18;;;11577:34;;;1455:96:37;;1475:5;;-1:-1:-1;;;1505:27:37;11417:18:488;;1482:68:37;;;;-1:-1:-1;;1482:68:37;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:68:37;-1:-1:-1;;;;;;1482:68:37;;;;;;;;;;1455:19;:96::i;:::-;1355:203;;;;:::o;2582:280::-;2701:39;;-1:-1:-1;;;2701:39:37;;2725:4;2701:39;;;11834:34:488;-1:-1:-1;;;;;11904:15:488;;;11884:18;;;11877:43;2678:20:37;;2701:15;;;;;;11769:18:488;;2701:39:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2678:62;-1:-1:-1;2750:105:37;2770:5;-1:-1:-1;;;2824:7:37;2833:20;2848:5;2678:62;2833:20;:::i;:::-;2777:77;;-1:-1:-1;;;;;12256:32:488;;;2777:77:37;;;12238:51:488;12305:18;;;12298:34;12211:18;;2777:77:37;12064:274:488;1818:573:37;2143:10;;;2142:62;;-1:-1:-1;2159:39:37;;-1:-1:-1;;;2159:39:37;;2183:4;2159:39;;;11834:34:488;-1:-1:-1;;;;;11904:15:488;;;11884:18;;;11877:43;2159:15:37;;;;;11769:18:488;;2159:39:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2142:62;2121:163;;;;-1:-1:-1;;;2121:163:37;;12545:2:488;2121:163:37;;;12527:21:488;12584:2;12564:18;;;12557:30;12623:34;12603:18;;;12596:62;-1:-1:-1;;;12674:18:488;;;12667:52;12736:19;;2121:163:37;12343:418:488;2121:163:37;2321:62;;-1:-1:-1;;;;;12256:32:488;;2321:62:37;;;12238:51:488;12305:18;;;12298:34;;;2294:90:37;;2314:5;;-1:-1:-1;;;2344:22:37;12211:18:488;;2321:62:37;12064:274:488;941:175:37;1050:58;;-1:-1:-1;;;;;12256:32:488;;1050:58:37;;;12238:51:488;12305:18;;;12298:34;;;1023:86:37;;1043:5;;-1:-1:-1;;;1073:23:37;12211:18:488;;1050:58:37;12064:274:488;9106:115:53;9169:7;9195:19;9203:3;4545:18;;4463:107;1978:113:412;2035:19;2043:10;2035:7;:19::i;:::-;2056:27;;;;;;;;;;;;;-1:-1:-1;;;2056:27:412;;;2027:57;;;;;-1:-1:-1;;;2027:57:412;;;;;;;;:::i;2214:404:53:-;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:53;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:53;2589:12;;3844:479:18;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:18;;;;;;;;;;-1:-1:-1;;;3970:336:18;;;;;;;:::i;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:18;;;;;;;;;;:37;;-1:-1:-1;;8112:37:18;;;8168:40;719:10:44;;8112:12:18;;8168:40;;8144:5;8168:40;7991:234;;:::o;8623:156:53:-;8696:4;8719:53;8727:3;-1:-1:-1;;;;;8747:23:53;;8719:7;:53::i;4912:118::-;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;;;:::i;:::-;;;;;;;;;4998:25;;4912:118;;;;:::o;5196:642:37:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:37;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:37;;14009:2:488;5720:111:37;;;13991:21:488;14048:2;14028:18;;;14021:30;14087:34;14067:18;;;14060:62;-1:-1:-1;;;14138:18:488;;;14131:40;14188:19;;5720:111:37;13807:406:488;2407:149:47;2465:13;2497:52;-1:-1:-1;;;;;2509:22:47;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:47;;1918:47;;-1:-1:-1;;;1975:6:47;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:47;;;;;;;;;-1:-1:-1;;;2000:6:47;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:47;;;;;;;;-1:-1:-1;2030:9:47;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:47;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:47;;;;;;;;-1:-1:-1;2141:1:47;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:47;;2162:55;;;;-1:-1:-1;;;2162:55:47;;14734:2:488;2162:55:47;;;14716:21:488;;;14753:18;;;14746:30;14812:34;14792:18;;;14785:62;14864:18;;2162:55:47;14532:356:488;2786:1388:53;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:53;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;4108:223:43;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:43:o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:43;;15357:2:488;5354:81:43;;;15339:21:488;15396:2;15376:18;;;15369:30;15435:34;15415:18;;;15408:62;-1:-1:-1;;;15486:18:488;;;15479:36;15532:19;;5354:81:43;15155:402:488;5354:81:43;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:43;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:43:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:17;;7902:286;;-1:-1:-1;;;;;1702:19:43;;;8113:60;;;;-1:-1:-1;;;8113:60:43;;16043:2:488;8113:60:43;;;16025:21:488;16082:2;16062:18;;;16055:30;16121:31;16101:18;;;16094:59;16170:18;;8113:60:43;15841:353:488;8113:60:43;-1:-1:-1;8208:10:43;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:43;;;;;;;;:::i;14:286:488:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:488;;209:43;;199:71;;266:1;263;256:12;679:180;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;-1:-1:-1;830:23:488;;679:180;-1:-1:-1;679:180:488:o;864:131::-;-1:-1:-1;;;;;939:31:488;;929:42;;919:70;;985:1;982;975:12;1000:247;1059:6;1112:2;1100:9;1091:7;1087:23;1083:32;1080:52;;;1128:1;1125;1118:12;1080:52;1167:9;1154:23;1186:31;1211:5;1186:31;:::i;1252:315::-;1320:6;1328;1381:2;1369:9;1360:7;1356:23;1352:32;1349:52;;;1397:1;1394;1387:12;1349:52;1433:9;1420:23;1410:33;;1493:2;1482:9;1478:18;1465:32;1506:31;1531:5;1506:31;:::i;:::-;1556:5;1546:15;;;1252:315;;;;;:::o;1861:248::-;1929:6;1937;1990:2;1978:9;1969:7;1965:23;1961:32;1958:52;;;2006:1;2003;1996:12;1958:52;-1:-1:-1;;2029:23:488;;;2099:2;2084:18;;;2071:32;;-1:-1:-1;1861:248:488:o;2322:347::-;2373:8;2383:6;2437:3;2430:4;2422:6;2418:17;2414:27;2404:55;;2455:1;2452;2445:12;2404:55;-1:-1:-1;2478:20:488;;2521:18;2510:30;;2507:50;;;2553:1;2550;2543:12;2507:50;2590:4;2582:6;2578:17;2566:29;;2642:3;2635:4;2626:6;2618;2614:19;2610:30;2607:39;2604:59;;;2659:1;2656;2649:12;2604:59;2322:347;;;;;:::o;2674:1131::-;2823:6;2831;2839;2847;2855;2863;2916:3;2904:9;2895:7;2891:23;2887:33;2884:53;;;2933:1;2930;2923:12;2884:53;2972:9;2959:23;2991:31;3016:5;2991:31;:::i;:::-;3041:5;-1:-1:-1;3097:2:488;3082:18;;3069:32;3120:18;3150:14;;;3147:34;;;3177:1;3174;3167:12;3147:34;3215:6;3204:9;3200:22;3190:32;;3260:7;3253:4;3249:2;3245:13;3241:27;3231:55;;3282:1;3279;3272:12;3231:55;3322:2;3309:16;3348:2;3340:6;3337:14;3334:34;;;3364:1;3361;3354:12;3334:34;3417:7;3412:2;3402:6;3399:1;3395:14;3391:2;3387:23;3383:32;3380:45;3377:65;;;3438:1;3435;3428:12;3377:65;3469:2;3465;3461:11;3451:21;;3491:6;3481:16;;;3544:2;3533:9;3529:18;3516:32;3506:42;;3601:2;3590:9;3586:18;3573:32;3557:48;;3630:2;3620:8;3617:16;3614:36;;;3646:1;3643;3636:12;3614:36;;3685:60;3737:7;3726:8;3715:9;3711:24;3685:60;:::i;:::-;2674:1131;;;;-1:-1:-1;2674:1131:488;;-1:-1:-1;2674:1131:488;;3764:8;;2674:1131;-1:-1:-1;;;2674:1131:488:o;3810:435::-;3863:3;3901:5;3895:12;3928:6;3923:3;3916:19;3954:4;3983:2;3978:3;3974:12;3967:19;;4020:2;4013:5;4009:14;4041:1;4051:169;4065:6;4062:1;4059:13;4051:169;;;4126:13;;4114:26;;4160:12;;;;4195:15;;;;4087:1;4080:9;4051:169;;;-1:-1:-1;4236:3:488;;3810:435;-1:-1:-1;;;;;3810:435:488:o;4250:261::-;4429:2;4418:9;4411:21;4392:4;4449:56;4501:2;4490:9;4486:18;4478:6;4449:56;:::i;4698:118::-;4784:5;4777:13;4770:21;4763:5;4760:32;4750:60;;4806:1;4803;4796:12;4821:523;4895:6;4903;4911;4964:2;4952:9;4943:7;4939:23;4935:32;4932:52;;;4980:1;4977;4970:12;4932:52;5019:9;5006:23;5038:31;5063:5;5038:31;:::i;:::-;5088:5;-1:-1:-1;5145:2:488;5130:18;;5117:32;5158:33;5117:32;5158:33;:::i;:::-;5210:7;-1:-1:-1;5269:2:488;5254:18;;5241:32;5282:30;5241:32;5282:30;:::i;:::-;5331:7;5321:17;;;4821:523;;;;;:::o;5765:258::-;5837:1;5847:113;5861:6;5858:1;5855:13;5847:113;;;5937:11;;;5931:18;5918:11;;;5911:39;5883:2;5876:10;5847:113;;;5978:6;5975:1;5972:13;5969:48;;;-1:-1:-1;;6013:1:488;5995:16;;5988:27;5765:258::o;6028:383::-;6177:2;6166:9;6159:21;6140:4;6209:6;6203:13;6252:6;6247:2;6236:9;6232:18;6225:34;6268:66;6327:6;6322:2;6311:9;6307:18;6302:2;6294:6;6290:15;6268:66;:::i;:::-;6395:2;6374:15;-1:-1:-1;;6370:29:488;6355:45;;;;6402:2;6351:54;;6028:383;-1:-1:-1;;6028:383:488:o;6416:127::-;6477:10;6472:3;6468:20;6465:1;6458:31;6508:4;6505:1;6498:15;6532:4;6529:1;6522:15;6548:275;6619:2;6613:9;6684:2;6665:13;;-1:-1:-1;;6661:27:488;6649:40;;6719:18;6704:34;;6740:22;;;6701:62;6698:88;;;6766:18;;:::i;:::-;6802:2;6795:22;6548:275;;-1:-1:-1;6548:275:488:o;6828:183::-;6888:4;6921:18;6913:6;6910:30;6907:56;;;6943:18;;:::i;:::-;-1:-1:-1;6988:1:488;6984:14;7000:4;6980:25;;6828:183::o;7016:956::-;7111:6;7142:2;7185;7173:9;7164:7;7160:23;7156:32;7153:52;;;7201:1;7198;7191:12;7153:52;7234:9;7228:16;7267:18;7259:6;7256:30;7253:50;;;7299:1;7296;7289:12;7253:50;7322:22;;7375:4;7367:13;;7363:27;-1:-1:-1;7353:55:488;;7404:1;7401;7394:12;7353:55;7433:2;7427:9;7456:60;7472:43;7512:2;7472:43;:::i;:::-;7456:60;:::i;:::-;7550:15;;;7632:1;7628:10;;;;7620:19;;7616:28;;;7581:12;;;;7656:19;;;7653:39;;;7688:1;7685;7678:12;7653:39;7712:11;;;;7732:210;7748:6;7743:3;7740:15;7732:210;;;7821:3;7815:10;7838:31;7863:5;7838:31;:::i;:::-;7882:18;;7765:12;;;;7920;;;;7732:210;;7977:127;8038:10;8033:3;8029:20;8026:1;8019:31;8069:4;8066:1;8059:15;8093:4;8090:1;8083:15;8109:127;8170:10;8165:3;8161:20;8158:1;8151:31;8201:4;8198:1;8191:15;8225:4;8222:1;8215:15;8241:135;8280:3;-1:-1:-1;;8301:17:488;;8298:43;;;8321:18;;:::i;:::-;-1:-1:-1;8368:1:488;8357:13;;8241:135::o;8381:872::-;8654:2;8636:21;;;8673:18;;8666:34;;;-1:-1:-1;;;;;;8712:31:488;;8709:51;;;8756:1;8753;8746:12;8709:51;8790:6;8787:1;8783:14;8848:6;8840;8834:3;8823:9;8819:19;8806:49;8980:4;8965:20;;8958:36;;;8874:22;;-1:-1:-1;;;8923:3:488;9030:28;;;9025:2;9010:18;;9003:56;8915:12;;9068:18;;;9079:6;9122;9116:3;9108:12;;9095:42;9180:1;9174:3;9165:6;9161:2;9157:15;9153:25;9146:36;9243:3;9236:2;9232:7;9227:2;9219:6;9215:15;9211:29;9207:2;9203:38;9199:48;9191:56;;;8381:872;;;;;;;;:::o;9258:881::-;9353:6;9384:2;9427;9415:9;9406:7;9402:23;9398:32;9395:52;;;9443:1;9440;9433:12;9395:52;9476:9;9470:16;9509:18;9501:6;9498:30;9495:50;;;9541:1;9538;9531:12;9495:50;9564:22;;9617:4;9609:13;;9605:27;-1:-1:-1;9595:55:488;;9646:1;9643;9636:12;9595:55;9675:2;9669:9;9698:60;9714:43;9754:2;9714:43;:::i;9698:60::-;9792:15;;;9874:1;9870:10;;;;9862:19;;9858:28;;;9823:12;;;;9898:19;;;9895:39;;;9930:1;9927;9920:12;9895:39;9954:11;;;;9974:135;9990:6;9985:3;9982:15;9974:135;;;10056:10;;10044:23;;10007:12;;;;10087;;;;9974:135;;10144:184;10214:6;10267:2;10255:9;10246:7;10242:23;10238:32;10235:52;;;10283:1;10280;10273:12;10235:52;-1:-1:-1;10306:16:488;;10144:184;-1:-1:-1;10144:184:488:o;10333:904::-;10629:2;10641:21;;;10711:13;;10614:18;;;10733:22;;;10581:4;;10809;;10786:3;10771:19;;;10836:15;;;10581:4;10879:195;10893:6;10890:1;10887:13;10879:195;;;10958:13;;-1:-1:-1;;;;;10954:39:488;10942:52;;11014:12;;;;11049:15;;;;10990:1;10908:9;10879:195;;;10883:3;;;11119:9;11114:3;11110:19;11105:2;11094:9;11090:18;11083:47;11147:41;11184:3;11176:6;11147:41;:::i;:::-;11139:49;;;;11224:6;11219:2;11208:9;11204:18;11197:34;10333:904;;;;;;:::o;11931:128::-;11971:3;12002:1;11998:6;11995:1;11992:13;11989:39;;;12008:18;;:::i;:::-;-1:-1:-1;12044:9:488;;11931:128::o;12766:786::-;13177:25;13172:3;13165:38;13147:3;13232:6;13226:13;13248:62;13303:6;13298:2;13293:3;13289:12;13282:4;13274:6;13270:17;13248:62;:::i;:::-;-1:-1:-1;;;13369:2:488;13329:16;;;13361:11;;;13354:40;13419:13;;13441:63;13419:13;13490:2;13482:11;;13475:4;13463:17;;13441:63;:::i;:::-;13524:17;13543:2;13520:26;;12766:786;-1:-1:-1;;;;12766:786:488:o;13557:245::-;13624:6;13677:2;13665:9;13656:7;13652:23;13648:32;13645:52;;;13693:1;13690;13683:12;13645:52;13725:9;13719:16;13744:28;13766:5;13744:28;:::i;14218:168::-;14258:7;14324:1;14320;14316:6;14312:14;14309:1;14306:21;14301:1;14294:9;14287:17;14283:45;14280:71;;;14331:18;;:::i;:::-;-1:-1:-1;14371:9:488;;14218:168::o;14391:136::-;14430:3;14458:5;14448:39;;14467:18;;:::i;:::-;-1:-1:-1;;;14503:18:488;;14391:136::o;14893:125::-;14933:4;14961:1;14958;14955:8;14952:34;;;14966:18;;:::i;:::-;-1:-1:-1;15003:9:488;;14893:125::o;15023:127::-;15084:10;15079:3;15075:20;15072:1;15065:31;15115:4;15112:1;15105:15;15139:4;15136:1;15129:15;15562:274;15691:3;15729:6;15723:13;15745:53;15791:6;15786:3;15779:4;15771:6;15767:17;15745:53;:::i;:::-;15814:16;;;;;15562:274;-1:-1:-1;;15562:274:488:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ADMIN_DELEGATE_ROLE()": "0952ff54",
    "ADMIN_ROLE()": "75b238fc",
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "OPERATOR()": "983d2737",
    "addNewStrategy(address,address,bool)": "e8456d4c",
    "deposit(address,uint256[],uint256,bytes)": "bdfd62d4",
    "depositInfo(address)": "63445989",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "isAdmin(address)": "24d7806c",
    "isOperator(address)": "6d70f7ae",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokenMinted\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_DELEGATE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"needToCallCallback\",\"type\":\"bool\"}],\"name\":\"addNewStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20RootVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minLpTokens\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"vaultOptions\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"needToCallCallback\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Deposit(address,address,address[],uint256[],uint256)\":{\"params\":{\"actualTokenAmounts\":\"Token amounts deposited\",\"from\":\"The source address for the liquidity\",\"lpTokenMinted\":\"LP tokens received by the liquidity provider\",\"tokens\":\"ERC20 tokens deposited\"}}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isAdmin(address)\":{\"params\":{\"sender\":\"Adddress to check\"},\"returns\":{\"_0\":\"`true` if sender is an admin, `false` otherwise\"}},\"isOperator(address)\":{\"params\":{\"sender\":\"Adddress to check\"},\"returns\":{\"_0\":\"`true` if sender is an admin, `false` otherwise\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,address,address[],uint256[],uint256)\":{\"notice\":\"Emitted when liquidity is deposited\"}},\"kind\":\"user\",\"methods\":{\"isAdmin(address)\":{\"notice\":\"Checks if the address is ADMIN or ADMIN_DELEGATE.\"},\"isOperator(address)\":{\"notice\":\"Checks if the address is OPERATOR.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/DepositWrapper.sol\":\"DepositWrapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"src/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281\",\"dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b\"]},\"src/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87\",\"dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk\"]},\"src/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50\",\"dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1\"]},\"src/interfaces/oracles/IOracle.sol\":{\"keccak256\":\"0x2d89a1f771e68129d47ae26eccf76f969cd2877e9b7190687056f912c3524b53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f378b9f29c18878e73e251ca97abeca819f0789834281ee1399db878f6baedf5\",\"dweb:/ipfs/QmSrFYZWmGdVkgACwwZEfbkPt3kQCSkr6czBi9HVtzNSJg\"]},\"src/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add\",\"dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu\"]},\"src/interfaces/utils/IERC20RootVaultHelper.sol\":{\"keccak256\":\"0x58a7fcc0db33c498d00b2ece9876a5fc272f362fb5f96d1b666fc10b5683a38f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ebd1b47e1dee02800bbf211f45a13dc6accfb2e91c645711486bb9e3f5559cd\",\"dweb:/ipfs/QmYFVKRWs73onqQxiUw8AJHfHbhib6nshmAzvCr3T5pqpW\"]},\"src/interfaces/utils/ILpCallback.sol\":{\"keccak256\":\"0xaf74795451f4cf6ebaaee736f80f109d66af7e713cbd76e3761977938ba6208e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c2ef8f6cd87f34e4a05a16c6e9f5c0126bae37549de1ae09eec0ac5c2c3e012\",\"dweb:/ipfs/QmRB7zYZ873jENaixkEp3GmDZw1tFRRkA6bWpfkkWkozUh\"]},\"src/interfaces/vaults/IAggregateVault.sol\":{\"keccak256\":\"0x22c60a8c3758f52aeeabf448cff491582357bed969cf9328cd93623ed12df3f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34fc54a3c550f28f0d77bdecad9e2b1083a79f37b6d783277c06741b1ecae35a\",\"dweb:/ipfs/QmdAXG1NpbzNPH6o8NxsVSVmnoUdtQeP9cNxmQ44Dm6qCT\"]},\"src/interfaces/vaults/IERC20RootVault.sol\":{\"keccak256\":\"0x81fae667b46299223c56ed34d77aa64d7d2a2b19d80167c23f0ba0dcbdd97cf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69b4669c0267163c52c78904f8a090b60b171e76dacc2468c1b8e82e20df8b2a\",\"dweb:/ipfs/QmUwAJcY157nBGxdGEpBTYLmRNW5WbsF74qF7WT8hQVj3k\"]},\"src/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1\",\"dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw\"]},\"src/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375\",\"dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu\"]},\"src/interfaces/vaults/IVaultRoot.sol\":{\"keccak256\":\"0xfc566a9133afe6942e196bcfde5b5e1920094d6f1656885b25b72b91f48c10ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79470664780741869fe81ad1eed10b2afd7d9432ee70be1599f242f102a4deaa\",\"dweb:/ipfs/QmUUPv5juGLrdngD5ZQNcsHxvQzWPG1c8aLjA2nsUC6uJz\"]},\"src/libraries/ExceptionsLibrary.sol\":{\"keccak256\":\"0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f\",\"dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX\"]},\"src/utils/DefaultAccessControl.sol\":{\"keccak256\":\"0x6c19d12f1a8b71b707e0079e27803bedf44135c9a5559f6e1d3449e2d809dbad\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d5580cfd64085975398af3fa140068e9b0c9590eb1210c7219bb0a4735453fa3\",\"dweb:/ipfs/QmemTrz6wVSpagGgz4hADCTaBV3RNQbD1ma7jCfxEXXyQQ\"]},\"src/utils/DepositWrapper.sol\":{\"keccak256\":\"0x36ea5052e615d11580b24ec371e8e6d7575414cca838e80972f26855c4a9070d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://dfd7d221a054935187c7d2895a5697d8e490615ad832d165302dd5513886cee8\",\"dweb:/ipfs/QmQ23Jm1Y1bDfiHEkmJ74vPaLyyMc5PMZ2MULt9uwCv6oG\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "lpTokenMinted",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ADMIN_DELEGATE_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPERATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "needToCallCallback",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addNewStrategy"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20RootVault",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "minLpTokens",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "vaultOptions",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "depositInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "needToCallCallback",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAdmin",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "isAdmin(address)": {
            "params": {
              "sender": "Adddress to check"
            },
            "returns": {
              "_0": "`true` if sender is an admin, `false` otherwise"
            }
          },
          "isOperator(address)": {
            "params": {
              "sender": "Adddress to check"
            },
            "returns": {
              "_0": "`true` if sender is an admin, `false` otherwise"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "isAdmin(address)": {
            "notice": "Checks if the address is ADMIN or ADMIN_DELEGATE."
          },
          "isOperator(address)": {
            "notice": "Checks if the address is OPERATOR."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/utils/DepositWrapper.sol": "DepositWrapper"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol": {
        "keccak256": "0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247",
        "urls": [
          "bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b",
          "dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
        "urls": [
          "bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
          "dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolGovernance.sol": {
        "keccak256": "0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e",
        "urls": [
          "bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281",
          "dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b"
        ],
        "license": "MIT"
      },
      "src/interfaces/IUnitPricesGovernance.sol": {
        "keccak256": "0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081",
        "urls": [
          "bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87",
          "dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk"
        ],
        "license": "MIT"
      },
      "src/interfaces/IVaultRegistry.sol": {
        "keccak256": "0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55",
        "urls": [
          "bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50",
          "dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1"
        ],
        "license": "MIT"
      },
      "src/interfaces/oracles/IOracle.sol": {
        "keccak256": "0x2d89a1f771e68129d47ae26eccf76f969cd2877e9b7190687056f912c3524b53",
        "urls": [
          "bzz-raw://f378b9f29c18878e73e251ca97abeca819f0789834281ee1399db878f6baedf5",
          "dweb:/ipfs/QmSrFYZWmGdVkgACwwZEfbkPt3kQCSkr6czBi9HVtzNSJg"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IDefaultAccessControl.sol": {
        "keccak256": "0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60",
        "urls": [
          "bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add",
          "dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IERC20RootVaultHelper.sol": {
        "keccak256": "0x58a7fcc0db33c498d00b2ece9876a5fc272f362fb5f96d1b666fc10b5683a38f",
        "urls": [
          "bzz-raw://8ebd1b47e1dee02800bbf211f45a13dc6accfb2e91c645711486bb9e3f5559cd",
          "dweb:/ipfs/QmYFVKRWs73onqQxiUw8AJHfHbhib6nshmAzvCr3T5pqpW"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/ILpCallback.sol": {
        "keccak256": "0xaf74795451f4cf6ebaaee736f80f109d66af7e713cbd76e3761977938ba6208e",
        "urls": [
          "bzz-raw://4c2ef8f6cd87f34e4a05a16c6e9f5c0126bae37549de1ae09eec0ac5c2c3e012",
          "dweb:/ipfs/QmRB7zYZ873jENaixkEp3GmDZw1tFRRkA6bWpfkkWkozUh"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IAggregateVault.sol": {
        "keccak256": "0x22c60a8c3758f52aeeabf448cff491582357bed969cf9328cd93623ed12df3f9",
        "urls": [
          "bzz-raw://34fc54a3c550f28f0d77bdecad9e2b1083a79f37b6d783277c06741b1ecae35a",
          "dweb:/ipfs/QmdAXG1NpbzNPH6o8NxsVSVmnoUdtQeP9cNxmQ44Dm6qCT"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IERC20RootVault.sol": {
        "keccak256": "0x81fae667b46299223c56ed34d77aa64d7d2a2b19d80167c23f0ba0dcbdd97cf1",
        "urls": [
          "bzz-raw://69b4669c0267163c52c78904f8a090b60b171e76dacc2468c1b8e82e20df8b2a",
          "dweb:/ipfs/QmUwAJcY157nBGxdGEpBTYLmRNW5WbsF74qF7WT8hQVj3k"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVault.sol": {
        "keccak256": "0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43",
        "urls": [
          "bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1",
          "dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultGovernance.sol": {
        "keccak256": "0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813",
        "urls": [
          "bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375",
          "dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultRoot.sol": {
        "keccak256": "0xfc566a9133afe6942e196bcfde5b5e1920094d6f1656885b25b72b91f48c10ef",
        "urls": [
          "bzz-raw://79470664780741869fe81ad1eed10b2afd7d9432ee70be1599f242f102a4deaa",
          "dweb:/ipfs/QmUUPv5juGLrdngD5ZQNcsHxvQzWPG1c8aLjA2nsUC6uJz"
        ],
        "license": "MIT"
      },
      "src/libraries/ExceptionsLibrary.sol": {
        "keccak256": "0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff",
        "urls": [
          "bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f",
          "dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX"
        ],
        "license": "MIT"
      },
      "src/utils/DefaultAccessControl.sol": {
        "keccak256": "0x6c19d12f1a8b71b707e0079e27803bedf44135c9a5559f6e1d3449e2d809dbad",
        "urls": [
          "bzz-raw://d5580cfd64085975398af3fa140068e9b0c9590eb1210c7219bb0a4735453fa3",
          "dweb:/ipfs/QmemTrz6wVSpagGgz4hADCTaBV3RNQbD1ma7jCfxEXXyQQ"
        ],
        "license": "BUSL-1.1"
      },
      "src/utils/DepositWrapper.sol": {
        "keccak256": "0x36ea5052e615d11580b24ec371e8e6d7575414cca838e80972f26855c4a9070d",
        "urls": [
          "bzz-raw://dfd7d221a054935187c7d2895a5697d8e490615ad832d165302dd5513886cee8",
          "dweb:/ipfs/QmQ23Jm1Y1bDfiHEkmJ74vPaLyyMc5PMZ2MULt9uwCv6oG"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/utils/DepositWrapper.sol",
    "id": 116501,
    "exportedSymbols": {
      "AccessControl": [
        43168
      ],
      "AccessControlEnumerable": [
        43293
      ],
      "Address": [
        47093
      ],
      "Context": [
        47115
      ],
      "DefaultAccessControl": [
        116053
      ],
      "DepositWrapper": [
        116500
      ],
      "ERC165": [
        48061
      ],
      "EnumerableSet": [
        49657
      ],
      "ExceptionsLibrary": [
        79454
      ],
      "IAccessControl": [
        43366
      ],
      "IAccessControlEnumerable": [
        43391
      ],
      "IAggregateVault": [
        76190
      ],
      "IDefaultAccessControl": [
        75786
      ],
      "IERC165": [
        48073
      ],
      "IERC20": [
        45207
      ],
      "IERC20Permit": [
        45268
      ],
      "IERC20RootVault": [
        76955
      ],
      "IERC20RootVaultHelper": [
        75804
      ],
      "IERC721": [
        46687
      ],
      "ILpCallback": [
        75930
      ],
      "IOracle": [
        75605
      ],
      "IProtocolGovernance": [
        52868
      ],
      "IUnitPricesGovernance": [
        52921
      ],
      "IVault": [
        78599
      ],
      "IVaultGovernance": [
        78668
      ],
      "IVaultRegistry": [
        53012
      ],
      "IVaultRoot": [
        78702
      ],
      "Math": [
        48939
      ],
      "SafeERC20": [
        45644
      ],
      "SignedMath": [
        49044
      ],
      "Strings": [
        47509
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:2833:416",
    "nodes": [
      {
        "id": 116228,
        "nodeType": "PragmaDirective",
        "src": "37:23:416",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 116229,
        "nodeType": "ImportDirective",
        "src": "62:65:416",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 116501,
        "sourceUnit": 45645,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 116230,
        "nodeType": "ImportDirective",
        "src": "128:44:416",
        "nodes": [],
        "absolutePath": "src/libraries/ExceptionsLibrary.sol",
        "file": "../libraries/ExceptionsLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 116501,
        "sourceUnit": 79455,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 116231,
        "nodeType": "ImportDirective",
        "src": "174:50:416",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/IERC20RootVault.sol",
        "file": "../interfaces/vaults/IERC20RootVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 116501,
        "sourceUnit": 76956,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 116232,
        "nodeType": "ImportDirective",
        "src": "225:45:416",
        "nodes": [],
        "absolutePath": "src/interfaces/utils/ILpCallback.sol",
        "file": "../interfaces/utils/ILpCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 116501,
        "sourceUnit": 75931,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 116233,
        "nodeType": "ImportDirective",
        "src": "272:36:416",
        "nodes": [],
        "absolutePath": "src/utils/DefaultAccessControl.sol",
        "file": "./DefaultAccessControl.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 116501,
        "sourceUnit": 116054,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 116500,
        "nodeType": "ContractDefinition",
        "src": "310:2559:416",
        "nodes": [
          {
            "id": 116239,
            "nodeType": "UsingForDirective",
            "src": "364:27:416",
            "nodes": [],
            "libraryName": {
              "id": 116236,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45644,
              "src": "370:9:416"
            },
            "typeName": {
              "id": 116238,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 116237,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45207,
                "src": "384:6:416"
              },
              "referencedDeclaration": 45207,
              "src": "384:6:416",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$45207",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 116243,
            "nodeType": "UsingForDirective",
            "src": "396:36:416",
            "nodes": [],
            "libraryName": {
              "id": 116240,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45644,
              "src": "402:9:416"
            },
            "typeName": {
              "id": 116242,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 116241,
                "name": "IERC20RootVault",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 76955,
                "src": "416:15:416"
              },
              "referencedDeclaration": 76955,
              "src": "416:15:416",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                "typeString": "contract IERC20RootVault"
              }
            }
          },
          {
            "id": 116248,
            "nodeType": "StructDefinition",
            "src": "438:86:416",
            "nodes": [],
            "canonicalName": "DepositWrapper.StrategyInfo",
            "members": [
              {
                "constant": false,
                "id": 116245,
                "mutability": "mutable",
                "name": "strategy",
                "nameLocation": "476:8:416",
                "nodeType": "VariableDeclaration",
                "scope": 116248,
                "src": "468:16:416",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 116244,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "468:7:416",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 116247,
                "mutability": "mutable",
                "name": "needToCallCallback",
                "nameLocation": "499:18:416",
                "nodeType": "VariableDeclaration",
                "scope": 116248,
                "src": "494:23:416",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 116246,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "494:4:416",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StrategyInfo",
            "nameLocation": "445:12:416",
            "scope": 116500,
            "visibility": "public"
          },
          {
            "id": 116253,
            "nodeType": "VariableDeclaration",
            "src": "530:51:416",
            "nodes": [],
            "constant": false,
            "functionSelector": "63445989",
            "mutability": "mutable",
            "name": "depositInfo",
            "nameLocation": "570:11:416",
            "scope": 116500,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyInfo_$116248_storage_$",
              "typeString": "mapping(address => struct DepositWrapper.StrategyInfo)"
            },
            "typeName": {
              "id": 116252,
              "keyType": {
                "id": 116249,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "538:7:416",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "530:32:416",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyInfo_$116248_storage_$",
                "typeString": "mapping(address => struct DepositWrapper.StrategyInfo)"
              },
              "valueType": {
                "id": 116251,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 116250,
                  "name": "StrategyInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116248,
                  "src": "549:12:416"
                },
                "referencedDeclaration": 116248,
                "src": "549:12:416",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StrategyInfo_$116248_storage_ptr",
                  "typeString": "struct DepositWrapper.StrategyInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 116262,
            "nodeType": "FunctionDefinition",
            "src": "588:57:416",
            "nodes": [],
            "body": {
              "id": 116261,
              "nodeType": "Block",
              "src": "643:2:416",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 116258,
                    "name": "admin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 116255,
                    "src": "636:5:416",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 116259,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 116257,
                  "name": "DefaultAccessControl",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116053,
                  "src": "615:20:416"
                },
                "nodeType": "ModifierInvocation",
                "src": "615:27:416"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 116256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116255,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "608:5:416",
                  "nodeType": "VariableDeclaration",
                  "scope": 116262,
                  "src": "600:13:416",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "600:7:416",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "599:15:416"
            },
            "returnParameters": {
              "id": 116260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "643:0:416"
            },
            "scope": 116500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 116462,
            "nodeType": "FunctionDefinition",
            "src": "720:1418:416",
            "nodes": [],
            "body": {
              "id": 116461,
              "nodeType": "Block",
              "src": "936:1202:416",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    116280
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116280,
                      "mutability": "mutable",
                      "name": "strategyInfo",
                      "nameLocation": "966:12:416",
                      "nodeType": "VariableDeclaration",
                      "scope": 116461,
                      "src": "946:32:416",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StrategyInfo_$116248_memory_ptr",
                        "typeString": "struct DepositWrapper.StrategyInfo"
                      },
                      "typeName": {
                        "id": 116279,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 116278,
                          "name": "StrategyInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 116248,
                          "src": "946:12:416"
                        },
                        "referencedDeclaration": 116248,
                        "src": "946:12:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StrategyInfo_$116248_storage_ptr",
                          "typeString": "struct DepositWrapper.StrategyInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 116287,
                  "initialValue": {
                    "baseExpression": {
                      "id": 116281,
                      "name": "depositInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116253,
                      "src": "981:11:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyInfo_$116248_storage_$",
                        "typeString": "mapping(address => struct DepositWrapper.StrategyInfo storage ref)"
                      }
                    },
                    "id": 116286,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 116284,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116265,
                          "src": "1001:5:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                            "typeString": "contract IERC20RootVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                            "typeString": "contract IERC20RootVault"
                          }
                        ],
                        "id": 116283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "993:7:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 116282,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "993:7:416",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 116285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "993:14:416",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "981:27:416",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyInfo_$116248_storage",
                      "typeString": "struct DepositWrapper.StrategyInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "946:62:416"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 116295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 116289,
                            "name": "strategyInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116280,
                            "src": "1026:12:416",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyInfo_$116248_memory_ptr",
                              "typeString": "struct DepositWrapper.StrategyInfo memory"
                            }
                          },
                          "id": 116290,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "strategy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 116245,
                          "src": "1026:21:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 116293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1059:1:416",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 116292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1051:7:416",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 116291,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1051:7:416",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 116294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1051:10:416",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1026:35:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 116296,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "1063:17:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 116297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ADDRESS_ZERO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79390,
                        "src": "1063:30:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 116288,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1018:7:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1018:76:416",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116299,
                  "nodeType": "ExpressionStatement",
                  "src": "1018:76:416"
                },
                {
                  "assignments": [
                    116304
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116304,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "1122:6:416",
                      "nodeType": "VariableDeclaration",
                      "scope": 116461,
                      "src": "1105:23:416",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 116302,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1105:7:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 116303,
                        "nodeType": "ArrayTypeName",
                        "src": "1105:9:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 116308,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 116305,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116265,
                        "src": "1131:5:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                          "typeString": "contract IERC20RootVault"
                        }
                      },
                      "id": 116306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaultTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78573,
                      "src": "1131:17:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 116307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1131:19:416",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1105:45:416"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 116314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 116310,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116304,
                            "src": "1168:6:416",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 116311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1168:13:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 116312,
                            "name": "tokenAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116268,
                            "src": "1185:12:416",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 116313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1185:19:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1168:36:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 116315,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "1206:17:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 116316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "INVALID_LENGTH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79447,
                        "src": "1206:32:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 116309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1160:7:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1160:79:416",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116318,
                  "nodeType": "ExpressionStatement",
                  "src": "1160:79:416"
                },
                {
                  "body": {
                    "id": 116362,
                    "nodeType": "Block",
                    "src": "1293:189:416",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 116336,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1342:3:416",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 116337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1342:10:416",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 116340,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1362:4:416",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DepositWrapper_$116500",
                                    "typeString": "contract DepositWrapper"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DepositWrapper_$116500",
                                    "typeString": "contract DepositWrapper"
                                  }
                                ],
                                "id": 116339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1354:7:416",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 116338,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1354:7:416",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 116341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1354:13:416",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 116342,
                                "name": "tokenAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 116268,
                                "src": "1369:12:416",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 116344,
                              "indexExpression": {
                                "id": 116343,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 116320,
                                "src": "1382:1:416",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1369:15:416",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 116331,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116304,
                                    "src": "1314:6:416",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 116333,
                                  "indexExpression": {
                                    "id": 116332,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116320,
                                    "src": "1321:1:416",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1314:9:416",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 116330,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45207,
                                "src": "1307:6:416",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$45207_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 116334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1307:17:416",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 116335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45328,
                            "src": "1307:34:416",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45207_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45207_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 116345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1307:78:416",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 116346,
                        "nodeType": "ExpressionStatement",
                        "src": "1307:78:416"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 116355,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 116265,
                                  "src": "1447:5:416",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                                    "typeString": "contract IERC20RootVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                                    "typeString": "contract IERC20RootVault"
                                  }
                                ],
                                "id": 116354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1439:7:416",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 116353,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1439:7:416",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 116356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1439:14:416",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 116357,
                                "name": "tokenAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 116268,
                                "src": "1455:12:416",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 116359,
                              "indexExpression": {
                                "id": 116358,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 116320,
                                "src": "1468:1:416",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1455:15:416",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 116348,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116304,
                                    "src": "1406:6:416",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 116350,
                                  "indexExpression": {
                                    "id": 116349,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116320,
                                    "src": "1413:1:416",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1406:9:416",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 116347,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45207,
                                "src": "1399:6:416",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$45207_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 116351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1399:17:416",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 116352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeIncreaseAllowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45409,
                            "src": "1399:39:416",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45207_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45207_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 116360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1399:72:416",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 116361,
                        "nodeType": "ExpressionStatement",
                        "src": "1399:72:416"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 116326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 116323,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116320,
                      "src": "1269:1:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 116324,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116304,
                        "src": "1273:6:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 116325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1273:13:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1269:17:416",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 116363,
                  "initializationExpression": {
                    "assignments": [
                      116320
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 116320,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1262:1:416",
                        "nodeType": "VariableDeclaration",
                        "scope": 116363,
                        "src": "1254:9:416",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 116319,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1254:7:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 116322,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 116321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1266:1:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1254:13:416"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 116328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1288:3:416",
                      "subExpression": {
                        "id": 116327,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116320,
                        "src": "1290:1:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 116329,
                    "nodeType": "ExpressionStatement",
                    "src": "1288:3:416"
                  },
                  "nodeType": "ForStatement",
                  "src": "1249:233:416"
                },
                {
                  "expression": {
                    "id": 116371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 116364,
                      "name": "actualTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116276,
                      "src": "1492:18:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 116367,
                          "name": "tokenAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116268,
                          "src": "1527:12:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        {
                          "id": 116368,
                          "name": "minLpTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116270,
                          "src": "1541:11:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 116369,
                          "name": "vaultOptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116272,
                          "src": "1554:12:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "id": 116365,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116265,
                          "src": "1513:5:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                            "typeString": "contract IERC20RootVault"
                          }
                        },
                        "id": 116366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76937,
                        "src": "1513:13:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256[] memory,uint256,bytes memory) external returns (uint256[] memory)"
                        }
                      },
                      "id": 116370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1513:54:416",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "1492:75:416",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 116372,
                  "nodeType": "ExpressionStatement",
                  "src": "1492:75:416"
                },
                {
                  "condition": {
                    "expression": {
                      "id": 116373,
                      "name": "strategyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116280,
                      "src": "1581:12:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StrategyInfo_$116248_memory_ptr",
                        "typeString": "struct DepositWrapper.StrategyInfo memory"
                      }
                    },
                    "id": 116374,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "needToCallCallback",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 116247,
                    "src": "1581:31:416",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 116383,
                  "nodeType": "IfStatement",
                  "src": "1577:114:416",
                  "trueBody": {
                    "id": 116382,
                    "nodeType": "Block",
                    "src": "1614:77:416",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 116376,
                                    "name": "strategyInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116280,
                                    "src": "1640:12:416",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StrategyInfo_$116248_memory_ptr",
                                      "typeString": "struct DepositWrapper.StrategyInfo memory"
                                    }
                                  },
                                  "id": 116377,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "strategy",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 116245,
                                  "src": "1640:21:416",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 116375,
                                "name": "ILpCallback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75930,
                                "src": "1628:11:416",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILpCallback_$75930_$",
                                  "typeString": "type(contract ILpCallback)"
                                }
                              },
                              "id": 116378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1628:34:416",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ILpCallback_$75930",
                                "typeString": "contract ILpCallback"
                              }
                            },
                            "id": 116379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "depositCallback",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 75925,
                            "src": "1628:50:416",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 116380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1628:52:416",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 116381,
                        "nodeType": "ExpressionStatement",
                        "src": "1628:52:416"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 116429,
                    "nodeType": "Block",
                    "src": "1745:173:416",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 116403,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 116265,
                                  "src": "1797:5:416",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                                    "typeString": "contract IERC20RootVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                                    "typeString": "contract IERC20RootVault"
                                  }
                                ],
                                "id": 116402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1789:7:416",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 116401,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1789:7:416",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 116404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1789:14:416",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 116405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1805:1:416",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 116396,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116304,
                                    "src": "1766:6:416",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 116398,
                                  "indexExpression": {
                                    "id": 116397,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116385,
                                    "src": "1773:1:416",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1766:9:416",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 116395,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45207,
                                "src": "1759:6:416",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$45207_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 116399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1759:17:416",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 116400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45372,
                            "src": "1759:29:416",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45207_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45207_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 116406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1759:48:416",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 116407,
                        "nodeType": "ExpressionStatement",
                        "src": "1759:48:416"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 116414,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1852:3:416",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 116415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1852:10:416",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 116424,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "1900:4:416",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_DepositWrapper_$116500",
                                        "typeString": "contract DepositWrapper"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_DepositWrapper_$116500",
                                        "typeString": "contract DepositWrapper"
                                      }
                                    ],
                                    "id": 116423,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1892:7:416",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 116422,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1892:7:416",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 116425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1892:13:416",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 116417,
                                        "name": "tokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 116304,
                                        "src": "1871:6:416",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 116419,
                                      "indexExpression": {
                                        "id": 116418,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 116385,
                                        "src": "1878:1:416",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1871:9:416",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 116416,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45207,
                                    "src": "1864:6:416",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$45207_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 116420,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1864:17:416",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$45207",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 116421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45164,
                                "src": "1864:27:416",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 116426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1864:42:416",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 116409,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116304,
                                    "src": "1828:6:416",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 116411,
                                  "indexExpression": {
                                    "id": 116410,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116385,
                                    "src": "1835:1:416",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1828:9:416",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 116408,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45207,
                                "src": "1821:6:416",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$45207_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 116412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1821:17:416",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 116413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45301,
                            "src": "1821:30:416",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45207_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45207_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 116427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1821:86:416",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 116428,
                        "nodeType": "ExpressionStatement",
                        "src": "1821:86:416"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 116391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 116388,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116385,
                      "src": "1721:1:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 116389,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116304,
                        "src": "1725:6:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 116390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1725:13:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1721:17:416",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 116430,
                  "initializationExpression": {
                    "assignments": [
                      116385
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 116385,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1714:1:416",
                        "nodeType": "VariableDeclaration",
                        "scope": 116430,
                        "src": "1706:9:416",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 116384,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1706:7:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 116387,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 116386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1718:1:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1706:13:416"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 116393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1740:3:416",
                      "subExpression": {
                        "id": 116392,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116385,
                        "src": "1742:1:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 116394,
                    "nodeType": "ExpressionStatement",
                    "src": "1740:3:416"
                  },
                  "nodeType": "ForStatement",
                  "src": "1701:217:416"
                },
                {
                  "assignments": [
                    116432
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116432,
                      "mutability": "mutable",
                      "name": "lpTokenMinted",
                      "nameLocation": "1936:13:416",
                      "nodeType": "VariableDeclaration",
                      "scope": 116461,
                      "src": "1928:21:416",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 116431,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1928:7:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 116440,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 116437,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1976:4:416",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DepositWrapper_$116500",
                              "typeString": "contract DepositWrapper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DepositWrapper_$116500",
                              "typeString": "contract DepositWrapper"
                            }
                          ],
                          "id": 116436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1968:7:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 116435,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1968:7:416",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 116438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1968:13:416",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 116433,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116265,
                        "src": "1952:5:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                          "typeString": "contract IERC20RootVault"
                        }
                      },
                      "id": 116434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45164,
                      "src": "1952:15:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 116439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1952:30:416",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1928:54:416"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 116444,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2011:3:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 116445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2011:10:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 116446,
                        "name": "lpTokenMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116432,
                        "src": "2023:13:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 116441,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116265,
                        "src": "1992:5:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                          "typeString": "contract IERC20RootVault"
                        }
                      },
                      "id": 116443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45301,
                      "src": "1992:18:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45207_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45207_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 116447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1992:45:416",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116448,
                  "nodeType": "ExpressionStatement",
                  "src": "1992:45:416"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 116450,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2061:3:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 116451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2061:10:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 116454,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116265,
                            "src": "2081:5:416",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                              "typeString": "contract IERC20RootVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                              "typeString": "contract IERC20RootVault"
                            }
                          ],
                          "id": 116453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2073:7:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 116452,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2073:7:416",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 116455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2073:14:416",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 116456,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116304,
                        "src": "2089:6:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 116457,
                        "name": "actualTokenAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116276,
                        "src": "2097:18:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 116458,
                        "name": "lpTokenMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116432,
                        "src": "2117:13:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 116449,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116499,
                      "src": "2053:7:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address[] memory,uint256[] memory,uint256)"
                      }
                    },
                    "id": 116459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2053:78:416",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116460,
                  "nodeType": "EmitStatement",
                  "src": "2048:83:416"
                }
              ]
            },
            "functionSelector": "bdfd62d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "729:7:416",
            "parameters": {
              "id": 116273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116265,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "762:5:416",
                  "nodeType": "VariableDeclaration",
                  "scope": 116462,
                  "src": "746:21:416",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                    "typeString": "contract IERC20RootVault"
                  },
                  "typeName": {
                    "id": 116264,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 116263,
                      "name": "IERC20RootVault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76955,
                      "src": "746:15:416"
                    },
                    "referencedDeclaration": 76955,
                    "src": "746:15:416",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                      "typeString": "contract IERC20RootVault"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116268,
                  "mutability": "mutable",
                  "name": "tokenAmounts",
                  "nameLocation": "796:12:416",
                  "nodeType": "VariableDeclaration",
                  "scope": 116462,
                  "src": "777:31:416",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 116266,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "777:7:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 116267,
                    "nodeType": "ArrayTypeName",
                    "src": "777:9:416",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116270,
                  "mutability": "mutable",
                  "name": "minLpTokens",
                  "nameLocation": "826:11:416",
                  "nodeType": "VariableDeclaration",
                  "scope": 116462,
                  "src": "818:19:416",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116269,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:416",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116272,
                  "mutability": "mutable",
                  "name": "vaultOptions",
                  "nameLocation": "862:12:416",
                  "nodeType": "VariableDeclaration",
                  "scope": 116462,
                  "src": "847:27:416",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 116271,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:5:416",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "736:144:416"
            },
            "returnParameters": {
              "id": 116277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116276,
                  "mutability": "mutable",
                  "name": "actualTokenAmounts",
                  "nameLocation": "916:18:416",
                  "nodeType": "VariableDeclaration",
                  "scope": 116462,
                  "src": "899:35:416",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 116274,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "899:7:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 116275,
                    "nodeType": "ArrayTypeName",
                    "src": "899:9:416",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "898:37:416"
            },
            "scope": 116500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 116484,
            "nodeType": "FunctionDefinition",
            "src": "2144:258:416",
            "nodes": [],
            "body": {
              "id": 116483,
              "nodeType": "Block",
              "src": "2265:137:416",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 116471,
                      "name": "_requireAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116034,
                      "src": "2275:13:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 116472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2275:15:416",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116473,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:15:416"
                },
                {
                  "expression": {
                    "id": 116481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 116474,
                        "name": "depositInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116253,
                        "src": "2300:11:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StrategyInfo_$116248_storage_$",
                          "typeString": "mapping(address => struct DepositWrapper.StrategyInfo storage ref)"
                        }
                      },
                      "id": 116476,
                      "indexExpression": {
                        "id": 116475,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116464,
                        "src": "2312:5:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2300:18:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StrategyInfo_$116248_storage",
                        "typeString": "struct DepositWrapper.StrategyInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 116478,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116466,
                          "src": "2345:8:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 116479,
                          "name": "needToCallCallback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116468,
                          "src": "2375:18:416",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 116477,
                        "name": "StrategyInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116248,
                        "src": "2321:12:416",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_StrategyInfo_$116248_storage_ptr_$",
                          "typeString": "type(struct DepositWrapper.StrategyInfo storage pointer)"
                        }
                      },
                      "id": 116480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "strategy",
                        "needToCallCallback"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2321:74:416",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StrategyInfo_$116248_memory_ptr",
                        "typeString": "struct DepositWrapper.StrategyInfo memory"
                      }
                    },
                    "src": "2300:95:416",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyInfo_$116248_storage",
                      "typeString": "struct DepositWrapper.StrategyInfo storage ref"
                    }
                  },
                  "id": 116482,
                  "nodeType": "ExpressionStatement",
                  "src": "2300:95:416"
                }
              ]
            },
            "functionSelector": "e8456d4c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addNewStrategy",
            "nameLocation": "2153:14:416",
            "parameters": {
              "id": 116469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116464,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2185:5:416",
                  "nodeType": "VariableDeclaration",
                  "scope": 116484,
                  "src": "2177:13:416",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2177:7:416",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116466,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "2208:8:416",
                  "nodeType": "VariableDeclaration",
                  "scope": 116484,
                  "src": "2200:16:416",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2200:7:416",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116468,
                  "mutability": "mutable",
                  "name": "needToCallCallback",
                  "nameLocation": "2231:18:416",
                  "nodeType": "VariableDeclaration",
                  "scope": 116484,
                  "src": "2226:23:416",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 116467,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2226:4:416",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2167:88:416"
            },
            "returnParameters": {
              "id": 116470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2265:0:416"
            },
            "scope": 116500,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 116499,
            "nodeType": "EventDefinition",
            "src": "2694:173:416",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 116485,
              "nodeType": "StructuredDocumentation",
              "src": "2408:281:416",
              "text": "@notice Emitted when liquidity is deposited\n @param from The source address for the liquidity\n @param tokens ERC20 tokens deposited\n @param actualTokenAmounts Token amounts deposited\n @param lpTokenMinted LP tokens received by the liquidity provider"
            },
            "name": "Deposit",
            "nameLocation": "2700:7:416",
            "parameters": {
              "id": 116498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116487,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2733:4:416",
                  "nodeType": "VariableDeclaration",
                  "scope": 116499,
                  "src": "2717:20:416",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2717:7:416",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116489,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2763:2:416",
                  "nodeType": "VariableDeclaration",
                  "scope": 116499,
                  "src": "2747:18:416",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2747:7:416",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116492,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "2785:6:416",
                  "nodeType": "VariableDeclaration",
                  "scope": 116499,
                  "src": "2775:16:416",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 116490,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2775:7:416",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 116491,
                    "nodeType": "ArrayTypeName",
                    "src": "2775:9:416",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116495,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "actualTokenAmounts",
                  "nameLocation": "2811:18:416",
                  "nodeType": "VariableDeclaration",
                  "scope": 116499,
                  "src": "2801:28:416",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 116493,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2801:7:416",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 116494,
                    "nodeType": "ArrayTypeName",
                    "src": "2801:9:416",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116497,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lpTokenMinted",
                  "nameLocation": "2847:13:416",
                  "nodeType": "VariableDeclaration",
                  "scope": 116499,
                  "src": "2839:21:416",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2839:7:416",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2707:159:416"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 116234,
              "name": "DefaultAccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 116053,
              "src": "337:20:416"
            },
            "id": 116235,
            "nodeType": "InheritanceSpecifier",
            "src": "337:20:416"
          }
        ],
        "canonicalName": "DepositWrapper",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          116500,
          116053,
          43293,
          43168,
          48061,
          48073,
          75786,
          43391,
          43366,
          47115
        ],
        "name": "DepositWrapper",
        "nameLocation": "319:14:416",
        "scope": 116501,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 416
}