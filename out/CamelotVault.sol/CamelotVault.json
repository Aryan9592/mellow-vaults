{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IAlgebraNonfungiblePositionManager",
          "name": "positionManager_",
          "type": "address"
        },
        {
          "internalType": "contract ICamelotHelper",
          "name": "helper_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "name": "CollectedEarnings",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "name": "CollectedRewards",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nft_",
          "type": "uint256"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "Pull",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "Push",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "ReclaimTokens",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "D9",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Q96",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectEarnings",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "collectedFees",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "erc20Vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "externalCall",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract IAlgebraFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "helper",
      "outputs": [
        {
          "internalType": "contract ICamelotHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft_",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "erc20Vault_",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magicValue",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "isVaultToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract IAlgebraPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "positionManager",
      "outputs": [
        {
          "internalType": "contract IAlgebraNonfungiblePositionManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "positionNft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        }
      ],
      "name": "pull",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pullExistentials",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        }
      ],
      "name": "push",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "reclaimTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        }
      ],
      "name": "transferAndPush",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tvl",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "minTokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "maxTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultGovernance",
      "outputs": [
        {
          "internalType": "contract IVaultGovernance",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "381:8013:454:-:0;;;1090:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:32;1821:7;:22;-1:-1:-1;;1696:4:476;:24;;;-1:-1:-1;;;;;1189:34:454;;;;;;1259:25;;;-1:-1:-1;;;1259:25:454;;;;1189:34;;1259:23;;:25;;;;;;;;;;;;1189:34;1259:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1233:52:454;;;;;1295:16;;;-1:-1:-1;381:8013:454;;14:167:488;-1:-1:-1;;;;;125:31:488;;115:42;;105:70;;171:1;168;161:12;105:70;14:167;:::o;186:525::-;333:6;341;394:2;382:9;373:7;369:23;365:32;362:52;;;410:1;407;400:12;362:52;442:9;436:16;461:67;522:5;461:67;:::i;:::-;597:2;582:18;;576:25;547:5;;-1:-1:-1;610:69:488;576:25;610:69;:::i;:::-;698:7;688:17;;;186:525;;;;;:::o;716:287::-;786:6;839:2;827:9;818:7;814:23;810:32;807:52;;;855:1;852;845:12;807:52;887:9;881:16;906:67;967:5;906:67;:::i;:::-;992:5;716:287;-1:-1:-1;;;716:287:488:o;:::-;381:8013:454;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "381:8013:454:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3901:222;;;;;;;;;;-1:-1:-1;3901:222:454;;;;;:::i;:::-;;:::i;:::-;;;565:14:488;;558:22;540:41;;528:2;513:18;3901:222:454;;;;;;;;5321:1203:465;;;;;;;;;;-1:-1:-1;5321:1203:465;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;658:25:454:-;;;;;;;;;;-1:-1:-1;658:25:454;;;;-1:-1:-1;;;;;658:25:454;;;;;;-1:-1:-1;;;;;3293:32:488;;;3275:51;;3263:2;3248:18;658:25:454;3129:203:488;1923:931:454;;;;;;;;;;-1:-1:-1;1923:931:454;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;4704:33:488;;;4686:52;;4674:2;4659:18;1923:931:454;4542:202:488;1825:85:476;;;;;;;;;;-1:-1:-1;1894:4:476;;:9;;1825:85;;6559:1122:465;;;;;;;;;;-1:-1:-1;6559:1122:465;;;;;:::i;:::-;;:::i;990:24:454:-;;;;;;;;;;-1:-1:-1;990:24:454;;;;-1:-1:-1;;;;;990:24:454;;;3829:1448:465;;;;;;;;;;-1:-1:-1;3829:1448:465;;;;;:::i;:::-;;:::i;3017:768::-;;;;;;;;;;-1:-1:-1;3017:768:465;;;;;:::i;:::-;;:::i;7725:995::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1943:117:476:-;;;;;;;;;;-1:-1:-1;1943:117:476;;;;;:::i;:::-;-1:-1:-1;;;;;2024:24:476;2001:4;2024:24;;;:17;:24;;;;;;:29;;;1943:117;476:35:454;;;;;;;;;;;;-1:-1:-1;;;476:35:454;;;;;8988:25:488;;;8976:2;8961:18;476:35:454;8842:177:488;1358:523:454;;;;;;;;;;-1:-1:-1;1358:523:454;;;;;:::i;:::-;;:::i;:::-;;2367:75:476;;;;;;;;;;-1:-1:-1;2431:4:476;;2367:75;;517:34:454;;;;;;;;;;;;546:5;517:34;;2022:951:465;;;;;;;;;;-1:-1:-1;2022:951:465;;;;;:::i;:::-;;:::i;911:38:454:-;;;;;;;;;;;;;;;2234:100:476;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;724:67:454:-;;;;;;;;;;;;;;;2894:650;;;;;;;;;;;;;:::i;831:40::-;;;;;;;;;;;;;;;2620:110:476;;;;;;;;;;;;;:::i;3644:214:454:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;592:26::-;;;;;;;;;;;;;;;;2093:108:476;;;;;;;;;;-1:-1:-1;2178:16:476;;-1:-1:-1;;;;;2178:16:476;2093:108;;3901:222:454;4005:4;4028:36;4052:11;4028:23;:36::i;:::-;:88;;;-1:-1:-1;;;;;;;4069:46:454;;-1:-1:-1;;;4069:46:454;4028:88;4021:95;3901:222;-1:-1:-1;;3901:222:454:o;5321:1203:465:-;5422:35;2261:21:32;:19;:21::i;:::-;5484:4:465::1;::::0;;5517:22:::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;;5517:22:465::1;::::0;::::1;::::0;5484:4;5506:9;5498:42:::1;;;;-1:-1:-1::0;;;5498:42:465::1;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;5598:16:465::1;::::0;:33:::1;::::0;;-1:-1:-1;;;5598:33:465;;;;5550:45:::1;::::0;-1:-1:-1;;;;;5598:16:465::1;::::0;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:16;:33;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5674:25:::0;;5735:15:::1;::::0;::::1;::::0;5776:22:::1;::::0;-1:-1:-1;;;5776:22:465;;::::1;::::0;::::1;8988:25:488::0;;;5674::465;;-1:-1:-1;5674:25:465;;5641:30:::1;::::0;-1:-1:-1;;;;;5776:16:465;::::1;::::0;::::1;::::0;8961:18:488;;5776:22:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5760:38;;5808:10;5821:28;5827:8;5837:4;5843:5;5821;:28::i;:::-;:42;::::0;-1:-1:-1;;;5821:42:465;;5861:1:::1;5821:42;::::0;::::1;8988:25:488::0;-1:-1:-1;;;;;5821:39:465;;;::::1;::::0;::::1;::::0;8961:18:488;;5821:42:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5808:55;;5908:6;:13;-1:-1:-1::0;;;;;5894:28:465::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;5894:28:465::1;-1:-1:-1::0;5873:49:465;-1:-1:-1;;;;;;5936:19:465;::::1;5950:4;5936:19;5932:75;;;5971:25;;;;;;;;5932:75;6021:9;6016:442;6040:6;:13;6036:1;:17;6016:442;;;6095:30;6115:6;6122:1;6115:9;;;;;;;;:::i;:::-;-1:-1:-1::0;7570:4:454;;;-1:-1:-1;7500:105:454;6095:30:465::1;:123;;;;6146:10;-1:-1:-1::0;;;;;6146:24:465::1;;6171:6;6178:1;6171:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;6146:72:::1;::::0;-1:-1:-1;;;;;;6146:72:465::1;::::0;;;;;;-1:-1:-1;;;;;14450:32:488;;;6146:72:465::1;::::0;::::1;14432:51:488::0;402:1:362::1;14499:18:488::0;;;14492:45;14405:18;;6146:72:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6145:73;6095:123;6074:200;;;6251:8;;6074:200;6287:12;6309:6;6316:1;6309:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;6357:30:::1;::::0;-1:-1:-1;;;6357:30:465;;6381:4:::1;6357:30;::::0;::::1;3275:51:488::0;6309:9:465;;-1:-1:-1;;;;;;6357:15:465;::::1;::::0;::::1;::::0;3248:18:488;;6357:30:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6333:18;6352:1;6333:21;;;;;;;;:::i;:::-;;;;;;:54;;;::::0;::::1;6402:45;6421:2;6425:18;6444:1;6425:21;;;;;;;;:::i;:::-;;;;;;;6402:5;-1:-1:-1::0;;;;;6402:18:465::1;;;:45;;;;;:::i;:::-;6060:398;6016:442;6055:3;::::0;::::1;:::i;:::-;;;6016:442;;;;6472:45;6486:2;6490:6;6498:18;6472:45;;;;;;;;:::i;:::-;;;;;;;;5459:1065;;;;;;2292:1:32;2303:20:::0;1716:1;2809:7;:22;2629:209;2303:20;5321:1203:465;;;:::o;1923:931:454:-;2134:27;;;;;;;;;;;;-1:-1:-1;;;2134:27:454;;;;2068:6;;2094:10;-1:-1:-1;;;;;2116:15:454;2094:38;;2086:76;;;;-1:-1:-1;;;2086:76:454;;;;;;;;:::i;:::-;;2180:21;2192:8;2180:11;:21::i;:::-;2203:27;;;;;;;;;;;;;-1:-1:-1;;;2203:27:454;;;2172:59;;;;;-1:-1:-1;;;2172:59:454;;;;;;;;:::i;:::-;-1:-1:-1;2295:34:454;;-1:-1:-1;;;2295:34:454;;;;;8988:25:488;;;2247:14:454;;;;-1:-1:-1;;;;;2295:15:454;:25;;;;8961:18:488;;2295:34:454;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2242:87;;;;;;;;;;;;;2357:12;2370:1;2357:15;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2347:25:454;;;2357:15;;2347:25;:54;;;;;2386:12;2399:1;2386:15;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2376:25:454;;;2386:15;;2376:25;2347:54;2403:31;;;;;;;;;;;;;-1:-1:-1;;;2403:31:454;;;2339:96;;;;;-1:-1:-1;;;2339:96:454;;;;;;;;:::i;:::-;-1:-1:-1;2469:11:454;;2494:17;;2490:280;;2569:39;;-1:-1:-1;;;2569:39:454;;;;;8988:25:488;;;2540:17:454;;2569:15;-1:-1:-1;;;;;2569:25:454;;;;8961:18:488;;2569:39:454;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2527:81;;;;;;;;;;;;2630:9;-1:-1:-1;;;;;2630:14:454;2643:1;2630:14;2646:31;;;;;;;;;;;;;-1:-1:-1;;;2646:31:454;;;2622:56;;;;;-1:-1:-1;;;2622:56:454;;;;;;;;:::i;:::-;-1:-1:-1;2692:67:454;;-1:-1:-1;;;2692:67:454;;2733:4;2692:67;;;17759:34:488;-1:-1:-1;;;;;17829:15:488;;;17809:18;;;17802:43;17861:18;;;17854:34;;;2692:15:454;:32;;;;17694:18:488;;2692:67:454;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2513:257;2490:280;-1:-1:-1;;;2779:11:454;:21;;;-1:-1:-1;;;;1923:931:454;;;;;;;:::o;6559:1122:465:-;6648:17;6677:45;6725:16;;;;;;;;;-1:-1:-1;;;;;6725:16:465;-1:-1:-1;;;;;6725:31:465;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6794:15;;;;6860:25;;6910:4;;6677:81;;-1:-1:-1;6794:15:465;;6928:9;6924:57;;-1:-1:-1;;;;;;;6953:17:465;-1:-1:-1;6953:17:465;;-1:-1:-1;;;6953:17:465;6924:57;7009:26;;-1:-1:-1;;;7009:26:465;;;;;8988:25:488;;;6990:16:465;;-1:-1:-1;;;;;7009:20:465;;;;;8961:18:488;;7009:26:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7050:81;;-1:-1:-1;;;7050:81:465;;-1:-1:-1;;;;;14450:32:488;;;7050:81:465;;;14432:51:488;860:1:362;14499:18:488;;;14492:45;6990::465;;-1:-1:-1;7050:32:465;;;;;;14405:18:488;;7050:81:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7045:130;;-1:-1:-1;;;;;;;7147:17:465;-1:-1:-1;7147:17:465;;-1:-1:-1;;;;7147:17:465;7045:130;7236:21;;7280:8;;;;7276:257;;7308:63;;-1:-1:-1;;;7308:63:465;;-1:-1:-1;;;7308:63:465;;;4686:52:488;-1:-1:-1;;;;;7308:35:465;;;;;4659:18:488;;7308:63:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7304:219;;;7398:54;;-1:-1:-1;;;7398:54:465;;-1:-1:-1;;;;;7398:35:465;;;;;:54;;7434:5;;7441:10;;7398:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7391:61;;;;;;;;;;7304:219;-1:-1:-1;;;;;;;7491:17:465;-1:-1:-1;7491:17:465;;-1:-1:-1;;;;;7491:17:465;7304:219;7596:8;-1:-1:-1;;;;;7546:58:465;:46;7574:5;7581:10;7546:27;:46::i;:::-;-1:-1:-1;;;;;7546:58:465;;7542:106;;;-1:-1:-1;;;;7620:17:465;-1:-1:-1;7620:17:465;;-1:-1:-1;;;;;7620:17:465;7542:106;-1:-1:-1;;;;;;;7657:17:465;6559:1122;-1:-1:-1;;;;;;;;6559:1122:465:o;3829:1448::-;4002:35;2261:21:32;:19;:21::i;:::-;4064:4:465::1;::::0;;4097:22:::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;;4097:22:465::1;::::0;::::1;::::0;4064:4;4086:9;4078:42:::1;;;;-1:-1:-1::0;;;4078:42:465::1;;;;;;;;:::i;:::-;;4138:30;4157:10;4138:18;:30::i;:::-;4170:27;;;;;;;;;;;;;-1:-1:-1::0;;;4170:27:465::1;;::::0;4130:68:::1;;;;;-1:-1:-1::0;;;4130:68:465::1;;;;;;;;:::i;:::-;-1:-1:-1::0;4271:16:465::1;::::0;:33:::1;::::0;;-1:-1:-1;;;4271:33:465;;;;4245:23:::1;::::0;-1:-1:-1;;;;;4271:16:465::1;::::0;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:16;:33;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;::::0;4339:22:::1;::::0;-1:-1:-1;;;4339:22:465;;::::1;::::0;::::1;8988:25:488::0;;;4271:42:465;;-1:-1:-1;4323:13:465::1;::::0;-1:-1:-1;;;;;4339:16:465;::::1;::::0;::::1;::::0;8961:18:488;;4339:22:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4323:38;;4371:15;4389:28;4395:8;4405:4;4411:5;4389;:28::i;:::-;4371:46:::0;-1:-1:-1;;;;;;4431:19:465;::::1;4440:10;4431:19;4427:522;;4486:18;::::0;-1:-1:-1;;;4486:18:465;;4466:17:::1;4486:18;::::0;::::1;8988:25:488::0;;;4466:17:465;-1:-1:-1;;;;;4486:15:465;::::1;::::0;::::1;::::0;8961:18:488;;4486::465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4466:38:::0;-1:-1:-1;;;;;;4522:26:465;::::1;4543:4;4522:26;4518:421;;;4660:24;::::0;-1:-1:-1;;;4660:24:465;;-1:-1:-1;;;;;3293:32:488;;;4660:24:465::1;::::0;::::1;3275:51:488::0;4643:16:465;;::::1;::::0;::::1;::::0;4660:20;::::1;::::0;::::1;::::0;3248:18:488;;4660:24:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4643:42;;;;;;;;;;;;;8988:25:488::0;;8976:2;8961:18;;8842:177;4643:42:465::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;;;-1:-1:-1::0;;;;;;4689:19:465;::::1;4703:4;4689:19;;4643:65;4730:32;;;;;;;;;;;;;-1:-1:-1::0;;;4730:32:465::1;;::::0;4614:166:::1;;;;;-1:-1:-1::0;;;4614:166:465::1;;;;;;;;:::i;:::-;;4518:421;;;4887:2;-1:-1:-1::0;;;;;4874:15:465::1;:9;-1:-1:-1::0;;;;;4874:15:465::1;;4891:32;;;;;;;;;;;;;-1:-1:-1::0;;;4891:32:465::1;;::::0;4866:58:::1;;;;;-1:-1:-1::0;;;4866:58:465::1;;;;;;;;:::i;:::-;;4518:421;4452:497;4427:522;4958:30;4991:47;5017:6;5025:12;4991:25;:47::i;:::-;4958:80;;5048:36;5087:33;5093:2;5097:13;5112:7;5087:5;:33::i;:::-;5048:72;;5151:76;5185:6;5193:12;5151:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;5151:76:465::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;5207:19;5151:33;:76::i;:::-;5130:97;;5242:28;5247:2;5251:18;5242:28;;;;;;;:::i;:::-;;;;;;;;4039:1238;;;;;;2303:20:32::0;1716:1;2809:7;:22;2629:209;3017:768:465;3251:13;;3190:35;;3237:11;3274:177;3298:3;3294:1;:7;3274:177;;;3324:12;3337:1;3324:15;;;;;;;;:::i;:::-;;;;;;;3343:1;3324:20;3320:131;;3364:72;3399:4;3413;3420:12;3433:1;3420:15;;;;;;;;:::i;:::-;;;;;;;3371:6;3378:1;3371:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3364:34:465;;;:72;;;;;;:::i;:::-;3303:3;;;:::i;:::-;;;3274:177;;;;3482:35;3487:6;3495:12;3509:7;3482:4;:35::i;:::-;3461:56;;3532:9;3527:252;3551:6;:13;3547:1;:17;3527:252;;;3585:16;3628:12;3641:1;3628:15;;;;;;;;:::i;:::-;;;;;;;3604:18;3623:1;3604:21;;;;;;;;:::i;:::-;;;;;;;:39;:85;;3688:1;3604:85;;;3664:18;3683:1;3664:21;;;;;;;;:::i;:::-;;;;;;;3646:12;3659:1;3646:15;;;;;;;;:::i;:::-;;;;;;;:39;;;;:::i;:::-;3585:104;-1:-1:-1;3707:13:465;;3703:65;;3722:46;3753:4;3759:8;3729:6;3736:1;3729:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3722:30:465;;;:46;;;;;:::i;:::-;-1:-1:-1;3566:3:465;;;:::i;:::-;;;3527:252;;;;3227:558;3017:768;;;;;;:::o;7725:995::-;7866:19;2261:21:32;:19;:21::i;:::-;7905:4:465::1;::::0;;7916:22:::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;;7916:22:465::1;::::0;::::1;::::0;7897:42:::1;;;;-1:-1:-1::0;;;7897:42:465::1;;;;;;;;:::i;:::-;;7957:30;7976:10;7957:18;:30::i;:::-;7989:27;;;;;;;;;;;;;-1:-1:-1::0;;;7989:27:465::1;;::::0;7949:68:::1;;;;;-1:-1:-1::0;;;7949:68:465::1;;;;;;;;:::i;:::-;-1:-1:-1::0;8068:16:465::1;::::0;:33:::1;::::0;;-1:-1:-1;;;8068:33:465;;;;8027:38:::1;::::0;-1:-1:-1;;;;;8068:16:465::1;::::0;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:16;:33;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52:::0;8164:33:::1;::::0;-1:-1:-1;;;8164:33:465;;-1:-1:-1;;;;;3293:32:488;;;8164:33:465::1;::::0;::::1;3275:51:488::0;8068:52:465;;-1:-1:-1;8068:52:465::1;::::0;8164:29;::::1;::::0;::::1;::::0;3248:18:488;;8164:33:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8250:27;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;8250:27:465::1;::::0;::::1;::::0;8130:68;;-1:-1:-1;;;;;;8216:32:465;::::1;8208:70;;;;-1:-1:-1::0;;;8208:70:465::1;;;;;;;;:::i;:::-;-1:-1:-1::0;8288:61:465::1;::::0;-1:-1:-1;;;8288:61:465;;-1:-1:-1;;;;;8288:18:465;::::1;::::0;::::1;::::0;:61:::1;::::0;8307:10:::1;::::0;8319:2;;8323:9:::1;::::0;8334:8;;8344:4;;;;8288:61:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8360:8;8370:23:::0;8397:2:::1;-1:-1:-1::0;;;;;8397:7:465::1;8412:9;8440:8;8450:4;;8423:32;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;8423:32:465;;::::1;::::0;;;;;;;8397:59:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8359:97;;;;8471:3;8466:219;;8546:10;8540:17;8645:15;8632:10;8628:2;8624:19;8617:44;8466:219;1716:1:32::0;2809:7;:22;8703:10:465;-1:-1:-1;2303:20:32;;-1:-1:-1;;;2629:209:32;1358:523:454;1501:12;:19;1524:1;1501:24;1527:31;;;;;;;;;;;;;-1:-1:-1;;;1527:31:454;;;1493:66;;;;;-1:-1:-1;;;1493:66:454;;;;;;;;:::i;:::-;-1:-1:-1;1569:10:454;:24;;-1:-1:-1;;;;;;1569:24:454;-1:-1:-1;;;;;1569:24:454;;;;;1603:31;1615:12;1629:4;1603:11;:31::i;:::-;1649:9;1644:147;1668:1;1664;:5;1644:147;;;1690:90;1744:15;-1:-1:-1;;1697:12:454;1710:1;1697:15;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1690:45:454;;;:90;;;;;:::i;:::-;1671:3;;;;:::i;:::-;;;;1644:147;;;;1821:7;-1:-1:-1;;;;;1821:18:454;;1840:12;1853:1;1840:15;;;;;;;;:::i;:::-;;;;;;;1857:12;1870:1;1857:15;;;;;;;;:::i;:::-;;;;;;;1821:52;;;;;;;;;;;;;;;-1:-1:-1;;;;;20585:15:488;;;20567:34;;20637:15;;20632:2;20617:18;;20610:43;20517:2;20502:18;;20355:304;1821:52:454;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1801:4;:73;;-1:-1:-1;;;;;;1801:73:454;-1:-1:-1;;;;;1801:73:454;;;;;;;;;;-1:-1:-1;;;1358:523:454:o;2022:951:465:-;2173:35;2261:21:32;:19;:21::i;:::-;2235:4:465::1;::::0;;2268:22:::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;;2268:22:465::1;::::0;::::1;::::0;2235:4;2257:9;2249:42:::1;;;;-1:-1:-1::0;;;2249:42:465::1;;;;;;;;:::i;:::-;-1:-1:-1::0;2332:16:465::1;::::0;:33:::1;::::0;;-1:-1:-1;;;2332:33:465;;;;2301:28:::1;::::0;-1:-1:-1;;;;;2332:16:465::1;::::0;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:16;:33;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;::::0;2411:27:::1;::::0;-1:-1:-1;;;2411:27:465;;::::1;::::0;::::1;8988:25:488::0;;;2332:42:465;;-1:-1:-1;2384:17:465::1;::::0;-1:-1:-1;;;;;2411:21:465;::::1;::::0;::::1;::::0;8961:18:488;;2411:27:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2505:46;::::0;-1:-1:-1;;;2505:46:465;;-1:-1:-1;;;;;3293:32:488;;;2505:46:465::1;::::0;::::1;3275:51:488::0;2384:55:465;;-1:-1:-1;2486:16:465::1;::::0;2505:25;::::1;::::0;::::1;::::0;3248:18:488;;2505:46:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2584:27;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;2584:27:465::1;::::0;::::1;::::0;2486:65;;-1:-1:-1;2569:13:465;2561:51:::1;;;;-1:-1:-1::0;;;2561:51:465::1;;;;;;;;:::i;:::-;;2661:30;2694:47;2720:6;2728:12;2694:25;:47::i;:::-;2661:80;;2751:36;2790:29;2796:13;2811:7;2790:5;:29::i;:::-;2751:68;;2850:76;2884:6;2892:12;2850:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;2850:76:465::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;2906:19;2850:33;:76::i;:::-;2829:97;;2941:25;2946:19;2941:25;;;;;;:::i;:::-;;;;;;;;2210:763;;;;;;2303:20:32::0;1716:1;2809:7;:22;2629:209;2303:20;2022:951:465;;;;;:::o;2234:100:476:-;2280:16;2315:12;2308:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2308:19:476;;;;;;;;;;;;;;;;;;;;;;;2234:100;:::o;2894:650:454:-;3004:11;;2939:30;;3029:17;3025:46;;3055:16;;;3069:1;3055:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3055:16:454;3048:23;;;2894:650;:::o;3025:46::-;3097:16;;;3111:1;3097:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3200:236:454;;;;;;;;;;;3317:10;;-1:-1:-1;;;;;3317:10:454;;;3200:236;;;;-1:-1:-1;;;;;3200:236:454;;;;;;;;;;3163:283;;-1:-1:-1;;;3163:283:454;;3081:32;;-1:-1:-1;3163:15:454;:23;;;;;;:283;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3125:13;3139:1;3125:16;;;;;;;;:::i;:::-;;;;;;3143:13;3157:1;3143:16;;;;;;;;:::i;:::-;;;;;;3124:322;;;;;;;;;;3490:10;-1:-1:-1;;;;;3461:76:454;3479:9;-1:-1:-1;;;;;3461:76:454;;3502:13;3516:1;3502:16;;;;;;;;:::i;:::-;;;;;;;3520:13;3534:1;3520:16;;;;;;;;:::i;:::-;;;;;;;3461:76;;;;;;21669:25:488;;;21725:2;21710:18;;21703:34;21657:2;21642:18;;21495:248;3461:76:454;;;;;;;;2971:573;2894:650;:::o;2620:110:476:-;2671:16;2706:17;2699:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2620:110;:::o;3644:214:454:-;3680:32;3714;3776:6;-1:-1:-1;;;;;3776:19:454;;3796:11;;3776:32;;;;;;;;;;;;;8988:25:488;;8976:2;8961:18;;8842:177;3776:32:454;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3776:32:454;;;;;;;;;;;;:::i;:::-;3758:50;;;-1:-1:-1;3644:214:454;-1:-1:-1;3644:214:454:o;1603:306:465:-;1704:4;1739:36;1763:11;1739:23;:36::i;:::-;:104;;;-1:-1:-1;;;;;;;1792:50:465;;-1:-1:-1;;;1792:50:465;1739:104;:163;;;-1:-1:-1;;;;;;;1860:41:465;;-1:-1:-1;;;1860:41:465;1720:182;1603:306;-1:-1:-1;;1603:306:465:o;2336:287:32:-;1759:1;2468:7;;:19;;2460:63;;;;-1:-1:-1;;;2460:63:32;;22836:2:488;2460:63:32;;;22818:21:488;22875:2;22855:18;;;22848:30;22914:33;22894:18;;;22887:61;22965:18;;2460:63:32;22634:355:488;2460:63:32;1759:1;2598:7;:18;2336:287::o;9242:301:465:-;9386:31;;-1:-1:-1;;;9386:31:465;;-1:-1:-1;;;;;3293:32:488;;;9386:31:465;;;3275:51:488;9341:10:465;;;;9386:20;;;;;3248:18:488;;9386:31:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9363:54;-1:-1:-1;9436:12:465;;;;;9435:37;;-1:-1:-1;9454:17:465;;;9435:37;9474:22;;;;;;;;;;;;;-1:-1:-1;;;9474:22:465;;;9427:70;;;;;-1:-1:-1;;;9427:70:465;;;;;;;;:::i;:::-;-1:-1:-1;9526:9:465;;9242:301;-1:-1:-1;;;;9242:301:465:o;941:175:37:-;1050:58;;-1:-1:-1;;;;;23186:32:488;;1050:58:37;;;23168:51:488;23235:18;;;23228:34;;;1023:86:37;;1043:5;;-1:-1:-1;;;1073:23:37;23141:18:488;;1050:58:37;;;;-1:-1:-1;;1050:58:37;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:37;-1:-1:-1;;;;;;1050:58:37;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;7338:156:454:-;7396:4;7483;-1:-1:-1;;;;;7419:68:454;:16;;;;;;;;;-1:-1:-1;;;;;7419:16:454;-1:-1:-1;;;;;7419:31:454;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;7474:4;;;7419:60;;-1:-1:-1;;;7419:60:454;;;;;8988:25:488;-1:-1:-1;;;;;7419:54:454;;;;;;8961:18:488;;7419:60:454;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7419:68:454;;;7338:156;-1:-1:-1;;7338:156:454:o;4987:247:360:-;5089:7;5109:9;5120;5131:7;5142:26;5157:10;5142:14;:26::i;:::-;5186:41;;;;;;;;;;;;23500:25:488;;;23573:4;23561:17;;23541:18;;;23534:45;;;;23595:18;;;23588:34;;;23638:18;;;23631:34;;;5108:60:360;;-1:-1:-1;5108:60:360;;-1:-1:-1;5108:60:360;-1:-1:-1;5186:41:360;;23472:19:488;;5186:41:360;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5186:41:360;;-1:-1:-1;;5186:41:360;;;4987:247;-1:-1:-1;;;;;;;4987:247:360:o;9549:337:465:-;9616:4;9632:23;9658:16;;;;;;;;;-1:-1:-1;;;;;9658:16:465;-1:-1:-1;;;;;9658:31:465;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;9725:4;;9658:42;;-1:-1:-1;9743:9:465;9739:52;;-1:-1:-1;9775:5:465;;9549:337;-1:-1:-1;;;9549:337:465:o;9739:52::-;9807:26;;-1:-1:-1;;;9807:26:465;;;;;8988:25:488;;;-1:-1:-1;;;;;9807:36:465;;;;:20;;;;;;8961:18:488;;9807:26:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9807:36:465;;:72;;;-1:-1:-1;9847:22:465;;-1:-1:-1;;;9847:22:465;;;;;8988:25:488;;;-1:-1:-1;;;;;9847:32:465;;;;:16;;;;;;8961:18:488;;9847:22:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9847:32:465;;9800:79;9549:337;-1:-1:-1;;;;9549:337:465:o;8791:445::-;8927:30;8977:39;9009:6;8977:31;:39::i;:::-;9018:27;;;;;;;;;;;;;-1:-1:-1;;;9018:27:465;;;8969:77;;;;;-1:-1:-1;;;8969:77:465;;;;;;;;:::i;:::-;;9081:12;:19;9064:6;:13;:36;9102:31;;;;;;;;;;;;;-1:-1:-1;;;9102:31:465;;;9056:78;;;;;-1:-1:-1;;;9056:78:465;;;;;;;;:::i;:::-;;9160:69;9194:12;9160:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9160:69:465;;;;;;;;;;;;;;;;;;;;;9208:6;9216:12;9160:33;:69::i;5280:1595:454:-;5487:11;;5417:35;;5512:17;5508:71;;5552:16;;;5566:1;5552:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5552:16:454;5545:23;;;;;5508:71;5626:4;;:18;;;-1:-1:-1;;;5626:18:454;;;;5590:20;;-1:-1:-1;;;;;5626:4:454;;:16;;:18;;;;;;;;;;;;;;:4;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5589:55;;;;;;;;5654:23;5680:6;-1:-1:-1;;;;;5680:31:454;;5712:12;5726;5740;5680:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5654:99;-1:-1:-1;;;;;;5768:20:454;;;5764:509;;5805:18;5825;5845:16;5865:22;5879:7;5865:13;:22::i;:::-;5952:296;;;;;;;;6042:11;;5952:296;;-1:-1:-1;;;;;5952:296:454;;;;;;;;;;;;;;;;;;;;;;;;;;;5901:361;;-1:-1:-1;;;5901:361:454;;25653:13:488;;5901:361:454;;;25635:32:488;25709:24;;25705:65;;;25683:20;;;25676:95;25809:24;;25787:20;;;25780:54;25872:24;25850:20;;;25843:54;25935:24;;25913:20;;;25906:54;5804:83:454;;-1:-1:-1;5804:83:454;;-1:-1:-1;5804:83:454;-1:-1:-1;;;;;;5901:15:454;:33;;;;25607:19:488;;5901:361:454;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;5790:483;;;5764:509;6374:227;;;;;;;;6450:11;;6374:227;;-1:-1:-1;;;;;6374:227:454;;;;;;;-1:-1:-1;;;;;6374:227:454;;;;;;;;;;6337:274;;-1:-1:-1;;;6337:274:454;;-1:-1:-1;;;;6337:15:454;:23;;;;;;:274;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6642:16;;;6656:1;6642:16;;;;;;;;;6282:329;;-1:-1:-1;6282:329:454;;-1:-1:-1;6642:16:454;;;;;;;;;;;;-1:-1:-1;6642:16:454;6621:37;;6711:12;6724:1;6711:15;;;;;;;;:::i;:::-;;;;;;;6692:16;:34;:71;;6747:16;6692:71;;;6729:12;6742:1;6729:15;;;;;;;;:::i;:::-;;;;;;;6692:71;6668:18;6687:1;6668:21;;;;;;;;:::i;:::-;;;;;;:95;;;;;6816:12;6829:1;6816:15;;;;;;;;:::i;:::-;;;;;;;6797:16;:34;:71;;6852:16;6797:71;;;6834:12;6847:1;6834:15;;;;;;;;:::i;:::-;;;;;;;6797:71;6773:18;6792:1;6773:21;;;;;;;;:::i;:::-;;;;;;:95;;;;;5454:1421;;;;;5280:1595;;;;;:::o;1954:948:360:-;2135:16;2163:20;2200:6;:13;-1:-1:-1;;;;;2186:28:360;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2186:28:360;;2163:51;;2224:9;2247:10;2271:518;2283:6;:13;2279:1;:17;2278:52;;;;;2307:15;:22;2302:2;:27;2278:52;2271:518;;;2362:15;2378:2;2362:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2350:31:360;:6;2357:1;2350:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2350:31:360;;2346:433;;;2410:1;2401:3;2405:1;2401:6;;;;;;;;:::i;:::-;;;;;;;;;;:10;2429:3;;;;:::i;:::-;;;;2271:518;;2346:433;2469:15;2485:2;2469:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2457:31:360;:6;2464:1;2457:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2457:31:360;;2453:326;;;2512:21;2534:2;2512:25;;;;;;;;:::i;:::-;;;;;;;2541:1;2512:30;2508:141;;;2566:4;;;;:::i;:::-;;;;2271:518;;2508:141;2617:13;;-1:-1:-1;;;2617:13:360;;26173:2:488;2617:13:360;;;26155:21:488;26212:1;26192:18;;;26185:29;-1:-1:-1;;;26230:18:488;;;26223:33;26273:18;;2617:13:360;25971:326:488;2453::360;2696:21;2718:2;2696:25;;;;;;;;:::i;:::-;;;;;;;2687:3;2691:1;2687:6;;;;;;;;:::i;:::-;;;;;;;;;;:34;2739:3;;;;:::i;:::-;;;;2760:4;;;;;:::i;2271:518::-;2809:6;:13;2805:1;:17;2798:78;;;2847:1;2838:3;2842:1;2838:6;;;;;;;;:::i;:::-;;;;;;;;;;:10;2862:3;;;;:::i;:::-;;;;2798:78;;;-1:-1:-1;2892:3:360;;1954:948;-1:-1:-1;;;;;1954:948:360:o;1355:203:37:-;1482:68;;-1:-1:-1;;;;;17777:15:488;;;1482:68:37;;;17759:34:488;17829:15;;17809:18;;;17802:43;17861:18;;;17854:34;;;1455:96:37;;1475:5;;-1:-1:-1;;;1505:27:37;17694:18:488;;1482:68:37;17519:375:488;1455:96:37;1355:203;;;;:::o;3052:1350:476:-;3153:4;;;3164:22;;;;;;;;;;;;-1:-1:-1;;;3164:22:476;;;;3153:9;3145:42;;;;-1:-1:-1;;;3145:42:476;;;;;;;;:::i;:::-;;3205:45;3237:12;3205:31;:45::i;:::-;3252:27;;;;;;;;;;;;;-1:-1:-1;;;3252:27:476;;;3197:83;;;;;-1:-1:-1;;;3197:83:476;;;;;;;;:::i;:::-;-1:-1:-1;3309:28:476;;;;;;;;;;;;-1:-1:-1;;;3309:28:476;;;;3298:9;3290:48;;;;-1:-1:-1;;;3290:48:476;;;;;;;;:::i;:::-;;3403:30;3453:10;-1:-1:-1;;;;;3436:43:476;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;3531:19;;3436:64;;-1:-1:-1;3531:23:476;;;;:80;;;3581:10;-1:-1:-1;;;;;3581:28:476;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3558:12;:19;:53;;3531:80;3625:31;;;;;;;;;;;;;-1:-1:-1;;;3625:31:476;;;3510:156;;;;;-1:-1:-1;;;3510:156:476;;;;;;;;:::i;:::-;;3681:9;3676:240;3700:12;:19;3696:1;:23;3676:240;;;3765:10;-1:-1:-1;;;;;3765:24:476;;3790:12;3803:1;3790:15;;;;;;;;:::i;:::-;;;;;;;;;;;3765:81;;-1:-1:-1;;;;;;3765:81:476;;;;;;;-1:-1:-1;;;;;14450:32:488;;;3765:81:476;;;14432:51:488;493:1:362;14499:18:488;;;14492:45;14405:18;;3765:81:476;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3864:27;;;;;;;;;;;;;-1:-1:-1;;;3864:27:476;;;3740:165;;;;;-1:-1:-1;;;3740:165:476;;;;;;;;:::i;:::-;-1:-1:-1;3721:3:476;;;;:::i;:::-;;;;3676:240;;;-1:-1:-1;3925:16:476;:47;;-1:-1:-1;;;;;;3925:47:476;3961:10;3925:47;;;3982:27;;;;:12;;:27;;;;;:::i;:::-;-1:-1:-1;4019:4:476;:11;;;4054:12;:19;4040:11;4083:244;4107:3;4103:1;:7;4083:244;;;4175:5;:1;4179;4175:5;:::i;:::-;4131:17;:34;4149:12;4162:1;4149:15;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4131:34:476;-1:-1:-1;;;;;4131:34:476;;;;;;;;;;;;:50;;;;4196:20;4234:12;4247:1;4234:15;;;;;;;;:::i;:::-;;;;;;;4196:54;;4264:17;4313:1;4294:5;-1:-1:-1;;;;;4294:14:476;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:20;;;;:::i;:::-;4287:28;;:2;:28;:::i;:::-;4264:52;;;;;;;-1:-1:-1;4264:52:476;;;;;;;;;;;-1:-1:-1;4112:3:476;;;:::i;:::-;;;4083:244;;;-1:-1:-1;4341:54:476;;4364:10;;4353:9;;4341:54;;;;4376:12;;4390:4;;4341:54;:::i;:::-;;;;;;;;3135:1267;;3052:1350;;:::o;2582:280:37:-;2701:39;;-1:-1:-1;;;2701:39:37;;2725:4;2701:39;;;20567:34:488;-1:-1:-1;;;;;20637:15:488;;;20617:18;;;20610:43;2678:20:37;;2701:15;;;;;;20502:18:488;;2701:39:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2678:62;-1:-1:-1;2750:105:37;2770:5;-1:-1:-1;;;2824:7:37;2833:20;2848:5;2678:62;2833:20;:::i;:::-;2777:77;;-1:-1:-1;;;;;23186:32:488;;;2777:77:37;;;23168:51:488;23235:18;;;23228:34;23141:18;;2777:77:37;22994:274:488;4198:1076:454;4389:16;;;4403:1;4389:16;;;4317:35;4389:16;;;;;4317:35;4389:16;;;;;;;;;;-1:-1:-1;;4438:11:454;;4368:37;;-1:-1:-1;4463:17:454;4459:48;;4482:25;;;4459:48;4554:4;;:18;;;-1:-1:-1;;;4554:18:454;;;;4518:20;;-1:-1:-1;;;;;4554:4:454;;:16;;:18;;;;;;;;;;;;;;:4;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4517:55;;;;;;;;4582:17;4602:6;-1:-1:-1;;;;;4602:30:454;;4633:12;4647;4661;4602:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4582:92;-1:-1:-1;;;;;;4688:14:454;;4684:45;;4704:25;;;;;4684:45;4740:18;4760;4780:16;4800:22;4814:7;4800:13;:22::i;:::-;4739:83;;;;;;4883:15;-1:-1:-1;;;;;4883:33:454;;4930:327;;;;;;;;5016:12;4930:327;;;;5062:12;5075:1;5062:15;;;;;;;;:::i;:::-;;;;;;;4930:327;;;;5111:12;5124:1;5111:15;;;;;;;;:::i;:::-;;;;;;;4930:327;;;;5156:10;4930:327;;;;5196:10;4930:327;;;;5234:8;4930:327;;;4883:384;;;;;;;;;;;;;;28807:4:488;28849:3;28838:9;28834:19;28826:27;;28886:6;28880:13;28869:9;28862:32;28950:4;28942:6;28938:17;28932:24;28925:4;28914:9;28910:20;28903:54;29013:4;29005:6;29001:17;28995:24;28988:4;28977:9;28973:20;28966:54;29076:4;29068:6;29064:17;29058:24;29051:4;29040:9;29036:20;29029:54;29139:4;29131:6;29127:17;29121:24;29114:4;29103:9;29099:20;29092:54;29202:4;29194:6;29190:17;29184:24;29177:4;29166:9;29162:20;29155:54;28631:584;;;;;4883:384:454;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4832:435;;;4835:18;4854:1;4835:21;;;;;;;;:::i;:::-;;;;;;4858:18;4877:1;4858:21;;;;;;;;:::i;:::-;;;;;;;;;;4832:435;;;;;-1:-1:-1;;;;;;4198:1076:454;;;;:::o;2764:213:476:-;2866:4;-1:-1:-1;;;;;;;;;937:40:49;;;2889:81:476;;;-1:-1:-1;;;;;;;2930:39:476;;-1:-1:-1;;;2930:39:476;2882:88;2764:213;-1:-1:-1;;2764:213:476:o;5196:642:37:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:37;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:37;;29757:2:488;5720:111:37;;;29739:21:488;29796:2;29776:18;;;29769:30;29835:34;29815:18;;;29808:62;-1:-1:-1;;;29886:18:488;;;29879:40;29936:19;;5720:111:37;29555:406:488;5407:322:360;5472:9;5483;5494:7;5521:3;:10;5535:2;5521:16;5539:32;;;;;;;;;;;;;-1:-1:-1;;;5539:32:360;;;5513:59;;;;;-1:-1:-1;;;5513:59:360;;;;;;;;:::i;:::-;-1:-1:-1;;;;5626:2:360;5617:12;;5611:19;5663:2;5654:12;;5648:19;5708:2;5699:12;;;5693:19;5611;;5690:1;5685:28;;;;;5407:322::o;1239:335::-;1314:4;1350:1;1334:6;:13;:17;1330:59;;;-1:-1:-1;1374:4:360;;1239:335;-1:-1:-1;1239:335:360:o;1330:59::-;1403:9;1398:149;1438:1;1422:6;:13;:17;;;;:::i;:::-;1418:1;:21;1398:149;;;1477:6;1484:5;:1;1488;1484:5;:::i;:::-;1477:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1464:26:360;:6;1471:1;1464:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1464:26:360;;1460:77;;-1:-1:-1;1517:5:360;;1239:335;-1:-1:-1;;1239:335:360:o;1460:77::-;1441:3;;;:::i;:::-;;;1398:149;;;-1:-1:-1;1563:4:360;;1239:335;-1:-1:-1;;1239:335:360:o;6946:386:454:-;7051:7;7072;7093;7129;:14;7147:1;7129:19;7125:59;;;7158:1;;7164:19;:15;7182:1;7164:19;:::i;:::-;7150:34;;;;;;;;7125:59;7202:7;:14;7220:6;7202:24;7228:31;;;;;;;;;;;;;-1:-1:-1;;;7228:31:454;;;7194:66;;;;;-1:-1:-1;;;7194:66:454;;;;;;;;:::i;:::-;;7288:7;7277:48;;;;;;;;;;;;:::i;:::-;7270:55;;;;;;6946:386;;;;;;:::o;4108:223:43:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:43;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:43:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:17;;7902:286;;-1:-1:-1;;;;;1702:19:43;;;8113:60;;;;-1:-1:-1;;;8113:60:43;;30886:2:488;8113:60:43;;;30868:21:488;30925:2;30905:18;;;30898:30;30964:31;30944:18;;;30937:59;31013:18;;8113:60:43;30684:353:488;8113:60:43;-1:-1:-1;8208:10:43;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:43;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:488;-1:-1:-1;;;;;;88:32:488;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:127::-;653:10;648:3;644:20;641:1;634:31;684:4;681:1;674:15;708:4;705:1;698:15;724:275;795:2;789:9;860:2;841:13;;-1:-1:-1;;837:27:488;825:40;;-1:-1:-1;;;;;880:34:488;;916:22;;;877:62;874:88;;;942:18;;:::i;:::-;978:2;971:22;724:275;;-1:-1:-1;724:275:488:o;1004:183::-;1064:4;-1:-1:-1;;;;;1089:6:488;1086:30;1083:56;;;1119:18;;:::i;:::-;-1:-1:-1;1164:1:488;1160:14;1176:4;1156:25;;1004:183::o;1192:131::-;-1:-1:-1;;;;;1267:31:488;;1257:42;;1247:70;;1313:1;1310;1303:12;1328:737;1382:5;1435:3;1428:4;1420:6;1416:17;1412:27;1402:55;;1453:1;1450;1443:12;1402:55;1489:6;1476:20;1515:4;1539:60;1555:43;1595:2;1555:43;:::i;:::-;1539:60;:::i;:::-;1633:15;;;1719:1;1715:10;;;;1703:23;;1699:32;;;1664:12;;;;1743:15;;;1740:35;;;1771:1;1768;1761:12;1740:35;1807:2;1799:6;1795:15;1819:217;1835:6;1830:3;1827:15;1819:217;;;1915:3;1902:17;1932:31;1957:5;1932:31;:::i;:::-;1976:18;;2014:12;;;;1852;;1819:217;;;-1:-1:-1;2054:5:488;1328:737;-1:-1:-1;;;;;;1328:737:488:o;2070:348::-;2154:6;2207:2;2195:9;2186:7;2182:23;2178:32;2175:52;;;2223:1;2220;2213:12;2175:52;2263:9;2250:23;-1:-1:-1;;;;;2288:6:488;2285:30;2282:50;;;2328:1;2325;2318:12;2282:50;2351:61;2404:7;2395:6;2384:9;2380:22;2351:61;:::i;2423:435::-;2476:3;2514:5;2508:12;2541:6;2536:3;2529:19;2567:4;2596:2;2591:3;2587:12;2580:19;;2633:2;2626:5;2622:14;2654:1;2664:169;2678:6;2675:1;2672:13;2664:169;;;2739:13;;2727:26;;2773:12;;;;2808:15;;;;2700:1;2693:9;2664:169;;;-1:-1:-1;2849:3:488;;2423:435;-1:-1:-1;;;;;2423:435:488:o;2863:261::-;3042:2;3031:9;3024:21;3005:4;3062:56;3114:2;3103:9;3099:18;3091:6;3062:56;:::i;3337:530::-;3379:5;3432:3;3425:4;3417:6;3413:17;3409:27;3399:55;;3450:1;3447;3440:12;3399:55;3486:6;3473:20;-1:-1:-1;;;;;3508:2:488;3505:26;3502:52;;;3534:18;;:::i;:::-;3578:55;3621:2;3602:13;;-1:-1:-1;;3598:27:488;3627:4;3594:38;3578:55;:::i;:::-;3658:2;3649:7;3642:19;3704:3;3697:4;3692:2;3684:6;3680:15;3676:26;3673:35;3670:55;;;3721:1;3718;3711:12;3670:55;3786:2;3779:4;3771:6;3767:17;3760:4;3751:7;3747:18;3734:55;3834:1;3809:16;;;3827:4;3805:27;3798:38;;;;3813:7;3337:530;-1:-1:-1;;;3337:530:488:o;3872:665::-;3967:6;3975;3983;3991;4044:3;4032:9;4023:7;4019:23;4015:33;4012:53;;;4061:1;4058;4051:12;4012:53;4100:9;4087:23;4119:31;4144:5;4119:31;:::i;:::-;4169:5;-1:-1:-1;4226:2:488;4211:18;;4198:32;4239:33;4198:32;4239:33;:::i;:::-;4291:7;-1:-1:-1;4345:2:488;4330:18;;4317:32;;-1:-1:-1;4400:2:488;4385:18;;4372:32;-1:-1:-1;;;;;4416:30:488;;4413:50;;;4459:1;4456;4449:12;4413:50;4482:49;4523:7;4514:6;4503:9;4499:22;4482:49;:::i;:::-;4472:59;;;3872:665;;;;;;;:::o;4749:388::-;4826:6;4834;4887:2;4875:9;4866:7;4862:23;4858:32;4855:52;;;4903:1;4900;4893:12;4855:52;4939:9;4926:23;4916:33;;5000:2;4989:9;4985:18;4972:32;-1:-1:-1;;;;;5019:6:488;5016:30;5013:50;;;5059:1;5056;5049:12;5013:50;5082:49;5123:7;5114:6;5103:9;5099:22;5082:49;:::i;:::-;5072:59;;;4749:388;;;;;:::o;5372:662::-;5426:5;5479:3;5472:4;5464:6;5460:17;5456:27;5446:55;;5497:1;5494;5487:12;5446:55;5533:6;5520:20;5559:4;5583:60;5599:43;5639:2;5599:43;:::i;5583:60::-;5677:15;;;5763:1;5759:10;;;;5747:23;;5743:32;;;5708:12;;;;5787:15;;;5784:35;;;5815:1;5812;5805:12;5784:35;5851:2;5843:6;5839:15;5863:142;5879:6;5874:3;5871:15;5863:142;;;5945:17;;5933:30;;5983:12;;;;5896;;5863:142;;6039:929;6184:6;6192;6200;6208;6261:3;6249:9;6240:7;6236:23;6232:33;6229:53;;;6278:1;6275;6268:12;6229:53;6317:9;6304:23;6336:31;6361:5;6336:31;:::i;:::-;6386:5;-1:-1:-1;6442:2:488;6427:18;;6414:32;-1:-1:-1;;;;;6495:14:488;;;6492:34;;;6522:1;6519;6512:12;6492:34;6545:61;6598:7;6589:6;6578:9;6574:22;6545:61;:::i;:::-;6535:71;;6659:2;6648:9;6644:18;6631:32;6615:48;;6688:2;6678:8;6675:16;6672:36;;;6704:1;6701;6694:12;6672:36;6727:63;6782:7;6771:8;6760:9;6756:24;6727:63;:::i;:::-;6717:73;;6843:2;6832:9;6828:18;6815:32;6799:48;;6872:2;6862:8;6859:16;6856:36;;;6888:1;6885;6878:12;6856:36;;6911:51;6954:7;6943:8;6932:9;6928:24;6911:51;:::i;6973:865::-;7060:6;7068;7076;7084;7137:2;7125:9;7116:7;7112:23;7108:32;7105:52;;;7153:1;7150;7143:12;7105:52;7192:9;7179:23;7211:31;7236:5;7211:31;:::i;:::-;7261:5;-1:-1:-1;7318:2:488;7303:18;;7290:32;7331;7290;7331;:::i;:::-;7382:7;-1:-1:-1;7440:2:488;7425:18;;7412:32;-1:-1:-1;;;;;7493:14:488;;;7490:34;;;7520:1;7517;7510:12;7490:34;7558:6;7547:9;7543:22;7533:32;;7603:7;7596:4;7592:2;7588:13;7584:27;7574:55;;7625:1;7622;7615:12;7574:55;7665:2;7652:16;7691:2;7683:6;7680:14;7677:34;;;7707:1;7704;7697:12;7677:34;7752:7;7747:2;7738:6;7734:2;7730:15;7726:24;7723:37;7720:57;;;7773:1;7770;7763:12;7720:57;6973:865;;;;-1:-1:-1;;7804:2:488;7796:11;;-1:-1:-1;;;6973:865:488:o;7843:258::-;7915:1;7925:113;7939:6;7936:1;7933:13;7925:113;;;8015:11;;;8009:18;7996:11;;;7989:39;7961:2;7954:10;7925:113;;;8056:6;8053:1;8050:13;8047:48;;;-1:-1:-1;;8091:1:488;8073:16;;8066:27;7843:258::o;8106:257::-;8147:3;8185:5;8179:12;8212:6;8207:3;8200:19;8228:63;8284:6;8277:4;8272:3;8268:14;8261:4;8254:5;8250:16;8228:63;:::i;:::-;8345:2;8324:15;-1:-1:-1;;8320:29:488;8311:39;;;;8352:4;8307:50;;8106:257;-1:-1:-1;;8106:257:488:o;8368:217::-;8515:2;8504:9;8497:21;8478:4;8535:44;8575:2;8564:9;8560:18;8552:6;8535:44;:::i;8590:247::-;8649:6;8702:2;8690:9;8681:7;8677:23;8673:32;8670:52;;;8718:1;8715;8708:12;8670:52;8757:9;8744:23;8776:31;8801:5;8776:31;:::i;9024:551::-;9126:6;9134;9142;9195:2;9183:9;9174:7;9170:23;9166:32;9163:52;;;9211:1;9208;9201:12;9163:52;9247:9;9234:23;9224:33;;9307:2;9296:9;9292:18;9279:32;9320:31;9345:5;9320:31;:::i;:::-;9370:5;-1:-1:-1;9426:2:488;9411:18;;9398:32;-1:-1:-1;;;;;9442:30:488;;9439:50;;;9485:1;9482;9475:12;9439:50;9508:61;9561:7;9552:6;9541:9;9537:22;9508:61;:::i;:::-;9498:71;;;9024:551;;;;;:::o;9580:793::-;9716:6;9724;9732;9785:2;9773:9;9764:7;9760:23;9756:32;9753:52;;;9801:1;9798;9791:12;9753:52;9841:9;9828:23;-1:-1:-1;;;;;9911:2:488;9903:6;9900:14;9897:34;;;9927:1;9924;9917:12;9897:34;9950:61;10003:7;9994:6;9983:9;9979:22;9950:61;:::i;:::-;9940:71;;10064:2;10053:9;10049:18;10036:32;10020:48;;10093:2;10083:8;10080:16;10077:36;;;10109:1;10106;10099:12;10077:36;10132:63;10187:7;10176:8;10165:9;10161:24;10132:63;:::i;:::-;10122:73;;10248:2;10237:9;10233:18;10220:32;10204:48;;10277:2;10267:8;10264:16;10261:36;;;10293:1;10290;10283:12;10261:36;;10316:51;10359:7;10348:8;10337:9;10333:24;10316:51;:::i;10610:461::-;10663:3;10701:5;10695:12;10728:6;10723:3;10716:19;10754:4;10783:2;10778:3;10774:12;10767:19;;10820:2;10813:5;10809:14;10841:1;10851:195;10865:6;10862:1;10859:13;10851:195;;;10930:13;;-1:-1:-1;;;;;10926:39:488;10914:52;;10986:12;;;;11021:15;;;;10962:1;10880:9;10851:195;;11076:261;11255:2;11244:9;11237:21;11218:4;11275:56;11327:2;11316:9;11312:18;11304:6;11275:56;:::i;11827:465::-;12084:2;12073:9;12066:21;12047:4;12110:56;12162:2;12151:9;12147:18;12139:6;12110:56;:::i;:::-;12214:9;12206:6;12202:22;12197:2;12186:9;12182:18;12175:50;12242:44;12279:6;12271;12242:44;:::i;:::-;12234:52;11827:465;-1:-1:-1;;;;;11827:465:488:o;12755:781::-;12858:6;12911:2;12899:9;12890:7;12886:23;12882:32;12879:52;;;12927:1;12924;12917:12;12879:52;12960:2;12954:9;13002:2;12994:6;12990:15;13071:6;13059:10;13056:22;-1:-1:-1;;;;;13023:10:488;13020:34;13017:62;13014:88;;;13082:18;;:::i;:::-;13118:2;13111:22;13155:16;;13180:31;13155:16;13180:31;:::i;:::-;13220:21;;13286:2;13271:18;;13265:25;13299:33;13265:25;13299:33;:::i;:::-;13360:2;13348:15;;13341:32;13418:2;13403:18;;13397:25;13431:33;13397:25;13431:33;:::i;:::-;13492:2;13480:15;;13473:32;13484:6;12755:781;-1:-1:-1;;;12755:781:488:o;13541:138::-;13620:13;;13642:31;13620:13;13642:31;:::i;13684:251::-;13754:6;13807:2;13795:9;13786:7;13782:23;13778:32;13775:52;;;13823:1;13820;13813:12;13775:52;13855:9;13849:16;13874:31;13899:5;13874:31;:::i;14130:127::-;14191:10;14186:3;14182:20;14179:1;14172:31;14222:4;14219:1;14212:15;14246:4;14243:1;14236:15;14548:164;14624:13;;14673;;14666:21;14656:32;;14646:60;;14702:1;14699;14692:12;14717:202;14784:6;14837:2;14825:9;14816:7;14812:23;14808:32;14805:52;;;14853:1;14850;14843:12;14805:52;14876:37;14903:9;14876:37;:::i;14924:184::-;14994:6;15047:2;15035:9;15026:7;15022:23;15018:32;15015:52;;;15063:1;15060;15053:12;15015:52;-1:-1:-1;15086:16:488;;14924:184;-1:-1:-1;14924:184:488:o;15113:127::-;15174:10;15169:3;15165:20;15162:1;15155:31;15205:4;15202:1;15195:15;15229:4;15226:1;15219:15;15245:135;15284:3;-1:-1:-1;;15305:17:488;;15302:43;;;15325:18;;:::i;:::-;-1:-1:-1;15372:1:488;15361:13;;15245:135::o;15385:562::-;-1:-1:-1;;;;;15670:32:488;;15652:51;;15739:2;15734;15719:18;;15712:30;;;-1:-1:-1;;15765:56:488;;15802:18;;15794:6;15765:56;:::i;:::-;15869:9;15861:6;15857:22;15852:2;15841:9;15837:18;15830:50;15897:44;15934:6;15926;15897:44;:::i;:::-;15889:52;15385:562;-1:-1:-1;;;;;;15385:562:488:o;15952:164::-;16029:13;;16082:1;16071:20;;;16061:31;;16051:59;;16106:1;16103;16096:12;16121:192;16200:13;;-1:-1:-1;;;;;16242:46:488;;16232:57;;16222:85;;16303:1;16300;16293:12;16318:1196;16473:6;16481;16489;16497;16505;16513;16521;16529;16537;16545;16553:7;16607:3;16595:9;16586:7;16582:23;16578:33;16575:53;;;16624:1;16621;16614:12;16575:53;16656:9;16650:16;16706:24;16699:5;16695:36;16688:5;16685:47;16675:75;;16746:1;16743;16736:12;16675:75;16819:2;16804:18;;16798:25;16769:5;;-1:-1:-1;16832:33:488;16798:25;16832:33;:::i;:::-;16936:2;16921:18;;16915:25;16884:7;;-1:-1:-1;16949:33:488;16915:25;16949:33;:::i;:::-;17001:7;-1:-1:-1;17027:49:488;17072:2;17057:18;;17027:49;:::i;:::-;17017:59;;17095:48;17138:3;17127:9;17123:19;17095:48;:::i;:::-;17085:58;;17162:48;17205:3;17194:9;17190:19;17162:48;:::i;:::-;17152:58;;17229:50;17274:3;17263:9;17259:19;17229:50;:::i;:::-;17219:60;;17319:3;17308:9;17304:19;17298:26;17288:36;;17364:3;17353:9;17349:19;17343:26;17333:36;;17388:50;17433:3;17422:9;17418:19;17388:50;:::i;:::-;17378:60;;17458:50;17503:3;17492:9;17488:19;17458:50;:::i;:::-;17447:61;;16318:1196;;;;;;;;;;;;;;:::o;17899:288::-;18074:6;18063:9;18056:25;18117:2;18112;18101:9;18097:18;18090:30;18037:4;18137:44;18177:2;18166:9;18162:18;18154:6;18137:44;:::i;18192:249::-;18261:6;18314:2;18302:9;18293:7;18289:23;18285:32;18282:52;;;18330:1;18327;18320:12;18282:52;18362:9;18356:16;18381:30;18405:5;18381:30;:::i;18446:358::-;-1:-1:-1;;;;;18653:32:488;;18635:51;;18722:2;18717;18702:18;;18695:30;;;-1:-1:-1;;18742:56:488;;18779:18;;18771:6;18742:56;:::i;18809:125::-;18849:4;18877:1;18874;18871:8;18868:34;;;18882:18;;:::i;:::-;-1:-1:-1;18919:9:488;;18809:125::o;18939:759::-;-1:-1:-1;;;;;19244:15:488;;;19226:34;;19296:15;;19291:2;19276:18;;19269:43;19343:2;19328:18;;19321:34;;;-1:-1:-1;;;;;;19391:33:488;;19386:2;19371:18;;19364:61;19206:3;19456;19441:19;;19434:32;;;19482:19;;19475:35;;;19169:4;19503:6;19553;19547:3;19532:19;;19519:49;19618:1;19612:3;19603:6;19592:9;19588:22;19584:32;19577:43;19688:3;19681:2;19677:7;19672:2;19664:6;19660:15;19656:29;19645:9;19641:45;19637:55;19629:63;;18939:759;;;;;;;;;:::o;19703:368::-;-1:-1:-1;;;;;;19898:33:488;;19886:46;;19975:6;19967;19963:1;19954:11;;19941:41;19868:3;20005:16;;20023:1;20001:24;20034:13;;;20001:24;19703:368;-1:-1:-1;;19703:368:488:o;20076:274::-;20205:3;20243:6;20237:13;20259:53;20305:6;20300:3;20293:4;20285:6;20281:17;20259:53;:::i;:::-;20328:16;;;;;20076:274;-1:-1:-1;;20076:274:488:o;20664:576::-;20893:13;;20875:32;;20967:4;20955:17;;;20949:24;-1:-1:-1;;;;;20945:50:488;20923:20;;;20916:80;21043:4;21031:17;;;21025:24;-1:-1:-1;;;;;21140:21:488;;;21118:20;;;21111:51;;;;21222:4;21210:17;;;21204:24;21200:33;21178:20;;;21171:63;;;;20862:3;20847:19;;20664:576::o;21245:245::-;21324:6;21332;21385:2;21373:9;21364:7;21360:23;21356:32;21353:52;;;21401:1;21398;21391:12;21353:52;-1:-1:-1;;21424:16:488;;21480:2;21465:18;;;21459:25;21424:16;;21459:25;;-1:-1:-1;21245:245:488:o;21748:881::-;21843:6;21874:2;21917;21905:9;21896:7;21892:23;21888:32;21885:52;;;21933:1;21930;21923:12;21885:52;21966:9;21960:16;-1:-1:-1;;;;;21991:6:488;21988:30;21985:50;;;22031:1;22028;22021:12;21985:50;22054:22;;22107:4;22099:13;;22095:27;-1:-1:-1;22085:55:488;;22136:1;22133;22126:12;22085:55;22165:2;22159:9;22188:60;22204:43;22244:2;22204:43;:::i;22188:60::-;22282:15;;;22364:1;22360:10;;;;22352:19;;22348:28;;;22313:12;;;;22388:19;;;22385:39;;;22420:1;22417;22410:12;22385:39;22444:11;;;;22464:135;22480:6;22475:3;22472:15;22464:135;;;22546:10;;22534:23;;22497:12;;;;22577;;;;22464:135;;23676:163;23754:13;;23807:6;23796:18;;23786:29;;23776:57;;23829:1;23826;23819:12;23844:160;23921:13;;23974:4;23963:16;;23953:27;;23943:55;;23994:1;23991;23984:12;24009:743;24122:6;24130;24138;24146;24154;24162;24170;24223:3;24211:9;24202:7;24198:23;24194:33;24191:53;;;24240:1;24237;24230:12;24191:53;24272:9;24266:16;24291:31;24316:5;24291:31;:::i;:::-;24341:5;-1:-1:-1;24365:47:488;24408:2;24393:18;;24365:47;:::i;:::-;24355:57;;24431:47;24474:2;24463:9;24459:18;24431:47;:::i;:::-;24421:57;;24497:48;24541:2;24530:9;24526:18;24497:48;:::i;:::-;24487:58;;24564:49;24608:3;24597:9;24593:19;24564:49;:::i;:::-;24554:59;;24632:48;24675:3;24664:9;24660:19;24632:48;:::i;:::-;24622:58;;24699:47;24741:3;24730:9;24726:19;24699:47;:::i;:::-;24689:57;;24009:743;;;;;;;;;;:::o;24757:429::-;24974:25;;;-1:-1:-1;;;;;25035:32:488;;25030:2;25015:18;;25008:60;25104:2;25099;25084:18;;25077:30;;;-1:-1:-1;;25124:56:488;;25161:18;;25153:6;25124:56;:::i;25191:208::-;25261:6;25314:2;25302:9;25293:7;25289:23;25285:32;25282:52;;;25330:1;25327;25320:12;25282:52;25353:40;25383:9;25353:40;:::i;26302:128::-;26342:3;26373:1;26369:6;26366:1;26363:13;26360:39;;;26379:18;;:::i;:::-;-1:-1:-1;26415:9:488;;26302:128::o;26435:204::-;26503:6;26556:2;26544:9;26535:7;26531:23;26527:32;26524:52;;;26572:1;26569;26562:12;26524:52;26595:38;26623:9;26595:38;:::i;26644:262::-;26682:1;26716:4;26713:1;26709:12;26740:3;26730:134;;26786:10;26781:3;26777:20;26774:1;26767:31;26821:4;26818:1;26811:15;26849:4;26846:1;26839:15;26730:134;26896:3;26889:4;26886:1;26882:12;26878:22;26873:27;;;26644:262;;;;:::o;26911:422::-;27000:1;27043:5;27000:1;27057:270;27078:7;27068:8;27065:21;27057:270;;;27137:4;27133:1;27129:6;27125:17;27119:4;27116:27;27113:53;;;27146:18;;:::i;:::-;27196:7;27186:8;27182:22;27179:55;;;27216:16;;;;27179:55;27295:22;;;;27255:15;;;;27057:270;;;27061:3;26911:422;;;;;:::o;27338:806::-;27387:5;27417:8;27407:80;;-1:-1:-1;27458:1:488;27472:5;;27407:80;27506:4;27496:76;;-1:-1:-1;27543:1:488;27557:5;;27496:76;27588:4;27606:1;27601:59;;;;27674:1;27669:130;;;;27581:218;;27601:59;27631:1;27622:10;;27645:5;;;27669:130;27706:3;27696:8;27693:17;27690:43;;;27713:18;;:::i;:::-;-1:-1:-1;;27769:1:488;27755:16;;27784:5;;27581:218;;27883:2;27873:8;27870:16;27864:3;27858:4;27855:13;27851:36;27845:2;27835:8;27832:16;27827:2;27821:4;27818:12;27814:35;27811:77;27808:159;;;-1:-1:-1;27920:19:488;;;27952:5;;27808:159;27999:34;28024:8;28018:4;27999:34;:::i;:::-;28069:6;28065:1;28061:6;28057:19;28048:7;28045:32;28042:58;;;28080:18;;:::i;:::-;28118:20;;27338:806;-1:-1:-1;;;27338:806:488:o;28149:140::-;28207:5;28236:47;28277:4;28267:8;28263:19;28257:4;28236:47;:::i;28294:332::-;28501:2;28490:9;28483:21;28464:4;28521:56;28573:2;28562:9;28558:18;28550:6;28521:56;:::i;:::-;28513:64;;28613:6;28608:2;28597:9;28593:18;28586:34;28294:332;;;;;:::o;29220:330::-;29308:6;29316;29324;29377:2;29365:9;29356:7;29352:23;29348:32;29345:52;;;29393:1;29390;29383:12;29345:52;29416:40;29446:9;29416:40;:::i;:::-;29406:50;;29496:2;29485:9;29481:18;29475:25;29465:35;;29540:2;29529:9;29525:18;29519:25;29509:35;;29220:330;;;;;:::o;29966:306::-;30054:6;30062;30070;30123:2;30111:9;30102:7;30098:23;30094:32;30091:52;;;30139:1;30136;30129:12;30091:52;30168:9;30162:16;30152:26;;30218:2;30207:9;30203:18;30197:25;30187:35;;30262:2;30251:9;30247:18;30241:25;30231:35;;29966:306;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "138670": [
        {
          "start": 1066,
          "length": 32
        },
        {
          "start": 2509,
          "length": 32
        },
        {
          "start": 2675,
          "length": 32
        },
        {
          "start": 3006,
          "length": 32
        },
        {
          "start": 3265,
          "length": 32
        },
        {
          "start": 6651,
          "length": 32
        },
        {
          "start": 7985,
          "length": 32
        },
        {
          "start": 10652,
          "length": 32
        },
        {
          "start": 10850,
          "length": 32
        },
        {
          "start": 13578,
          "length": 32
        }
      ],
      "138674": [
        {
          "start": 1139,
          "length": 32
        },
        {
          "start": 6756,
          "length": 32
        }
      ],
      "138678": [
        {
          "start": 980,
          "length": 32
        },
        {
          "start": 8415,
          "length": 32
        },
        {
          "start": 10343,
          "length": 32
        },
        {
          "start": 13374,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "D9()": "551530ae",
    "Q96()": "40792465",
    "collectEarnings()": "c27b2c2d",
    "erc20Vault()": "090f9221",
    "externalCall(address,bytes4,bytes)": "2e2f4cc2",
    "factory()": "c45a0155",
    "helper()": "63b0e66a",
    "initialize(uint256,address,address[])": "463e34be",
    "initialized()": "158ef93e",
    "isValidSignature(bytes32,bytes)": "1626ba7e",
    "isVaultToken(address)": "338c4ccb",
    "nft()": "47ccca02",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "pool()": "16f0115b",
    "positionManager()": "791b98bc",
    "positionNft()": "ef7d8037",
    "pull(address,address[],uint256[],bytes)": "2062d754",
    "pullExistentials()": "d2c219b0",
    "push(address[],uint256[],bytes)": "566ca6b4",
    "reclaimTokens(address[])": "05e1c942",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferAndPush(address,address[],uint256[],bytes)": "27a35e5a",
    "tvl()": "e5328e06",
    "vaultGovernance()": "fe255a5e",
    "vaultTokens()": "69722233"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IAlgebraNonfungiblePositionManager\",\"name\":\"positionManager_\",\"type\":\"address\"},{\"internalType\":\"contract ICamelotHelper\",\"name\":\"helper_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"CollectedEarnings\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"CollectedRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nft_\",\"type\":\"uint256\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"Pull\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"Push\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"ReclaimTokens\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"D9\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Q96\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectEarnings\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"collectedFees\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20Vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"externalCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IAlgebraFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"helper\",\"outputs\":[{\"internalType\":\"contract ICamelotHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20Vault_\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isVaultToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract IAlgebraPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionManager\",\"outputs\":[{\"internalType\":\"contract IAlgebraNonfungiblePositionManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionNft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"pull\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullExistentials\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"push\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"reclaimTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"transferAndPush\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tvl\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"minTokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultGovernance\",\"outputs\":[{\"internalType\":\"contract IVaultGovernance\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"CollectedEarnings(address,address,uint256,uint256)\":{\"params\":{\"amount0\":\"Amount of token0 collected\",\"amount1\":\"Amount of token1 collected\",\"origin\":\"Origin of the transaction (tx.origin)\",\"sender\":\"Sender of the call (msg.sender)\"}},\"CollectedRewards(address,address,uint256,uint256)\":{\"params\":{\"amount0\":\"Amount of collected rewardTokenToUnderlying\",\"amount1\":\"Amount of collected bonusTokenToUnderlying\",\"origin\":\"Origin of the transaction (tx.origin)\",\"sender\":\"Sender of the call (msg.sender)\"}}},\"kind\":\"dev\",\"methods\":{\"collectEarnings()\":{\"returns\":{\"collectedFees\":\"array of length 2 with amounts of collected and transferred fees from Camelot position to ERC20Vault\"}},\"externalCall(address,bytes4,bytes)\":{\"details\":\"Can only be called by Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. Since this method allows sending arbitrary transactions, the destinations of the calls are whitelisted by Protocol Governance.\",\"params\":{\"data\":\"Abi encoded parameters to `to::selector`\",\"selector\":\"Selector of the call\",\"to\":\"Address of the reward pool\"},\"returns\":{\"result\":\"Result of execution of the call\"}},\"initialize(uint256,address,address[])\":{\"details\":\"Can only be initialized by vault governance\",\"params\":{\"nft_\":\"NFT of the vault in the VaultRegistry\",\"vaultTokens_\":\"ERC20 tokens that will be managed by this Vault\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided hash MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls\",\"params\":{\"_hash\":\"Hash of the data to be signed\",\"_signature\":\"Signature byte array associated with _hash\"},\"returns\":{\"magicValue\":\"0x1626ba7e if valid, 0xffffffff otherwise\"}},\"isVaultToken(address)\":{\"params\":{\"token\":\"Address of the token to check\"},\"returns\":{\"_0\":\"`true` if this token is managed by Vault\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"},\"pull(address,address[],uint256[],bytes)\":{\"details\":\"Can only be called but Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. When called by vault owner this method just pulls the tokens from the protocol to the `to` address When called by strategy on vault other than zero vault it pulls the tokens to zero vault (required `to` == zero vault) When called by strategy on zero vault it pulls the tokens to zero vault, pushes tokens on the `to` vault, and reclaims everything that's left. Thus any vault other than zero vault cannot have any tokens on it Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Pull is fulfilled on the best effort basis, i.e. if the tokenAmounts overflows available funds it withdraws all the funds.\",\"params\":{\"options\":\"Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\",\"to\":\"Address to receive the tokens\",\"tokenAmounts\":\"Amounts of tokens to pull\",\"tokens\":\"Tokens to pull\"},\"returns\":{\"actualTokenAmounts\":\"The amounts actually withdrawn. It could be less than tokenAmounts (but not higher)\"}},\"push(address[],uint256[],bytes)\":{\"details\":\"Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Also notice that this operation doesn't guarantee that tokenAmounts will be invested in full.\",\"params\":{\"options\":\"Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\",\"tokenAmounts\":\"Amounts of tokens to push\",\"tokens\":\"Tokens to push\"},\"returns\":{\"actualTokenAmounts\":\"The amounts actually invested. It could be less than tokenAmounts (but not higher)\"}},\"reclaimTokens(address[])\":{\"details\":\"Cannot be called from zero vault.\",\"params\":{\"tokens\":\"Tokens to claim\"},\"returns\":{\"actualTokenAmounts\":\"Amounts reclaimed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferAndPush(address,address[],uint256[],bytes)\":{\"params\":{\"options\":\"Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\",\"tokenAmounts\":\"Amounts of tokens to push\",\"tokens\":\"Tokens to push\"},\"returns\":{\"actualTokenAmounts\":\"The amounts actually invested. It could be less than tokenAmounts (but not higher)\"}},\"tvl()\":{\"details\":\"Generally it is the underlying token value of this contract in some other DeFi protocol. For example, for USDC Yearn Vault this would be total USDC balance that could be withdrawn for Yearn to this contract. The tvl itself is estimated in some range. Sometimes the range is exact, sometimes it's not\",\"returns\":{\"maxTokenAmounts\":\"Upper bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)\",\"minTokenAmounts\":\"Lower bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)\"}}},\"stateVariables\":{\"erc20Vault\":{\"details\":\"address of erc20Vault\"},\"factory\":{\"details\":\"pool factory for algebra pools\"},\"helper\":{\"details\":\"helper contract for CamelotVault\"},\"pool\":{\"details\":\"Algebra Pool\"},\"positionManager\":{\"details\":\"position manager for positions in algebra pools\"},\"positionNft\":{\"details\":\"nft of position in algebra pool\"}},\"version\":1},\"userdoc\":{\"events\":{\"CollectedEarnings(address,address,uint256,uint256)\":{\"notice\":\"Emitted when earnings are collected\"},\"CollectedRewards(address,address,uint256,uint256)\":{\"notice\":\"Emitted when rewards are collected\"},\"Initialized(address,address,address[],uint256)\":{\"notice\":\"Emitted when Vault is intialized\"},\"Pull(address,uint256[])\":{\"notice\":\"Emitted on successful pull\"},\"Push(uint256[])\":{\"notice\":\"Emitted on successful push\"},\"ReclaimTokens(address,address[],uint256[])\":{\"notice\":\"Emitted when tokens are reclaimed\"}},\"kind\":\"user\",\"methods\":{\"externalCall(address,bytes4,bytes)\":{\"notice\":\"Execute one of whitelisted calls.\"},\"initialize(uint256,address,address[])\":{\"notice\":\"Initialized a new contract.\"},\"initialized()\":{\"notice\":\"Checks if the vault is initialized\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies offchain signature.\"},\"isVaultToken(address)\":{\"notice\":\"Checks if a token is vault token\"},\"nft()\":{\"notice\":\"VaultRegistry NFT for this vault\"},\"pull(address,address[],uint256[],bytes)\":{\"notice\":\"Pulls tokens from the underlying protocol to the `to` address.\"},\"pullExistentials()\":{\"notice\":\"Existential amounts for each token\"},\"push(address[],uint256[],bytes)\":{\"notice\":\"Pushes tokens on the vault balance to the underlying protocol. For example, for Yearn this operation will take USDC from the contract balance and convert it to yUSDC.\"},\"reclaimTokens(address[])\":{\"notice\":\"Claim ERC20 tokens from vault balance to zero vault.\"},\"transferAndPush(address,address[],uint256[],bytes)\":{\"notice\":\"The same as `push` method above but transfers tokens to vault balance prior to calling push. After the `push` it returns all the leftover tokens back (`push` method doesn't guarantee that tokenAmounts will be invested in full).\"},\"tvl()\":{\"notice\":\"Total value locked for this contract.\"},\"vaultGovernance()\":{\"notice\":\"Address of the Vault Governance for this contract.\"},\"vaultTokens()\":{\"notice\":\"ERC20 tokens under Vault management.\"}},\"notice\":\"Vault that interfaces Camelot protocol in the integration layer.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vaults/CamelotVault.sol\":\"CamelotVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281\",\"dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b\"]},\"src/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87\",\"dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk\"]},\"src/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50\",\"dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1\"]},\"src/interfaces/external/algebrav2/IAlgebraFactory.sol\":{\"keccak256\":\"0x3905e3c93663ddfc7738a45817c53e81eb5bb27b5b64b977495f307dc5fbfaf8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1f83f511826f1a374660c1cb0496414d8eb0e15cfc0c6e2e195ca91cc01ef101\",\"dweb:/ipfs/QmbeDDXg5EUqXtwdHtLwJMPGiwyaJpMz8PM8KRfC8KV5ZN\"]},\"src/interfaces/external/algebrav2/IAlgebraNonfungiblePositionManager.sol\":{\"keccak256\":\"0x6401477d9b4a0b4e9adf0673d208fc36f0db43e8496a41e34ecb1b1485bea04a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b1f71352663c8148ed5584dc989be91e139be192a8b2de1d6f469a937f70e884\",\"dweb:/ipfs/QmTuyQG1DGS5oteP8ysZaxUb7ns33omecXstY9RJG9BDm1\"]},\"src/interfaces/external/algebrav2/IAlgebraPool.sol\":{\"keccak256\":\"0x755cd326bb55a296788b31bbe28af7e60c7f109f80db1c9fc04535688166da4c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2446e2a6ed5c8728df7ee1b03a8c5344ec2d28e62640d10ec62b920e56e279d8\",\"dweb:/ipfs/QmUGjYtSFATTh4f2nzfwUthxNvafvkX6is2U8Pmh1SWQiM\"]},\"src/interfaces/external/algebrav2/IERC721Permit.sol\":{\"keccak256\":\"0xce5b1d0ab7779da2de91cc1be2d589c40134b518999cac45fc26cc17439bd649\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6aabdb5b27b1918bd2f460a9c58b381c1407666aee3fac18384bd42867b411c0\",\"dweb:/ipfs/QmSoWDR2f1xJEjBqoLX7GybuWkoE1XAwW9weyoex569Ywa\"]},\"src/interfaces/external/algebrav2/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x0800c4b7adcd9d1cd99b059678da5faa7d93198e44f4785426fd83890066df15\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://22d197e0a671881dfafd8f1ebe4adb81416e1b5a0b55abc80e8b508d44ca1685\",\"dweb:/ipfs/QmfNuzafVCpimS2DhLtgiq3LVyNTFGQRzug2Cw55r31A9u\"]},\"src/interfaces/external/algebrav2/IPeripheryPayments.sol\":{\"keccak256\":\"0x60df21c09ace29541e1a1cb11e77906be06af405bbe866d2cf83386c50b403e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://021ee34d95ca79a60a97c3f36a1d5a3029ed744278e050bc6b38b439b269f707\",\"dweb:/ipfs/Qmb8tgHV6WJQ6hnARAfb6Y7NXbpnEzaRJHrFmLJ62HFzRj\"]},\"src/interfaces/external/algebrav2/IPoolInitializer.sol\":{\"keccak256\":\"0x8c1045e94b56cd6bad3502dd3113670ee2c0a7daee5089dd160097a60a215c26\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://96885785ee5d6f0cfc1cd8609fdde69a74ccf7e44d2ce216e782a3ed862e570e\",\"dweb:/ipfs/QmULkLsxDxDMkUxUqfWoobQqQnGaoBY1JMdogu86UX3bcq\"]},\"src/interfaces/external/algebrav2/base/AlgebraFeeConfiguration.sol\":{\"keccak256\":\"0xab8f96c60154b85a682a629d82b583d92351976695dc771a5ac7efa1567b1c01\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c592afcfc0c3f437d447ad32590fe5bc7aa63ea3d5ad9c7249c7b4efb73d488a\",\"dweb:/ipfs/QmdVPG6YLQjwJ3fzSK1vJ6LttFDLiccr2yWrvBDyzyx8YF\"]},\"src/interfaces/external/algebrav2/libraries/PoolAddress.sol\":{\"keccak256\":\"0x3c6db49cd6dac0674ed7422038d6b0993883cadce5f0aea12f3fd4dbaf461e6d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://33df6a38dc11d2f91838e857425eb80f314b6869b37a0d3e13f732c43d3f1b42\",\"dweb:/ipfs/QmPXhNFeWmfog5nUNZDMYQGSHmbFEh8NBbNe1sg1ZCg4rh\"]},\"src/interfaces/external/algebrav2/pool/IAlgebraPoolActions.sol\":{\"keccak256\":\"0xf8e5d053036d17d1719f1599f11da5b9141d85ac819c4fd8ec3960b76cb8830e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2e84a86f035e84ff02daa9b2c41e0cc35429be7b114baa6f41572572676d30fa\",\"dweb:/ipfs/QmZcnQvCfExUCj7zbvxgqoAd24XYofq7udUESQrR6DZ1Q3\"]},\"src/interfaces/external/algebrav2/pool/IAlgebraPoolDerivedState.sol\":{\"keccak256\":\"0x3068b5e85207a209e841214738a2c79c5eebe1ba81ce5427f2d0598582fe7f32\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://961752a020e3e128bb49496dfac03ab6da8cad8675dc3947d7ed493a278bc9ed\",\"dweb:/ipfs/QmRu23SksgKD7G2TQsJBmhWJz1FJuuD78SAFGebYRPUvTQ\"]},\"src/interfaces/external/algebrav2/pool/IAlgebraPoolEvents.sol\":{\"keccak256\":\"0x38348849e3c1b18334b4897f21b67a500215f9da8e47ed04209767052c2a5b93\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://01d9f8a7d90521f7c27c9ce4907ce4626f1fd6e597f5912da80eb516c7c56f58\",\"dweb:/ipfs/QmbETzZdzpEowRAWsjupb1AdvwZYvdZoHsPpv6vHYem2nQ\"]},\"src/interfaces/external/algebrav2/pool/IAlgebraPoolImmutables.sol\":{\"keccak256\":\"0x527bd2f402e3c6b01107e70bcb6d159937de74663a0d914aefee924672facc1d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bccbcf10e3726243f354853cfed495970731a292ff12be715fd75d8f726d48f\",\"dweb:/ipfs/QmQdh7AuAYt8uq72DmEHNgqHmz66AbkEdZXxevkgo13pdc\"]},\"src/interfaces/external/algebrav2/pool/IAlgebraPoolPermissionedActions.sol\":{\"keccak256\":\"0x0c309a0fa5aae5336b8fe6e5987bd1825918717da98eea395183ec4868159ae0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://43eed8d7a7158af94acdec23661242a0aab5879614684b18e8af1e1b1f83d723\",\"dweb:/ipfs/QmeW9eNqAvt22SLtipSNdoUkgfUw53G6e7iUA7XYwQv5qR\"]},\"src/interfaces/external/algebrav2/pool/IAlgebraPoolState.sol\":{\"keccak256\":\"0xcd53e01bcc120d16a15847ba0e805bc5018de1a8d9177ea34c0976db2df3d902\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cf0f48fa035b6558c3b774ed42f1de13a2457fe76aa766c93eaafc3ecb6e7ae3\",\"dweb:/ipfs/QmWpdDMVpFKCE2rLx9PfdD7Npd8Kck7Hfzp1i93k6iqtr3\"]},\"src/interfaces/external/erc/IERC1271.sol\":{\"keccak256\":\"0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779\",\"dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd\"]},\"src/interfaces/utils/ICamelotHelper.sol\":{\"keccak256\":\"0xb45bc1db22753bde63810a872db8398dc1e555c5e8061e9968673ebc69c6a44a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1277064e5685a2b850ec10a632f269b48892446b0ea144467be3cdd67e5d69c6\",\"dweb:/ipfs/Qma3My77Ycmv97tcfRkbrHPzGRhrmoUe7g5CsHfCZm9Uwb\"]},\"src/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add\",\"dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu\"]},\"src/interfaces/validators/IBaseValidator.sol\":{\"keccak256\":\"0x91fa24f9202986d93ef9adf34ba8c17b8b9699ac365a54604abe70d54277a908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33f59c4ce1794edbdaf3b4b184e8df3d1dbfab69e87c5ec5c8bda0220d324e11\",\"dweb:/ipfs/QmWstawnPNGrjcmLKZ2Td3gRnK29d5HERF5QevEcLxqx2p\"]},\"src/interfaces/validators/IValidator.sol\":{\"keccak256\":\"0x8818b72829998c2f4acda6e5d8c66e2765adaf630a755d2865ce9e2559a8f63f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c198a3b15883bde77e78d0741d6fe5ea399176ba4d1c69bd32d9e31e6e85b4c1\",\"dweb:/ipfs/QmQyZzxTkPGtmrLJrXrrUU2qy9dtaeGyfqhvixQ7Fh1ekf\"]},\"src/interfaces/vaults/ICamelotVault.sol\":{\"keccak256\":\"0x8b0420e22fe1a8c59e6ee7ab4517b2a220c42d6e566ea7aee225d84ce30d41f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92e35e66aeb701eae1ca28df4d9f605501091d7fb3fd33e96892af8407a158bd\",\"dweb:/ipfs/QmZKVLmzZYYxEVNetBHH8jjZsAfQYMKqqoDc1uznyz8QxP\"]},\"src/interfaces/vaults/ICamelotVaultGovernance.sol\":{\"keccak256\":\"0x8187f0a77f9db2a2ce6f72800e6e7a71746e59d4b77a7bc55d43376485422860\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://44f8d795f930ab506d9f5b21aaa197a914033d379e68636e14068569d33e63fa\",\"dweb:/ipfs/QmVCrs3tmJDa4x5yz14Q1MVWoeYJjqjLN3SkJe7PhFBaeg\"]},\"src/interfaces/vaults/IIntegrationVault.sol\":{\"keccak256\":\"0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d\",\"dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy\"]},\"src/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1\",\"dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw\"]},\"src/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375\",\"dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu\"]},\"src/interfaces/vaults/IVaultRoot.sol\":{\"keccak256\":\"0xfc566a9133afe6942e196bcfde5b5e1920094d6f1656885b25b72b91f48c10ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79470664780741869fe81ad1eed10b2afd7d9432ee70be1599f242f102a4deaa\",\"dweb:/ipfs/QmUUPv5juGLrdngD5ZQNcsHxvQzWPG1c8aLjA2nsUC6uJz\"]},\"src/libraries/CommonLibrary.sol\":{\"keccak256\":\"0xba41d4d3513effc9b74645da78f66d5900dd49669b02b85845babd7c11f30f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://485caf8f41614fcd6653910850651ca8f326de2298a39f340970a3e994faa03b\",\"dweb:/ipfs/QmNqJYP98zFeXwKUUCcHjc1HgNBGcxE46fDSjmYn4F78gK\"]},\"src/libraries/ExceptionsLibrary.sol\":{\"keccak256\":\"0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f\",\"dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX\"]},\"src/libraries/PermissionIdsLibrary.sol\":{\"keccak256\":\"0xc6a4f2515d807b2ad95e9e8f7190c5ea85ab6603d2c1136632a8af9c479ecfcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e16f3d1e595ffa5b20cd1588e839ee783b1ca246d489cbe42040fd3089bb8b1\",\"dweb:/ipfs/QmQdW5ykrjB5yMMxkU5zTR4GJ5kBhyrnAbmt3mvtB55kuC\"]},\"src/libraries/external/FullMath.sol\":{\"keccak256\":\"0x4e62215e42605e0a7ac1b29c1ed9ea5e3de0b81b1004fe5db50e08a3d5116384\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35f956c16580edefa156bbcf9a46bb82b32bfb26fe28b8ba5a5e3017d9582741\",\"dweb:/ipfs/QmUyoNEKLxPiftneU2xU2xixKNvCXvG847WEfCX1gsYGoz\"]},\"src/vaults/CamelotVault.sol\":{\"keccak256\":\"0x29b9b1ba2329a0ade6738da69f8832a478ac6f28fb792ac5bbfbbba300bbe110\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b1dbdebf174f68f1d12e84c8047b84f16a1aaf6fce0a9566ac2c61de85d7c774\",\"dweb:/ipfs/QmNvpt42XNLhHdPbMruUBxpeGGbHySRn56xKo2xAFkYNjZ\"]},\"src/vaults/IntegrationVault.sol\":{\"keccak256\":\"0xc7c94b708ce2ba583230f4d62d69803e91945d1af63f8989e9023c9115b03c84\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0834feeb7a9412fae1869ac73736dc8aa47dffb3c9b936f75312e50bad007cdb\",\"dweb:/ipfs/QmUZv66T4STKBqPCYeQvdTiWzf8Ptm66TfWtc7oFjFq59Q\"]},\"src/vaults/Vault.sol\":{\"keccak256\":\"0xbee4e72089b03a8c9f546d23583dd190bd0035ad3be38889d80b06a7b5e94271\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4e3ad66c3eeab2cffeb0323631c8c35a3ae37b062e05010fc8958b4ad06da0e5\",\"dweb:/ipfs/QmYYTwZFQufPxfn7zBmHGoogAJwsebd2TjDiJVoNtVLAs8\"]},\"src/vaults/VaultGovernance.sol\":{\"keccak256\":\"0xd484ec7eee06480da27027a0ac81f591440ecdd2ba7bd5bfdee58a3f9e88c22c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8b4f08e9350fadeb03b9561a2fb2798821f7186fe8663207c91402ea62a53cc5\",\"dweb:/ipfs/QmUr73ghYfPzjtFgxE8mPjw5wFwQTQsbcLDGJNQVfT4rEV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IAlgebraNonfungiblePositionManager",
              "name": "positionManager_",
              "type": "address"
            },
            {
              "internalType": "contract ICamelotHelper",
              "name": "helper_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount0",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount1",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CollectedEarnings",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount0",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount1",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CollectedRewards",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address[]",
              "name": "vaultTokens_",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "nft_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Pull",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Push",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReclaimTokens",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "D9",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "Q96",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collectEarnings",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "collectedFees",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "erc20Vault",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "externalCall",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "contract IAlgebraFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "helper",
          "outputs": [
            {
              "internalType": "contract ICamelotHelper",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft_",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "erc20Vault_",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "vaultTokens_",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "initialized",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "magicValue",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isVaultToken",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nft",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pool",
          "outputs": [
            {
              "internalType": "contract IAlgebraPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "positionManager",
          "outputs": [
            {
              "internalType": "contract IAlgebraNonfungiblePositionManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "positionNft",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pull",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pullExistentials",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "push",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reclaimTokens",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAndPush",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tvl",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "minTokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "maxTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultGovernance",
          "outputs": [
            {
              "internalType": "contract IVaultGovernance",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultTokens",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "collectEarnings()": {
            "returns": {
              "collectedFees": "array of length 2 with amounts of collected and transferred fees from Camelot position to ERC20Vault"
            }
          },
          "externalCall(address,bytes4,bytes)": {
            "details": "Can only be called by Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. Since this method allows sending arbitrary transactions, the destinations of the calls are whitelisted by Protocol Governance.",
            "params": {
              "data": "Abi encoded parameters to `to::selector`",
              "selector": "Selector of the call",
              "to": "Address of the reward pool"
            },
            "returns": {
              "result": "Result of execution of the call"
            }
          },
          "initialize(uint256,address,address[])": {
            "details": "Can only be initialized by vault governance",
            "params": {
              "nft_": "NFT of the vault in the VaultRegistry",
              "vaultTokens_": "ERC20 tokens that will be managed by this Vault"
            }
          },
          "isValidSignature(bytes32,bytes)": {
            "details": "Should return whether the signature provided is valid for the provided hash MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls",
            "params": {
              "_hash": "Hash of the data to be signed",
              "_signature": "Signature byte array associated with _hash"
            },
            "returns": {
              "magicValue": "0x1626ba7e if valid, 0xffffffff otherwise"
            }
          },
          "isVaultToken(address)": {
            "params": {
              "token": "Address of the token to check"
            },
            "returns": {
              "_0": "`true` if this token is managed by Vault"
            }
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
          },
          "pull(address,address[],uint256[],bytes)": {
            "details": "Can only be called but Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. When called by vault owner this method just pulls the tokens from the protocol to the `to` address When called by strategy on vault other than zero vault it pulls the tokens to zero vault (required `to` == zero vault) When called by strategy on zero vault it pulls the tokens to zero vault, pushes tokens on the `to` vault, and reclaims everything that's left. Thus any vault other than zero vault cannot have any tokens on it Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Pull is fulfilled on the best effort basis, i.e. if the tokenAmounts overflows available funds it withdraws all the funds.",
            "params": {
              "options": "Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions",
              "to": "Address to receive the tokens",
              "tokenAmounts": "Amounts of tokens to pull",
              "tokens": "Tokens to pull"
            },
            "returns": {
              "actualTokenAmounts": "The amounts actually withdrawn. It could be less than tokenAmounts (but not higher)"
            }
          },
          "push(address[],uint256[],bytes)": {
            "details": "Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Also notice that this operation doesn't guarantee that tokenAmounts will be invested in full.",
            "params": {
              "options": "Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions",
              "tokenAmounts": "Amounts of tokens to push",
              "tokens": "Tokens to push"
            },
            "returns": {
              "actualTokenAmounts": "The amounts actually invested. It could be less than tokenAmounts (but not higher)"
            }
          },
          "reclaimTokens(address[])": {
            "details": "Cannot be called from zero vault.",
            "params": {
              "tokens": "Tokens to claim"
            },
            "returns": {
              "actualTokenAmounts": "Amounts reclaimed"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "transferAndPush(address,address[],uint256[],bytes)": {
            "params": {
              "options": "Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions",
              "tokenAmounts": "Amounts of tokens to push",
              "tokens": "Tokens to push"
            },
            "returns": {
              "actualTokenAmounts": "The amounts actually invested. It could be less than tokenAmounts (but not higher)"
            }
          },
          "tvl()": {
            "details": "Generally it is the underlying token value of this contract in some other DeFi protocol. For example, for USDC Yearn Vault this would be total USDC balance that could be withdrawn for Yearn to this contract. The tvl itself is estimated in some range. Sometimes the range is exact, sometimes it's not",
            "returns": {
              "maxTokenAmounts": "Upper bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)",
              "minTokenAmounts": "Lower bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "externalCall(address,bytes4,bytes)": {
            "notice": "Execute one of whitelisted calls."
          },
          "initialize(uint256,address,address[])": {
            "notice": "Initialized a new contract."
          },
          "initialized()": {
            "notice": "Checks if the vault is initialized"
          },
          "isValidSignature(bytes32,bytes)": {
            "notice": "Verifies offchain signature."
          },
          "isVaultToken(address)": {
            "notice": "Checks if a token is vault token"
          },
          "nft()": {
            "notice": "VaultRegistry NFT for this vault"
          },
          "pull(address,address[],uint256[],bytes)": {
            "notice": "Pulls tokens from the underlying protocol to the `to` address."
          },
          "pullExistentials()": {
            "notice": "Existential amounts for each token"
          },
          "push(address[],uint256[],bytes)": {
            "notice": "Pushes tokens on the vault balance to the underlying protocol. For example, for Yearn this operation will take USDC from the contract balance and convert it to yUSDC."
          },
          "reclaimTokens(address[])": {
            "notice": "Claim ERC20 tokens from vault balance to zero vault."
          },
          "transferAndPush(address,address[],uint256[],bytes)": {
            "notice": "The same as `push` method above but transfers tokens to vault balance prior to calling push. After the `push` it returns all the leftover tokens back (`push` method doesn't guarantee that tokenAmounts will be invested in full)."
          },
          "tvl()": {
            "notice": "Total value locked for this contract."
          },
          "vaultGovernance()": {
            "notice": "Address of the Vault Governance for this contract."
          },
          "vaultTokens()": {
            "notice": "ERC20 tokens under Vault management."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/vaults/CamelotVault.sol": "CamelotVault"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999",
        "urls": [
          "bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb",
          "dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolGovernance.sol": {
        "keccak256": "0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e",
        "urls": [
          "bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281",
          "dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b"
        ],
        "license": "MIT"
      },
      "src/interfaces/IUnitPricesGovernance.sol": {
        "keccak256": "0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081",
        "urls": [
          "bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87",
          "dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk"
        ],
        "license": "MIT"
      },
      "src/interfaces/IVaultRegistry.sol": {
        "keccak256": "0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55",
        "urls": [
          "bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50",
          "dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/algebrav2/IAlgebraFactory.sol": {
        "keccak256": "0x3905e3c93663ddfc7738a45817c53e81eb5bb27b5b64b977495f307dc5fbfaf8",
        "urls": [
          "bzz-raw://1f83f511826f1a374660c1cb0496414d8eb0e15cfc0c6e2e195ca91cc01ef101",
          "dweb:/ipfs/QmbeDDXg5EUqXtwdHtLwJMPGiwyaJpMz8PM8KRfC8KV5ZN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/IAlgebraNonfungiblePositionManager.sol": {
        "keccak256": "0x6401477d9b4a0b4e9adf0673d208fc36f0db43e8496a41e34ecb1b1485bea04a",
        "urls": [
          "bzz-raw://b1f71352663c8148ed5584dc989be91e139be192a8b2de1d6f469a937f70e884",
          "dweb:/ipfs/QmTuyQG1DGS5oteP8ysZaxUb7ns33omecXstY9RJG9BDm1"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/IAlgebraPool.sol": {
        "keccak256": "0x755cd326bb55a296788b31bbe28af7e60c7f109f80db1c9fc04535688166da4c",
        "urls": [
          "bzz-raw://2446e2a6ed5c8728df7ee1b03a8c5344ec2d28e62640d10ec62b920e56e279d8",
          "dweb:/ipfs/QmUGjYtSFATTh4f2nzfwUthxNvafvkX6is2U8Pmh1SWQiM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/IERC721Permit.sol": {
        "keccak256": "0xce5b1d0ab7779da2de91cc1be2d589c40134b518999cac45fc26cc17439bd649",
        "urls": [
          "bzz-raw://6aabdb5b27b1918bd2f460a9c58b381c1407666aee3fac18384bd42867b411c0",
          "dweb:/ipfs/QmSoWDR2f1xJEjBqoLX7GybuWkoE1XAwW9weyoex569Ywa"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/IPeripheryImmutableState.sol": {
        "keccak256": "0x0800c4b7adcd9d1cd99b059678da5faa7d93198e44f4785426fd83890066df15",
        "urls": [
          "bzz-raw://22d197e0a671881dfafd8f1ebe4adb81416e1b5a0b55abc80e8b508d44ca1685",
          "dweb:/ipfs/QmfNuzafVCpimS2DhLtgiq3LVyNTFGQRzug2Cw55r31A9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/IPeripheryPayments.sol": {
        "keccak256": "0x60df21c09ace29541e1a1cb11e77906be06af405bbe866d2cf83386c50b403e5",
        "urls": [
          "bzz-raw://021ee34d95ca79a60a97c3f36a1d5a3029ed744278e050bc6b38b439b269f707",
          "dweb:/ipfs/Qmb8tgHV6WJQ6hnARAfb6Y7NXbpnEzaRJHrFmLJ62HFzRj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/IPoolInitializer.sol": {
        "keccak256": "0x8c1045e94b56cd6bad3502dd3113670ee2c0a7daee5089dd160097a60a215c26",
        "urls": [
          "bzz-raw://96885785ee5d6f0cfc1cd8609fdde69a74ccf7e44d2ce216e782a3ed862e570e",
          "dweb:/ipfs/QmULkLsxDxDMkUxUqfWoobQqQnGaoBY1JMdogu86UX3bcq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/base/AlgebraFeeConfiguration.sol": {
        "keccak256": "0xab8f96c60154b85a682a629d82b583d92351976695dc771a5ac7efa1567b1c01",
        "urls": [
          "bzz-raw://c592afcfc0c3f437d447ad32590fe5bc7aa63ea3d5ad9c7249c7b4efb73d488a",
          "dweb:/ipfs/QmdVPG6YLQjwJ3fzSK1vJ6LttFDLiccr2yWrvBDyzyx8YF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/libraries/PoolAddress.sol": {
        "keccak256": "0x3c6db49cd6dac0674ed7422038d6b0993883cadce5f0aea12f3fd4dbaf461e6d",
        "urls": [
          "bzz-raw://33df6a38dc11d2f91838e857425eb80f314b6869b37a0d3e13f732c43d3f1b42",
          "dweb:/ipfs/QmPXhNFeWmfog5nUNZDMYQGSHmbFEh8NBbNe1sg1ZCg4rh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/pool/IAlgebraPoolActions.sol": {
        "keccak256": "0xf8e5d053036d17d1719f1599f11da5b9141d85ac819c4fd8ec3960b76cb8830e",
        "urls": [
          "bzz-raw://2e84a86f035e84ff02daa9b2c41e0cc35429be7b114baa6f41572572676d30fa",
          "dweb:/ipfs/QmZcnQvCfExUCj7zbvxgqoAd24XYofq7udUESQrR6DZ1Q3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/pool/IAlgebraPoolDerivedState.sol": {
        "keccak256": "0x3068b5e85207a209e841214738a2c79c5eebe1ba81ce5427f2d0598582fe7f32",
        "urls": [
          "bzz-raw://961752a020e3e128bb49496dfac03ab6da8cad8675dc3947d7ed493a278bc9ed",
          "dweb:/ipfs/QmRu23SksgKD7G2TQsJBmhWJz1FJuuD78SAFGebYRPUvTQ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/pool/IAlgebraPoolEvents.sol": {
        "keccak256": "0x38348849e3c1b18334b4897f21b67a500215f9da8e47ed04209767052c2a5b93",
        "urls": [
          "bzz-raw://01d9f8a7d90521f7c27c9ce4907ce4626f1fd6e597f5912da80eb516c7c56f58",
          "dweb:/ipfs/QmbETzZdzpEowRAWsjupb1AdvwZYvdZoHsPpv6vHYem2nQ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/pool/IAlgebraPoolImmutables.sol": {
        "keccak256": "0x527bd2f402e3c6b01107e70bcb6d159937de74663a0d914aefee924672facc1d",
        "urls": [
          "bzz-raw://4bccbcf10e3726243f354853cfed495970731a292ff12be715fd75d8f726d48f",
          "dweb:/ipfs/QmQdh7AuAYt8uq72DmEHNgqHmz66AbkEdZXxevkgo13pdc"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/pool/IAlgebraPoolPermissionedActions.sol": {
        "keccak256": "0x0c309a0fa5aae5336b8fe6e5987bd1825918717da98eea395183ec4868159ae0",
        "urls": [
          "bzz-raw://43eed8d7a7158af94acdec23661242a0aab5879614684b18e8af1e1b1f83d723",
          "dweb:/ipfs/QmeW9eNqAvt22SLtipSNdoUkgfUw53G6e7iUA7XYwQv5qR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/pool/IAlgebraPoolState.sol": {
        "keccak256": "0xcd53e01bcc120d16a15847ba0e805bc5018de1a8d9177ea34c0976db2df3d902",
        "urls": [
          "bzz-raw://cf0f48fa035b6558c3b774ed42f1de13a2457fe76aa766c93eaafc3ecb6e7ae3",
          "dweb:/ipfs/QmWpdDMVpFKCE2rLx9PfdD7Npd8Kck7Hfzp1i93k6iqtr3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/erc/IERC1271.sol": {
        "keccak256": "0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36",
        "urls": [
          "bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779",
          "dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/ICamelotHelper.sol": {
        "keccak256": "0xb45bc1db22753bde63810a872db8398dc1e555c5e8061e9968673ebc69c6a44a",
        "urls": [
          "bzz-raw://1277064e5685a2b850ec10a632f269b48892446b0ea144467be3cdd67e5d69c6",
          "dweb:/ipfs/Qma3My77Ycmv97tcfRkbrHPzGRhrmoUe7g5CsHfCZm9Uwb"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/utils/IDefaultAccessControl.sol": {
        "keccak256": "0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60",
        "urls": [
          "bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add",
          "dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu"
        ],
        "license": "MIT"
      },
      "src/interfaces/validators/IBaseValidator.sol": {
        "keccak256": "0x91fa24f9202986d93ef9adf34ba8c17b8b9699ac365a54604abe70d54277a908",
        "urls": [
          "bzz-raw://33f59c4ce1794edbdaf3b4b184e8df3d1dbfab69e87c5ec5c8bda0220d324e11",
          "dweb:/ipfs/QmWstawnPNGrjcmLKZ2Td3gRnK29d5HERF5QevEcLxqx2p"
        ],
        "license": "MIT"
      },
      "src/interfaces/validators/IValidator.sol": {
        "keccak256": "0x8818b72829998c2f4acda6e5d8c66e2765adaf630a755d2865ce9e2559a8f63f",
        "urls": [
          "bzz-raw://c198a3b15883bde77e78d0741d6fe5ea399176ba4d1c69bd32d9e31e6e85b4c1",
          "dweb:/ipfs/QmQyZzxTkPGtmrLJrXrrUU2qy9dtaeGyfqhvixQ7Fh1ekf"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/ICamelotVault.sol": {
        "keccak256": "0x8b0420e22fe1a8c59e6ee7ab4517b2a220c42d6e566ea7aee225d84ce30d41f2",
        "urls": [
          "bzz-raw://92e35e66aeb701eae1ca28df4d9f605501091d7fb3fd33e96892af8407a158bd",
          "dweb:/ipfs/QmZKVLmzZYYxEVNetBHH8jjZsAfQYMKqqoDc1uznyz8QxP"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/ICamelotVaultGovernance.sol": {
        "keccak256": "0x8187f0a77f9db2a2ce6f72800e6e7a71746e59d4b77a7bc55d43376485422860",
        "urls": [
          "bzz-raw://44f8d795f930ab506d9f5b21aaa197a914033d379e68636e14068569d33e63fa",
          "dweb:/ipfs/QmVCrs3tmJDa4x5yz14Q1MVWoeYJjqjLN3SkJe7PhFBaeg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/vaults/IIntegrationVault.sol": {
        "keccak256": "0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e",
        "urls": [
          "bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d",
          "dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVault.sol": {
        "keccak256": "0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43",
        "urls": [
          "bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1",
          "dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultGovernance.sol": {
        "keccak256": "0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813",
        "urls": [
          "bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375",
          "dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultRoot.sol": {
        "keccak256": "0xfc566a9133afe6942e196bcfde5b5e1920094d6f1656885b25b72b91f48c10ef",
        "urls": [
          "bzz-raw://79470664780741869fe81ad1eed10b2afd7d9432ee70be1599f242f102a4deaa",
          "dweb:/ipfs/QmUUPv5juGLrdngD5ZQNcsHxvQzWPG1c8aLjA2nsUC6uJz"
        ],
        "license": "MIT"
      },
      "src/libraries/CommonLibrary.sol": {
        "keccak256": "0xba41d4d3513effc9b74645da78f66d5900dd49669b02b85845babd7c11f30f99",
        "urls": [
          "bzz-raw://485caf8f41614fcd6653910850651ca8f326de2298a39f340970a3e994faa03b",
          "dweb:/ipfs/QmNqJYP98zFeXwKUUCcHjc1HgNBGcxE46fDSjmYn4F78gK"
        ],
        "license": "MIT"
      },
      "src/libraries/ExceptionsLibrary.sol": {
        "keccak256": "0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff",
        "urls": [
          "bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f",
          "dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX"
        ],
        "license": "MIT"
      },
      "src/libraries/PermissionIdsLibrary.sol": {
        "keccak256": "0xc6a4f2515d807b2ad95e9e8f7190c5ea85ab6603d2c1136632a8af9c479ecfcf",
        "urls": [
          "bzz-raw://4e16f3d1e595ffa5b20cd1588e839ee783b1ca246d489cbe42040fd3089bb8b1",
          "dweb:/ipfs/QmQdW5ykrjB5yMMxkU5zTR4GJ5kBhyrnAbmt3mvtB55kuC"
        ],
        "license": "MIT"
      },
      "src/libraries/external/FullMath.sol": {
        "keccak256": "0x4e62215e42605e0a7ac1b29c1ed9ea5e3de0b81b1004fe5db50e08a3d5116384",
        "urls": [
          "bzz-raw://35f956c16580edefa156bbcf9a46bb82b32bfb26fe28b8ba5a5e3017d9582741",
          "dweb:/ipfs/QmUyoNEKLxPiftneU2xU2xixKNvCXvG847WEfCX1gsYGoz"
        ],
        "license": "MIT"
      },
      "src/vaults/CamelotVault.sol": {
        "keccak256": "0x29b9b1ba2329a0ade6738da69f8832a478ac6f28fb792ac5bbfbbba300bbe110",
        "urls": [
          "bzz-raw://b1dbdebf174f68f1d12e84c8047b84f16a1aaf6fce0a9566ac2c61de85d7c774",
          "dweb:/ipfs/QmNvpt42XNLhHdPbMruUBxpeGGbHySRn56xKo2xAFkYNjZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/vaults/IntegrationVault.sol": {
        "keccak256": "0xc7c94b708ce2ba583230f4d62d69803e91945d1af63f8989e9023c9115b03c84",
        "urls": [
          "bzz-raw://0834feeb7a9412fae1869ac73736dc8aa47dffb3c9b936f75312e50bad007cdb",
          "dweb:/ipfs/QmUZv66T4STKBqPCYeQvdTiWzf8Ptm66TfWtc7oFjFq59Q"
        ],
        "license": "BUSL-1.1"
      },
      "src/vaults/Vault.sol": {
        "keccak256": "0xbee4e72089b03a8c9f546d23583dd190bd0035ad3be38889d80b06a7b5e94271",
        "urls": [
          "bzz-raw://4e3ad66c3eeab2cffeb0323631c8c35a3ae37b062e05010fc8958b4ad06da0e5",
          "dweb:/ipfs/QmYYTwZFQufPxfn7zBmHGoogAJwsebd2TjDiJVoNtVLAs8"
        ],
        "license": "BUSL-1.1"
      },
      "src/vaults/VaultGovernance.sol": {
        "keccak256": "0xd484ec7eee06480da27027a0ac81f591440ecdd2ba7bd5bfdee58a3f9e88c22c",
        "urls": [
          "bzz-raw://8b4f08e9350fadeb03b9561a2fb2798821f7186fe8663207c91402ea62a53cc5",
          "dweb:/ipfs/QmUr73ghYfPzjtFgxE8mPjw5wFwQTQsbcLDGJNQVfT4rEV"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/vaults/CamelotVault.sol",
    "id": 139323,
    "exportedSymbols": {
      "Address": [
        47093
      ],
      "AlgebraFeeConfiguration": [
        55613
      ],
      "CamelotVault": [
        139322
      ],
      "Clones": [
        43615
      ],
      "CommonLibrary": [
        79384
      ],
      "ERC165": [
        48061
      ],
      "ExceptionsLibrary": [
        79454
      ],
      "FullMath": [
        80391
      ],
      "IAccessControl": [
        43366
      ],
      "IAccessControlEnumerable": [
        43391
      ],
      "IAlgebraFactory": [
        53926
      ],
      "IAlgebraNonfungiblePositionManager": [
        54152
      ],
      "IAlgebraPool": [
        54174
      ],
      "IAlgebraPoolActions": [
        55975
      ],
      "IAlgebraPoolDerivedState": [
        55991
      ],
      "IAlgebraPoolEvents": [
        56106
      ],
      "IAlgebraPoolImmutables": [
        56146
      ],
      "IAlgebraPoolPermissionedActions": [
        56170
      ],
      "IAlgebraPoolState": [
        56320
      ],
      "IBaseValidator": [
        76071
      ],
      "ICamelotHelper": [
        75741
      ],
      "ICamelotVault": [
        76514
      ],
      "ICamelotVaultGovernance": [
        76537
      ],
      "IDefaultAccessControl": [
        75786
      ],
      "IERC1271": [
        64026
      ],
      "IERC165": [
        48073
      ],
      "IERC20": [
        45207
      ],
      "IERC20Metadata": [
        45232
      ],
      "IERC20Permit": [
        45268
      ],
      "IERC721": [
        46687
      ],
      "IERC721Enumerable": [
        46736
      ],
      "IERC721Metadata": [
        46763
      ],
      "IERC721Permit": [
        54307
      ],
      "IERC721Receiver": [
        46705
      ],
      "IIntegrationVault": [
        77767
      ],
      "IPeripheryImmutableState": [
        54329
      ],
      "IPeripheryPayments": [
        54355
      ],
      "IPoolInitializer": [
        54372
      ],
      "IProtocolGovernance": [
        52868
      ],
      "IUnitPricesGovernance": [
        52921
      ],
      "IValidator": [
        76093
      ],
      "IVault": [
        78599
      ],
      "IVaultGovernance": [
        78668
      ],
      "IVaultRegistry": [
        53012
      ],
      "IVaultRoot": [
        78702
      ],
      "IntegrationVault": [
        149908
      ],
      "PermissionIdsLibrary": [
        79479
      ],
      "PoolAddress": [
        55861
      ],
      "ReentrancyGuard": [
        44542
      ],
      "SafeERC20": [
        45644
      ],
      "Vault": [
        157396
      ],
      "VaultGovernance": [
        158218
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:8350:454",
    "nodes": [
      {
        "id": 138636,
        "nodeType": "PragmaDirective",
        "src": "45:23:454",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 138637,
        "nodeType": "ImportDirective",
        "src": "70:48:454",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/ICamelotVault.sol",
        "file": "../interfaces/vaults/ICamelotVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 139323,
        "sourceUnit": 76515,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 138638,
        "nodeType": "ImportDirective",
        "src": "119:58:454",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/ICamelotVaultGovernance.sol",
        "file": "../interfaces/vaults/ICamelotVaultGovernance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 139323,
        "sourceUnit": 76538,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 138639,
        "nodeType": "ImportDirective",
        "src": "179:44:454",
        "nodes": [],
        "absolutePath": "src/libraries/ExceptionsLibrary.sol",
        "file": "../libraries/ExceptionsLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 139323,
        "sourceUnit": 79455,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 138640,
        "nodeType": "ImportDirective",
        "src": "224:44:454",
        "nodes": [],
        "absolutePath": "src/libraries/external/FullMath.sol",
        "file": "../libraries/external/FullMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 139323,
        "sourceUnit": 80392,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 138641,
        "nodeType": "ImportDirective",
        "src": "270:32:454",
        "nodes": [],
        "absolutePath": "src/vaults/IntegrationVault.sol",
        "file": "./IntegrationVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 139323,
        "sourceUnit": 149909,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 139322,
        "nodeType": "ContractDefinition",
        "src": "381:8013:454",
        "nodes": [
          {
            "id": 138650,
            "nodeType": "UsingForDirective",
            "src": "444:27:454",
            "nodes": [],
            "libraryName": {
              "id": 138647,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45644,
              "src": "450:9:454"
            },
            "typeName": {
              "id": 138649,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 138648,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45207,
                "src": "464:6:454"
              },
              "referencedDeclaration": 45207,
              "src": "464:6:454",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$45207",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 138655,
            "nodeType": "VariableDeclaration",
            "src": "476:35:454",
            "nodes": [],
            "constant": true,
            "functionSelector": "40792465",
            "mutability": "constant",
            "name": "Q96",
            "nameLocation": "500:3:454",
            "scope": 139322,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 138651,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "476:7:454",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                "typeString": "int_const 79228162514264337593543950336"
              },
              "id": 138654,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "32",
                "id": 138652,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "506:1:454",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "3936",
                "id": 138653,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "509:2:454",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_96_by_1",
                  "typeString": "int_const 96"
                },
                "value": "96"
              },
              "src": "506:5:454",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
                "typeString": "int_const 79228162514264337593543950336"
              }
            },
            "visibility": "public"
          },
          {
            "id": 138660,
            "nodeType": "VariableDeclaration",
            "src": "517:34:454",
            "nodes": [],
            "constant": true,
            "functionSelector": "551530ae",
            "mutability": "constant",
            "name": "D9",
            "nameLocation": "541:2:454",
            "scope": 139322,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 138656,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "517:7:454",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_1000000000_by_1",
                "typeString": "int_const 1000000000"
              },
              "id": 138659,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 138657,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "546:2:454",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "39",
                "id": 138658,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "550:1:454",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_9_by_1",
                  "typeString": "int_const 9"
                },
                "value": "9"
              },
              "src": "546:5:454",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000_by_1",
                "typeString": "int_const 1000000000"
              }
            },
            "visibility": "public"
          },
          {
            "id": 138663,
            "nodeType": "VariableDeclaration",
            "src": "592:26:454",
            "nodes": [],
            "baseFunctions": [
              76461
            ],
            "constant": false,
            "documentation": {
              "id": 138661,
              "nodeType": "StructuredDocumentation",
              "src": "558:29:454",
              "text": "@inheritdoc ICamelotVault"
            },
            "functionSelector": "ef7d8037",
            "mutability": "mutable",
            "name": "positionNft",
            "nameLocation": "607:11:454",
            "scope": 139322,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 138662,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "592:7:454",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 138666,
            "nodeType": "VariableDeclaration",
            "src": "658:25:454",
            "nodes": [],
            "baseFunctions": [
              76467
            ],
            "constant": false,
            "documentation": {
              "id": 138664,
              "nodeType": "StructuredDocumentation",
              "src": "624:29:454",
              "text": "@inheritdoc ICamelotVault"
            },
            "functionSelector": "090f9221",
            "mutability": "mutable",
            "name": "erc20Vault",
            "nameLocation": "673:10:454",
            "scope": 139322,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 138665,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "658:7:454",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 138670,
            "nodeType": "VariableDeclaration",
            "src": "724:67:454",
            "nodes": [],
            "baseFunctions": [
              76474
            ],
            "constant": false,
            "documentation": {
              "id": 138667,
              "nodeType": "StructuredDocumentation",
              "src": "690:29:454",
              "text": "@inheritdoc ICamelotVault"
            },
            "functionSelector": "791b98bc",
            "mutability": "immutable",
            "name": "positionManager",
            "nameLocation": "776:15:454",
            "scope": 139322,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
              "typeString": "contract IAlgebraNonfungiblePositionManager"
            },
            "typeName": {
              "id": 138669,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 138668,
                "name": "IAlgebraNonfungiblePositionManager",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 54152,
                "src": "724:34:454"
              },
              "referencedDeclaration": 54152,
              "src": "724:34:454",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
                "typeString": "contract IAlgebraNonfungiblePositionManager"
              }
            },
            "visibility": "public"
          },
          {
            "id": 138674,
            "nodeType": "VariableDeclaration",
            "src": "831:40:454",
            "nodes": [],
            "baseFunctions": [
              76481
            ],
            "constant": false,
            "documentation": {
              "id": 138671,
              "nodeType": "StructuredDocumentation",
              "src": "797:29:454",
              "text": "@inheritdoc ICamelotVault"
            },
            "functionSelector": "c45a0155",
            "mutability": "immutable",
            "name": "factory",
            "nameLocation": "864:7:454",
            "scope": 139322,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IAlgebraFactory_$53926",
              "typeString": "contract IAlgebraFactory"
            },
            "typeName": {
              "id": 138673,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 138672,
                "name": "IAlgebraFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 53926,
                "src": "831:15:454"
              },
              "referencedDeclaration": 53926,
              "src": "831:15:454",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAlgebraFactory_$53926",
                "typeString": "contract IAlgebraFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 138678,
            "nodeType": "VariableDeclaration",
            "src": "911:38:454",
            "nodes": [],
            "baseFunctions": [
              76488
            ],
            "constant": false,
            "documentation": {
              "id": 138675,
              "nodeType": "StructuredDocumentation",
              "src": "877:29:454",
              "text": "@inheritdoc ICamelotVault"
            },
            "functionSelector": "63b0e66a",
            "mutability": "immutable",
            "name": "helper",
            "nameLocation": "943:6:454",
            "scope": 139322,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ICamelotHelper_$75741",
              "typeString": "contract ICamelotHelper"
            },
            "typeName": {
              "id": 138677,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 138676,
                "name": "ICamelotHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 75741,
                "src": "911:14:454"
              },
              "referencedDeclaration": 75741,
              "src": "911:14:454",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICamelotHelper_$75741",
                "typeString": "contract ICamelotHelper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 138682,
            "nodeType": "VariableDeclaration",
            "src": "990:24:454",
            "nodes": [],
            "baseFunctions": [
              76495
            ],
            "constant": false,
            "documentation": {
              "id": 138679,
              "nodeType": "StructuredDocumentation",
              "src": "956:29:454",
              "text": "@inheritdoc ICamelotVault"
            },
            "functionSelector": "16f0115b",
            "mutability": "mutable",
            "name": "pool",
            "nameLocation": "1010:4:454",
            "scope": 139322,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IAlgebraPool_$54174",
              "typeString": "contract IAlgebraPool"
            },
            "typeName": {
              "id": 138681,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 138680,
                "name": "IAlgebraPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 54174,
                "src": "990:12:454"
              },
              "referencedDeclaration": 54174,
              "src": "990:12:454",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAlgebraPool_$54174",
                "typeString": "contract IAlgebraPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 138708,
            "nodeType": "FunctionDefinition",
            "src": "1090:228:454",
            "nodes": [],
            "body": {
              "id": 138707,
              "nodeType": "Block",
              "src": "1179:139:454",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 138693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 138691,
                      "name": "positionManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138670,
                      "src": "1189:15:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
                        "typeString": "contract IAlgebraNonfungiblePositionManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 138692,
                      "name": "positionManager_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138685,
                      "src": "1207:16:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
                        "typeString": "contract IAlgebraNonfungiblePositionManager"
                      }
                    },
                    "src": "1189:34:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
                      "typeString": "contract IAlgebraNonfungiblePositionManager"
                    }
                  },
                  "id": 138694,
                  "nodeType": "ExpressionStatement",
                  "src": "1189:34:454"
                },
                {
                  "expression": {
                    "id": 138701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 138695,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138674,
                      "src": "1233:7:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAlgebraFactory_$53926",
                        "typeString": "contract IAlgebraFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 138697,
                              "name": "positionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138670,
                              "src": "1259:15:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
                                "typeString": "contract IAlgebraNonfungiblePositionManager"
                              }
                            },
                            "id": 138698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "factory",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54316,
                            "src": "1259:23:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 138699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1259:25:454",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 138696,
                        "name": "IAlgebraFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53926,
                        "src": "1243:15:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IAlgebraFactory_$53926_$",
                          "typeString": "type(contract IAlgebraFactory)"
                        }
                      },
                      "id": 138700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1243:42:454",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAlgebraFactory_$53926",
                        "typeString": "contract IAlgebraFactory"
                      }
                    },
                    "src": "1233:52:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraFactory_$53926",
                      "typeString": "contract IAlgebraFactory"
                    }
                  },
                  "id": 138702,
                  "nodeType": "ExpressionStatement",
                  "src": "1233:52:454"
                },
                {
                  "expression": {
                    "id": 138705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 138703,
                      "name": "helper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138678,
                      "src": "1295:6:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICamelotHelper_$75741",
                        "typeString": "contract ICamelotHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 138704,
                      "name": "helper_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138688,
                      "src": "1304:7:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICamelotHelper_$75741",
                        "typeString": "contract ICamelotHelper"
                      }
                    },
                    "src": "1295:16:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICamelotHelper_$75741",
                      "typeString": "contract ICamelotHelper"
                    }
                  },
                  "id": 138706,
                  "nodeType": "ExpressionStatement",
                  "src": "1295:16:454"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 138689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138685,
                  "mutability": "mutable",
                  "name": "positionManager_",
                  "nameLocation": "1137:16:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 138708,
                  "src": "1102:51:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
                    "typeString": "contract IAlgebraNonfungiblePositionManager"
                  },
                  "typeName": {
                    "id": 138684,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 138683,
                      "name": "IAlgebraNonfungiblePositionManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54152,
                      "src": "1102:34:454"
                    },
                    "referencedDeclaration": 54152,
                    "src": "1102:34:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
                      "typeString": "contract IAlgebraNonfungiblePositionManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138688,
                  "mutability": "mutable",
                  "name": "helper_",
                  "nameLocation": "1170:7:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 138708,
                  "src": "1155:22:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICamelotHelper_$75741",
                    "typeString": "contract ICamelotHelper"
                  },
                  "typeName": {
                    "id": 138687,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 138686,
                      "name": "ICamelotHelper",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 75741,
                      "src": "1155:14:454"
                    },
                    "referencedDeclaration": 75741,
                    "src": "1155:14:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICamelotHelper_$75741",
                      "typeString": "contract ICamelotHelper"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1101:77:454"
            },
            "returnParameters": {
              "id": 138690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1179:0:454"
            },
            "scope": 139322,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 138781,
            "nodeType": "FunctionDefinition",
            "src": "1358:523:454",
            "nodes": [],
            "body": {
              "id": 138780,
              "nodeType": "Block",
              "src": "1483:398:454",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 138723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 138720,
                            "name": "vaultTokens_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138716,
                            "src": "1501:12:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 138721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1501:19:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 138722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1524:1:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1501:24:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 138724,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "1527:17:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 138725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "INVALID_VALUE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79426,
                        "src": "1527:31:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 138719,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1493:7:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 138726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1493:66:454",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138727,
                  "nodeType": "ExpressionStatement",
                  "src": "1493:66:454"
                },
                {
                  "expression": {
                    "id": 138730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 138728,
                      "name": "erc20Vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138666,
                      "src": "1569:10:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 138729,
                      "name": "erc20Vault_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138713,
                      "src": "1582:11:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1569:24:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 138731,
                  "nodeType": "ExpressionStatement",
                  "src": "1569:24:454"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 138733,
                        "name": "vaultTokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138716,
                        "src": "1615:12:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 138734,
                        "name": "nft_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138711,
                        "src": "1629:4:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 138732,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157383,
                      "src": "1603:11:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address[] memory,uint256)"
                      }
                    },
                    "id": 138735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1603:31:454",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138736,
                  "nodeType": "ExpressionStatement",
                  "src": "1603:31:454"
                },
                {
                  "body": {
                    "id": 138764,
                    "nodeType": "Block",
                    "src": "1676:115:454",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 138755,
                                  "name": "positionManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 138670,
                                  "src": "1744:15:454",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
                                    "typeString": "contract IAlgebraNonfungiblePositionManager"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
                                    "typeString": "contract IAlgebraNonfungiblePositionManager"
                                  }
                                ],
                                "id": 138754,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1736:7:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 138753,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1736:7:454",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 138756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1736:24:454",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 138759,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1767:7:454",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 138758,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1767:7:454",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    }
                                  ],
                                  "id": 138757,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "1762:4:454",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 138760,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1762:13:454",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                                  "typeString": "type(uint256)"
                                }
                              },
                              "id": 138761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "1762:17:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 138748,
                                    "name": "vaultTokens_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 138716,
                                    "src": "1697:12:454",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 138750,
                                  "indexExpression": {
                                    "id": 138749,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 138738,
                                    "src": "1710:1:454",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1697:15:454",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 138747,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45207,
                                "src": "1690:6:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$45207_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 138751,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1690:23:454",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 138752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeIncreaseAllowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45409,
                            "src": "1690:45:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45207_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45207_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 138762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1690:90:454",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 138763,
                        "nodeType": "ExpressionStatement",
                        "src": "1690:90:454"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 138743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 138741,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138738,
                      "src": "1664:1:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 138742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1668:1:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "1664:5:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 138765,
                  "initializationExpression": {
                    "assignments": [
                      138738
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 138738,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1657:1:454",
                        "nodeType": "VariableDeclaration",
                        "scope": 138765,
                        "src": "1649:9:454",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 138737,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1649:7:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 138740,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 138739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1661:1:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1649:13:454"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 138745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1671:3:454",
                      "subExpression": {
                        "id": 138744,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138738,
                        "src": "1671:1:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 138746,
                    "nodeType": "ExpressionStatement",
                    "src": "1671:3:454"
                  },
                  "nodeType": "ForStatement",
                  "src": "1644:147:454"
                },
                {
                  "expression": {
                    "id": 138778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 138766,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138682,
                      "src": "1801:4:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAlgebraPool_$54174",
                        "typeString": "contract IAlgebraPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 138770,
                                "name": "vaultTokens_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 138716,
                                "src": "1840:12:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 138772,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 138771,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1853:1:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1840:15:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 138773,
                                "name": "vaultTokens_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 138716,
                                "src": "1857:12:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 138775,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 138774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1870:1:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1857:15:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 138768,
                              "name": "factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138674,
                              "src": "1821:7:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAlgebraFactory_$53926",
                                "typeString": "contract IAlgebraFactory"
                              }
                            },
                            "id": 138769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "poolByPair",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 53882,
                            "src": "1821:18:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                              "typeString": "function (address,address) view external returns (address)"
                            }
                          },
                          "id": 138776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1821:52:454",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 138767,
                        "name": "IAlgebraPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54174,
                        "src": "1808:12:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IAlgebraPool_$54174_$",
                          "typeString": "type(contract IAlgebraPool)"
                        }
                      },
                      "id": 138777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1808:66:454",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAlgebraPool_$54174",
                        "typeString": "contract IAlgebraPool"
                      }
                    },
                    "src": "1801:73:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAlgebraPool_$54174",
                      "typeString": "contract IAlgebraPool"
                    }
                  },
                  "id": 138779,
                  "nodeType": "ExpressionStatement",
                  "src": "1801:73:454"
                }
              ]
            },
            "baseFunctions": [
              76506
            ],
            "documentation": {
              "id": 138709,
              "nodeType": "StructuredDocumentation",
              "src": "1324:29:454",
              "text": "@inheritdoc ICamelotVault"
            },
            "functionSelector": "463e34be",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1367:10:454",
            "parameters": {
              "id": 138717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138711,
                  "mutability": "mutable",
                  "name": "nft_",
                  "nameLocation": "1395:4:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 138781,
                  "src": "1387:12:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138713,
                  "mutability": "mutable",
                  "name": "erc20Vault_",
                  "nameLocation": "1417:11:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 138781,
                  "src": "1409:19:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1409:7:454",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138716,
                  "mutability": "mutable",
                  "name": "vaultTokens_",
                  "nameLocation": "1455:12:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 138781,
                  "src": "1438:29:454",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 138714,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1438:7:454",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 138715,
                    "nodeType": "ArrayTypeName",
                    "src": "1438:9:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1377:96:454"
            },
            "returnParameters": {
              "id": 138718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1483:0:454"
            },
            "scope": 139322,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 138884,
            "nodeType": "FunctionDefinition",
            "src": "1923:931:454",
            "nodes": [],
            "body": {
              "id": 138883,
              "nodeType": "Block",
              "src": "2076:778:454",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 138802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 138796,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2094:3:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 138797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2094:10:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 138800,
                              "name": "positionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138670,
                              "src": "2116:15:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
                                "typeString": "contract IAlgebraNonfungiblePositionManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
                                "typeString": "contract IAlgebraNonfungiblePositionManager"
                              }
                            ],
                            "id": 138799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2108:7:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 138798,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2108:7:454",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 138801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2108:24:454",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2094:38:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 138803,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "2134:17:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 138804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "FORBIDDEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79414,
                        "src": "2134:27:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 138795,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2086:7:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 138805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2086:76:454",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138806,
                  "nodeType": "ExpressionStatement",
                  "src": "2086:76:454"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 138809,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138784,
                            "src": "2192:8:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 138808,
                          "name": "_isStrategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139288,
                          "src": "2180:11:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 138810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2180:21:454",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 138811,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "2203:17:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 138812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "FORBIDDEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79414,
                        "src": "2203:27:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 138807,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2172:7:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 138813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2172:59:454",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138814,
                  "nodeType": "ExpressionStatement",
                  "src": "2172:59:454"
                },
                {
                  "assignments": [
                    null,
                    null,
                    138816,
                    138818,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    null,
                    {
                      "constant": false,
                      "id": 138816,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "2255:6:454",
                      "nodeType": "VariableDeclaration",
                      "scope": 138883,
                      "src": "2247:14:454",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 138815,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2247:7:454",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 138818,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "2271:6:454",
                      "nodeType": "VariableDeclaration",
                      "scope": 138883,
                      "src": "2263:14:454",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 138817,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2263:7:454",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 138823,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 138821,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138788,
                        "src": "2321:7:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 138819,
                        "name": "positionManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138670,
                        "src": "2295:15:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
                          "typeString": "contract IAlgebraNonfungiblePositionManager"
                        }
                      },
                      "id": 138820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "positions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54019,
                      "src": "2295:25:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint88_$_t_address_$_t_address_$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint256) view external returns (uint88,address,address,address,int24,int24,uint128,uint256,uint256,uint128,uint128)"
                      }
                    },
                    "id": 138822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2295:34:454",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint88_$_t_address_$_t_address_$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint88,address,address,address,int24,int24,uint128,uint256,uint256,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2242:87:454"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 138835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 138829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 138825,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138816,
                            "src": "2347:6:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 138826,
                              "name": "_vaultTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157099,
                              "src": "2357:12:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 138828,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 138827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2370:1:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2357:15:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2347:25:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 138834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 138830,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138818,
                            "src": "2376:6:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 138831,
                              "name": "_vaultTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157099,
                              "src": "2386:12:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 138833,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 138832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2399:1:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2386:15:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2376:25:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2347:54:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 138836,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "2403:17:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 138837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "INVALID_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79435,
                        "src": "2403:31:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 138824,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2339:7:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 138838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2339:96:454",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138839,
                  "nodeType": "ExpressionStatement",
                  "src": "2339:96:454"
                },
                {
                  "assignments": [
                    138841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 138841,
                      "mutability": "mutable",
                      "name": "positionNft_",
                      "nameLocation": "2454:12:454",
                      "nodeType": "VariableDeclaration",
                      "scope": 138883,
                      "src": "2446:20:454",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 138840,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2446:7:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 138843,
                  "initialValue": {
                    "id": 138842,
                    "name": "positionNft",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 138663,
                    "src": "2469:11:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2446:34:454"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 138846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 138844,
                      "name": "positionNft_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138841,
                      "src": "2494:12:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 138845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2510:1:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2494:17:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 138874,
                  "nodeType": "IfStatement",
                  "src": "2490:280:454",
                  "trueBody": {
                    "id": 138873,
                    "nodeType": "Block",
                    "src": "2513:257:454",
                    "statements": [
                      {
                        "assignments": [
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          138848,
                          null,
                          null,
                          null,
                          null
                        ],
                        "declarations": [
                          null,
                          null,
                          null,
                          null,
                          null,
                          null,
                          {
                            "constant": false,
                            "id": 138848,
                            "mutability": "mutable",
                            "name": "liquidity",
                            "nameLocation": "2548:9:454",
                            "nodeType": "VariableDeclaration",
                            "scope": 138873,
                            "src": "2540:17:454",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "typeName": {
                              "id": 138847,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "2540:7:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "visibility": "internal"
                          },
                          null,
                          null,
                          null,
                          null
                        ],
                        "id": 138853,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 138851,
                              "name": "positionNft_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138841,
                              "src": "2595:12:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 138849,
                              "name": "positionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138670,
                              "src": "2569:15:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
                                "typeString": "contract IAlgebraNonfungiblePositionManager"
                              }
                            },
                            "id": 138850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "positions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54019,
                            "src": "2569:25:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint88_$_t_address_$_t_address_$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                              "typeString": "function (uint256) view external returns (uint88,address,address,address,int24,int24,uint128,uint256,uint256,uint128,uint128)"
                            }
                          },
                          "id": 138852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2569:39:454",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint88_$_t_address_$_t_address_$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
                            "typeString": "tuple(uint88,address,address,address,int24,int24,uint128,uint256,uint256,uint128,uint128)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2527:81:454"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 138857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 138855,
                                "name": "liquidity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 138848,
                                "src": "2630:9:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 138856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2643:1:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2630:14:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 138858,
                                "name": "ExceptionsLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79454,
                                "src": "2646:17:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                                  "typeString": "type(library ExceptionsLibrary)"
                                }
                              },
                              "id": 138859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "INVALID_VALUE",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 79426,
                              "src": "2646:31:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 138854,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2622:7:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 138860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2622:56:454",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 138861,
                        "nodeType": "ExpressionStatement",
                        "src": "2622:56:454"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 138867,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2733:4:454",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CamelotVault_$139322",
                                    "typeString": "contract CamelotVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CamelotVault_$139322",
                                    "typeString": "contract CamelotVault"
                                  }
                                ],
                                "id": 138866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2725:7:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 138865,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2725:7:454",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 138868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2725:13:454",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 138869,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138786,
                              "src": "2740:4:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 138870,
                              "name": "positionNft_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138841,
                              "src": "2746:12:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 138862,
                              "name": "positionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138670,
                              "src": "2692:15:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
                                "typeString": "contract IAlgebraNonfungiblePositionManager"
                              }
                            },
                            "id": 138864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46642,
                            "src": "2692:32:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 138871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2692:67:454",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 138872,
                        "nodeType": "ExpressionStatement",
                        "src": "2692:67:454"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 138877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 138875,
                      "name": "positionNft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138663,
                      "src": "2779:11:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 138876,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138788,
                      "src": "2793:7:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2779:21:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 138878,
                  "nodeType": "ExpressionStatement",
                  "src": "2779:21:454"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 138879,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "2817:4:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CamelotVault_$139322",
                          "typeString": "contract CamelotVault"
                        }
                      },
                      "id": 138880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 138884,
                      "src": "2817:21:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 138881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "2817:30:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 138794,
                  "id": 138882,
                  "nodeType": "Return",
                  "src": "2810:37:454"
                }
              ]
            },
            "baseFunctions": [
              46704
            ],
            "documentation": {
              "id": 138782,
              "nodeType": "StructuredDocumentation",
              "src": "1887:31:454",
              "text": "@inheritdoc IERC721Receiver"
            },
            "functionSelector": "150b7a02",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "1932:16:454",
            "parameters": {
              "id": 138791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138784,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1966:8:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 138884,
                  "src": "1958:16:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1958:7:454",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138786,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1992:4:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 138884,
                  "src": "1984:12:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1984:7:454",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138788,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2014:7:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 138884,
                  "src": "2006:15:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138787,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2006:7:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138790,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 138884,
                  "src": "2031:12:454",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 138789,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2031:5:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1948:101:454"
            },
            "returnParameters": {
              "id": 138794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138793,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 138884,
                  "src": "2068:6:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 138792,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2068:6:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2067:8:454"
            },
            "scope": 139322,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 138954,
            "nodeType": "FunctionDefinition",
            "src": "2894:650:454",
            "nodes": [],
            "body": {
              "id": 138953,
              "nodeType": "Block",
              "src": "2971:573:454",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    138892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 138892,
                      "mutability": "mutable",
                      "name": "positionNft_",
                      "nameLocation": "2989:12:454",
                      "nodeType": "VariableDeclaration",
                      "scope": 138953,
                      "src": "2981:20:454",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 138891,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2981:7:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 138894,
                  "initialValue": {
                    "id": 138893,
                    "name": "positionNft",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 138663,
                    "src": "3004:11:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2981:34:454"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 138897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 138895,
                      "name": "positionNft_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138892,
                      "src": "3029:12:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 138896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3045:1:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3029:17:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 138904,
                  "nodeType": "IfStatement",
                  "src": "3025:46:454",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 138901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3069:1:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 138900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3055:13:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 138898,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3059:7:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 138899,
                          "nodeType": "ArrayTypeName",
                          "src": "3059:9:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 138902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3055:16:454",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "functionReturnParameters": 138890,
                    "id": 138903,
                    "nodeType": "Return",
                    "src": "3048:23:454"
                  }
                },
                {
                  "expression": {
                    "id": 138911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 138905,
                      "name": "collectedFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138889,
                      "src": "3081:13:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 138909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3111:1:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 138908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3097:13:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 138906,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3101:7:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 138907,
                          "nodeType": "ArrayTypeName",
                          "src": "3101:9:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 138910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3097:16:454",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3081:32:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 138912,
                  "nodeType": "ExpressionStatement",
                  "src": "3081:32:454"
                },
                {
                  "expression": {
                    "id": 138938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "baseExpression": {
                            "id": 138913,
                            "name": "collectedFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138889,
                            "src": "3125:13:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 138915,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 138914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3139:1:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3125:16:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "baseExpression": {
                            "id": 138916,
                            "name": "collectedFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138889,
                            "src": "3143:13:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 138918,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 138917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3157:1:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3143:16:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 138919,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3124:36:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 138924,
                              "name": "positionNft_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138892,
                              "src": "3276:12:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 138925,
                              "name": "erc20Vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138666,
                              "src": "3317:10:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 138928,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3362:7:454",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint128_$",
                                      "typeString": "type(uint128)"
                                    },
                                    "typeName": {
                                      "id": 138927,
                                      "name": "uint128",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3362:7:454",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint128_$",
                                      "typeString": "type(uint128)"
                                    }
                                  ],
                                  "id": 138926,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "3357:4:454",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 138929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3357:13:454",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint128",
                                  "typeString": "type(uint128)"
                                }
                              },
                              "id": 138930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "3357:17:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 138933,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3409:7:454",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint128_$",
                                      "typeString": "type(uint128)"
                                    },
                                    "typeName": {
                                      "id": 138932,
                                      "name": "uint128",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3409:7:454",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_uint128_$",
                                      "typeString": "type(uint128)"
                                    }
                                  ],
                                  "id": 138931,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "3404:4:454",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 138934,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3404:13:454",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_uint128",
                                  "typeString": "type(uint128)"
                                }
                              },
                              "id": 138935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "max",
                              "nodeType": "MemberAccess",
                              "src": "3404:17:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "expression": {
                              "id": 138922,
                              "name": "IAlgebraNonfungiblePositionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54152,
                              "src": "3200:34:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IAlgebraNonfungiblePositionManager_$54152_$",
                                "typeString": "type(contract IAlgebraNonfungiblePositionManager)"
                              }
                            },
                            "id": 138923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "CollectParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54112,
                            "src": "3200:48:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_CollectParams_$54112_storage_ptr_$",
                              "typeString": "type(struct IAlgebraNonfungiblePositionManager.CollectParams storage pointer)"
                            }
                          },
                          "id": 138936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "tokenId",
                            "recipient",
                            "amount0Max",
                            "amount1Max"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "3200:236:454",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CollectParams_$54112_memory_ptr",
                            "typeString": "struct IAlgebraNonfungiblePositionManager.CollectParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_CollectParams_$54112_memory_ptr",
                            "typeString": "struct IAlgebraNonfungiblePositionManager.CollectParams memory"
                          }
                        ],
                        "expression": {
                          "id": 138920,
                          "name": "positionManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138670,
                          "src": "3163:15:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
                            "typeString": "contract IAlgebraNonfungiblePositionManager"
                          }
                        },
                        "id": 138921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "collect",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54123,
                        "src": "3163:23:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_CollectParams_$54112_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (struct IAlgebraNonfungiblePositionManager.CollectParams memory) payable external returns (uint256,uint256)"
                        }
                      },
                      "id": 138937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3163:283:454",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "3124:322:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138939,
                  "nodeType": "ExpressionStatement",
                  "src": "3124:322:454"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 138941,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "3479:2:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 138942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "3479:9:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 138943,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3490:3:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 138944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3490:10:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 138945,
                          "name": "collectedFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138889,
                          "src": "3502:13:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 138947,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 138946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3516:1:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3502:16:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 138948,
                          "name": "collectedFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138889,
                          "src": "3520:13:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 138950,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 138949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3534:1:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3520:16:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 138940,
                      "name": "CollectedEarnings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139310,
                      "src": "3461:17:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 138951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3461:76:454",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138952,
                  "nodeType": "EmitStatement",
                  "src": "3456:81:454"
                }
              ]
            },
            "baseFunctions": [
              76513
            ],
            "documentation": {
              "id": 138885,
              "nodeType": "StructuredDocumentation",
              "src": "2860:29:454",
              "text": "@inheritdoc ICamelotVault"
            },
            "functionSelector": "c27b2c2d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "collectEarnings",
            "nameLocation": "2903:15:454",
            "parameters": {
              "id": 138886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2918:2:454"
            },
            "returnParameters": {
              "id": 138890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138889,
                  "mutability": "mutable",
                  "name": "collectedFees",
                  "nameLocation": "2956:13:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 138954,
                  "src": "2939:30:454",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 138887,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2939:7:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 138888,
                    "nodeType": "ArrayTypeName",
                    "src": "2939:9:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2938:32:454"
            },
            "scope": 139322,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 138976,
            "nodeType": "FunctionDefinition",
            "src": "3644:214:454",
            "nodes": [],
            "body": {
              "id": 138975,
              "nodeType": "Block",
              "src": "3748:110:454",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 138969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 138964,
                      "name": "minTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138959,
                      "src": "3758:15:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 138967,
                          "name": "positionNft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138663,
                          "src": "3796:11:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 138965,
                          "name": "helper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138678,
                          "src": "3776:6:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICamelotHelper_$75741",
                            "typeString": "contract ICamelotHelper"
                          }
                        },
                        "id": 138966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "calculateTvl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 75691,
                        "src": "3776:19:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) view external returns (uint256[] memory)"
                        }
                      },
                      "id": 138968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3776:32:454",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3758:50:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 138970,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:50:454"
                },
                {
                  "expression": {
                    "id": 138973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 138971,
                      "name": "maxTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138962,
                      "src": "3818:15:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 138972,
                      "name": "minTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138959,
                      "src": "3836:15:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3818:33:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 138974,
                  "nodeType": "ExpressionStatement",
                  "src": "3818:33:454"
                }
              ]
            },
            "baseFunctions": [
              78591
            ],
            "documentation": {
              "id": 138955,
              "nodeType": "StructuredDocumentation",
              "src": "3617:22:454",
              "text": "@inheritdoc IVault"
            },
            "functionSelector": "e5328e06",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tvl",
            "nameLocation": "3653:3:454",
            "parameters": {
              "id": 138956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3656:2:454"
            },
            "returnParameters": {
              "id": 138963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138959,
                  "mutability": "mutable",
                  "name": "minTokenAmounts",
                  "nameLocation": "3697:15:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 138976,
                  "src": "3680:32:454",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 138957,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3680:7:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 138958,
                    "nodeType": "ArrayTypeName",
                    "src": "3680:9:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138962,
                  "mutability": "mutable",
                  "name": "maxTokenAmounts",
                  "nameLocation": "3731:15:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 138976,
                  "src": "3714:32:454",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 138960,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3714:7:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 138961,
                    "nodeType": "ArrayTypeName",
                    "src": "3714:9:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3679:68:454"
            },
            "scope": 139322,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 139001,
            "nodeType": "FunctionDefinition",
            "src": "3901:222:454",
            "nodes": [],
            "body": {
              "id": 139000,
              "nodeType": "Block",
              "src": "4011:112:454",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 138998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 138989,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138979,
                          "src": "4052:11:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 138987,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4028:5:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_CamelotVault_$139322_$",
                            "typeString": "type(contract super CamelotVault)"
                          }
                        },
                        "id": 138988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 149012,
                        "src": "4028:23:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 138990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4028:36:454",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 138996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 138991,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138979,
                            "src": "4069:11:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 138993,
                                  "name": "ICamelotVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76514,
                                  "src": "4089:13:454",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ICamelotVault_$76514_$",
                                    "typeString": "type(contract ICamelotVault)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_ICamelotVault_$76514_$",
                                    "typeString": "type(contract ICamelotVault)"
                                  }
                                ],
                                "id": 138992,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "4084:4:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 138994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4084:19:454",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_ICamelotVault_$76514",
                                "typeString": "type(contract ICamelotVault)"
                              }
                            },
                            "id": 138995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "4084:31:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "4069:46:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 138997,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4068:48:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4028:88:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 138986,
                  "id": 138999,
                  "nodeType": "Return",
                  "src": "4021:95:454"
                }
              ]
            },
            "baseFunctions": [
              48072,
              149012
            ],
            "documentation": {
              "id": 138977,
              "nodeType": "StructuredDocumentation",
              "src": "3864:32:454",
              "text": "@inheritdoc IntegrationVault"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3910:17:454",
            "overrides": {
              "id": 138983,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 138981,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48073,
                  "src": "3969:7:454"
                },
                {
                  "id": 138982,
                  "name": "IntegrationVault",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 149908,
                  "src": "3978:16:454"
                }
              ],
              "src": "3960:35:454"
            },
            "parameters": {
              "id": 138980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138979,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3935:11:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 139001,
                  "src": "3928:18:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 138978,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3928:6:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3927:20:454"
            },
            "returnParameters": {
              "id": 138986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138985,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 139001,
                  "src": "4005:4:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 138984,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4005:4:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4004:6:454"
            },
            "scope": 139322,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 139088,
            "nodeType": "FunctionDefinition",
            "src": "4198:1076:454",
            "nodes": [],
            "body": {
              "id": 139087,
              "nodeType": "Block",
              "src": "4358:916:454",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 139019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 139013,
                      "name": "actualTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139011,
                      "src": "4368:18:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 139017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4403:1:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 139016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4389:13:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 139014,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4393:7:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 139015,
                          "nodeType": "ArrayTypeName",
                          "src": "4393:9:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 139018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4389:16:454",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "4368:37:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 139020,
                  "nodeType": "ExpressionStatement",
                  "src": "4368:37:454"
                },
                {
                  "assignments": [
                    139022
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 139022,
                      "mutability": "mutable",
                      "name": "positionNft_",
                      "nameLocation": "4423:12:454",
                      "nodeType": "VariableDeclaration",
                      "scope": 139087,
                      "src": "4415:20:454",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 139021,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4415:7:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 139024,
                  "initialValue": {
                    "id": 139023,
                    "name": "positionNft",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 138663,
                    "src": "4438:11:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4415:34:454"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 139027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 139025,
                      "name": "positionNft_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139022,
                      "src": "4463:12:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 139026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4479:1:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4463:17:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 139030,
                  "nodeType": "IfStatement",
                  "src": "4459:48:454",
                  "trueBody": {
                    "expression": {
                      "id": 139028,
                      "name": "actualTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139011,
                      "src": "4489:18:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "functionReturnParameters": 139012,
                    "id": 139029,
                    "nodeType": "Return",
                    "src": "4482:25:454"
                  }
                },
                {
                  "assignments": [
                    139032,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 139032,
                      "mutability": "mutable",
                      "name": "sqrtRatioX96",
                      "nameLocation": "4526:12:454",
                      "nodeType": "VariableDeclaration",
                      "scope": 139087,
                      "src": "4518:20:454",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 139031,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "4518:7:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 139036,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 139033,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138682,
                        "src": "4554:4:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAlgebraPool_$54174",
                          "typeString": "contract IAlgebraPool"
                        }
                      },
                      "id": 139034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "globalState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56191,
                      "src": "4554:16:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "function () view external returns (uint160,int24,int24,uint16,uint16,uint8,bool)"
                      }
                    },
                    "id": 139035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4554:18:454",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                      "typeString": "tuple(uint160,int24,int24,uint16,uint16,uint8,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4517:55:454"
                },
                {
                  "assignments": [
                    139038
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 139038,
                      "mutability": "mutable",
                      "name": "liquidity",
                      "nameLocation": "4590:9:454",
                      "nodeType": "VariableDeclaration",
                      "scope": 139087,
                      "src": "4582:17:454",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 139037,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4582:7:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 139045,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 139041,
                        "name": "positionNft_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139022,
                        "src": "4633:12:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 139042,
                        "name": "sqrtRatioX96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139032,
                        "src": "4647:12:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "id": 139043,
                        "name": "tokenAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139004,
                        "src": "4661:12:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 139039,
                        "name": "helper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138678,
                        "src": "4602:6:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICamelotHelper_$75741",
                          "typeString": "contract ICamelotHelper"
                        }
                      },
                      "id": 139040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenAmountsToLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75716,
                      "src": "4602:30:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint160_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint128_$",
                        "typeString": "function (uint256,uint160,uint256[] memory) view external returns (uint128)"
                      }
                    },
                    "id": 139044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4602:72:454",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4582:92:454"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 139048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 139046,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139038,
                      "src": "4688:9:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 139047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4701:1:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4688:14:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 139051,
                  "nodeType": "IfStatement",
                  "src": "4684:45:454",
                  "trueBody": {
                    "expression": {
                      "id": 139049,
                      "name": "actualTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139011,
                      "src": "4711:18:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "functionReturnParameters": 139012,
                    "id": 139050,
                    "nodeType": "Return",
                    "src": "4704:25:454"
                  }
                },
                {
                  "assignments": [
                    139053,
                    139055,
                    139057
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 139053,
                      "mutability": "mutable",
                      "name": "amount0Min",
                      "nameLocation": "4748:10:454",
                      "nodeType": "VariableDeclaration",
                      "scope": 139087,
                      "src": "4740:18:454",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 139052,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4740:7:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 139055,
                      "mutability": "mutable",
                      "name": "amount1Min",
                      "nameLocation": "4768:10:454",
                      "nodeType": "VariableDeclaration",
                      "scope": 139087,
                      "src": "4760:18:454",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 139054,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4760:7:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 139057,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nameLocation": "4788:8:454",
                      "nodeType": "VariableDeclaration",
                      "scope": 139087,
                      "src": "4780:16:454",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 139056,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4780:7:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 139061,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 139059,
                        "name": "options",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139006,
                        "src": "4814:7:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 139058,
                      "name": "_parseOptions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139270,
                      "src": "4800:13:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (bytes memory) view returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 139060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4800:22:454",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4739:83:454"
                },
                {
                  "expression": {
                    "id": 139085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "baseExpression": {
                            "id": 139062,
                            "name": "actualTokenAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139011,
                            "src": "4835:18:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 139064,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 139063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4854:1:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "4835:21:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "baseExpression": {
                            "id": 139065,
                            "name": "actualTokenAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139011,
                            "src": "4858:18:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 139067,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 139066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4877:1:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "4858:21:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 139068,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4832:48:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 139073,
                              "name": "positionNft_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139022,
                              "src": "5016:12:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 139074,
                                "name": "tokenAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139004,
                                "src": "5062:12:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 139076,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 139075,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5075:1:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5062:15:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 139077,
                                "name": "tokenAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 139004,
                                "src": "5111:12:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 139079,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 139078,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5124:1:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5111:15:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 139080,
                              "name": "amount0Min",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139053,
                              "src": "5156:10:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 139081,
                              "name": "amount1Min",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139055,
                              "src": "5196:10:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 139082,
                              "name": "deadline",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139057,
                              "src": "5234:8:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 139071,
                              "name": "IAlgebraNonfungiblePositionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54152,
                              "src": "4930:34:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IAlgebraNonfungiblePositionManager_$54152_$",
                                "typeString": "type(contract IAlgebraNonfungiblePositionManager)"
                              }
                            },
                            "id": 139072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "IncreaseLiquidityParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54068,
                            "src": "4930:58:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_IncreaseLiquidityParams_$54068_storage_ptr_$",
                              "typeString": "type(struct IAlgebraNonfungiblePositionManager.IncreaseLiquidityParams storage pointer)"
                            }
                          },
                          "id": 139083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "tokenId",
                            "amount0Desired",
                            "amount1Desired",
                            "amount0Min",
                            "amount1Min",
                            "deadline"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "4930:327:454",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_IncreaseLiquidityParams_$54068_memory_ptr",
                            "typeString": "struct IAlgebraNonfungiblePositionManager.IncreaseLiquidityParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_IncreaseLiquidityParams_$54068_memory_ptr",
                            "typeString": "struct IAlgebraNonfungiblePositionManager.IncreaseLiquidityParams memory"
                          }
                        ],
                        "expression": {
                          "id": 139069,
                          "name": "positionManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138670,
                          "src": "4883:15:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
                            "typeString": "contract IAlgebraNonfungiblePositionManager"
                          }
                        },
                        "id": 139070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "increaseLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 54081,
                        "src": "4883:33:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_IncreaseLiquidityParams_$54068_memory_ptr_$returns$_t_uint128_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (struct IAlgebraNonfungiblePositionManager.IncreaseLiquidityParams memory) payable external returns (uint128,uint256,uint256)"
                        }
                      },
                      "id": 139084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4883:384:454",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint128,uint256,uint256)"
                      }
                    },
                    "src": "4832:435:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139086,
                  "nodeType": "ExpressionStatement",
                  "src": "4832:435:454"
                }
              ]
            },
            "baseFunctions": [
              149868
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_push",
            "nameLocation": "4207:5:454",
            "overrides": {
              "id": 139008,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4291:8:454"
            },
            "parameters": {
              "id": 139007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139004,
                  "mutability": "mutable",
                  "name": "tokenAmounts",
                  "nameLocation": "4230:12:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 139088,
                  "src": "4213:29:454",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 139002,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4213:7:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 139003,
                    "nodeType": "ArrayTypeName",
                    "src": "4213:9:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139006,
                  "mutability": "mutable",
                  "name": "options",
                  "nameLocation": "4257:7:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 139088,
                  "src": "4244:20:454",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 139005,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4244:5:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4212:53:454"
            },
            "returnParameters": {
              "id": 139012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139011,
                  "mutability": "mutable",
                  "name": "actualTokenAmounts",
                  "nameLocation": "4334:18:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 139088,
                  "src": "4317:35:454",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 139009,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4317:7:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 139010,
                    "nodeType": "ArrayTypeName",
                    "src": "4317:9:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4316:37:454"
            },
            "scope": 139322,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 139222,
            "nodeType": "FunctionDefinition",
            "src": "5280:1595:454",
            "nodes": [],
            "body": {
              "id": 139221,
              "nodeType": "Block",
              "src": "5454:1421:454",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    139103
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 139103,
                      "mutability": "mutable",
                      "name": "positionNft_",
                      "nameLocation": "5472:12:454",
                      "nodeType": "VariableDeclaration",
                      "scope": 139221,
                      "src": "5464:20:454",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 139102,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5464:7:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 139105,
                  "initialValue": {
                    "id": 139104,
                    "name": "positionNft",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 138663,
                    "src": "5487:11:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5464:34:454"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 139108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 139106,
                      "name": "positionNft_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139103,
                      "src": "5512:12:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 139107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5528:1:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5512:17:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 139116,
                  "nodeType": "IfStatement",
                  "src": "5508:71:454",
                  "trueBody": {
                    "id": 139115,
                    "nodeType": "Block",
                    "src": "5531:48:454",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "32",
                              "id": 139112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5566:1:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 139111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "5552:13:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 139109,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5556:7:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 139110,
                              "nodeType": "ArrayTypeName",
                              "src": "5556:9:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 139113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5552:16:454",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "functionReturnParameters": 139101,
                        "id": 139114,
                        "nodeType": "Return",
                        "src": "5545:23:454"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    139118,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 139118,
                      "mutability": "mutable",
                      "name": "sqrtRatioX96",
                      "nameLocation": "5598:12:454",
                      "nodeType": "VariableDeclaration",
                      "scope": 139221,
                      "src": "5590:20:454",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 139117,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "5590:7:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null,
                    null,
                    null,
                    null
                  ],
                  "id": 139122,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 139119,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138682,
                        "src": "5626:4:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAlgebraPool_$54174",
                          "typeString": "contract IAlgebraPool"
                        }
                      },
                      "id": 139120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "globalState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56191,
                      "src": "5626:16:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "function () view external returns (uint160,int24,int24,uint16,uint16,uint8,bool)"
                      }
                    },
                    "id": 139121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5626:18:454",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                      "typeString": "tuple(uint160,int24,int24,uint16,uint16,uint8,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5589:55:454"
                },
                {
                  "assignments": [
                    139124
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 139124,
                      "mutability": "mutable",
                      "name": "liquidityToPull",
                      "nameLocation": "5662:15:454",
                      "nodeType": "VariableDeclaration",
                      "scope": 139221,
                      "src": "5654:23:454",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 139123,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "5654:7:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 139131,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 139127,
                        "name": "positionNft_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139103,
                        "src": "5712:12:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 139128,
                        "name": "sqrtRatioX96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139118,
                        "src": "5726:12:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "id": 139129,
                        "name": "tokenAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139093,
                        "src": "5740:12:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 139125,
                        "name": "helper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138678,
                        "src": "5680:6:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICamelotHelper_$75741",
                          "typeString": "contract ICamelotHelper"
                        }
                      },
                      "id": 139126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "calculateLiquidityToPull",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 75740,
                      "src": "5680:31:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint160_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint128_$",
                        "typeString": "function (uint256,uint160,uint256[] memory) view external returns (uint128)"
                      }
                    },
                    "id": 139130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5680:73:454",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5654:99:454"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 139134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 139132,
                      "name": "liquidityToPull",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139124,
                      "src": "5768:15:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 139133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5787:1:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5768:20:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 139159,
                  "nodeType": "IfStatement",
                  "src": "5764:509:454",
                  "trueBody": {
                    "id": 139158,
                    "nodeType": "Block",
                    "src": "5790:483:454",
                    "statements": [
                      {
                        "assignments": [
                          139136,
                          139138,
                          139140
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 139136,
                            "mutability": "mutable",
                            "name": "amount0Min",
                            "nameLocation": "5813:10:454",
                            "nodeType": "VariableDeclaration",
                            "scope": 139158,
                            "src": "5805:18:454",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 139135,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5805:7:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 139138,
                            "mutability": "mutable",
                            "name": "amount1Min",
                            "nameLocation": "5833:10:454",
                            "nodeType": "VariableDeclaration",
                            "scope": 139158,
                            "src": "5825:18:454",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 139137,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5825:7:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 139140,
                            "mutability": "mutable",
                            "name": "deadline",
                            "nameLocation": "5853:8:454",
                            "nodeType": "VariableDeclaration",
                            "scope": 139158,
                            "src": "5845:16:454",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 139139,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5845:7:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 139144,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 139142,
                              "name": "options",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139095,
                              "src": "5879:7:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 139141,
                            "name": "_parseOptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139270,
                            "src": "5865:13:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                              "typeString": "function (bytes memory) view returns (uint256,uint256,uint256)"
                            }
                          },
                          "id": 139143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5865:22:454",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5804:83:454"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 139150,
                                  "name": "positionNft",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 138663,
                                  "src": "6042:11:454",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 139151,
                                  "name": "liquidityToPull",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 139124,
                                  "src": "6086:15:454",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                {
                                  "id": 139152,
                                  "name": "amount0Min",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 139136,
                                  "src": "6135:10:454",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 139153,
                                  "name": "amount1Min",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 139138,
                                  "src": "6179:10:454",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 139154,
                                  "name": "deadline",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 139140,
                                  "src": "6221:8:454",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 139148,
                                  "name": "IAlgebraNonfungiblePositionManager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54152,
                                  "src": "5952:34:454",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IAlgebraNonfungiblePositionManager_$54152_$",
                                    "typeString": "type(contract IAlgebraNonfungiblePositionManager)"
                                  }
                                },
                                "id": 139149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "DecreaseLiquidityParams",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 54092,
                                "src": "5952:58:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_DecreaseLiquidityParams_$54092_storage_ptr_$",
                                  "typeString": "type(struct IAlgebraNonfungiblePositionManager.DecreaseLiquidityParams storage pointer)"
                                }
                              },
                              "id": 139155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "tokenId",
                                "liquidity",
                                "amount0Min",
                                "amount1Min",
                                "deadline"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "5952:296:454",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DecreaseLiquidityParams_$54092_memory_ptr",
                                "typeString": "struct IAlgebraNonfungiblePositionManager.DecreaseLiquidityParams memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_DecreaseLiquidityParams_$54092_memory_ptr",
                                "typeString": "struct IAlgebraNonfungiblePositionManager.DecreaseLiquidityParams memory"
                              }
                            ],
                            "expression": {
                              "id": 139145,
                              "name": "positionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 138670,
                              "src": "5901:15:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
                                "typeString": "contract IAlgebraNonfungiblePositionManager"
                              }
                            },
                            "id": 139147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decreaseLiquidity",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54103,
                            "src": "5901:33:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_struct$_DecreaseLiquidityParams_$54092_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (struct IAlgebraNonfungiblePositionManager.DecreaseLiquidityParams memory) payable external returns (uint256,uint256)"
                            }
                          },
                          "id": 139156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5901:361:454",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "id": 139157,
                        "nodeType": "ExpressionStatement",
                        "src": "5901:361:454"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    139161,
                    139163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 139161,
                      "mutability": "mutable",
                      "name": "amount0Collected",
                      "nameLocation": "6291:16:454",
                      "nodeType": "VariableDeclaration",
                      "scope": 139221,
                      "src": "6283:24:454",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 139160,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6283:7:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 139163,
                      "mutability": "mutable",
                      "name": "amount1Collected",
                      "nameLocation": "6317:16:454",
                      "nodeType": "VariableDeclaration",
                      "scope": 139221,
                      "src": "6309:24:454",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 139162,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6309:7:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 139182,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 139168,
                            "name": "positionNft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138663,
                            "src": "6450:11:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 139169,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139090,
                            "src": "6490:2:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 139172,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6527:7:454",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint128_$",
                                    "typeString": "type(uint128)"
                                  },
                                  "typeName": {
                                    "id": 139171,
                                    "name": "uint128",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6527:7:454",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint128_$",
                                    "typeString": "type(uint128)"
                                  }
                                ],
                                "id": 139170,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "6522:4:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 139173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6522:13:454",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint128",
                                "typeString": "type(uint128)"
                              }
                            },
                            "id": 139174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "6522:17:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 139177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6574:7:454",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint128_$",
                                    "typeString": "type(uint128)"
                                  },
                                  "typeName": {
                                    "id": 139176,
                                    "name": "uint128",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6574:7:454",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint128_$",
                                    "typeString": "type(uint128)"
                                  }
                                ],
                                "id": 139175,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "6569:4:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 139178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6569:13:454",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint128",
                                "typeString": "type(uint128)"
                              }
                            },
                            "id": 139179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "6569:17:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 139166,
                            "name": "IAlgebraNonfungiblePositionManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54152,
                            "src": "6374:34:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IAlgebraNonfungiblePositionManager_$54152_$",
                              "typeString": "type(contract IAlgebraNonfungiblePositionManager)"
                            }
                          },
                          "id": 139167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "CollectParams",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 54112,
                          "src": "6374:48:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_CollectParams_$54112_storage_ptr_$",
                            "typeString": "type(struct IAlgebraNonfungiblePositionManager.CollectParams storage pointer)"
                          }
                        },
                        "id": 139180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "tokenId",
                          "recipient",
                          "amount0Max",
                          "amount1Max"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "6374:227:454",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollectParams_$54112_memory_ptr",
                          "typeString": "struct IAlgebraNonfungiblePositionManager.CollectParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CollectParams_$54112_memory_ptr",
                          "typeString": "struct IAlgebraNonfungiblePositionManager.CollectParams memory"
                        }
                      ],
                      "expression": {
                        "id": 139164,
                        "name": "positionManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138670,
                        "src": "6337:15:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAlgebraNonfungiblePositionManager_$54152",
                          "typeString": "contract IAlgebraNonfungiblePositionManager"
                        }
                      },
                      "id": 139165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "collect",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 54123,
                      "src": "6337:23:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_CollectParams_$54112_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct IAlgebraNonfungiblePositionManager.CollectParams memory) payable external returns (uint256,uint256)"
                      }
                    },
                    "id": 139181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6337:274:454",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6282:329:454"
                },
                {
                  "expression": {
                    "id": 139189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 139183,
                      "name": "actualTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139100,
                      "src": "6621:18:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 139187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6656:1:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 139186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6642:13:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 139184,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6646:7:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 139185,
                          "nodeType": "ArrayTypeName",
                          "src": "6646:9:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 139188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6642:16:454",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "6621:37:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 139190,
                  "nodeType": "ExpressionStatement",
                  "src": "6621:37:454"
                },
                {
                  "expression": {
                    "id": 139204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 139191,
                        "name": "actualTokenAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139100,
                        "src": "6668:18:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 139193,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 139192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6687:1:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6668:21:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 139198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 139194,
                          "name": "amount0Collected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139161,
                          "src": "6692:16:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 139195,
                            "name": "tokenAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139093,
                            "src": "6711:12:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 139197,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 139196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6724:1:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6711:15:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6692:34:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "id": 139202,
                        "name": "amount0Collected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139161,
                        "src": "6747:16:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 139203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "6692:71:454",
                      "trueExpression": {
                        "baseExpression": {
                          "id": 139199,
                          "name": "tokenAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139093,
                          "src": "6729:12:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 139201,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 139200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6742:1:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6729:15:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6668:95:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 139205,
                  "nodeType": "ExpressionStatement",
                  "src": "6668:95:454"
                },
                {
                  "expression": {
                    "id": 139219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 139206,
                        "name": "actualTokenAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139100,
                        "src": "6773:18:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 139208,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 139207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6792:1:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6773:21:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 139213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 139209,
                          "name": "amount1Collected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139163,
                          "src": "6797:16:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 139210,
                            "name": "tokenAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139093,
                            "src": "6816:12:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 139212,
                          "indexExpression": {
                            "hexValue": "31",
                            "id": 139211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6829:1:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6816:15:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6797:34:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "id": 139217,
                        "name": "amount1Collected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139163,
                        "src": "6852:16:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 139218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "6797:71:454",
                      "trueExpression": {
                        "baseExpression": {
                          "id": 139214,
                          "name": "tokenAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139093,
                          "src": "6834:12:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 139216,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 139215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6847:1:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6834:15:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6773:95:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 139220,
                  "nodeType": "ExpressionStatement",
                  "src": "6773:95:454"
                }
              ]
            },
            "baseFunctions": [
              149882
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_pull",
            "nameLocation": "5289:5:454",
            "overrides": {
              "id": 139097,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5399:8:454"
            },
            "parameters": {
              "id": 139096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139090,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5312:2:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 139222,
                  "src": "5304:10:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 139089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5304:7:454",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139093,
                  "mutability": "mutable",
                  "name": "tokenAmounts",
                  "nameLocation": "5341:12:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 139222,
                  "src": "5324:29:454",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 139091,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5324:7:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 139092,
                    "nodeType": "ArrayTypeName",
                    "src": "5324:9:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139095,
                  "mutability": "mutable",
                  "name": "options",
                  "nameLocation": "5376:7:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 139222,
                  "src": "5363:20:454",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 139094,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5363:5:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5294:95:454"
            },
            "returnParameters": {
              "id": 139101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139100,
                  "mutability": "mutable",
                  "name": "actualTokenAmounts",
                  "nameLocation": "5434:18:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 139222,
                  "src": "5417:35:454",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 139098,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5417:7:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 139099,
                    "nodeType": "ArrayTypeName",
                    "src": "5417:9:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5416:37:454"
            },
            "scope": 139322,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 139270,
            "nodeType": "FunctionDefinition",
            "src": "6946:386:454",
            "nodes": [],
            "body": {
              "id": 139269,
              "nodeType": "Block",
              "src": "7115:217:454",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 139236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 139233,
                        "name": "options",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139224,
                        "src": "7129:7:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 139234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7129:14:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 139235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7147:1:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7129:19:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 139245,
                  "nodeType": "IfStatement",
                  "src": "7125:59:454",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "30",
                          "id": 139237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7158:1:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 139238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7161:1:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 139242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 139239,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7164:5:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 139240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "7164:15:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 139241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7182:1:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7164:19:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 139243,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7157:27:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_uint256_$",
                        "typeString": "tuple(int_const 0,int_const 0,uint256)"
                      }
                    },
                    "functionReturnParameters": 139232,
                    "id": 139244,
                    "nodeType": "Return",
                    "src": "7150:34:454"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 139252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 139247,
                            "name": "options",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139224,
                            "src": "7202:7:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 139248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7202:14:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_96_by_1",
                            "typeString": "int_const 96"
                          },
                          "id": 139251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3332",
                            "id": 139249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7220:2:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 139250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7225:1:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "7220:6:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_96_by_1",
                            "typeString": "int_const 96"
                          }
                        },
                        "src": "7202:24:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 139253,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "7228:17:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 139254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "INVALID_VALUE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79426,
                        "src": "7228:31:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 139246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7194:7:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 139255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7194:66:454",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139256,
                  "nodeType": "ExpressionStatement",
                  "src": "7194:66:454"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 139259,
                        "name": "options",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139224,
                        "src": "7288:7:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 139261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7298:7:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 139260,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7298:7:454",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 139263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7307:7:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 139262,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7307:7:454",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 139265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7316:7:454",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 139264,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7316:7:454",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 139266,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7297:27:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint256),type(uint256),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(uint256),type(uint256),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 139257,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "7277:3:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 139258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "7277:10:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 139267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7277:48:454",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 139232,
                  "id": 139268,
                  "nodeType": "Return",
                  "src": "7270:55:454"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_parseOptions",
            "nameLocation": "6955:13:454",
            "parameters": {
              "id": 139225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139224,
                  "mutability": "mutable",
                  "name": "options",
                  "nameLocation": "6982:7:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 139270,
                  "src": "6969:20:454",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 139223,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6969:5:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6968:22:454"
            },
            "returnParameters": {
              "id": 139232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139227,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 139270,
                  "src": "7051:7:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139226,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7051:7:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139229,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 139270,
                  "src": "7072:7:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7072:7:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139231,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 139270,
                  "src": "7093:7:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7093:7:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7037:73:454"
            },
            "scope": 139322,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 139288,
            "nodeType": "FunctionDefinition",
            "src": "7338:156:454",
            "nodes": [],
            "body": {
              "id": 139287,
              "nodeType": "Block",
              "src": "7402:92:454",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 139285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 139282,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157105,
                          "src": "7474:4:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 139277,
                                "name": "_vaultGovernance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 157096,
                                "src": "7419:16:454",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IVaultGovernance_$78668",
                                  "typeString": "contract IVaultGovernance"
                                }
                              },
                              "id": 139278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "internalParams",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 78649,
                              "src": "7419:31:454",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_InternalParams_$78614_memory_ptr_$",
                                "typeString": "function () view external returns (struct IVaultGovernance.InternalParams memory)"
                              }
                            },
                            "id": 139279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7419:33:454",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InternalParams_$78614_memory_ptr",
                              "typeString": "struct IVaultGovernance.InternalParams memory"
                            }
                          },
                          "id": 139280,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "registry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78610,
                          "src": "7419:42:454",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVaultRegistry_$53012",
                            "typeString": "contract IVaultRegistry"
                          }
                        },
                        "id": 139281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getApproved",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 46676,
                        "src": "7419:54:454",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view external returns (address)"
                        }
                      },
                      "id": 139283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7419:60:454",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 139284,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139272,
                      "src": "7483:4:454",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7419:68:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 139276,
                  "id": 139286,
                  "nodeType": "Return",
                  "src": "7412:75:454"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isStrategy",
            "nameLocation": "7347:11:454",
            "parameters": {
              "id": 139273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139272,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "7367:4:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 139288,
                  "src": "7359:12:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 139271,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7359:7:454",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7358:14:454"
            },
            "returnParameters": {
              "id": 139276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139275,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 139288,
                  "src": "7396:4:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 139274,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7396:4:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7395:6:454"
            },
            "scope": 139322,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 139299,
            "nodeType": "FunctionDefinition",
            "src": "7500:105:454",
            "nodes": [],
            "body": {
              "id": 139298,
              "nodeType": "Block",
              "src": "7576:29:454",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 139296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7593:5:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 139295,
                  "id": 139297,
                  "nodeType": "Return",
                  "src": "7586:12:454"
                }
              ]
            },
            "baseFunctions": [
              149856
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isReclaimForbidden",
            "nameLocation": "7509:19:454",
            "overrides": {
              "id": 139292,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7552:8:454"
            },
            "parameters": {
              "id": 139291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 139299,
                  "src": "7529:7:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 139289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7529:7:454",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7528:9:454"
            },
            "returnParameters": {
              "id": 139295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139294,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 139299,
                  "src": "7570:4:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 139293,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7570:4:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7569:6:454"
            },
            "scope": 139322,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 139310,
            "nodeType": "EventDefinition",
            "src": "7877:106:454",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 139300,
              "nodeType": "StructuredDocumentation",
              "src": "7611:261:454",
              "text": "@notice Emitted when earnings are collected\n @param origin Origin of the transaction (tx.origin)\n @param sender Sender of the call (msg.sender)\n @param amount0 Amount of token0 collected\n @param amount1 Amount of token1 collected"
            },
            "name": "CollectedEarnings",
            "nameLocation": "7883:17:454",
            "parameters": {
              "id": 139309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139302,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "origin",
                  "nameLocation": "7917:6:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 139310,
                  "src": "7901:22:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 139301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7901:7:454",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139304,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7941:6:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 139310,
                  "src": "7925:22:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 139303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7925:7:454",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139306,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "7957:7:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 139310,
                  "src": "7949:15:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7949:7:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139308,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "7974:7:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 139310,
                  "src": "7966:15:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7966:7:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7900:82:454"
            }
          },
          {
            "id": 139321,
            "nodeType": "EventDefinition",
            "src": "8287:105:454",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 139311,
              "nodeType": "StructuredDocumentation",
              "src": "7989:293:454",
              "text": "@notice Emitted when rewards are collected\n @param origin Origin of the transaction (tx.origin)\n @param sender Sender of the call (msg.sender)\n @param amount0 Amount of collected rewardTokenToUnderlying\n @param amount1 Amount of collected bonusTokenToUnderlying"
            },
            "name": "CollectedRewards",
            "nameLocation": "8293:16:454",
            "parameters": {
              "id": 139320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139313,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "origin",
                  "nameLocation": "8326:6:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 139321,
                  "src": "8310:22:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 139312,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8310:7:454",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139315,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "8350:6:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 139321,
                  "src": "8334:22:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 139314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8334:7:454",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139317,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "8366:7:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 139321,
                  "src": "8358:15:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8358:7:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139319,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "8383:7:454",
                  "nodeType": "VariableDeclaration",
                  "scope": 139321,
                  "src": "8375:15:454",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8375:7:454",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8309:82:454"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 138643,
              "name": "ICamelotVault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 76514,
              "src": "406:13:454"
            },
            "id": 138644,
            "nodeType": "InheritanceSpecifier",
            "src": "406:13:454"
          },
          {
            "baseName": {
              "id": 138645,
              "name": "IntegrationVault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 149908,
              "src": "421:16:454"
            },
            "id": 138646,
            "nodeType": "InheritanceSpecifier",
            "src": "421:16:454"
          }
        ],
        "canonicalName": "CamelotVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 138642,
          "nodeType": "StructuredDocumentation",
          "src": "304:77:454",
          "text": "@notice Vault that interfaces Camelot protocol in the integration layer."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          139322,
          149908,
          157396,
          48061,
          44542,
          76514,
          77767,
          64026,
          78599,
          48073,
          46705
        ],
        "name": "CamelotVault",
        "nameLocation": "390:12:454",
        "scope": 139323,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 454
}