{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "nextTick",
          "type": "int24"
        },
        {
          "internalType": "bool",
          "name": "zeroToOne",
          "type": "bool"
        }
      ],
      "name": "cross",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "currentTimestamp",
          "type": "uint32"
        }
      ],
      "name": "increaseCumulative",
      "outputs": [
        {
          "internalType": "enum IAlgebraVirtualPool.Status",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "cross(int24,bool)": "01342b19",
    "increaseCumulative(uint32)": "7f376059"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"nextTick\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"zeroToOne\",\"type\":\"bool\"}],\"name\":\"cross\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"currentTimestamp\",\"type\":\"uint32\"}],\"name\":\"increaseCumulative\",\"outputs\":[{\"internalType\":\"enum IAlgebraVirtualPool.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"cross(int24,bool)\":{\"details\":\"This function is called by the main pool when an initialized tick is crossed there. If the tick is also initialized in a virtual pool it should be crossed too\",\"params\":{\"nextTick\":\"The crossed tick\",\"zeroToOne\":\"The direction\"}},\"increaseCumulative(uint32)\":{\"details\":\"This function is called from the main pool before every swap To increase seconds per liquidity cumulative considering previous timestamp and liquidity. The liquidity is stored in a virtual pool\",\"params\":{\"currentTimestamp\":\"The timestamp of the current swap\"},\"returns\":{\"_0\":\"Status The status of virtual pool\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/external/quickswap/IAlgebraVirtualPool.sol\":\"IAlgebraVirtualPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/interfaces/external/quickswap/IAlgebraVirtualPool.sol\":{\"keccak256\":\"0x4c3e6cd89e7578df2496425787acc67c4275a586dcfc37510fc11f7a24e43407\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://87820690aa1df0506525236cfa979147d26ae7641a0cfee176fbc481c3b43676\",\"dweb:/ipfs/QmZEszmYZR15tRVCWheS62cw8VbBF4pBL1DJEp8E31ftsR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "int24",
              "name": "nextTick",
              "type": "int24"
            },
            {
              "internalType": "bool",
              "name": "zeroToOne",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cross"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "currentTimestamp",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseCumulative",
          "outputs": [
            {
              "internalType": "enum IAlgebraVirtualPool.Status",
              "name": "",
              "type": "uint8"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "cross(int24,bool)": {
            "details": "This function is called by the main pool when an initialized tick is crossed there. If the tick is also initialized in a virtual pool it should be crossed too",
            "params": {
              "nextTick": "The crossed tick",
              "zeroToOne": "The direction"
            }
          },
          "increaseCumulative(uint32)": {
            "details": "This function is called from the main pool before every swap To increase seconds per liquidity cumulative considering previous timestamp and liquidity. The liquidity is stored in a virtual pool",
            "params": {
              "currentTimestamp": "The timestamp of the current swap"
            },
            "returns": {
              "_0": "Status The status of virtual pool"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/external/quickswap/IAlgebraVirtualPool.sol": "IAlgebraVirtualPool"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/external/quickswap/IAlgebraVirtualPool.sol": {
        "keccak256": "0x4c3e6cd89e7578df2496425787acc67c4275a586dcfc37510fc11f7a24e43407",
        "urls": [
          "bzz-raw://87820690aa1df0506525236cfa979147d26ae7641a0cfee176fbc481c3b43676",
          "dweb:/ipfs/QmZEszmYZR15tRVCWheS62cw8VbBF4pBL1DJEp8E31ftsR"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/external/quickswap/IAlgebraVirtualPool.sol",
    "id": 72633,
    "exportedSymbols": {
      "IAlgebraVirtualPool": [
        72632
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:900:281",
    "nodes": [
      {
        "id": 72610,
        "nodeType": "PragmaDirective",
        "src": "45:23:281",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 72632,
        "nodeType": "ContractDefinition",
        "src": "70:874:281",
        "nodes": [
          {
            "id": 72614,
            "nodeType": "EnumDefinition",
            "src": "106:74:281",
            "nodes": [],
            "canonicalName": "IAlgebraVirtualPool.Status",
            "members": [
              {
                "id": 72611,
                "name": "NOT_EXIST",
                "nameLocation": "128:9:281",
                "nodeType": "EnumValue",
                "src": "128:9:281"
              },
              {
                "id": 72612,
                "name": "ACTIVE",
                "nameLocation": "147:6:281",
                "nodeType": "EnumValue",
                "src": "147:6:281"
              },
              {
                "id": 72613,
                "name": "NOT_STARTED",
                "nameLocation": "163:11:281",
                "nodeType": "EnumValue",
                "src": "163:11:281"
              }
            ],
            "name": "Status",
            "nameLocation": "111:6:281"
          },
          {
            "id": 72622,
            "nodeType": "FunctionDefinition",
            "src": "458:56:281",
            "nodes": [],
            "documentation": {
              "id": 72615,
              "nodeType": "StructuredDocumentation",
              "src": "186:267:281",
              "text": " @dev This function is called by the main pool when an initialized tick is crossed there.\n If the tick is also initialized in a virtual pool it should be crossed too\n @param nextTick The crossed tick\n @param zeroToOne The direction"
            },
            "functionSelector": "01342b19",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cross",
            "nameLocation": "467:5:281",
            "parameters": {
              "id": 72620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72617,
                  "mutability": "mutable",
                  "name": "nextTick",
                  "nameLocation": "479:8:281",
                  "nodeType": "VariableDeclaration",
                  "scope": 72622,
                  "src": "473:14:281",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 72616,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:5:281",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72619,
                  "mutability": "mutable",
                  "name": "zeroToOne",
                  "nameLocation": "494:9:281",
                  "nodeType": "VariableDeclaration",
                  "scope": 72622,
                  "src": "489:14:281",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 72618,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:4:281",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "472:32:281"
            },
            "returnParameters": {
              "id": 72621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "513:0:281"
            },
            "scope": 72632,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 72631,
            "nodeType": "FunctionDefinition",
            "src": "863:79:281",
            "nodes": [],
            "documentation": {
              "id": 72623,
              "nodeType": "StructuredDocumentation",
              "src": "520:338:281",
              "text": " @dev This function is called from the main pool before every swap To increase seconds per liquidity\n cumulative considering previous timestamp and liquidity. The liquidity is stored in a virtual pool\n @param currentTimestamp The timestamp of the current swap\n @return Status The status of virtual pool"
            },
            "functionSelector": "7f376059",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "increaseCumulative",
            "nameLocation": "872:18:281",
            "parameters": {
              "id": 72626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72625,
                  "mutability": "mutable",
                  "name": "currentTimestamp",
                  "nameLocation": "898:16:281",
                  "nodeType": "VariableDeclaration",
                  "scope": 72631,
                  "src": "891:23:281",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 72624,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "891:6:281",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "890:25:281"
            },
            "returnParameters": {
              "id": 72630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72629,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72631,
                  "src": "934:6:281",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$72614",
                    "typeString": "enum IAlgebraVirtualPool.Status"
                  },
                  "typeName": {
                    "id": 72628,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 72627,
                      "name": "Status",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 72614,
                      "src": "934:6:281"
                    },
                    "referencedDeclaration": 72614,
                    "src": "934:6:281",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$72614",
                      "typeString": "enum IAlgebraVirtualPool.Status"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "933:8:281"
            },
            "scope": 72632,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IAlgebraVirtualPool",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          72632
        ],
        "name": "IAlgebraVirtualPool",
        "nameLocation": "80:19:281",
        "scope": 72633,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 281
}