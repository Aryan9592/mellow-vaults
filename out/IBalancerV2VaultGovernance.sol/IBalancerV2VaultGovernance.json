{
  "abi": [
    {
      "inputs": [],
      "name": "commitInternalParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pool_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "balancerVault_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "stakingLiquidityGauge_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "balancerMinter_",
          "type": "address"
        }
      ],
      "name": "createVault",
      "outputs": [
        {
          "internalType": "contract IBalancerV2Vault",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delayedProtocolParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedProtocolPerVaultParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedStrategyParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "internalParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "internalParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "assetInIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assetOutIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct IVault.BatchSwapStep[]",
              "name": "swaps",
              "type": "tuple[]"
            },
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ],
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple"
            },
            {
              "internalType": "contract IAggregatorV3",
              "name": "rewardOracle",
              "type": "address"
            },
            {
              "internalType": "contract IAggregatorV3",
              "name": "underlyingOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slippageD",
              "type": "uint256"
            }
          ],
          "internalType": "struct IBalancerV2VaultGovernance.StrategyParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "setStrategyParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "newParams",
          "type": "tuple"
        }
      ],
      "name": "stageInternalParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stagedInternalParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "strategyParams",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "assetInIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assetOutIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct IVault.BatchSwapStep[]",
              "name": "swaps",
              "type": "tuple[]"
            },
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ],
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple"
            },
            {
              "internalType": "contract IAggregatorV3",
              "name": "rewardOracle",
              "type": "address"
            },
            {
              "internalType": "contract IAggregatorV3",
              "name": "underlyingOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slippageD",
              "type": "uint256"
            }
          ],
          "internalType": "struct IBalancerV2VaultGovernance.StrategyParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "commitInternalParams()": "d4a07d34",
    "createVault(address[],address,address,address,address,address)": "c6be9b22",
    "delayedProtocolParamsTimestamp()": "e4af6e79",
    "delayedProtocolPerVaultParamsTimestamp(uint256)": "511ce798",
    "delayedStrategyParamsTimestamp(uint256)": "6707acee",
    "internalParams()": "7ac46fbb",
    "internalParamsTimestamp()": "1c7f4c73",
    "setStrategyParams(uint256,((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256))": "5c7017cc",
    "stageInternalParams((address,address,address))": "09946538",
    "stagedInternalParams()": "86c6be3e",
    "strategyParams(uint256)": "12466b68"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"commitInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"balancerVault_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakingLiquidityGauge_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"balancerMinter_\",\"type\":\"address\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"contract IBalancerV2Vault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedProtocolParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedProtocolPerVaultParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedStrategyParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"contract IAggregatorV3\",\"name\":\"rewardOracle\",\"type\":\"address\"},{\"internalType\":\"contract IAggregatorV3\",\"name\":\"underlyingOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippageD\",\"type\":\"uint256\"}],\"internalType\":\"struct IBalancerV2VaultGovernance.StrategyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"setStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"newParams\",\"type\":\"tuple\"}],\"name\":\"stageInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedInternalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"strategyParams\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"contract IAggregatorV3\",\"name\":\"rewardOracle\",\"type\":\"address\"},{\"internalType\":\"contract IAggregatorV3\",\"name\":\"underlyingOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippageD\",\"type\":\"uint256\"}],\"internalType\":\"struct IBalancerV2VaultGovernance.StrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"delayedStrategyParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"setStrategyParams(uint256,((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256))\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"stageInternalParams((address,address,address))\":{\"params\":{\"newParams\":\"New Internal Params\"}},\"stagedInternalParams()\":{\"details\":\"The Internal Params could be committed after internalParamsTimestamp\"},\"strategyParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"commitInternalParams()\":{\"notice\":\"Commit staged Internal Params.\"},\"delayedProtocolParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed.\"},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed.\"},\"delayedStrategyParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed.\"},\"internalParams()\":{\"notice\":\"Internal Params of the contract.\"},\"internalParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Internal Params could be committed.\"},\"setStrategyParams(uint256,((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256))\":{\"notice\":\"Delayed Strategy Params staged for commit after delay.\"},\"stageInternalParams((address,address,address))\":{\"notice\":\"Stage new Internal Params.\"},\"stagedInternalParams()\":{\"notice\":\"Staged new Internal Params.\"},\"strategyParams(uint256)\":{\"notice\":\"Delayed Strategy Params\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/vaults/IBalancerV2VaultGovernance.sol\":\"IBalancerV2VaultGovernance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281\",\"dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b\"]},\"src/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87\",\"dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk\"]},\"src/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50\",\"dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1\"]},\"src/interfaces/external/balancer/liquidity-mining/IBalancerMinter.sol\":{\"keccak256\":\"0x57c8b7d70735acf87d479398aa31fbd0c078835e59cb0db24fb75818d190052c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://73521a8258bdd64dddebdb2216b21fe2b684fa2edb5e97e5c117279f81ef9025\",\"dweb:/ipfs/QmW5kFvgKiqkxUJyWs7MZykKHjfBpthks9wha433dNeEQm\"]},\"src/interfaces/external/balancer/liquidity-mining/ILiquidityGauge.sol\":{\"keccak256\":\"0xa22f0c0868adb9d06d097ecb0a8d8370a6e59d223ef1e07a58340191c402e9ea\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://558942e9f7ff6c6f2becffc28da21bf897e043ceea6bed95d2a362e0eceedbe6\",\"dweb:/ipfs/QmU51CezK36UmBpArAcBmXrDmC5ozDmTrconGfj8pr8NYL\"]},\"src/interfaces/external/balancer/liquidity-mining/IRewardTokenDistributor.sol\":{\"keccak256\":\"0xd9476c8423eab4c40a3f4a25d343c7ab194985ef5ad2498758ae8cfd569dcd2a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4eedabb61c239ecd3e6f2b675cf176db87bbd2b8e54f6190f47001a1a455f875\",\"dweb:/ipfs/QmRsR9KiVJWBuQK3EBRfCVxdDZBTYmfK7CeBebdkeBX6HE\"]},\"src/interfaces/external/balancer/liquidity-mining/IStakingLiquidityGauge.sol\":{\"keccak256\":\"0xa99cdc7d85b012b7d64eb26a4dafde52314bfe9162973eb66d0bd9241b342877\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bb5a8c580619a9cb730fe9d333d424db6ed9f5187ba7729beb0df474a64f6733\",\"dweb:/ipfs/QmboYxDELyqkNW7jjb8Ut5g7meDA1HcxsKsX5zmPNyFBPr\"]},\"src/interfaces/external/balancer/pool-stable/StablePoolUserData.sol\":{\"keccak256\":\"0x0503d49c1242d38b10cb896d34d85a0bab80c5ce3f253016f4bb51833c359cc0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f196af8f3d311b83993cbf85866597358635d5619b25bf33f863be7f093b087c\",\"dweb:/ipfs/QmSFcZUB1Lv4h4G89N2wR2yAgumtc2CszhRpnYcvYfzpmT\"]},\"src/interfaces/external/balancer/pool-utils/IManagedPool.sol\":{\"keccak256\":\"0x09b700bb2a67ad9cc0e19455a7d55d4e2efeaaa380e19969dcc7acceb795fd4f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7b013e3dee42088da1b696c5f652535c4ebe68c86dbefc11573ff180df44d7d9\",\"dweb:/ipfs/QmR2yymvt2ACn3qz69gY3sMoUCY9zEnsR4kBF1489cw2si\"]},\"src/interfaces/external/balancer/pool-weighted/WeightedPoolUserData.sol\":{\"keccak256\":\"0xa14005e22ad66472bfe0552caa51b47811c0cee43d7f8ae20811aff63816766b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a694b1a00727ce3e694782623eef5c48a1e5b095ceeaed0b33d73685ab69f392\",\"dweb:/ipfs/QmWuTEoUxU2D3y1ASnLdZnGb7joRsjn9RimizT19FVieot\"]},\"src/interfaces/external/balancer/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x8032fd6d7f660d9536d252897336462bb932d1e91bd3b87c087be017a35dc842\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3724cffd85daa36371999e0e9ea56617df12fd7f2cc5c123139705766e3b89a1\",\"dweb:/ipfs/QmaM2wHuKrpKcc8mRhdYmXqPVAimHjGK1xubPWXKafiKYa\"]},\"src/interfaces/external/balancer/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x52bd09272e9ec2cff838df757e8b690ff4ca3f4f07e9edd9b711e31e474dd979\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://92ae86c99ce4b92fc666a4c6053bc5ae2932d07b23471647cae7c541c68071b3\",\"dweb:/ipfs/QmeKHMVTVLfG5MKQ7ewM7uwB41WEXkDKhkkL3qCd7mokFo\"]},\"src/interfaces/external/balancer/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xf952ad04a5d4e8523212315e19b8d874e13ceadb7dbc1f5025510da1e153405c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://81d7e364e8c7a76879f9be650559d3de53879918ab721372931d0e51daa464b5\",\"dweb:/ipfs/QmNyXjvxr3cXzVeBaPrApS9fdjufyN6dXtjGy746xxtj2z\"]},\"src/interfaces/external/balancer/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x90278f677649701309ab0902f5bca2fd0d9603e5ce7193b15cf05a7c5582c3b9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://991dce71671de9fb0f5fafda69994705e358a5cb235bc3acf961dbc9895b6dd6\",\"dweb:/ipfs/QmP7479cjgvMa2DjXNSB6gvHZ2WibU4TGb3DTjqw6UuFb6\"]},\"src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"src/interfaces/external/balancer/vault/IAsset.sol\":{\"keccak256\":\"0x746354db670eb3b94179963b522c4deb0b9854483ab293e3025689749923ebef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bcd5a7e0519f94c25f4e3b568b8c0446b2240bd3808c56c3b498a6fed459b2e4\",\"dweb:/ipfs/QmRXvcCy9oKhwPMr8QQ74pg9jormcgq3GHmLSGTDhUWAsn\"]},\"src/interfaces/external/balancer/vault/IAuthorizer.sol\":{\"keccak256\":\"0x4adfebbc478ab323d0679386ef8e2384f5205eb280f72757c151eca62ea4f91b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://49a34c9ad9cb559931b465cea2d570ab015751c6dbc4a52eab8c36b5b949eec1\",\"dweb:/ipfs/QmUiUSZz8gjANUcTqaPCfNkUp3gpjt8Qq2z4UWuQWhaK34\"]},\"src/interfaces/external/balancer/vault/IBasePool.sol\":{\"keccak256\":\"0x2a655dcb1150402a7446dc41a9ff2f3cf1ae5caa6d2384bddee08aac1d417e77\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c506e6beb0542dcb9861f3d4b524f2ff716cdcf5513b2132c24f954ee22f25c9\",\"dweb:/ipfs/QmcJ1dLRHbLMGiYvS8TH1W6G61beZy8MmiSvzFw11UxLQv\"]},\"src/interfaces/external/balancer/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xef16377e5ee7ac8151fe8abc3f7b8f0a420008ae1c1336f3cbaea5e171403a43\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ca460a387ce27682beecc1f93a07c7ef6139504f2d4e2fce715abe82b6d2b039\",\"dweb:/ipfs/QmS8QgcAqhtHepcf8LYGToutbhsUXaTE7UNLQQi4fBJsUC\"]},\"src/interfaces/external/balancer/vault/IPoolSwapStructs.sol\":{\"keccak256\":\"0x6bcc1ff0bbbe512e442e1f5a10c79e124a67fb2eae15c7ef2885679f30abfb06\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://cd2c36763fb58b288f317735ee23d464499c9c98056cca5c601ba0398c70a7b9\",\"dweb:/ipfs/QmUSgTJCuzNFrscqZZFWfLQsEvX6v2bqJ5piFQa4o8aiZy\"]},\"src/interfaces/external/balancer/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xa42e8b311517ce70dd7f2af6b497603a81c3dd678961a5ffd8a2968eff6b7b5a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9a11ea954c234e348896cec60165624d71e9fe7b44d7341d74e3bdc7790f2b6a\",\"dweb:/ipfs/QmNq1f6yAeJawBKpMmfNyoQ84nZquQ78YtT3tt3dMBtyCK\"]},\"src/interfaces/external/balancer/vault/IVault.sol\":{\"keccak256\":\"0x08d254ba643e02507305b570f794a75b5439d2ae799f761d26d3a2fd77f6d2fb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2de3bcdb5d5805a44e2c643bc76bc14858825b2b018049f89962c8bc532ac24d\",\"dweb:/ipfs/QmfWZGKRChzwe97R8nqShjKdRX5k8Tp9HKwr7UAq9rCg1m\"]},\"src/interfaces/external/chainlink/IAggregatorV3.sol\":{\"keccak256\":\"0xf195bb6bcab2877ab2cfb75351c0793d64e2ace9749f496f056ba62bebd5a1d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5960730ba2adbff9392dc85761144c2962a410e188032e6d0e32f7457ffc0886\",\"dweb:/ipfs/QmTnVyDhfmkk6zpUubUWZsBmC9qCPAPSWB9GGmtDebuEFV\"]},\"src/interfaces/external/erc/IERC1271.sol\":{\"keccak256\":\"0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779\",\"dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd\"]},\"src/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add\",\"dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu\"]},\"src/interfaces/vaults/IBalancerV2Vault.sol\":{\"keccak256\":\"0xa5e8f55f3d87fde9297c96d80aa72c6555f169f7d22c5478c54ff05d1df6c0e0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://45dea67abc79ab3af6175330b65fd37e5b087e51acac1c169a9567312e3dedb0\",\"dweb:/ipfs/QmWSQ173mUpnkhgXUhiHEz4ursubqUJrAb18LfDesonofn\"]},\"src/interfaces/vaults/IBalancerV2VaultGovernance.sol\":{\"keccak256\":\"0x1a59b99c956d9db76ffe6d33ede8e88b9285332e5c4fdf8b17f33031871b3ed3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e2869ba7ad36797d1c83dbc13d740456dca6e51a43e016e9f97e9ca1c3940ee1\",\"dweb:/ipfs/QmRxZdfNNDTntrCT9uEvBhk5iiYJZXdjj9hqYBV7ZjfefV\"]},\"src/interfaces/vaults/IIntegrationVault.sol\":{\"keccak256\":\"0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d\",\"dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy\"]},\"src/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1\",\"dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw\"]},\"src/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375\",\"dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitInternalParams"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "vaultTokens_",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "pool_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "balancerVault_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "stakingLiquidityGauge_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "balancerMinter_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createVault",
          "outputs": [
            {
              "internalType": "contract IBalancerV2Vault",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolPerVaultParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedStrategyParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "internalParams",
          "outputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "internalParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            },
            {
              "internalType": "struct IBalancerV2VaultGovernance.StrategyParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IVault.BatchSwapStep[]",
                  "name": "swaps",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetInIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetOutIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "struct IVault.FundManagement",
                  "name": "funds",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "fromInternalBalance",
                      "type": "bool"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "toInternalBalance",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "contract IAggregatorV3",
                  "name": "rewardOracle",
                  "type": "address"
                },
                {
                  "internalType": "contract IAggregatorV3",
                  "name": "underlyingOracle",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippageD",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategyParams"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "newParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stageInternalParams"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stagedInternalParams",
          "outputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyParams",
          "outputs": [
            {
              "internalType": "struct IBalancerV2VaultGovernance.StrategyParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IVault.BatchSwapStep[]",
                  "name": "swaps",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetInIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetOutIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "struct IVault.FundManagement",
                  "name": "funds",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "fromInternalBalance",
                      "type": "bool"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "toInternalBalance",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "contract IAggregatorV3",
                  "name": "rewardOracle",
                  "type": "address"
                },
                {
                  "internalType": "contract IAggregatorV3",
                  "name": "underlyingOracle",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippageD",
                  "type": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "delayedProtocolPerVaultParamsTimestamp(uint256)": {
            "params": {
              "nft": "Nft of the vault"
            }
          },
          "delayedStrategyParamsTimestamp(uint256)": {
            "params": {
              "nft": "Nft of the vault"
            }
          },
          "setStrategyParams(uint256,((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256))": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "stageInternalParams((address,address,address))": {
            "params": {
              "newParams": "New Internal Params"
            }
          },
          "stagedInternalParams()": {
            "details": "The Internal Params could be committed after internalParamsTimestamp"
          },
          "strategyParams(uint256)": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "commitInternalParams()": {
            "notice": "Commit staged Internal Params."
          },
          "delayedProtocolParamsTimestamp()": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed."
          },
          "delayedProtocolPerVaultParamsTimestamp(uint256)": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed."
          },
          "delayedStrategyParamsTimestamp(uint256)": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed."
          },
          "internalParams()": {
            "notice": "Internal Params of the contract."
          },
          "internalParamsTimestamp()": {
            "notice": "Timestamp in unix time seconds after which staged Internal Params could be committed."
          },
          "setStrategyParams(uint256,((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256))": {
            "notice": "Delayed Strategy Params staged for commit after delay."
          },
          "stageInternalParams((address,address,address))": {
            "notice": "Stage new Internal Params."
          },
          "stagedInternalParams()": {
            "notice": "Staged new Internal Params."
          },
          "strategyParams(uint256)": {
            "notice": "Delayed Strategy Params"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/vaults/IBalancerV2VaultGovernance.sol": "IBalancerV2VaultGovernance"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolGovernance.sol": {
        "keccak256": "0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e",
        "urls": [
          "bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281",
          "dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b"
        ],
        "license": "MIT"
      },
      "src/interfaces/IUnitPricesGovernance.sol": {
        "keccak256": "0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081",
        "urls": [
          "bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87",
          "dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk"
        ],
        "license": "MIT"
      },
      "src/interfaces/IVaultRegistry.sol": {
        "keccak256": "0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55",
        "urls": [
          "bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50",
          "dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/balancer/liquidity-mining/IBalancerMinter.sol": {
        "keccak256": "0x57c8b7d70735acf87d479398aa31fbd0c078835e59cb0db24fb75818d190052c",
        "urls": [
          "bzz-raw://73521a8258bdd64dddebdb2216b21fe2b684fa2edb5e97e5c117279f81ef9025",
          "dweb:/ipfs/QmW5kFvgKiqkxUJyWs7MZykKHjfBpthks9wha433dNeEQm"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/ILiquidityGauge.sol": {
        "keccak256": "0xa22f0c0868adb9d06d097ecb0a8d8370a6e59d223ef1e07a58340191c402e9ea",
        "urls": [
          "bzz-raw://558942e9f7ff6c6f2becffc28da21bf897e043ceea6bed95d2a362e0eceedbe6",
          "dweb:/ipfs/QmU51CezK36UmBpArAcBmXrDmC5ozDmTrconGfj8pr8NYL"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/IRewardTokenDistributor.sol": {
        "keccak256": "0xd9476c8423eab4c40a3f4a25d343c7ab194985ef5ad2498758ae8cfd569dcd2a",
        "urls": [
          "bzz-raw://4eedabb61c239ecd3e6f2b675cf176db87bbd2b8e54f6190f47001a1a455f875",
          "dweb:/ipfs/QmRsR9KiVJWBuQK3EBRfCVxdDZBTYmfK7CeBebdkeBX6HE"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/IStakingLiquidityGauge.sol": {
        "keccak256": "0xa99cdc7d85b012b7d64eb26a4dafde52314bfe9162973eb66d0bd9241b342877",
        "urls": [
          "bzz-raw://bb5a8c580619a9cb730fe9d333d424db6ed9f5187ba7729beb0df474a64f6733",
          "dweb:/ipfs/QmboYxDELyqkNW7jjb8Ut5g7meDA1HcxsKsX5zmPNyFBPr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/pool-stable/StablePoolUserData.sol": {
        "keccak256": "0x0503d49c1242d38b10cb896d34d85a0bab80c5ce3f253016f4bb51833c359cc0",
        "urls": [
          "bzz-raw://f196af8f3d311b83993cbf85866597358635d5619b25bf33f863be7f093b087c",
          "dweb:/ipfs/QmSFcZUB1Lv4h4G89N2wR2yAgumtc2CszhRpnYcvYfzpmT"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/pool-utils/IManagedPool.sol": {
        "keccak256": "0x09b700bb2a67ad9cc0e19455a7d55d4e2efeaaa380e19969dcc7acceb795fd4f",
        "urls": [
          "bzz-raw://7b013e3dee42088da1b696c5f652535c4ebe68c86dbefc11573ff180df44d7d9",
          "dweb:/ipfs/QmR2yymvt2ACn3qz69gY3sMoUCY9zEnsR4kBF1489cw2si"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/pool-weighted/WeightedPoolUserData.sol": {
        "keccak256": "0xa14005e22ad66472bfe0552caa51b47811c0cee43d7f8ae20811aff63816766b",
        "urls": [
          "bzz-raw://a694b1a00727ce3e694782623eef5c48a1e5b095ceeaed0b33d73685ab69f392",
          "dweb:/ipfs/QmWuTEoUxU2D3y1ASnLdZnGb7joRsjn9RimizT19FVieot"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/helpers/IAuthentication.sol": {
        "keccak256": "0x8032fd6d7f660d9536d252897336462bb932d1e91bd3b87c087be017a35dc842",
        "urls": [
          "bzz-raw://3724cffd85daa36371999e0e9ea56617df12fd7f2cc5c123139705766e3b89a1",
          "dweb:/ipfs/QmaM2wHuKrpKcc8mRhdYmXqPVAimHjGK1xubPWXKafiKYa"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/helpers/ISignaturesValidator.sol": {
        "keccak256": "0x52bd09272e9ec2cff838df757e8b690ff4ca3f4f07e9edd9b711e31e474dd979",
        "urls": [
          "bzz-raw://92ae86c99ce4b92fc666a4c6053bc5ae2932d07b23471647cae7c541c68071b3",
          "dweb:/ipfs/QmeKHMVTVLfG5MKQ7ewM7uwB41WEXkDKhkkL3qCd7mokFo"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/helpers/ITemporarilyPausable.sol": {
        "keccak256": "0xf952ad04a5d4e8523212315e19b8d874e13ceadb7dbc1f5025510da1e153405c",
        "urls": [
          "bzz-raw://81d7e364e8c7a76879f9be650559d3de53879918ab721372931d0e51daa464b5",
          "dweb:/ipfs/QmNyXjvxr3cXzVeBaPrApS9fdjufyN6dXtjGy746xxtj2z"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/misc/IWETH.sol": {
        "keccak256": "0x90278f677649701309ab0902f5bca2fd0d9603e5ce7193b15cf05a7c5582c3b9",
        "urls": [
          "bzz-raw://991dce71671de9fb0f5fafda69994705e358a5cb235bc3acf961dbc9895b6dd6",
          "dweb:/ipfs/QmP7479cjgvMa2DjXNSB6gvHZ2WibU4TGb3DTjqw6UuFb6"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol": {
        "keccak256": "0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835",
        "urls": [
          "bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f",
          "dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/balancer/vault/IAsset.sol": {
        "keccak256": "0x746354db670eb3b94179963b522c4deb0b9854483ab293e3025689749923ebef",
        "urls": [
          "bzz-raw://bcd5a7e0519f94c25f4e3b568b8c0446b2240bd3808c56c3b498a6fed459b2e4",
          "dweb:/ipfs/QmRXvcCy9oKhwPMr8QQ74pg9jormcgq3GHmLSGTDhUWAsn"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IAuthorizer.sol": {
        "keccak256": "0x4adfebbc478ab323d0679386ef8e2384f5205eb280f72757c151eca62ea4f91b",
        "urls": [
          "bzz-raw://49a34c9ad9cb559931b465cea2d570ab015751c6dbc4a52eab8c36b5b949eec1",
          "dweb:/ipfs/QmUiUSZz8gjANUcTqaPCfNkUp3gpjt8Qq2z4UWuQWhaK34"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IBasePool.sol": {
        "keccak256": "0x2a655dcb1150402a7446dc41a9ff2f3cf1ae5caa6d2384bddee08aac1d417e77",
        "urls": [
          "bzz-raw://c506e6beb0542dcb9861f3d4b524f2ff716cdcf5513b2132c24f954ee22f25c9",
          "dweb:/ipfs/QmcJ1dLRHbLMGiYvS8TH1W6G61beZy8MmiSvzFw11UxLQv"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IFlashLoanRecipient.sol": {
        "keccak256": "0xef16377e5ee7ac8151fe8abc3f7b8f0a420008ae1c1336f3cbaea5e171403a43",
        "urls": [
          "bzz-raw://ca460a387ce27682beecc1f93a07c7ef6139504f2d4e2fce715abe82b6d2b039",
          "dweb:/ipfs/QmS8QgcAqhtHepcf8LYGToutbhsUXaTE7UNLQQi4fBJsUC"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IPoolSwapStructs.sol": {
        "keccak256": "0x6bcc1ff0bbbe512e442e1f5a10c79e124a67fb2eae15c7ef2885679f30abfb06",
        "urls": [
          "bzz-raw://cd2c36763fb58b288f317735ee23d464499c9c98056cca5c601ba0398c70a7b9",
          "dweb:/ipfs/QmUSgTJCuzNFrscqZZFWfLQsEvX6v2bqJ5piFQa4o8aiZy"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IProtocolFeesCollector.sol": {
        "keccak256": "0xa42e8b311517ce70dd7f2af6b497603a81c3dd678961a5ffd8a2968eff6b7b5a",
        "urls": [
          "bzz-raw://9a11ea954c234e348896cec60165624d71e9fe7b44d7341d74e3bdc7790f2b6a",
          "dweb:/ipfs/QmNq1f6yAeJawBKpMmfNyoQ84nZquQ78YtT3tt3dMBtyCK"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IVault.sol": {
        "keccak256": "0x08d254ba643e02507305b570f794a75b5439d2ae799f761d26d3a2fd77f6d2fb",
        "urls": [
          "bzz-raw://2de3bcdb5d5805a44e2c643bc76bc14858825b2b018049f89962c8bc532ac24d",
          "dweb:/ipfs/QmfWZGKRChzwe97R8nqShjKdRX5k8Tp9HKwr7UAq9rCg1m"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/chainlink/IAggregatorV3.sol": {
        "keccak256": "0xf195bb6bcab2877ab2cfb75351c0793d64e2ace9749f496f056ba62bebd5a1d9",
        "urls": [
          "bzz-raw://5960730ba2adbff9392dc85761144c2962a410e188032e6d0e32f7457ffc0886",
          "dweb:/ipfs/QmTnVyDhfmkk6zpUubUWZsBmC9qCPAPSWB9GGmtDebuEFV"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/erc/IERC1271.sol": {
        "keccak256": "0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36",
        "urls": [
          "bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779",
          "dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IDefaultAccessControl.sol": {
        "keccak256": "0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60",
        "urls": [
          "bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add",
          "dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IBalancerV2Vault.sol": {
        "keccak256": "0xa5e8f55f3d87fde9297c96d80aa72c6555f169f7d22c5478c54ff05d1df6c0e0",
        "urls": [
          "bzz-raw://45dea67abc79ab3af6175330b65fd37e5b087e51acac1c169a9567312e3dedb0",
          "dweb:/ipfs/QmWSQ173mUpnkhgXUhiHEz4ursubqUJrAb18LfDesonofn"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/vaults/IBalancerV2VaultGovernance.sol": {
        "keccak256": "0x1a59b99c956d9db76ffe6d33ede8e88b9285332e5c4fdf8b17f33031871b3ed3",
        "urls": [
          "bzz-raw://e2869ba7ad36797d1c83dbc13d740456dca6e51a43e016e9f97e9ca1c3940ee1",
          "dweb:/ipfs/QmRxZdfNNDTntrCT9uEvBhk5iiYJZXdjj9hqYBV7ZjfefV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/vaults/IIntegrationVault.sol": {
        "keccak256": "0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e",
        "urls": [
          "bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d",
          "dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVault.sol": {
        "keccak256": "0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43",
        "urls": [
          "bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1",
          "dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultGovernance.sol": {
        "keccak256": "0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813",
        "urls": [
          "bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375",
          "dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/vaults/IBalancerV2VaultGovernance.sol",
    "id": 76443,
    "exportedSymbols": {
      "IAccessControl": [
        43366
      ],
      "IAccessControlEnumerable": [
        43391
      ],
      "IAggregatorV3": [
        63323
      ],
      "IAsset": [
        61808
      ],
      "IBalancerERC20": [
        60345
      ],
      "IBalancerMinter": [
        56638
      ],
      "IBalancerV2Vault": [
        76362
      ],
      "IBalancerV2VaultGovernance": [
        76442
      ],
      "IBalancerVault": [
        63277
      ],
      "IDefaultAccessControl": [
        75786
      ],
      "IERC1271": [
        64026
      ],
      "IERC165": [
        48073
      ],
      "IERC721": [
        46687
      ],
      "IIntegrationVault": [
        77767
      ],
      "IManagedPool": [
        58882
      ],
      "IProtocolGovernance": [
        52868
      ],
      "IStakingLiquidityGauge": [
        57899
      ],
      "IUnitPricesGovernance": [
        52921
      ],
      "IVault": [
        78599
      ],
      "IVaultGovernance": [
        78668
      ],
      "IVaultRegistry": [
        53012
      ],
      "StablePoolUserData": [
        58481
      ],
      "WeightedPoolUserData": [
        59492
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:1681:332",
    "nodes": [
      {
        "id": 76364,
        "nodeType": "PragmaDirective",
        "src": "45:23:332",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 76367,
        "nodeType": "ImportDirective",
        "src": "70:105:332",
        "nodes": [],
        "absolutePath": "src/interfaces/external/balancer/vault/IVault.sol",
        "file": "../external/balancer/vault/IVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76443,
        "sourceUnit": 63278,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76365,
              "name": "IVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "78:6:332",
              "typeDescriptions": {}
            },
            "local": "IBalancerVault",
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 76366,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "104:6:332",
              "typeDescriptions": {}
            },
            "local": "IBalancerERC20",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76369,
        "nodeType": "ImportDirective",
        "src": "177:78:332",
        "nodes": [],
        "absolutePath": "src/interfaces/external/balancer/pool-utils/IManagedPool.sol",
        "file": "../external/balancer/pool-utils/IManagedPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76443,
        "sourceUnit": 58883,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76368,
              "name": "IManagedPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "185:12:332",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76371,
        "nodeType": "ImportDirective",
        "src": "257:104:332",
        "nodes": [],
        "absolutePath": "src/interfaces/external/balancer/liquidity-mining/IStakingLiquidityGauge.sol",
        "file": "../external/balancer/liquidity-mining/IStakingLiquidityGauge.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76443,
        "sourceUnit": 57900,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76370,
              "name": "IStakingLiquidityGauge",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "265:22:332",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76373,
        "nodeType": "ImportDirective",
        "src": "362:90:332",
        "nodes": [],
        "absolutePath": "src/interfaces/external/balancer/liquidity-mining/IBalancerMinter.sol",
        "file": "../external/balancer/liquidity-mining/IBalancerMinter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76443,
        "sourceUnit": 56639,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76372,
              "name": "IBalancerMinter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "370:15:332",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76375,
        "nodeType": "ImportDirective",
        "src": "454:97:332",
        "nodes": [],
        "absolutePath": "src/interfaces/external/balancer/pool-weighted/WeightedPoolUserData.sol",
        "file": "../external/balancer/pool-weighted/WeightedPoolUserData.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76443,
        "sourceUnit": 59493,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76374,
              "name": "WeightedPoolUserData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "462:20:332",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76377,
        "nodeType": "ImportDirective",
        "src": "552:91:332",
        "nodes": [],
        "absolutePath": "src/interfaces/external/balancer/pool-stable/StablePoolUserData.sol",
        "file": "../external/balancer/pool-stable/StablePoolUserData.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76443,
        "sourceUnit": 58482,
        "symbolAliases": [
          {
            "foreign": {
              "id": 76376,
              "name": "StablePoolUserData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "560:18:332",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 76378,
        "nodeType": "ImportDirective",
        "src": "645:32:332",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/IBalancerV2Vault.sol",
        "file": "./IBalancerV2Vault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76443,
        "sourceUnit": 76363,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76379,
        "nodeType": "ImportDirective",
        "src": "678:32:332",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/IVaultGovernance.sol",
        "file": "./IVaultGovernance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76443,
        "sourceUnit": 78669,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76380,
        "nodeType": "ImportDirective",
        "src": "711:33:332",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/IIntegrationVault.sol",
        "file": "./IIntegrationVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76443,
        "sourceUnit": 77768,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 76442,
        "nodeType": "ContractDefinition",
        "src": "746:979:332",
        "nodes": [
          {
            "id": 76402,
            "nodeType": "StructDefinition",
            "src": "809:248:332",
            "nodes": [],
            "canonicalName": "IBalancerV2VaultGovernance.StrategyParams",
            "members": [
              {
                "constant": false,
                "id": 76386,
                "mutability": "mutable",
                "name": "swaps",
                "nameLocation": "872:5:332",
                "nodeType": "VariableDeclaration",
                "scope": 76402,
                "src": "841:36:332",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$63145_storage_$dyn_storage_ptr",
                  "typeString": "struct IVault.BatchSwapStep[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 76384,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76383,
                      "name": "IBalancerVault.BatchSwapStep",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63145,
                      "src": "841:28:332"
                    },
                    "referencedDeclaration": 63145,
                    "src": "841:28:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BatchSwapStep_$63145_storage_ptr",
                      "typeString": "struct IVault.BatchSwapStep"
                    }
                  },
                  "id": 76385,
                  "nodeType": "ArrayTypeName",
                  "src": "841:30:332",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$63145_storage_$dyn_storage_ptr",
                    "typeString": "struct IVault.BatchSwapStep[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76390,
                "mutability": "mutable",
                "name": "assets",
                "nameLocation": "896:6:332",
                "nodeType": "VariableDeclaration",
                "scope": 76402,
                "src": "887:15:332",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_IAsset_$61808_$dyn_storage_ptr",
                  "typeString": "contract IAsset[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 76388,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76387,
                      "name": "IAsset",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61808,
                      "src": "887:6:332"
                    },
                    "referencedDeclaration": 61808,
                    "src": "887:6:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAsset_$61808",
                      "typeString": "contract IAsset"
                    }
                  },
                  "id": 76389,
                  "nodeType": "ArrayTypeName",
                  "src": "887:8:332",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IAsset_$61808_$dyn_storage_ptr",
                    "typeString": "contract IAsset[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76393,
                "mutability": "mutable",
                "name": "funds",
                "nameLocation": "942:5:332",
                "nodeType": "VariableDeclaration",
                "scope": 76402,
                "src": "912:35:332",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FundManagement_$63169_storage_ptr",
                  "typeString": "struct IVault.FundManagement"
                },
                "typeName": {
                  "id": 76392,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 76391,
                    "name": "IBalancerVault.FundManagement",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 63169,
                    "src": "912:29:332"
                  },
                  "referencedDeclaration": 63169,
                  "src": "912:29:332",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FundManagement_$63169_storage_ptr",
                    "typeString": "struct IVault.FundManagement"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76396,
                "mutability": "mutable",
                "name": "rewardOracle",
                "nameLocation": "971:12:332",
                "nodeType": "VariableDeclaration",
                "scope": 76402,
                "src": "957:26:332",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IAggregatorV3_$63323",
                  "typeString": "contract IAggregatorV3"
                },
                "typeName": {
                  "id": 76395,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 76394,
                    "name": "IAggregatorV3",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 63323,
                    "src": "957:13:332"
                  },
                  "referencedDeclaration": 63323,
                  "src": "957:13:332",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAggregatorV3_$63323",
                    "typeString": "contract IAggregatorV3"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76399,
                "mutability": "mutable",
                "name": "underlyingOracle",
                "nameLocation": "1007:16:332",
                "nodeType": "VariableDeclaration",
                "scope": 76402,
                "src": "993:30:332",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IAggregatorV3_$63323",
                  "typeString": "contract IAggregatorV3"
                },
                "typeName": {
                  "id": 76398,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 76397,
                    "name": "IAggregatorV3",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 63323,
                    "src": "993:13:332"
                  },
                  "referencedDeclaration": 63323,
                  "src": "993:13:332",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAggregatorV3_$63323",
                    "typeString": "contract IAggregatorV3"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 76401,
                "mutability": "mutable",
                "name": "slippageD",
                "nameLocation": "1041:9:332",
                "nodeType": "VariableDeclaration",
                "scope": 76402,
                "src": "1033:17:332",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 76400,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1033:7:332",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StrategyParams",
            "nameLocation": "816:14:332",
            "scope": 76442,
            "visibility": "public"
          },
          {
            "id": 76423,
            "nodeType": "FunctionDefinition",
            "src": "1063:273:332",
            "nodes": [],
            "functionSelector": "c6be9b22",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createVault",
            "nameLocation": "1072:11:332",
            "parameters": {
              "id": 76416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76405,
                  "mutability": "mutable",
                  "name": "vaultTokens_",
                  "nameLocation": "1110:12:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 76423,
                  "src": "1093:29:332",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 76403,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1093:7:332",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 76404,
                    "nodeType": "ArrayTypeName",
                    "src": "1093:9:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76407,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "1140:6:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 76423,
                  "src": "1132:14:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1132:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76409,
                  "mutability": "mutable",
                  "name": "pool_",
                  "nameLocation": "1164:5:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 76423,
                  "src": "1156:13:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1156:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76411,
                  "mutability": "mutable",
                  "name": "balancerVault_",
                  "nameLocation": "1187:14:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 76423,
                  "src": "1179:22:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76413,
                  "mutability": "mutable",
                  "name": "stakingLiquidityGauge_",
                  "nameLocation": "1219:22:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 76423,
                  "src": "1211:30:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76415,
                  "mutability": "mutable",
                  "name": "balancerMinter_",
                  "nameLocation": "1259:15:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 76423,
                  "src": "1251:23:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76414,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:7:332",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1083:197:332"
            },
            "returnParameters": {
              "id": 76422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76419,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1316:5:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 76423,
                  "src": "1299:22:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBalancerV2Vault_$76362",
                    "typeString": "contract IBalancerV2Vault"
                  },
                  "typeName": {
                    "id": 76418,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76417,
                      "name": "IBalancerV2Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76362,
                      "src": "1299:16:332"
                    },
                    "referencedDeclaration": 76362,
                    "src": "1299:16:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBalancerV2Vault_$76362",
                      "typeString": "contract IBalancerV2Vault"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76421,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "1331:3:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 76423,
                  "src": "1323:11:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1323:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1298:37:332"
            },
            "scope": 76442,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76432,
            "nodeType": "FunctionDefinition",
            "src": "1432:83:332",
            "nodes": [],
            "documentation": {
              "id": 76424,
              "nodeType": "StructuredDocumentation",
              "src": "1342:85:332",
              "text": "@notice Delayed Strategy Params\n @param nft VaultRegistry NFT of the vault"
            },
            "functionSelector": "12466b68",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "strategyParams",
            "nameLocation": "1441:14:332",
            "parameters": {
              "id": 76427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76426,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "1464:3:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 76432,
                  "src": "1456:11:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1455:13:332"
            },
            "returnParameters": {
              "id": 76431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76430,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 76432,
                  "src": "1492:21:332",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$76402_memory_ptr",
                    "typeString": "struct IBalancerV2VaultGovernance.StrategyParams"
                  },
                  "typeName": {
                    "id": 76429,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76428,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76402,
                      "src": "1492:14:332"
                    },
                    "referencedDeclaration": 76402,
                    "src": "1492:14:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$76402_storage_ptr",
                      "typeString": "struct IBalancerV2VaultGovernance.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1491:23:332"
            },
            "scope": 76442,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 76441,
            "nodeType": "FunctionDefinition",
            "src": "1642:81:332",
            "nodes": [],
            "documentation": {
              "id": 76433,
              "nodeType": "StructuredDocumentation",
              "src": "1521:116:332",
              "text": "@notice Delayed Strategy Params staged for commit after delay.\n @param nft VaultRegistry NFT of the vault"
            },
            "functionSelector": "5c7017cc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategyParams",
            "nameLocation": "1651:17:332",
            "parameters": {
              "id": 76439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76435,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "1677:3:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 76441,
                  "src": "1669:11:332",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1669:7:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76438,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "1706:6:332",
                  "nodeType": "VariableDeclaration",
                  "scope": 76441,
                  "src": "1682:30:332",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$76402_calldata_ptr",
                    "typeString": "struct IBalancerV2VaultGovernance.StrategyParams"
                  },
                  "typeName": {
                    "id": 76437,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 76436,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76402,
                      "src": "1682:14:332"
                    },
                    "referencedDeclaration": 76402,
                    "src": "1682:14:332",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$76402_storage_ptr",
                      "typeString": "struct IBalancerV2VaultGovernance.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1668:45:332"
            },
            "returnParameters": {
              "id": 76440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1722:0:332"
            },
            "scope": 76442,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 76381,
              "name": "IVaultGovernance",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 78668,
              "src": "786:16:332"
            },
            "id": 76382,
            "nodeType": "InheritanceSpecifier",
            "src": "786:16:332"
          }
        ],
        "canonicalName": "IBalancerV2VaultGovernance",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          76442,
          78668
        ],
        "name": "IBalancerV2VaultGovernance",
        "nameLocation": "756:26:332",
        "scope": 76443,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 332
}