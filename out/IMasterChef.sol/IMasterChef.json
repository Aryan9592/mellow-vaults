{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "amount0Max",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "amount1Max",
              "type": "uint128"
            }
          ],
          "internalType": "struct IMasterChef.CollectParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "collect",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_v3Pool",
          "type": "address"
        }
      ],
      "name": "getLatestPeriodInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cakePerSecond",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "getLatestPeriodInfoByPid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "cakePerSecond",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "harvest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "pendingCake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "allocPoint",
              "type": "uint256"
            },
            {
              "internalType": "contract IPancakeV3Pool",
              "name": "v3Pool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "totalLiquidity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalBoostLiquidity",
              "type": "uint256"
            }
          ],
          "internalType": "struct IMasterChef.PoolInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userPositionInfos",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "boostLiquidity",
              "type": "uint128"
            },
            {
              "internalType": "int24",
              "name": "tickLower",
              "type": "int24"
            },
            {
              "internalType": "int24",
              "name": "tickUpper",
              "type": "int24"
            },
            {
              "internalType": "uint256",
              "name": "rewardGrowthInside",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "pid",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "boostMultiplier",
              "type": "uint256"
            }
          ],
          "internalType": "struct IMasterChef.UserPositionInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "collect((uint256,address,uint128,uint128))": "fc6f7865",
    "getLatestPeriodInfo(address)": "a15ea89f",
    "getLatestPeriodInfoByPid(uint256)": "a80a71bd",
    "harvest(uint256,address)": "18fccc76",
    "pendingCake(uint256)": "ce5f39c6",
    "poolInfo(uint256)": "1526fe27",
    "userPositionInfos(uint256)": "3b1acf74",
    "withdraw(uint256,address)": "00f714ce"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct IMasterChef.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_v3Pool\",\"type\":\"address\"}],\"name\":\"getLatestPeriodInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cakePerSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"getLatestPeriodInfoByPid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cakePerSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"harvest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IPancakeV3Pool\",\"name\":\"v3Pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"totalLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBoostLiquidity\",\"type\":\"uint256\"}],\"internalType\":\"struct IMasterChef.PoolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userPositionInfos\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"boostLiquidity\",\"type\":\"uint128\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"rewardGrowthInside\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"boostMultiplier\",\"type\":\"uint256\"}],\"internalType\":\"struct IMasterChef.UserPositionInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collect((uint256,address,uint128,uint128))\":{\"details\":\"Warning!!! Please make sure to use multicall to call unwrapWETH9 or sweepToken when set recipient address(0), or you will lose your funds. amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\",\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens,\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"getLatestPeriodInfo(address)\":{\"params\":{\"_v3Pool\":\"Address of the V3 pool.\"},\"returns\":{\"cakePerSecond\":\"Cake reward per second.\",\"endTime\":\"Period end time.\"}},\"getLatestPeriodInfoByPid(uint256)\":{\"params\":{\"_pid\":\"The pool pid.\"},\"returns\":{\"cakePerSecond\":\"Cake reward per second.\",\"endTime\":\"Period end time.\"}},\"harvest(uint256,address)\":{\"params\":{\"_to\":\"Address to.\",\"_tokenId\":\"Token Id of NFT.\"},\"returns\":{\"reward\":\"Cake reward.\"}},\"pendingCake(uint256)\":{\"details\":\"The pending cake amount is based on the last state in LMPool. The actual amount will happen whenever liquidity changes or harvest.\",\"params\":{\"_tokenId\":\"Token Id of NFT.\"},\"returns\":{\"reward\":\"Pending reward.\"}},\"userPositionInfos(uint256)\":{\"details\":\"TokenId is unique, and we can query the pid by tokenId.\"},\"withdraw(uint256,address)\":{\"params\":{\"_to\":\"Address to which NFT token to withdraw.\",\"_tokenId\":\"Token Id of NFT to deposit.\"},\"returns\":{\"reward\":\"Cake reward.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipient\"},\"getLatestPeriodInfo(address)\":{\"notice\":\"Returns the cake per second , period end time. This is for liquidity mining pool.\"},\"getLatestPeriodInfoByPid(uint256)\":{\"notice\":\"Returns the cake per second , period end time.\"},\"harvest(uint256,address)\":{\"notice\":\"harvest cake from pool.\"},\"pendingCake(uint256)\":{\"notice\":\"View function for checking pending CAKE rewards.\"},\"poolInfo(uint256)\":{\"notice\":\"Info of each MCV3 pool.\"},\"userPositionInfos(uint256)\":{\"notice\":\"userPositionInfos[tokenId] => UserPositionInfo\"},\"withdraw(uint256,address)\":{\"notice\":\"Withdraw LP tokens from pool.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/external/pancakeswap/IMasterChef.sol\":\"IMasterChef\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/interfaces/external/pancakeswap/IMasterChef.sol\":{\"keccak256\":\"0x07868a81e1cbf3b1151312d1f107c7a45c9493fe9708ebd3ab6ad18b367657be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76e2c7144d48a3487dca8d0bc21ee05714409f0d905b3585b61890c731d90479\",\"dweb:/ipfs/QmPVi12FDP6yio5mRTPgT3kthwD5VTFTsCfsfqpH8WCYw3\"]},\"src/interfaces/external/pancakeswap/IPancakeV3Pool.sol\":{\"keccak256\":\"0x03255a87abde262839ddcbb0ad3b1b045ec710cec2f64b997f087ed4c33a0106\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6849d0e311fe5eacc3c86935c0a7099292b41cddd7f2df2782ce5482c260a17b\",\"dweb:/ipfs/QmexQgWXNxhZae6XsBcm2NvxoN8SDeQooDQBvJ7PbLxFLD\"]},\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolActions.sol\":{\"keccak256\":\"0x59ee2c617abe65adac032507772e8c11d23f1ebe3c34c54cd954712b5a417f1c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6db7f40df0dc6c1125e6cb13a8b91eff425b128e269f4df830f57fa36288b3bc\",\"dweb:/ipfs/QmT35pt82WzqFzTuBzRAaCjVrcgtqmTk4x5eLvgeQJEnzE\"]},\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolDerivedState.sol\":{\"keccak256\":\"0xbb8590d870d29ae248f7e50b1fb3d07ac0faf6077aa959e52e875643cff8f575\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5129eac8fe38d2e3ba8a30db0b5fa389efa1119edbbf4b7a058b1a78691417f1\",\"dweb:/ipfs/QmNnRQfGWwxV3VmnBhh5aAjVYUD5K3sPMiw1zn3k2njsbL\"]},\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolEvents.sol\":{\"keccak256\":\"0x3f5f268cabea4583ab138b8408bf876831becb2eda3c3399142539cad4c1b7f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5ecdb61c88c2372fa3782bd52e624b991aa2fff89beae98b831c963dd9bf7144\",\"dweb:/ipfs/QmVH8gFMqWcTj6Fd6MtYXme5GfRYnmAJsmxXErVx37ha4a\"]},\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolImmutables.sol\":{\"keccak256\":\"0x9166871e1f206ff9002fe1864fcc4c7ecde3e745f3a7740485569c9edd2960f2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://56bb208edd594b774bb95b51fbcbcd4dc7fc3e8615499a9306b05539bb31028d\",\"dweb:/ipfs/QmdytBtwQKD44rc5oVPv7SiRdNS4js9JimH2AaFkUvWWJq\"]},\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolOwnerActions.sol\":{\"keccak256\":\"0xb28a50116de98147bb91e35eaeb51b29a7899c16d3d1a99941cd4f13b565550b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5e493a4c2938834d44283af81fb258c1ac320556f382aeeafe00bd7205efeba0\",\"dweb:/ipfs/QmbWYfzDnwWD2vfL69iKVpy9zEHCvJ32kpC4MEAfexkw4X\"]},\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolState.sol\":{\"keccak256\":\"0xf727a5c34395306548e55f765e7fc47c2f485b2f9f068e9a96fee27ddea3a535\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54c278a5906df814f8cc5bf1dc5cd330db0d7383fcc86c5e6a7fb57c16c58432\",\"dweb:/ipfs/QmSDmQTuAwXdhBANEvYpsrEpTEVJbzPYM7f5fXEDxwvkPJ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct IMasterChef.CollectParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint128",
                  "name": "amount0Max",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "amount1Max",
                  "type": "uint128"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "collect",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount1",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_v3Pool",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestPeriodInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "cakePerSecond",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_pid",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestPeriodInfoByPid",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "cakePerSecond",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "harvest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingCake",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "poolInfo",
          "outputs": [
            {
              "internalType": "struct IMasterChef.PoolInfo",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "allocPoint",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IPancakeV3Pool",
                  "name": "v3Pool",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "uint256",
                  "name": "totalLiquidity",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalBoostLiquidity",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userPositionInfos",
          "outputs": [
            {
              "internalType": "struct IMasterChef.UserPositionInfo",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint128",
                  "name": "liquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "uint128",
                  "name": "boostLiquidity",
                  "type": "uint128"
                },
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardGrowthInside",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "pid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "boostMultiplier",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "collect((uint256,address,uint128,uint128))": {
            "details": "Warning!!! Please make sure to use multicall to call unwrapWETH9 or sweepToken when set recipient address(0), or you will lose your funds. amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect",
            "params": {
              "params": "tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens,"
            },
            "returns": {
              "amount0": "The amount of fees collected in token0",
              "amount1": "The amount of fees collected in token1"
            }
          },
          "getLatestPeriodInfo(address)": {
            "params": {
              "_v3Pool": "Address of the V3 pool."
            },
            "returns": {
              "cakePerSecond": "Cake reward per second.",
              "endTime": "Period end time."
            }
          },
          "getLatestPeriodInfoByPid(uint256)": {
            "params": {
              "_pid": "The pool pid."
            },
            "returns": {
              "cakePerSecond": "Cake reward per second.",
              "endTime": "Period end time."
            }
          },
          "harvest(uint256,address)": {
            "params": {
              "_to": "Address to.",
              "_tokenId": "Token Id of NFT."
            },
            "returns": {
              "reward": "Cake reward."
            }
          },
          "pendingCake(uint256)": {
            "details": "The pending cake amount is based on the last state in LMPool. The actual amount will happen whenever liquidity changes or harvest.",
            "params": {
              "_tokenId": "Token Id of NFT."
            },
            "returns": {
              "reward": "Pending reward."
            }
          },
          "userPositionInfos(uint256)": {
            "details": "TokenId is unique, and we can query the pid by tokenId."
          },
          "withdraw(uint256,address)": {
            "params": {
              "_to": "Address to which NFT token to withdraw.",
              "_tokenId": "Token Id of NFT to deposit."
            },
            "returns": {
              "reward": "Cake reward."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "collect((uint256,address,uint128,uint128))": {
            "notice": "Collects up to a maximum amount of fees owed to a specific position to the recipient"
          },
          "getLatestPeriodInfo(address)": {
            "notice": "Returns the cake per second , period end time. This is for liquidity mining pool."
          },
          "getLatestPeriodInfoByPid(uint256)": {
            "notice": "Returns the cake per second , period end time."
          },
          "harvest(uint256,address)": {
            "notice": "harvest cake from pool."
          },
          "pendingCake(uint256)": {
            "notice": "View function for checking pending CAKE rewards."
          },
          "poolInfo(uint256)": {
            "notice": "Info of each MCV3 pool."
          },
          "userPositionInfos(uint256)": {
            "notice": "userPositionInfos[tokenId] => UserPositionInfo"
          },
          "withdraw(uint256,address)": {
            "notice": "Withdraw LP tokens from pool."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/external/pancakeswap/IMasterChef.sol": "IMasterChef"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/external/pancakeswap/IMasterChef.sol": {
        "keccak256": "0x07868a81e1cbf3b1151312d1f107c7a45c9493fe9708ebd3ab6ad18b367657be",
        "urls": [
          "bzz-raw://76e2c7144d48a3487dca8d0bc21ee05714409f0d905b3585b61890c731d90479",
          "dweb:/ipfs/QmPVi12FDP6yio5mRTPgT3kthwD5VTFTsCfsfqpH8WCYw3"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/pancakeswap/IPancakeV3Pool.sol": {
        "keccak256": "0x03255a87abde262839ddcbb0ad3b1b045ec710cec2f64b997f087ed4c33a0106",
        "urls": [
          "bzz-raw://6849d0e311fe5eacc3c86935c0a7099292b41cddd7f2df2782ce5482c260a17b",
          "dweb:/ipfs/QmexQgWXNxhZae6XsBcm2NvxoN8SDeQooDQBvJ7PbLxFLD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolActions.sol": {
        "keccak256": "0x59ee2c617abe65adac032507772e8c11d23f1ebe3c34c54cd954712b5a417f1c",
        "urls": [
          "bzz-raw://6db7f40df0dc6c1125e6cb13a8b91eff425b128e269f4df830f57fa36288b3bc",
          "dweb:/ipfs/QmT35pt82WzqFzTuBzRAaCjVrcgtqmTk4x5eLvgeQJEnzE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolDerivedState.sol": {
        "keccak256": "0xbb8590d870d29ae248f7e50b1fb3d07ac0faf6077aa959e52e875643cff8f575",
        "urls": [
          "bzz-raw://5129eac8fe38d2e3ba8a30db0b5fa389efa1119edbbf4b7a058b1a78691417f1",
          "dweb:/ipfs/QmNnRQfGWwxV3VmnBhh5aAjVYUD5K3sPMiw1zn3k2njsbL"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolEvents.sol": {
        "keccak256": "0x3f5f268cabea4583ab138b8408bf876831becb2eda3c3399142539cad4c1b7f8",
        "urls": [
          "bzz-raw://5ecdb61c88c2372fa3782bd52e624b991aa2fff89beae98b831c963dd9bf7144",
          "dweb:/ipfs/QmVH8gFMqWcTj6Fd6MtYXme5GfRYnmAJsmxXErVx37ha4a"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolImmutables.sol": {
        "keccak256": "0x9166871e1f206ff9002fe1864fcc4c7ecde3e745f3a7740485569c9edd2960f2",
        "urls": [
          "bzz-raw://56bb208edd594b774bb95b51fbcbcd4dc7fc3e8615499a9306b05539bb31028d",
          "dweb:/ipfs/QmdytBtwQKD44rc5oVPv7SiRdNS4js9JimH2AaFkUvWWJq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolOwnerActions.sol": {
        "keccak256": "0xb28a50116de98147bb91e35eaeb51b29a7899c16d3d1a99941cd4f13b565550b",
        "urls": [
          "bzz-raw://5e493a4c2938834d44283af81fb258c1ac320556f382aeeafe00bd7205efeba0",
          "dweb:/ipfs/QmbWYfzDnwWD2vfL69iKVpy9zEHCvJ32kpC4MEAfexkw4X"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolState.sol": {
        "keccak256": "0xf727a5c34395306548e55f765e7fc47c2f485b2f9f068e9a96fee27ddea3a535",
        "urls": [
          "bzz-raw://54c278a5906df814f8cc5bf1dc5cd330db0d7383fcc86c5e6a7fb57c16c58432",
          "dweb:/ipfs/QmSDmQTuAwXdhBANEvYpsrEpTEVJbzPYM7f5fXEDxwvkPJ"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/external/pancakeswap/IMasterChef.sol",
    "id": 69039,
    "exportedSymbols": {
      "IMasterChef": [
        69038
      ],
      "IPancakeV3Pool": [
        69556
      ],
      "IPancakeV3PoolActions": [
        70887
      ],
      "IPancakeV3PoolDerivedState": [
        70918
      ],
      "IPancakeV3PoolEvents": [
        71041
      ],
      "IPancakeV3PoolImmutables": [
        71081
      ],
      "IPancakeV3PoolOwnerActions": [
        71113
      ],
      "IPancakeV3PoolState": [
        71221
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3589:232",
    "nodes": [
      {
        "id": 68915,
        "nodeType": "PragmaDirective",
        "src": "32:23:232",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 68916,
        "nodeType": "ImportDirective",
        "src": "57:30:232",
        "nodes": [],
        "absolutePath": "src/interfaces/external/pancakeswap/IPancakeV3Pool.sol",
        "file": "./IPancakeV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69039,
        "sourceUnit": 69557,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 69038,
        "nodeType": "ContractDefinition",
        "src": "89:3531:232",
        "nodes": [
          {
            "id": 68925,
            "nodeType": "StructDefinition",
            "src": "117:136:232",
            "nodes": [],
            "canonicalName": "IMasterChef.CollectParams",
            "members": [
              {
                "constant": false,
                "id": 68918,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "156:7:232",
                "nodeType": "VariableDeclaration",
                "scope": 68925,
                "src": "148:15:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 68917,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "148:7:232",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68920,
                "mutability": "mutable",
                "name": "recipient",
                "nameLocation": "181:9:232",
                "nodeType": "VariableDeclaration",
                "scope": 68925,
                "src": "173:17:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 68919,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "173:7:232",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68922,
                "mutability": "mutable",
                "name": "amount0Max",
                "nameLocation": "208:10:232",
                "nodeType": "VariableDeclaration",
                "scope": 68925,
                "src": "200:18:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 68921,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "200:7:232",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68924,
                "mutability": "mutable",
                "name": "amount1Max",
                "nameLocation": "236:10:232",
                "nodeType": "VariableDeclaration",
                "scope": 68925,
                "src": "228:18:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 68923,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "228:7:232",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CollectParams",
            "nameLocation": "124:13:232",
            "scope": 69038,
            "visibility": "public"
          },
          {
            "id": 68933,
            "nodeType": "FunctionDefinition",
            "src": "548:78:232",
            "nodes": [],
            "documentation": {
              "id": 68926,
              "nodeType": "StructuredDocumentation",
              "src": "259:284:232",
              "text": "@notice View function for checking pending CAKE rewards.\n @dev The pending cake amount is based on the last state in LMPool. The actual amount will happen whenever liquidity changes or harvest.\n @param _tokenId Token Id of NFT.\n @return reward Pending reward."
            },
            "functionSelector": "ce5f39c6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pendingCake",
            "nameLocation": "557:11:232",
            "parameters": {
              "id": 68929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68928,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "577:8:232",
                  "nodeType": "VariableDeclaration",
                  "scope": 68933,
                  "src": "569:16:232",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:232",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "568:18:232"
            },
            "returnParameters": {
              "id": 68932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68931,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "618:6:232",
                  "nodeType": "VariableDeclaration",
                  "scope": 68933,
                  "src": "610:14:232",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:7:232",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "609:16:232"
            },
            "scope": 69038,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 68943,
            "nodeType": "FunctionDefinition",
            "src": "780:82:232",
            "nodes": [],
            "documentation": {
              "id": 68934,
              "nodeType": "StructuredDocumentation",
              "src": "632:143:232",
              "text": "@notice harvest cake from pool.\n @param _tokenId Token Id of NFT.\n @param _to Address to.\n @return reward Cake reward."
            },
            "functionSelector": "18fccc76",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "harvest",
            "nameLocation": "789:7:232",
            "parameters": {
              "id": 68939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68936,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "805:8:232",
                  "nodeType": "VariableDeclaration",
                  "scope": 68943,
                  "src": "797:16:232",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68935,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:7:232",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68938,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "823:3:232",
                  "nodeType": "VariableDeclaration",
                  "scope": 68943,
                  "src": "815:11:232",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:7:232",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "796:31:232"
            },
            "returnParameters": {
              "id": 68942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68941,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "854:6:232",
                  "nodeType": "VariableDeclaration",
                  "scope": 68943,
                  "src": "846:14:232",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68940,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "846:7:232",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "845:16:232"
            },
            "scope": 69038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 68954,
            "nodeType": "FunctionDefinition",
            "src": "1514:98:232",
            "nodes": [],
            "documentation": {
              "id": 68944,
              "nodeType": "StructuredDocumentation",
              "src": "868:641:232",
              "text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n @dev Warning!!! Please make sure to use multicall to call unwrapWETH9 or sweepToken when set recipient address(0), or you will lose your funds.\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
            },
            "functionSelector": "fc6f7865",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "collect",
            "nameLocation": "1523:7:232",
            "parameters": {
              "id": 68948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68947,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "1552:6:232",
                  "nodeType": "VariableDeclaration",
                  "scope": 68954,
                  "src": "1531:27:232",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CollectParams_$68925_memory_ptr",
                    "typeString": "struct IMasterChef.CollectParams"
                  },
                  "typeName": {
                    "id": 68946,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 68945,
                      "name": "CollectParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 68925,
                      "src": "1531:13:232"
                    },
                    "referencedDeclaration": 68925,
                    "src": "1531:13:232",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollectParams_$68925_storage_ptr",
                      "typeString": "struct IMasterChef.CollectParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1530:29:232"
            },
            "returnParameters": {
              "id": 68953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68950,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "1586:7:232",
                  "nodeType": "VariableDeclaration",
                  "scope": 68954,
                  "src": "1578:15:232",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1578:7:232",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68952,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "1603:7:232",
                  "nodeType": "VariableDeclaration",
                  "scope": 68954,
                  "src": "1595:15:232",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1595:7:232",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1577:34:232"
            },
            "scope": 69038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 68964,
            "nodeType": "FunctionDefinition",
            "src": "1811:83:232",
            "nodes": [],
            "documentation": {
              "id": 68955,
              "nodeType": "StructuredDocumentation",
              "src": "1618:188:232",
              "text": "@notice Withdraw LP tokens from pool.\n @param _tokenId Token Id of NFT to deposit.\n @param _to Address to which NFT token to withdraw.\n @return reward Cake reward."
            },
            "functionSelector": "00f714ce",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1820:8:232",
            "parameters": {
              "id": 68960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68957,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1837:8:232",
                  "nodeType": "VariableDeclaration",
                  "scope": 68964,
                  "src": "1829:16:232",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1829:7:232",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68959,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1855:3:232",
                  "nodeType": "VariableDeclaration",
                  "scope": 68964,
                  "src": "1847:11:232",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1847:7:232",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1828:31:232"
            },
            "returnParameters": {
              "id": 68963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68962,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "1886:6:232",
                  "nodeType": "VariableDeclaration",
                  "scope": 68964,
                  "src": "1878:14:232",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1878:7:232",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1877:16:232"
            },
            "scope": 69038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 68974,
            "nodeType": "FunctionDefinition",
            "src": "2092:111:232",
            "nodes": [],
            "documentation": {
              "id": 68965,
              "nodeType": "StructuredDocumentation",
              "src": "1900:187:232",
              "text": "@notice Returns the cake per second , period end time.\n @param _pid The pool pid.\n @return cakePerSecond Cake reward per second.\n @return endTime Period end time."
            },
            "functionSelector": "a80a71bd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPeriodInfoByPid",
            "nameLocation": "2101:24:232",
            "parameters": {
              "id": 68968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68967,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nameLocation": "2134:4:232",
                  "nodeType": "VariableDeclaration",
                  "scope": 68974,
                  "src": "2126:12:232",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68966,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2126:7:232",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2125:14:232"
            },
            "returnParameters": {
              "id": 68973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68970,
                  "mutability": "mutable",
                  "name": "cakePerSecond",
                  "nameLocation": "2171:13:232",
                  "nodeType": "VariableDeclaration",
                  "scope": 68974,
                  "src": "2163:21:232",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2163:7:232",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68972,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "2194:7:232",
                  "nodeType": "VariableDeclaration",
                  "scope": 68974,
                  "src": "2186:15:232",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2186:7:232",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2162:40:232"
            },
            "scope": 69038,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 68984,
            "nodeType": "FunctionDefinition",
            "src": "2449:109:232",
            "nodes": [],
            "documentation": {
              "id": 68975,
              "nodeType": "StructuredDocumentation",
              "src": "2209:235:232",
              "text": "@notice Returns the cake per second , period end time. This is for liquidity mining pool.\n @param _v3Pool Address of the V3 pool.\n @return cakePerSecond Cake reward per second.\n @return endTime Period end time."
            },
            "functionSelector": "a15ea89f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPeriodInfo",
            "nameLocation": "2458:19:232",
            "parameters": {
              "id": 68978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68977,
                  "mutability": "mutable",
                  "name": "_v3Pool",
                  "nameLocation": "2486:7:232",
                  "nodeType": "VariableDeclaration",
                  "scope": 68984,
                  "src": "2478:15:232",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2478:7:232",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2477:17:232"
            },
            "returnParameters": {
              "id": 68983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68980,
                  "mutability": "mutable",
                  "name": "cakePerSecond",
                  "nameLocation": "2526:13:232",
                  "nodeType": "VariableDeclaration",
                  "scope": 68984,
                  "src": "2518:21:232",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2518:7:232",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68982,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "2549:7:232",
                  "nodeType": "VariableDeclaration",
                  "scope": 68984,
                  "src": "2541:15:232",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2541:7:232",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2517:40:232"
            },
            "scope": 69038,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 69000,
            "nodeType": "StructDefinition",
            "src": "2564:437:232",
            "nodes": [],
            "canonicalName": "IMasterChef.PoolInfo",
            "members": [
              {
                "constant": false,
                "id": 68986,
                "mutability": "mutable",
                "name": "allocPoint",
                "nameLocation": "2598:10:232",
                "nodeType": "VariableDeclaration",
                "scope": 69000,
                "src": "2590:18:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 68985,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2590:7:232",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68989,
                "mutability": "mutable",
                "name": "v3Pool",
                "nameLocation": "2660:6:232",
                "nodeType": "VariableDeclaration",
                "scope": 69000,
                "src": "2645:21:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IPancakeV3Pool_$69556",
                  "typeString": "contract IPancakeV3Pool"
                },
                "typeName": {
                  "id": 68988,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 68987,
                    "name": "IPancakeV3Pool",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 69556,
                    "src": "2645:14:232"
                  },
                  "referencedDeclaration": 69556,
                  "src": "2645:14:232",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPancakeV3Pool_$69556",
                    "typeString": "contract IPancakeV3Pool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68991,
                "mutability": "mutable",
                "name": "token0",
                "nameLocation": "2718:6:232",
                "nodeType": "VariableDeclaration",
                "scope": 69000,
                "src": "2710:14:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 68990,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2710:7:232",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68993,
                "mutability": "mutable",
                "name": "token1",
                "nameLocation": "2776:6:232",
                "nodeType": "VariableDeclaration",
                "scope": 69000,
                "src": "2768:14:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 68992,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2768:7:232",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68995,
                "mutability": "mutable",
                "name": "fee",
                "nameLocation": "2822:3:232",
                "nodeType": "VariableDeclaration",
                "scope": 69000,
                "src": "2815:10:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 68994,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "2815:6:232",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68997,
                "mutability": "mutable",
                "name": "totalLiquidity",
                "nameLocation": "2890:14:232",
                "nodeType": "VariableDeclaration",
                "scope": 69000,
                "src": "2882:22:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 68996,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2882:7:232",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68999,
                "mutability": "mutable",
                "name": "totalBoostLiquidity",
                "nameLocation": "2975:19:232",
                "nodeType": "VariableDeclaration",
                "scope": 69000,
                "src": "2967:27:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 68998,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2967:7:232",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PoolInfo",
            "nameLocation": "2571:8:232",
            "scope": 69038,
            "visibility": "public"
          },
          {
            "id": 69019,
            "nodeType": "StructDefinition",
            "src": "3007:276:232",
            "nodes": [],
            "canonicalName": "IMasterChef.UserPositionInfo",
            "members": [
              {
                "constant": false,
                "id": 69002,
                "mutability": "mutable",
                "name": "liquidity",
                "nameLocation": "3049:9:232",
                "nodeType": "VariableDeclaration",
                "scope": 69019,
                "src": "3041:17:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 69001,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "3041:7:232",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69004,
                "mutability": "mutable",
                "name": "boostLiquidity",
                "nameLocation": "3076:14:232",
                "nodeType": "VariableDeclaration",
                "scope": 69019,
                "src": "3068:22:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 69003,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "3068:7:232",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69006,
                "mutability": "mutable",
                "name": "tickLower",
                "nameLocation": "3106:9:232",
                "nodeType": "VariableDeclaration",
                "scope": 69019,
                "src": "3100:15:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int24",
                  "typeString": "int24"
                },
                "typeName": {
                  "id": 69005,
                  "name": "int24",
                  "nodeType": "ElementaryTypeName",
                  "src": "3100:5:232",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69008,
                "mutability": "mutable",
                "name": "tickUpper",
                "nameLocation": "3131:9:232",
                "nodeType": "VariableDeclaration",
                "scope": 69019,
                "src": "3125:15:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int24",
                  "typeString": "int24"
                },
                "typeName": {
                  "id": 69007,
                  "name": "int24",
                  "nodeType": "ElementaryTypeName",
                  "src": "3125:5:232",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69010,
                "mutability": "mutable",
                "name": "rewardGrowthInside",
                "nameLocation": "3158:18:232",
                "nodeType": "VariableDeclaration",
                "scope": 69019,
                "src": "3150:26:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 69009,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3150:7:232",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69012,
                "mutability": "mutable",
                "name": "reward",
                "nameLocation": "3194:6:232",
                "nodeType": "VariableDeclaration",
                "scope": 69019,
                "src": "3186:14:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 69011,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3186:7:232",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69014,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "3218:4:232",
                "nodeType": "VariableDeclaration",
                "scope": 69019,
                "src": "3210:12:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 69013,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3210:7:232",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69016,
                "mutability": "mutable",
                "name": "pid",
                "nameLocation": "3240:3:232",
                "nodeType": "VariableDeclaration",
                "scope": 69019,
                "src": "3232:11:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 69015,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3232:7:232",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 69018,
                "mutability": "mutable",
                "name": "boostMultiplier",
                "nameLocation": "3261:15:232",
                "nodeType": "VariableDeclaration",
                "scope": 69019,
                "src": "3253:23:232",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 69017,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3253:7:232",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserPositionInfo",
            "nameLocation": "3014:16:232",
            "scope": 69038,
            "visibility": "public"
          },
          {
            "id": 69028,
            "nodeType": "FunctionDefinition",
            "src": "3329:67:232",
            "nodes": [],
            "documentation": {
              "id": 69020,
              "nodeType": "StructuredDocumentation",
              "src": "3289:35:232",
              "text": "@notice Info of each MCV3 pool."
            },
            "functionSelector": "1526fe27",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "poolInfo",
            "nameLocation": "3338:8:232",
            "parameters": {
              "id": 69023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69022,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69028,
                  "src": "3347:7:232",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3347:7:232",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3346:9:232"
            },
            "returnParameters": {
              "id": 69027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69026,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69028,
                  "src": "3379:15:232",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolInfo_$69000_memory_ptr",
                    "typeString": "struct IMasterChef.PoolInfo"
                  },
                  "typeName": {
                    "id": 69025,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 69024,
                      "name": "PoolInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 69000,
                      "src": "3379:8:232"
                    },
                    "referencedDeclaration": 69000,
                    "src": "3379:8:232",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$69000_storage_ptr",
                      "typeString": "struct IMasterChef.PoolInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3378:17:232"
            },
            "scope": 69038,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 69037,
            "nodeType": "FunctionDefinition",
            "src": "3534:84:232",
            "nodes": [],
            "documentation": {
              "id": 69029,
              "nodeType": "StructuredDocumentation",
              "src": "3402:127:232",
              "text": "@notice userPositionInfos[tokenId] => UserPositionInfo\n @dev TokenId is unique, and we can query the pid by tokenId."
            },
            "functionSelector": "3b1acf74",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "userPositionInfos",
            "nameLocation": "3543:17:232",
            "parameters": {
              "id": 69032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69031,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69037,
                  "src": "3561:7:232",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3561:7:232",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3560:9:232"
            },
            "returnParameters": {
              "id": 69036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69035,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69037,
                  "src": "3593:23:232",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserPositionInfo_$69019_memory_ptr",
                    "typeString": "struct IMasterChef.UserPositionInfo"
                  },
                  "typeName": {
                    "id": 69034,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 69033,
                      "name": "UserPositionInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 69019,
                      "src": "3593:16:232"
                    },
                    "referencedDeclaration": 69019,
                    "src": "3593:16:232",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserPositionInfo_$69019_storage_ptr",
                      "typeString": "struct IMasterChef.UserPositionInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3592:25:232"
            },
            "scope": 69038,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IMasterChef",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          69038
        ],
        "name": "IMasterChef",
        "nameLocation": "99:11:232",
        "scope": 69039,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 232
}