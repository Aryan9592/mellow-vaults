{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nft_",
          "type": "uint256"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "Pull",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "Push",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "ReclaimTokens",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "externalCall",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft_",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magicValue",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "isVaultToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        }
      ],
      "name": "pull",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pullExistentials",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        }
      ],
      "name": "push",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "reclaimTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        }
      ],
      "name": "transferAndPush",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tvl",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "minTokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "maxTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultGovernance",
      "outputs": [
        {
          "internalType": "contract IVaultGovernance",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "311:3489:460:-:0;;;;;;;;;;;;-1:-1:-1;1716:1:32;1821:7;:22;-1:-1:-1;;1696:4:476;:24;311:3489:460;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "311:3489:460:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3578:220;;;;;;;;;;-1:-1:-1;3578:220:460;;;;;:::i;:::-;;:::i;:::-;;;565:14:488;;558:22;540:41;;528:2;513:18;3578:220:460;;;;;;;;5321:1203:465;;;;;;;;;;-1:-1:-1;5321:1203:465;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1825:85:476:-;;;;;;;;;;-1:-1:-1;1894:4:476;;:9;;1825:85;;6559:1122:465;;;;;;;;;;-1:-1:-1;6559:1122:465;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;4219:33:488;;;4201:52;;4189:2;4174:18;6559:1122:465;4057:202:488;3829:1448:465;;;;;;;;;;-1:-1:-1;3829:1448:465;;;;;:::i;:::-;;:::i;3017:768::-;;;;;;;;;;-1:-1:-1;3017:768:465;;;;;:::i;:::-;;:::i;7725:995::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1943:117:476:-;;;;;;;;;;-1:-1:-1;1943:117:476;;;;;:::i;:::-;-1:-1:-1;;;;;2024:24:476;2001:4;2024:24;;;:17;:24;;;;;;:29;;;1943:117;2367:75;;;;;;;;;;-1:-1:-1;2431:4:476;;2367:75;;7880:25:488;;;7868:2;7853:18;2367:75:476;7734:177:488;2022:951:465;;;;;;;;;;-1:-1:-1;2022:951:465;;;;;:::i;:::-;;:::i;2234:100:476:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1017:122:460:-;;;;;;;;;;-1:-1:-1;1017:122:460;;;;;:::i;:::-;;:::i;:::-;;2620:110:476;;;;;;;;;;;;;:::i;495:416:460:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;2093:108:476:-;;;;;;;;;;-1:-1:-1;2178:16:476;;2093:108;;-1:-1:-1;;;;;2178:16:476;;;10509:51:488;;10497:2;10482:18;2093:108:476;10337:229:488;3578:220:460;3682:4;3705:36;3729:11;3705:23;:36::i;:::-;:86;;;-1:-1:-1;;;;;;;3746:44:460;;-1:-1:-1;;;3746:44:460;3705:86;3698:93;3578:220;-1:-1:-1;;3578:220:460:o;5321:1203:465:-;5422:35;2261:21:32;:19;:21::i;:::-;5484:4:465::1;::::0;;5517:22:::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;;5517:22:465::1;::::0;::::1;::::0;5484:4;5506:9;5498:42:::1;;;;-1:-1:-1::0;;;5498:42:465::1;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;5598:16:465::1;::::0;:33:::1;::::0;;-1:-1:-1;;;5598:33:465;;;;5550:45:::1;::::0;-1:-1:-1;;;;;5598:16:465::1;::::0;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:16;:33;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5674:25:::0;;5735:15:::1;::::0;::::1;::::0;5776:22:::1;::::0;-1:-1:-1;;;5776:22:465;;::::1;::::0;::::1;7880:25:488::0;;;5674::465;;-1:-1:-1;5674:25:465;;5641:30:::1;::::0;-1:-1:-1;;;;;5776:16:465;::::1;::::0;::::1;::::0;7853:18:488;;5776:22:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5760:38;;5808:10;5821:28;5827:8;5837:4;5843:5;5821;:28::i;:::-;:42;::::0;-1:-1:-1;;;5821:42:465;;5861:1:::1;5821:42;::::0;::::1;7880:25:488::0;-1:-1:-1;;;;;5821:39:465;;;::::1;::::0;::::1;::::0;7853:18:488;;5821:42:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5808:55;;5908:6;:13;-1:-1:-1::0;;;;;5894:28:465::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;5894:28:465::1;-1:-1:-1::0;5873:49:465;-1:-1:-1;;;;;;5936:19:465;::::1;5950:4;5936:19;5932:75;;;5971:25;;;;;;;;5932:75;6021:9;6016:442;6040:6;:13;6036:1;:17;6016:442;;;6095:30;6115:6;6122:1;6115:9;;;;;;;;:::i;:::-;;;;;;;6095:19;:30::i;:::-;:123;;;;6146:10;-1:-1:-1::0;;;;;6146:24:465::1;;6171:6;6178:1;6171:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;6146:72:::1;::::0;-1:-1:-1;;;;;;6146:72:465::1;::::0;;;;;;-1:-1:-1;;;;;12347:32:488;;;6146:72:465::1;::::0;::::1;12329:51:488::0;402:1:362::1;12396:18:488::0;;;12389:45;12302:18;;6146:72:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6145:73;6095:123;6074:200;;;6251:8;;6074:200;6287:12;6309:6;6316:1;6309:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;6357:30:::1;::::0;-1:-1:-1;;;6357:30:465;;6381:4:::1;6357:30;::::0;::::1;10509:51:488::0;6309:9:465;;-1:-1:-1;;;;;;6357:15:465;::::1;::::0;::::1;::::0;10482:18:488;;6357:30:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6333:18;6352:1;6333:21;;;;;;;;:::i;:::-;;;;;;:54;;;::::0;::::1;6402:45;6421:2;6425:18;6444:1;6425:21;;;;;;;;:::i;:::-;;;;;;;6402:5;-1:-1:-1::0;;;;;6402:18:465::1;;;:45;;;;;:::i;:::-;6060:398;6016:442;6055:3;::::0;::::1;:::i;:::-;;;6016:442;;;;6472:45;6486:2;6490:6;6498:18;6472:45;;;;;;;;:::i;:::-;;;;;;;;5459:1065;;;;;;2292:1:32;2303:20:::0;1716:1;2809:7;:22;2629:209;2303:20;5321:1203:465;;;:::o;6559:1122::-;6648:17;6677:45;6725:16;;;;;;;;;-1:-1:-1;;;;;6725:16:465;-1:-1:-1;;;;;6725:31:465;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6794:15;;;;6860:25;;6910:4;;6677:81;;-1:-1:-1;6794:15:465;;6928:9;6924:57;;-1:-1:-1;;;;;;;6953:17:465;-1:-1:-1;6953:17:465;;-1:-1:-1;;;6953:17:465;6924:57;7009:26;;-1:-1:-1;;;7009:26:465;;;;;7880:25:488;;;6990:16:465;;-1:-1:-1;;;;;7009:20:465;;;;;7853:18:488;;7009:26:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7050:81;;-1:-1:-1;;;7050:81:465;;-1:-1:-1;;;;;12347:32:488;;;7050:81:465;;;12329:51:488;860:1:362;12396:18:488;;;12389:45;6990::465;;-1:-1:-1;7050:32:465;;;;;;12302:18:488;;7050:81:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7045:130;;-1:-1:-1;;;;;;;7147:17:465;-1:-1:-1;7147:17:465;;-1:-1:-1;;;;7147:17:465;7045:130;7236:21;;7280:8;;;;7276:257;;7308:63;;-1:-1:-1;;;7308:63:465;;-1:-1:-1;;;7308:63:465;;;4201:52:488;-1:-1:-1;;;;;7308:35:465;;;;;4174:18:488;;7308:63:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7304:219;;;7398:54;;-1:-1:-1;;;7398:54:465;;-1:-1:-1;;;;;7398:35:465;;;;;:54;;7434:5;;7441:10;;7398:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7391:61;;;;;;;;;;7304:219;-1:-1:-1;;;;;;;7491:17:465;-1:-1:-1;7491:17:465;;-1:-1:-1;;;;;7491:17:465;7304:219;7596:8;-1:-1:-1;;;;;7546:58:465;:46;7574:5;7581:10;7546:27;:46::i;:::-;-1:-1:-1;;;;;7546:58:465;;7542:106;;;-1:-1:-1;;;;7620:17:465;-1:-1:-1;7620:17:465;;-1:-1:-1;;;;;7620:17:465;7542:106;-1:-1:-1;;;;;;;7657:17:465;6559:1122;-1:-1:-1;;;;;;;;6559:1122:465:o;3829:1448::-;4002:35;2261:21:32;:19;:21::i;:::-;4064:4:465::1;::::0;;4097:22:::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;;4097:22:465::1;::::0;::::1;::::0;4064:4;4086:9;4078:42:::1;;;;-1:-1:-1::0;;;4078:42:465::1;;;;;;;;:::i;:::-;;4138:30;4157:10;4138:18;:30::i;:::-;4170:27;;;;;;;;;;;;;-1:-1:-1::0;;;4170:27:465::1;;::::0;4130:68:::1;;;;;-1:-1:-1::0;;;4130:68:465::1;;;;;;;;:::i;:::-;-1:-1:-1::0;4271:16:465::1;::::0;:33:::1;::::0;;-1:-1:-1;;;4271:33:465;;;;4245:23:::1;::::0;-1:-1:-1;;;;;4271:16:465::1;::::0;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:16;:33;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;::::0;4339:22:::1;::::0;-1:-1:-1;;;4339:22:465;;::::1;::::0;::::1;7880:25:488::0;;;4271:42:465;;-1:-1:-1;4323:13:465::1;::::0;-1:-1:-1;;;;;4339:16:465;::::1;::::0;::::1;::::0;7853:18:488;;4339:22:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4323:38;;4371:15;4389:28;4395:8;4405:4;4411:5;4389;:28::i;:::-;4371:46:::0;-1:-1:-1;;;;;;4431:19:465;::::1;4440:10;4431:19;4427:522;;4486:18;::::0;-1:-1:-1;;;4486:18:465;;4466:17:::1;4486:18;::::0;::::1;7880:25:488::0;;;4466:17:465;-1:-1:-1;;;;;4486:15:465;::::1;::::0;::::1;::::0;7853:18:488;;4486::465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4466:38:::0;-1:-1:-1;;;;;;4522:26:465;::::1;4543:4;4522:26;4518:421;;;4660:24;::::0;-1:-1:-1;;;4660:24:465;;-1:-1:-1;;;;;10527:32:488;;;4660:24:465::1;::::0;::::1;10509:51:488::0;4643:16:465;;::::1;::::0;::::1;::::0;4660:20;::::1;::::0;::::1;::::0;10482:18:488;;4660:24:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4643:42;;;;;;;;;;;;;7880:25:488::0;;7868:2;7853:18;;7734:177;4643:42:465::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;;;-1:-1:-1::0;;;;;;4689:19:465;::::1;4703:4;4689:19;;4643:65;4730:32;;;;;;;;;;;;;-1:-1:-1::0;;;4730:32:465::1;;::::0;4614:166:::1;;;;;-1:-1:-1::0;;;4614:166:465::1;;;;;;;;:::i;:::-;;4518:421;;;4887:2;-1:-1:-1::0;;;;;4874:15:465::1;:9;-1:-1:-1::0;;;;;4874:15:465::1;;4891:32;;;;;;;;;;;;;-1:-1:-1::0;;;4891:32:465::1;;::::0;4866:58:::1;;;;;-1:-1:-1::0;;;4866:58:465::1;;;;;;;;:::i;:::-;;4518:421;4452:497;4427:522;4958:30;4991:47;5017:6;5025:12;4991:25;:47::i;:::-;4958:80;;5048:36;5087:33;5093:2;5097:13;5112:7;5087:5;:33::i;:::-;5048:72;;5151:76;5185:6;5193:12;5151:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;5151:76:465::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;5207:19;5151:33;:76::i;:::-;5130:97;;5242:28;5247:2;5251:18;5242:28;;;;;;;:::i;:::-;;;;;;;;4039:1238;;;;;;2303:20:32::0;1716:1;2809:7;:22;2629:209;2303:20;3829:1448:465;;;;;;:::o;3017:768::-;3251:13;;3190:35;;3237:11;3274:177;3298:3;3294:1;:7;3274:177;;;3324:12;3337:1;3324:15;;;;;;;;:::i;:::-;;;;;;;3343:1;3324:20;3320:131;;3364:72;3399:4;3413;3420:12;3433:1;3420:15;;;;;;;;:::i;:::-;;;;;;;3371:6;3378:1;3371:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3364:34:465;;;:72;;;;;;:::i;:::-;3303:3;;;:::i;:::-;;;3274:177;;;;3482:35;3487:6;3495:12;3509:7;3482:4;:35::i;:::-;3461:56;;3532:9;3527:252;3551:6;:13;3547:1;:17;3527:252;;;3585:16;3628:12;3641:1;3628:15;;;;;;;;:::i;:::-;;;;;;;3604:18;3623:1;3604:21;;;;;;;;:::i;:::-;;;;;;;:39;:85;;3688:1;3604:85;;;3664:18;3683:1;3664:21;;;;;;;;:::i;:::-;;;;;;;3646:12;3659:1;3646:15;;;;;;;;:::i;:::-;;;;;;;:39;;;;:::i;:::-;3585:104;-1:-1:-1;3707:13:465;;3703:65;;3722:46;3753:4;3759:8;3729:6;3736:1;3729:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3722:30:465;;;:46;;;;;:::i;:::-;-1:-1:-1;3566:3:465;;;:::i;:::-;;;3527:252;;;;3227:558;3017:768;;;;;;:::o;7725:995::-;7866:19;2261:21:32;:19;:21::i;:::-;7905:4:465::1;::::0;;7916:22:::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;;7916:22:465::1;::::0;::::1;::::0;7897:42:::1;;;;-1:-1:-1::0;;;7897:42:465::1;;;;;;;;:::i;:::-;;7957:30;7976:10;7957:18;:30::i;:::-;7989:27;;;;;;;;;;;;;-1:-1:-1::0;;;7989:27:465::1;;::::0;7949:68:::1;;;;;-1:-1:-1::0;;;7949:68:465::1;;;;;;;;:::i;:::-;-1:-1:-1::0;8068:16:465::1;::::0;:33:::1;::::0;;-1:-1:-1;;;8068:33:465;;;;8027:38:::1;::::0;-1:-1:-1;;;;;8068:16:465::1;::::0;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:16;:33;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52:::0;8164:33:::1;::::0;-1:-1:-1;;;8164:33:465;;-1:-1:-1;;;;;10527:32:488;;;8164:33:465::1;::::0;::::1;10509:51:488::0;8068:52:465;;-1:-1:-1;8068:52:465::1;::::0;8164:29;::::1;::::0;::::1;::::0;10482:18:488;;8164:33:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8250:27;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;8250:27:465::1;::::0;::::1;::::0;8130:68;;-1:-1:-1;;;;;;8216:32:465;::::1;8208:70;;;;-1:-1:-1::0;;;8208:70:465::1;;;;;;;;:::i;:::-;-1:-1:-1::0;8288:61:465::1;::::0;-1:-1:-1;;;8288:61:465;;-1:-1:-1;;;;;8288:18:465;::::1;::::0;::::1;::::0;:61:::1;::::0;8307:10:::1;::::0;8319:2;;8323:9:::1;::::0;8334:8;;8344:4;;;;8288:61:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8360:8;8370:23:::0;8397:2:::1;-1:-1:-1::0;;;;;8397:7:465::1;8412:9;8440:8;8450:4;;8423:32;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;8423:32:465;;::::1;::::0;;;;;;;8397:59:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8359:97;;;;8471:3;8466:219;;8546:10;8540:17;8645:15;8632:10;8628:2;8624:19;8617:44;8466:219;1716:1:32::0;2809:7;:22;8703:10:465;-1:-1:-1;2303:20:32;;-1:-1:-1;;;2629:209:32;2022:951:465;2173:35;2261:21:32;:19;:21::i;:::-;2235:4:465::1;::::0;;2268:22:::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;;2268:22:465::1;::::0;::::1;::::0;2235:4;2257:9;2249:42:::1;;;;-1:-1:-1::0;;;2249:42:465::1;;;;;;;;:::i;:::-;-1:-1:-1::0;2332:16:465::1;::::0;:33:::1;::::0;;-1:-1:-1;;;2332:33:465;;;;2301:28:::1;::::0;-1:-1:-1;;;;;2332:16:465::1;::::0;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:16;:33;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;::::0;2411:27:::1;::::0;-1:-1:-1;;;2411:27:465;;::::1;::::0;::::1;7880:25:488::0;;;2332:42:465;;-1:-1:-1;2384:17:465::1;::::0;-1:-1:-1;;;;;2411:21:465;::::1;::::0;::::1;::::0;7853:18:488;;2411:27:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2505:46;::::0;-1:-1:-1;;;2505:46:465;;-1:-1:-1;;;;;10527:32:488;;;2505:46:465::1;::::0;::::1;10509:51:488::0;2384:55:465;;-1:-1:-1;2486:16:465::1;::::0;2505:25;::::1;::::0;::::1;::::0;10482:18:488;;2505:46:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2584:27;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;2584:27:465::1;::::0;::::1;::::0;2486:65;;-1:-1:-1;2569:13:465;2561:51:::1;;;;-1:-1:-1::0;;;2561:51:465::1;;;;;;;;:::i;:::-;;2661:30;2694:47;2720:6;2728:12;2694:25;:47::i;:::-;2661:80:::0;-1:-1:-1;2751:36:465::1;2661:80:::0;2751:68:::1;;2850:76;2884:6;2892:12;2850:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;2850:76:465::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;2906:19;2850:33;:76::i;:::-;2829:97;;2941:25;2946:19;2941:25;;;;;;:::i;:::-;;;;;;;;2210:763;;;;;;2303:20:32::0;1716:1;2809:7;:22;2629:209;2303:20;2022:951:465;;;;;:::o;2234:100:476:-;2280:16;2315:12;2308:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2308:19:476;;;;;;;;;;;;;;;;;;;;;;;2234:100;:::o;1017:122:460:-;1101:31;1113:12;1127:4;1101:11;:31::i;:::-;1017:122;;:::o;2620:110:476:-;2671:16;2706:17;2699:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2620:110;:::o;495:416:460:-;531:32;565;609:23;635:12;609:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;609:38:460;;;;;;;;;;;;;;;;-1:-1:-1;;671:13:460;;609:38;;-1:-1:-1;671:13:460;;-1:-1:-1;;;;;;;;712:18:460;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;712:18:460;;694:36;;745:9;740:122;764:3;760:1;:7;740:122;;;816:6;823:1;816:9;;;;;;;;:::i;:::-;;;;;;;;;;;809:42;;-1:-1:-1;;;809:42:460;;845:4;809:42;;;10509:51:488;-1:-1:-1;;;;;809:27:460;;;;;;10482:18:488;;809:42:460;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;788:15;804:1;788:18;;;;;;;;:::i;:::-;;;;;;;;;;:63;769:3;;;:::i;:::-;;;740:122;;;;889:15;871:33;;599:312;;495:416;;:::o;1603:306:465:-;1704:4;1739:36;1763:11;1739:23;:36::i;:::-;:104;;;-1:-1:-1;;;;;;;1792:50:465;;-1:-1:-1;;;1792:50:465;1739:104;:163;;;-1:-1:-1;;;;;;;1860:41:465;;-1:-1:-1;;;1860:41:465;1720:182;1603:306;-1:-1:-1;;1603:306:465:o;2336:287:32:-;1759:1;2468:7;;:19;;2460:63;;;;-1:-1:-1;;;2460:63:32;;16621:2:488;2460:63:32;;;16603:21:488;16660:2;16640:18;;;16633:30;16699:33;16679:18;;;16672:61;16750:18;;2460:63:32;16419:355:488;2460:63:32;1759:1;2598:7;:18;2336:287::o;9242:301:465:-;9386:31;;-1:-1:-1;;;9386:31:465;;-1:-1:-1;;;;;10527:32:488;;;9386:31:465;;;10509:51:488;9341:10:465;;;;9386:20;;;;;10482:18:488;;9386:31:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9363:54;-1:-1:-1;9436:12:465;;;;;9435:37;;-1:-1:-1;9454:17:465;;;9435:37;9474:22;;;;;;;;;;;;;-1:-1:-1;;;9474:22:465;;;9427:70;;;;;-1:-1:-1;;;9427:70:465;;;;;;;;:::i;:::-;-1:-1:-1;9526:9:465;;9242:301;-1:-1:-1;;;;9242:301:465:o;1213:295:460:-;1319:12;:19;1289:4;;;1348:132;1372:3;1368:1;:7;1348:132;;;1409:12;1422:1;1409:15;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1400:24:460;;;1409:15;;1400:24;1396:74;;;-1:-1:-1;1451:4:460;;1213:295;-1:-1:-1;;;1213:295:460:o;1396:74::-;1377:3;;;:::i;:::-;;;1348:132;;;-1:-1:-1;1496:5:460;;1213:295;-1:-1:-1;;;1213:295:460:o;941:175:37:-;1050:58;;-1:-1:-1;;;;;16971:32:488;;1050:58:37;;;16953:51:488;17020:18;;;17013:34;;;1023:86:37;;1043:5;;-1:-1:-1;;;1073:23:37;16926:18:488;;1050:58:37;;;;-1:-1:-1;;1050:58:37;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:37;-1:-1:-1;;;;;;1050:58:37;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;4987:247:360:-;5089:7;5109:9;5120;5131:7;5142:26;5157:10;5142:14;:26::i;:::-;5186:41;;;;;;;;;;;;17285:25:488;;;17358:4;17346:17;;17326:18;;;17319:45;;;;17380:18;;;17373:34;;;17423:18;;;17416:34;;;5108:60:360;;-1:-1:-1;5108:60:360;;-1:-1:-1;5108:60:360;-1:-1:-1;5186:41:360;;17257:19:488;;5186:41:360;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5186:41:360;;-1:-1:-1;;5186:41:360;;;4987:247;-1:-1:-1;;;;;;;4987:247:360:o;9549:337:465:-;9616:4;9632:23;9658:16;;;;;;;;;-1:-1:-1;;;;;9658:16:465;-1:-1:-1;;;;;9658:31:465;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;9725:4;;9658:42;;-1:-1:-1;9743:9:465;9739:52;;-1:-1:-1;9775:5:465;;9549:337;-1:-1:-1;;;9549:337:465:o;9739:52::-;9807:26;;-1:-1:-1;;;9807:26:465;;;;;7880:25:488;;;-1:-1:-1;;;;;9807:36:465;;;;:20;;;;;;7853:18:488;;9807:26:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9807:36:465;;:72;;;-1:-1:-1;9847:22:465;;-1:-1:-1;;;9847:22:465;;;;;7880:25:488;;;-1:-1:-1;;;;;9847:32:465;;;;:16;;;;;;7853:18:488;;9847:22:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9847:32:465;;9800:79;9549:337;-1:-1:-1;;;;9549:337:465:o;8791:445::-;8927:30;8977:39;9009:6;8977:31;:39::i;:::-;9018:27;;;;;;;;;;;;;-1:-1:-1;;;9018:27:465;;;8969:77;;;;;-1:-1:-1;;;8969:77:465;;;;;;;;:::i;:::-;;9081:12;:19;9064:6;:13;:36;9102:31;;;;;;;;;;;;;-1:-1:-1;;;9102:31:465;;;9056:78;;;;;-1:-1:-1;;;9056:78:465;;;;;;;;:::i;:::-;;9160:69;9194:12;9160:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9160:69:465;;;;;;;;;;;;;;;;;;;;;9208:6;9216:12;9160:33;:69::i;1824:1711:460:-;1961:35;2043:12;:19;-1:-1:-1;;;;;2029:34:460;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2029:34:460;;2008:55;;2073:33;2123:12;:19;-1:-1:-1;;;;;2109:34:460;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2109:34:460;;2073:70;;2153:23;2179:12;2153:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2153:38:460;;;;;;;;;;;;;;;;;;;;;;;2201:23;2227:16;;;;;;;;;-1:-1:-1;;;;;2227:16:460;-1:-1:-1;;;;;2227:31:460;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;2312:4;;;2295:22;;-1:-1:-1;;;2295:22:460;;;;;7880:25:488;2227:42:460;;-1:-1:-1;2279:13:460;;-1:-1:-1;;;;;2295:16:460;;;;;7853:18:488;;2295:22:460;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2279:38;;2333:9;2328:573;2352:12;:19;2348:1;:23;2328:573;;;2392:17;2419:6;2426:1;2419:9;;;;;;;;:::i;:::-;;;;;;;;;;;2461:35;;-1:-1:-1;;;2461:35:460;;2490:4;2461:35;;;10509:51:488;2419:9:460;;-1:-1:-1;2443:15:460;;-1:-1:-1;;;;;2461:20:460;;;;;10482:18:488;;2461:35:460;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2443:53;;2510:14;2545:7;2527:12;2540:1;2527:15;;;;;;;;:::i;:::-;;;;;;;:25;:53;;2573:7;2527:53;;;2555:12;2568:1;2555:15;;;;;;;;:::i;:::-;;;;;;;2527:53;2510:70;;2594:42;2625:2;2629:6;2601;2608:1;2601:9;;;;;;;;:::i;2594:42::-;2674:6;2650:18;2669:1;2650:21;;;;;;;;:::i;:::-;;;;;;:30;;;;;2707:2;-1:-1:-1;;;;;2698:11:460;:5;-1:-1:-1;;;;;2698:11:460;;2694:197;;2852:6;2859:1;2852:9;;;;;;;;:::i;:::-;;;;;;;;;;;2845:31;;-1:-1:-1;;;2845:31:460;;-1:-1:-1;;;;;10527:32:488;;;2845:31:460;;;10509:51:488;2845:27:460;;;;;;10482:18:488;;2845:31:460;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2823:16;2840:1;2823:19;;;;;;;;:::i;:::-;;;;;;:53;;;;;2694:197;2378:523;;;2373:3;;;;:::i;:::-;;;2328:573;;;;2923:2;-1:-1:-1;;;;;2914:11:460;:5;-1:-1:-1;;;;;2914:11:460;;2910:619;;3013:61;;-1:-1:-1;;;3013:61:460;;-1:-1:-1;;;;;3013:26:460;;;;;:61;;3040:6;;3048:16;;3066:7;;3013:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3013:61:460;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3179:43:460;;-1:-1:-1;;;3179:43:460;;3150:26;;-1:-1:-1;;;;;3179:35:460;;;;;:43;;3215:6;;3179:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3179:43:460;;;;;;;;;;;;:::i;:::-;3150:72;;3241:9;3236:283;3260:12;:19;3256:1;:23;3236:283;;;3409:9;3419:1;3409:12;;;;;;;;:::i;:::-;;;;;;;3384:18;3403:1;3384:21;;;;;;;;:::i;:::-;;;;;;;:37;;:120;;3503:1;3384:120;;;3468:9;3478:1;3468:12;;;;;;;;:::i;:::-;;;;;;;3444:18;3463:1;3444:21;;;;;;;;:::i;:::-;;;;;;;:36;;;;:::i;:::-;3360:18;3379:1;3360:21;;;;;;;;:::i;:::-;;;;;;;;;;:144;3281:3;;;;:::i;:::-;;;;3236:283;;;;2927:602;2910:619;1998:1537;;;;1824:1711;;;;;:::o;1954:948:360:-;2135:16;2163:20;2200:6;:13;-1:-1:-1;;;;;2186:28:360;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2186:28:360;;2163:51;;2224:9;2247:10;2271:518;2283:6;:13;2279:1;:17;2278:52;;;;;2307:15;:22;2302:2;:27;2278:52;2271:518;;;2362:15;2378:2;2362:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2350:31:360;:6;2357:1;2350:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2350:31:360;;2346:433;;;2410:1;2401:3;2405:1;2401:6;;;;;;;;:::i;:::-;;;;;;;;;;:10;2429:3;;;;:::i;:::-;;;;2271:518;;2346:433;2469:15;2485:2;2469:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2457:31:360;:6;2464:1;2457:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2457:31:360;;2453:326;;;2512:21;2534:2;2512:25;;;;;;;;:::i;:::-;;;;;;;2541:1;2512:30;2508:141;;;2566:4;;;;:::i;:::-;;;;2271:518;;2508:141;2617:13;;-1:-1:-1;;;2617:13:360;;19179:2:488;2617:13:360;;;19161:21:488;19218:1;19198:18;;;19191:29;-1:-1:-1;;;19236:18:488;;;19229:33;19279:18;;2617:13:360;18977:326:488;2453::360;2696:21;2718:2;2696:25;;;;;;;;:::i;:::-;;;;;;;2687:3;2691:1;2687:6;;;;;;;;:::i;:::-;;;;;;;;;;:34;2739:3;;;;:::i;:::-;;;;2760:4;;;;;:::i;2271:518::-;2809:6;:13;2805:1;:17;2798:78;;;2847:1;2838:3;2842:1;2838:6;;;;;;;;:::i;:::-;;;;;;;;;;:10;2862:3;;;;:::i;:::-;;;;2798:78;;;-1:-1:-1;2892:3:360;;1954:948;-1:-1:-1;;;;;1954:948:360:o;1355:203:37:-;1482:68;;-1:-1:-1;;;;;19566:15:488;;;1482:68:37;;;19548:34:488;19618:15;;19598:18;;;19591:43;19650:18;;;19643:34;;;1455:96:37;;1475:5;;-1:-1:-1;;;1505:27:37;19483:18:488;;1482:68:37;19308:375:488;1455:96:37;1355:203;;;;:::o;3052:1350:476:-;3153:4;;;3164:22;;;;;;;;;;;;-1:-1:-1;;;3164:22:476;;;;3153:9;3145:42;;;;-1:-1:-1;;;3145:42:476;;;;;;;;:::i;:::-;;3205:45;3237:12;3205:31;:45::i;:::-;3252:27;;;;;;;;;;;;;-1:-1:-1;;;3252:27:476;;;3197:83;;;;;-1:-1:-1;;;3197:83:476;;;;;;;;:::i;:::-;-1:-1:-1;3309:28:476;;;;;;;;;;;;-1:-1:-1;;;3309:28:476;;;;3298:9;3290:48;;;;-1:-1:-1;;;3290:48:476;;;;;;;;:::i;:::-;;3403:30;3453:10;-1:-1:-1;;;;;3436:43:476;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;3531:19;;3436:64;;-1:-1:-1;3531:23:476;;;;:80;;;3581:10;-1:-1:-1;;;;;3581:28:476;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3558:12;:19;:53;;3531:80;3625:31;;;;;;;;;;;;;-1:-1:-1;;;3625:31:476;;;3510:156;;;;;-1:-1:-1;;;3510:156:476;;;;;;;;:::i;:::-;;3681:9;3676:240;3700:12;:19;3696:1;:23;3676:240;;;3765:10;-1:-1:-1;;;;;3765:24:476;;3790:12;3803:1;3790:15;;;;;;;;:::i;:::-;;;;;;;;;;;3765:81;;-1:-1:-1;;;;;;3765:81:476;;;;;;;-1:-1:-1;;;;;12347:32:488;;;3765:81:476;;;12329:51:488;493:1:362;12396:18:488;;;12389:45;12302:18;;3765:81:476;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3864:27;;;;;;;;;;;;;-1:-1:-1;;;3864:27:476;;;3740:165;;;;;-1:-1:-1;;;3740:165:476;;;;;;;;:::i;:::-;-1:-1:-1;3721:3:476;;;;:::i;:::-;;;;3676:240;;;-1:-1:-1;3925:16:476;:47;;-1:-1:-1;;;;;;3925:47:476;3961:10;3925:47;;;3982:27;;;;:12;;:27;;;;;:::i;:::-;-1:-1:-1;4019:4:476;:11;;;4054:12;:19;4040:11;4083:244;4107:3;4103:1;:7;4083:244;;;4175:5;:1;4179;4175:5;:::i;:::-;4131:17;:34;4149:12;4162:1;4149:15;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4131:34:476;-1:-1:-1;;;;;4131:34:476;;;;;;;;;;;;:50;;;;4196:20;4234:12;4247:1;4234:15;;;;;;;;:::i;:::-;;;;;;;4196:54;;4264:17;4313:1;4294:5;-1:-1:-1;;;;;4294:14:476;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:20;;;;:::i;:::-;4287:28;;:2;:28;:::i;:::-;4264:52;;;;;;;-1:-1:-1;4264:52:476;;;;;;;;;;;-1:-1:-1;4112:3:476;;;:::i;:::-;;;4083:244;;;-1:-1:-1;4341:54:476;;4364:10;;4353:9;;4341:54;;;;4376:12;;4390:4;;4341:54;:::i;:::-;;;;;;;;3135:1267;;3052:1350;;:::o;2764:213::-;2866:4;-1:-1:-1;;;;;;;;;937:40:49;;;2889:81:476;;;-1:-1:-1;;;;;;;2930:39:476;;-1:-1:-1;;;2930:39:476;2882:88;2764:213;-1:-1:-1;;2764:213:476:o;5196:642:37:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:37;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:37;;22288:2:488;5720:111:37;;;22270:21:488;22327:2;22307:18;;;22300:30;22366:34;22346:18;;;22339:62;-1:-1:-1;;;22417:18:488;;;22410:40;22467:19;;5720:111:37;22086:406:488;5407:322:360;5472:9;5483;5494:7;5521:3;:10;5535:2;5521:16;5539:32;;;;;;;;;;;;;-1:-1:-1;;;5539:32:360;;;5513:59;;;;;-1:-1:-1;;;5513:59:360;;;;;;;;:::i;:::-;-1:-1:-1;;;;5626:2:360;5617:12;;5611:19;5663:2;5654:12;;5648:19;5708:2;5699:12;;;5693:19;5611;;5690:1;5685:28;;;;;5407:322::o;1239:335::-;1314:4;1350:1;1334:6;:13;:17;1330:59;;;-1:-1:-1;1374:4:360;;1239:335;-1:-1:-1;1239:335:360:o;1330:59::-;1403:9;1398:149;1438:1;1422:6;:13;:17;;;;:::i;:::-;1418:1;:21;1398:149;;;1477:6;1484:5;:1;1488;1484:5;:::i;:::-;1477:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1464:26:360;:6;1471:1;1464:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1464:26:360;;1460:77;;-1:-1:-1;1517:5:360;;1239:335;-1:-1:-1;;1239:335:360:o;1460:77::-;1441:3;;;:::i;:::-;;;1398:149;;;-1:-1:-1;1563:4:360;;1239:335;-1:-1:-1;;1239:335:360:o;4108:223:43:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:43;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:43:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:17;;7902:286;;-1:-1:-1;;;;;1702:19:43;;;8113:60;;;;-1:-1:-1;;;8113:60:43;;23106:2:488;8113:60:43;;;23088:21:488;23145:2;23125:18;;;23118:30;23184:31;23164:18;;;23157:59;23233:18;;8113:60:43;22904:353:488;8113:60:43;-1:-1:-1;8208:10:43;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:43;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:488;-1:-1:-1;;;;;;88:32:488;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:127::-;653:10;648:3;644:20;641:1;634:31;684:4;681:1;674:15;708:4;705:1;698:15;724:275;795:2;789:9;860:2;841:13;;-1:-1:-1;;837:27:488;825:40;;-1:-1:-1;;;;;880:34:488;;916:22;;;877:62;874:88;;;942:18;;:::i;:::-;978:2;971:22;724:275;;-1:-1:-1;724:275:488:o;1004:183::-;1064:4;-1:-1:-1;;;;;1089:6:488;1086:30;1083:56;;;1119:18;;:::i;:::-;-1:-1:-1;1164:1:488;1160:14;1176:4;1156:25;;1004:183::o;1192:131::-;-1:-1:-1;;;;;1267:31:488;;1257:42;;1247:70;;1313:1;1310;1303:12;1328:737;1382:5;1435:3;1428:4;1420:6;1416:17;1412:27;1402:55;;1453:1;1450;1443:12;1402:55;1489:6;1476:20;1515:4;1539:60;1555:43;1595:2;1555:43;:::i;:::-;1539:60;:::i;:::-;1633:15;;;1719:1;1715:10;;;;1703:23;;1699:32;;;1664:12;;;;1743:15;;;1740:35;;;1771:1;1768;1761:12;1740:35;1807:2;1799:6;1795:15;1819:217;1835:6;1830:3;1827:15;1819:217;;;1915:3;1902:17;1932:31;1957:5;1932:31;:::i;:::-;1976:18;;2014:12;;;;1852;;1819:217;;;-1:-1:-1;2054:5:488;1328:737;-1:-1:-1;;;;;;1328:737:488:o;2070:348::-;2154:6;2207:2;2195:9;2186:7;2182:23;2178:32;2175:52;;;2223:1;2220;2213:12;2175:52;2263:9;2250:23;-1:-1:-1;;;;;2288:6:488;2285:30;2282:50;;;2328:1;2325;2318:12;2282:50;2351:61;2404:7;2395:6;2384:9;2380:22;2351:61;:::i;2423:435::-;2476:3;2514:5;2508:12;2541:6;2536:3;2529:19;2567:4;2596:2;2591:3;2587:12;2580:19;;2633:2;2626:5;2622:14;2654:1;2664:169;2678:6;2675:1;2672:13;2664:169;;;2739:13;;2727:26;;2773:12;;;;2808:15;;;;2700:1;2693:9;2664:169;;;-1:-1:-1;2849:3:488;;2423:435;-1:-1:-1;;;;;2423:435:488:o;2863:261::-;3042:2;3031:9;3024:21;3005:4;3062:56;3114:2;3103:9;3099:18;3091:6;3062:56;:::i;3129:530::-;3171:5;3224:3;3217:4;3209:6;3205:17;3201:27;3191:55;;3242:1;3239;3232:12;3191:55;3278:6;3265:20;-1:-1:-1;;;;;3300:2:488;3297:26;3294:52;;;3326:18;;:::i;:::-;3370:55;3413:2;3394:13;;-1:-1:-1;;3390:27:488;3419:4;3386:38;3370:55;:::i;:::-;3450:2;3441:7;3434:19;3496:3;3489:4;3484:2;3476:6;3472:15;3468:26;3465:35;3462:55;;;3513:1;3510;3503:12;3462:55;3578:2;3571:4;3563:6;3559:17;3552:4;3543:7;3539:18;3526:55;3626:1;3601:16;;;3619:4;3597:27;3590:38;;;;3605:7;3129:530;-1:-1:-1;;;3129:530:488:o;3664:388::-;3741:6;3749;3802:2;3790:9;3781:7;3777:23;3773:32;3770:52;;;3818:1;3815;3808:12;3770:52;3854:9;3841:23;3831:33;;3915:2;3904:9;3900:18;3887:32;-1:-1:-1;;;;;3934:6:488;3931:30;3928:50;;;3974:1;3971;3964:12;3928:50;3997:49;4038:7;4029:6;4018:9;4014:22;3997:49;:::i;:::-;3987:59;;;3664:388;;;;;:::o;4264:662::-;4318:5;4371:3;4364:4;4356:6;4352:17;4348:27;4338:55;;4389:1;4386;4379:12;4338:55;4425:6;4412:20;4451:4;4475:60;4491:43;4531:2;4491:43;:::i;4475:60::-;4569:15;;;4655:1;4651:10;;;;4639:23;;4635:32;;;4600:12;;;;4679:15;;;4676:35;;;4707:1;4704;4697:12;4676:35;4743:2;4735:6;4731:15;4755:142;4771:6;4766:3;4763:15;4755:142;;;4837:17;;4825:30;;4875:12;;;;4788;;4755:142;;4931:929;5076:6;5084;5092;5100;5153:3;5141:9;5132:7;5128:23;5124:33;5121:53;;;5170:1;5167;5160:12;5121:53;5209:9;5196:23;5228:31;5253:5;5228:31;:::i;:::-;5278:5;-1:-1:-1;5334:2:488;5319:18;;5306:32;-1:-1:-1;;;;;5387:14:488;;;5384:34;;;5414:1;5411;5404:12;5384:34;5437:61;5490:7;5481:6;5470:9;5466:22;5437:61;:::i;:::-;5427:71;;5551:2;5540:9;5536:18;5523:32;5507:48;;5580:2;5570:8;5567:16;5564:36;;;5596:1;5593;5586:12;5564:36;5619:63;5674:7;5663:8;5652:9;5648:24;5619:63;:::i;:::-;5609:73;;5735:2;5724:9;5720:18;5707:32;5691:48;;5764:2;5754:8;5751:16;5748:36;;;5780:1;5777;5770:12;5748:36;;5803:51;5846:7;5835:8;5824:9;5820:24;5803:51;:::i;:::-;5793:61;;;4931:929;;;;;;;:::o;5865:865::-;5952:6;5960;5968;5976;6029:2;6017:9;6008:7;6004:23;6000:32;5997:52;;;6045:1;6042;6035:12;5997:52;6084:9;6071:23;6103:31;6128:5;6103:31;:::i;:::-;6153:5;-1:-1:-1;6210:2:488;6195:18;;6182:32;6223;6182;6223;:::i;:::-;6274:7;-1:-1:-1;6332:2:488;6317:18;;6304:32;-1:-1:-1;;;;;6385:14:488;;;6382:34;;;6412:1;6409;6402:12;6382:34;6450:6;6439:9;6435:22;6425:32;;6495:7;6488:4;6484:2;6480:13;6476:27;6466:55;;6517:1;6514;6507:12;6466:55;6557:2;6544:16;6583:2;6575:6;6572:14;6569:34;;;6599:1;6596;6589:12;6569:34;6644:7;6639:2;6630:6;6626:2;6622:15;6618:24;6615:37;6612:57;;;6665:1;6662;6655:12;6612:57;5865:865;;;;-1:-1:-1;;6696:2:488;6688:11;;-1:-1:-1;;;5865:865:488:o;6735:258::-;6807:1;6817:113;6831:6;6828:1;6825:13;6817:113;;;6907:11;;;6901:18;6888:11;;;6881:39;6853:2;6846:10;6817:113;;;6948:6;6945:1;6942:13;6939:48;;;-1:-1:-1;;6983:1:488;6965:16;;6958:27;6735:258::o;6998:257::-;7039:3;7077:5;7071:12;7104:6;7099:3;7092:19;7120:63;7176:6;7169:4;7164:3;7160:14;7153:4;7146:5;7142:16;7120:63;:::i;:::-;7237:2;7216:15;-1:-1:-1;;7212:29:488;7203:39;;;;7244:4;7199:50;;6998:257;-1:-1:-1;;6998:257:488:o;7260:217::-;7407:2;7396:9;7389:21;7370:4;7427:44;7467:2;7456:9;7452:18;7444:6;7427:44;:::i;7482:247::-;7541:6;7594:2;7582:9;7573:7;7569:23;7565:32;7562:52;;;7610:1;7607;7600:12;7562:52;7649:9;7636:23;7668:31;7693:5;7668:31;:::i;7916:793::-;8052:6;8060;8068;8121:2;8109:9;8100:7;8096:23;8092:32;8089:52;;;8137:1;8134;8127:12;8089:52;8177:9;8164:23;-1:-1:-1;;;;;8247:2:488;8239:6;8236:14;8233:34;;;8263:1;8260;8253:12;8233:34;8286:61;8339:7;8330:6;8319:9;8315:22;8286:61;:::i;:::-;8276:71;;8400:2;8389:9;8385:18;8372:32;8356:48;;8429:2;8419:8;8416:16;8413:36;;;8445:1;8442;8435:12;8413:36;8468:63;8523:7;8512:8;8501:9;8497:24;8468:63;:::i;:::-;8458:73;;8584:2;8573:9;8569:18;8556:32;8540:48;;8613:2;8603:8;8600:16;8597:36;;;8629:1;8626;8619:12;8597:36;;8652:51;8695:7;8684:8;8673:9;8669:24;8652:51;:::i;:::-;8642:61;;;7916:793;;;;;:::o;8714:461::-;8767:3;8805:5;8799:12;8832:6;8827:3;8820:19;8858:4;8887:2;8882:3;8878:12;8871:19;;8924:2;8917:5;8913:14;8945:1;8955:195;8969:6;8966:1;8963:13;8955:195;;;9034:13;;-1:-1:-1;;;;;9030:39:488;9018:52;;9090:12;;;;9125:15;;;;9066:1;8984:9;8955:195;;9180:261;9359:2;9348:9;9341:21;9322:4;9379:56;9431:2;9420:9;9416:18;9408:6;9379:56;:::i;9446:416::-;9539:6;9547;9600:2;9588:9;9579:7;9575:23;9571:32;9568:52;;;9616:1;9613;9606:12;9568:52;9652:9;9639:23;9629:33;;9713:2;9702:9;9698:18;9685:32;-1:-1:-1;;;;;9732:6:488;9729:30;9726:50;;;9772:1;9769;9762:12;9726:50;9795:61;9848:7;9839:6;9828:9;9824:22;9795:61;:::i;9867:465::-;10124:2;10113:9;10106:21;10087:4;10150:56;10202:2;10191:9;10187:18;10179:6;10150:56;:::i;:::-;10254:9;10246:6;10242:22;10237:2;10226:9;10222:18;10215:50;10282:44;10319:6;10311;10282:44;:::i;:::-;10274:52;9867:465;-1:-1:-1;;;;;9867:465:488:o;10795:781::-;10898:6;10951:2;10939:9;10930:7;10926:23;10922:32;10919:52;;;10967:1;10964;10957:12;10919:52;11000:2;10994:9;11042:2;11034:6;11030:15;11111:6;11099:10;11096:22;-1:-1:-1;;;;;11063:10:488;11060:34;11057:62;11054:88;;;11122:18;;:::i;:::-;11158:2;11151:22;11195:16;;11220:31;11195:16;11220:31;:::i;:::-;11260:21;;11326:2;11311:18;;11305:25;11339:33;11305:25;11339:33;:::i;:::-;11400:2;11388:15;;11381:32;11458:2;11443:18;;11437:25;11471:33;11437:25;11471:33;:::i;:::-;11532:2;11520:15;;11513:32;11524:6;10795:781;-1:-1:-1;;;10795:781:488:o;11581:251::-;11651:6;11704:2;11692:9;11683:7;11679:23;11675:32;11672:52;;;11720:1;11717;11710:12;11672:52;11752:9;11746:16;11771:31;11796:5;11771:31;:::i;12027:127::-;12088:10;12083:3;12079:20;12076:1;12069:31;12119:4;12116:1;12109:15;12143:4;12140:1;12133:15;12445:277;12512:6;12565:2;12553:9;12544:7;12540:23;12536:32;12533:52;;;12581:1;12578;12571:12;12533:52;12613:9;12607:16;12666:5;12659:13;12652:21;12645:5;12642:32;12632:60;;12688:1;12685;12678:12;12935:184;13005:6;13058:2;13046:9;13037:7;13033:23;13029:32;13026:52;;;13074:1;13071;13064:12;13026:52;-1:-1:-1;13097:16:488;;12935:184;-1:-1:-1;12935:184:488:o;13124:127::-;13185:10;13180:3;13176:20;13173:1;13166:31;13216:4;13213:1;13206:15;13240:4;13237:1;13230:15;13256:135;13295:3;-1:-1:-1;;13316:17:488;;13313:43;;;13336:18;;:::i;:::-;-1:-1:-1;13383:1:488;13372:13;;13256:135::o;13396:562::-;-1:-1:-1;;;;;13681:32:488;;13663:51;;13750:2;13745;13730:18;;13723:30;;;-1:-1:-1;;13776:56:488;;13813:18;;13805:6;13776:56;:::i;:::-;13880:9;13872:6;13868:22;13863:2;13852:9;13848:18;13841:50;13908:44;13945:6;13937;13908:44;:::i;:::-;13900:52;13396:562;-1:-1:-1;;;;;;13396:562:488:o;13963:288::-;14138:6;14127:9;14120:25;14181:2;14176;14165:9;14161:18;14154:30;14101:4;14201:44;14241:2;14230:9;14226:18;14218:6;14201:44;:::i;14256:249::-;14325:6;14378:2;14366:9;14357:7;14353:23;14349:32;14346:52;;;14394:1;14391;14384:12;14346:52;14426:9;14420:16;14445:30;14469:5;14445:30;:::i;14510:358::-;-1:-1:-1;;;;;14717:32:488;;14699:51;;14786:2;14781;14766:18;;14759:30;;;-1:-1:-1;;14806:56:488;;14843:18;;14835:6;14806:56;:::i;14873:125::-;14913:4;14941:1;14938;14935:8;14932:34;;;14946:18;;:::i;:::-;-1:-1:-1;14983:9:488;;14873:125::o;15003:759::-;-1:-1:-1;;;;;15308:15:488;;;15290:34;;15360:15;;15355:2;15340:18;;15333:43;15407:2;15392:18;;15385:34;;;-1:-1:-1;;;;;;15455:33:488;;15450:2;15435:18;;15428:61;15270:3;15520;15505:19;;15498:32;;;15546:19;;15539:35;;;15233:4;15567:6;15617;15611:3;15596:19;;15583:49;15682:1;15676:3;15667:6;15656:9;15652:22;15648:32;15641:43;15752:3;15745:2;15741:7;15736:2;15728:6;15724:15;15720:29;15709:9;15705:45;15701:55;15693:63;;15003:759;;;;;;;;;:::o;15767:368::-;-1:-1:-1;;;;;;15962:33:488;;15950:46;;16039:6;16031;16027:1;16018:11;;16005:41;15932:3;16069:16;;16087:1;16065:24;16098:13;;;16065:24;15767:368;-1:-1:-1;;15767:368:488:o;16140:274::-;16269:3;16307:6;16301:13;16323:53;16369:6;16364:3;16357:4;16349:6;16345:17;16323:53;:::i;:::-;16392:16;;;;;16140:274;-1:-1:-1;;16140:274:488:o;17461:625::-;17764:2;17753:9;17746:21;17727:4;17790:56;17842:2;17831:9;17827:18;17819:6;17790:56;:::i;:::-;17894:9;17886:6;17882:22;17877:2;17866:9;17862:18;17855:50;17928:44;17965:6;17957;17928:44;:::i;:::-;17914:58;;18020:9;18012:6;18008:22;18003:2;17992:9;17988:18;17981:50;18048:32;18073:6;18065;18048:32;:::i;18091:881::-;18186:6;18217:2;18260;18248:9;18239:7;18235:23;18231:32;18228:52;;;18276:1;18273;18266:12;18228:52;18309:9;18303:16;-1:-1:-1;;;;;18334:6:488;18331:30;18328:50;;;18374:1;18371;18364:12;18328:50;18397:22;;18450:4;18442:13;;18438:27;-1:-1:-1;18428:55:488;;18479:1;18476;18469:12;18428:55;18508:2;18502:9;18531:60;18547:43;18587:2;18547:43;:::i;18531:60::-;18625:15;;;18707:1;18703:10;;;;18695:19;;18691:28;;;18656:12;;;;18731:19;;;18728:39;;;18763:1;18760;18753:12;18728:39;18787:11;;;;18807:135;18823:6;18818:3;18815:15;18807:135;;;18889:10;;18877:23;;18840:12;;;;18920;;;;18807:135;;19688:128;19728:3;19759:1;19755:6;19752:1;19749:13;19746:39;;;19765:18;;:::i;:::-;-1:-1:-1;19801:9:488;;19688:128::o;19821:273::-;19889:6;19942:2;19930:9;19921:7;19917:23;19913:32;19910:52;;;19958:1;19955;19948:12;19910:52;19990:9;19984:16;20040:4;20033:5;20029:16;20022:5;20019:27;20009:55;;20060:1;20057;20050:12;20099:262;20137:1;20171:4;20168:1;20164:12;20195:3;20185:134;;20241:10;20236:3;20232:20;20229:1;20222:31;20276:4;20273:1;20266:15;20304:4;20301:1;20294:15;20185:134;20351:3;20344:4;20341:1;20337:12;20333:22;20328:27;;;20099:262;;;;:::o;20366:422::-;20455:1;20498:5;20455:1;20512:270;20533:7;20523:8;20520:21;20512:270;;;20592:4;20588:1;20584:6;20580:17;20574:4;20571:27;20568:53;;;20601:18;;:::i;:::-;20651:7;20641:8;20637:22;20634:55;;;20671:16;;;;20634:55;20750:22;;;;20710:15;;;;20512:270;;;20516:3;20366:422;;;;;:::o;20793:806::-;20842:5;20872:8;20862:80;;-1:-1:-1;20913:1:488;20927:5;;20862:80;20961:4;20951:76;;-1:-1:-1;20998:1:488;21012:5;;20951:76;21043:4;21061:1;21056:59;;;;21129:1;21124:130;;;;21036:218;;21056:59;21086:1;21077:10;;21100:5;;;21124:130;21161:3;21151:8;21148:17;21145:43;;;21168:18;;:::i;:::-;-1:-1:-1;;21224:1:488;21210:16;;21239:5;;21036:218;;21338:2;21328:8;21325:16;21319:3;21313:4;21310:13;21306:36;21300:2;21290:8;21287:16;21282:2;21276:4;21273:12;21269:35;21266:77;21263:159;;;-1:-1:-1;21375:19:488;;;21407:5;;21263:159;21454:34;21479:8;21473:4;21454:34;:::i;:::-;21524:6;21520:1;21516:6;21512:19;21503:7;21500:32;21497:58;;;21535:18;;:::i;:::-;21573:20;;20793:806;-1:-1:-1;;;20793:806:488:o;21604:140::-;21662:5;21691:47;21732:4;21722:8;21718:19;21712:4;21691:47;:::i;21749:332::-;21956:2;21945:9;21938:21;21919:4;21976:56;22028:2;22017:9;22013:18;22005:6;21976:56;:::i;:::-;21968:64;;22068:6;22063:2;22052:9;22048:18;22041:34;21749:332;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "externalCall(address,bytes4,bytes)": "2e2f4cc2",
    "initialize(uint256,address[])": "a920b78c",
    "initialized()": "158ef93e",
    "isValidSignature(bytes32,bytes)": "1626ba7e",
    "isVaultToken(address)": "338c4ccb",
    "nft()": "47ccca02",
    "pull(address,address[],uint256[],bytes)": "2062d754",
    "pullExistentials()": "d2c219b0",
    "push(address[],uint256[],bytes)": "566ca6b4",
    "reclaimTokens(address[])": "05e1c942",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferAndPush(address,address[],uint256[],bytes)": "27a35e5a",
    "tvl()": "e5328e06",
    "vaultGovernance()": "fe255a5e",
    "vaultTokens()": "69722233"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nft_\",\"type\":\"uint256\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"Pull\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"Push\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"ReclaimTokens\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"externalCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isVaultToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"pull\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullExistentials\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"push\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"reclaimTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"transferAndPush\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tvl\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"minTokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultGovernance\",\"outputs\":[{\"internalType\":\"contract IVaultGovernance\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"externalCall(address,bytes4,bytes)\":{\"details\":\"Can only be called by Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. Since this method allows sending arbitrary transactions, the destinations of the calls are whitelisted by Protocol Governance.\",\"params\":{\"data\":\"Abi encoded parameters to `to::selector`\",\"selector\":\"Selector of the call\",\"to\":\"Address of the reward pool\"},\"returns\":{\"result\":\"Result of execution of the call\"}},\"initialize(uint256,address[])\":{\"details\":\"Can only be initialized by vault governance\",\"params\":{\"nft_\":\"NFT of the vault in the VaultRegistry\",\"vaultTokens_\":\"ERC20 tokens that will be managed by this Vault\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided hash MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls\",\"params\":{\"_hash\":\"Hash of the data to be signed\",\"_signature\":\"Signature byte array associated with _hash\"},\"returns\":{\"magicValue\":\"0x1626ba7e if valid, 0xffffffff otherwise\"}},\"isVaultToken(address)\":{\"params\":{\"token\":\"Address of the token to check\"},\"returns\":{\"_0\":\"`true` if this token is managed by Vault\"}},\"pull(address,address[],uint256[],bytes)\":{\"details\":\"Can only be called but Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. When called by vault owner this method just pulls the tokens from the protocol to the `to` address When called by strategy on vault other than zero vault it pulls the tokens to zero vault (required `to` == zero vault) When called by strategy on zero vault it pulls the tokens to zero vault, pushes tokens on the `to` vault, and reclaims everything that's left. Thus any vault other than zero vault cannot have any tokens on it Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Pull is fulfilled on the best effort basis, i.e. if the tokenAmounts overflows available funds it withdraws all the funds.\",\"params\":{\"options\":\"Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\",\"to\":\"Address to receive the tokens\",\"tokenAmounts\":\"Amounts of tokens to pull\",\"tokens\":\"Tokens to pull\"},\"returns\":{\"actualTokenAmounts\":\"The amounts actually withdrawn. It could be less than tokenAmounts (but not higher)\"}},\"push(address[],uint256[],bytes)\":{\"details\":\"Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Also notice that this operation doesn't guarantee that tokenAmounts will be invested in full.\",\"params\":{\"options\":\"Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\",\"tokenAmounts\":\"Amounts of tokens to push\",\"tokens\":\"Tokens to push\"},\"returns\":{\"actualTokenAmounts\":\"The amounts actually invested. It could be less than tokenAmounts (but not higher)\"}},\"reclaimTokens(address[])\":{\"details\":\"Cannot be called from zero vault.\",\"params\":{\"tokens\":\"Tokens to claim\"},\"returns\":{\"actualTokenAmounts\":\"Amounts reclaimed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferAndPush(address,address[],uint256[],bytes)\":{\"params\":{\"options\":\"Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\",\"tokenAmounts\":\"Amounts of tokens to push\",\"tokens\":\"Tokens to push\"},\"returns\":{\"actualTokenAmounts\":\"The amounts actually invested. It could be less than tokenAmounts (but not higher)\"}},\"tvl()\":{\"details\":\"Generally it is the underlying token value of this contract in some other DeFi protocol. For example, for USDC Yearn Vault this would be total USDC balance that could be withdrawn for Yearn to this contract. The tvl itself is estimated in some range. Sometimes the range is exact, sometimes it's not\",\"returns\":{\"maxTokenAmounts\":\"Upper bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)\",\"minTokenAmounts\":\"Lower bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Initialized(address,address,address[],uint256)\":{\"notice\":\"Emitted when Vault is intialized\"},\"Pull(address,uint256[])\":{\"notice\":\"Emitted on successful pull\"},\"Push(uint256[])\":{\"notice\":\"Emitted on successful push\"},\"ReclaimTokens(address,address[],uint256[])\":{\"notice\":\"Emitted when tokens are reclaimed\"}},\"kind\":\"user\",\"methods\":{\"externalCall(address,bytes4,bytes)\":{\"notice\":\"Execute one of whitelisted calls.\"},\"initialize(uint256,address[])\":{\"notice\":\"Initialized a new contract.\"},\"initialized()\":{\"notice\":\"Checks if the vault is initialized\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies offchain signature.\"},\"isVaultToken(address)\":{\"notice\":\"Checks if a token is vault token\"},\"nft()\":{\"notice\":\"VaultRegistry NFT for this vault\"},\"pull(address,address[],uint256[],bytes)\":{\"notice\":\"Pulls tokens from the underlying protocol to the `to` address.\"},\"pullExistentials()\":{\"notice\":\"Existential amounts for each token\"},\"push(address[],uint256[],bytes)\":{\"notice\":\"Pushes tokens on the vault balance to the underlying protocol. For example, for Yearn this operation will take USDC from the contract balance and convert it to yUSDC.\"},\"reclaimTokens(address[])\":{\"notice\":\"Claim ERC20 tokens from vault balance to zero vault.\"},\"transferAndPush(address,address[],uint256[],bytes)\":{\"notice\":\"The same as `push` method above but transfers tokens to vault balance prior to calling push. After the `push` it returns all the leftover tokens back (`push` method doesn't guarantee that tokenAmounts will be invested in full).\"},\"tvl()\":{\"notice\":\"Total value locked for this contract.\"},\"vaultGovernance()\":{\"notice\":\"Address of the Vault Governance for this contract.\"},\"vaultTokens()\":{\"notice\":\"ERC20 tokens under Vault management.\"}},\"notice\":\"Vault that stores ERC20 tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vaults/ERC20Vault.sol\":\"ERC20Vault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281\",\"dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b\"]},\"src/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87\",\"dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk\"]},\"src/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50\",\"dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1\"]},\"src/interfaces/external/erc/IERC1271.sol\":{\"keccak256\":\"0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779\",\"dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd\"]},\"src/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add\",\"dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu\"]},\"src/interfaces/validators/IBaseValidator.sol\":{\"keccak256\":\"0x91fa24f9202986d93ef9adf34ba8c17b8b9699ac365a54604abe70d54277a908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33f59c4ce1794edbdaf3b4b184e8df3d1dbfab69e87c5ec5c8bda0220d324e11\",\"dweb:/ipfs/QmWstawnPNGrjcmLKZ2Td3gRnK29d5HERF5QevEcLxqx2p\"]},\"src/interfaces/validators/IValidator.sol\":{\"keccak256\":\"0x8818b72829998c2f4acda6e5d8c66e2765adaf630a755d2865ce9e2559a8f63f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c198a3b15883bde77e78d0741d6fe5ea399176ba4d1c69bd32d9e31e6e85b4c1\",\"dweb:/ipfs/QmQyZzxTkPGtmrLJrXrrUU2qy9dtaeGyfqhvixQ7Fh1ekf\"]},\"src/interfaces/vaults/IERC20Vault.sol\":{\"keccak256\":\"0xe819fd0b6fbad8e6b2c71e986b5859a432308a196b91c209aa0bf1e10bdddf27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0e8b853eed75d97003f269143c4c041070062011296aecbcfefee4879e88d94\",\"dweb:/ipfs/QmWLFHp3LRSzuTu8SRsdxUJ5rxKAMx6F6JgqPBheedbTFx\"]},\"src/interfaces/vaults/IIntegrationVault.sol\":{\"keccak256\":\"0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d\",\"dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy\"]},\"src/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1\",\"dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw\"]},\"src/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375\",\"dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu\"]},\"src/interfaces/vaults/IVaultRoot.sol\":{\"keccak256\":\"0xfc566a9133afe6942e196bcfde5b5e1920094d6f1656885b25b72b91f48c10ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79470664780741869fe81ad1eed10b2afd7d9432ee70be1599f242f102a4deaa\",\"dweb:/ipfs/QmUUPv5juGLrdngD5ZQNcsHxvQzWPG1c8aLjA2nsUC6uJz\"]},\"src/libraries/CommonLibrary.sol\":{\"keccak256\":\"0xba41d4d3513effc9b74645da78f66d5900dd49669b02b85845babd7c11f30f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://485caf8f41614fcd6653910850651ca8f326de2298a39f340970a3e994faa03b\",\"dweb:/ipfs/QmNqJYP98zFeXwKUUCcHjc1HgNBGcxE46fDSjmYn4F78gK\"]},\"src/libraries/ExceptionsLibrary.sol\":{\"keccak256\":\"0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f\",\"dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX\"]},\"src/libraries/PermissionIdsLibrary.sol\":{\"keccak256\":\"0xc6a4f2515d807b2ad95e9e8f7190c5ea85ab6603d2c1136632a8af9c479ecfcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e16f3d1e595ffa5b20cd1588e839ee783b1ca246d489cbe42040fd3089bb8b1\",\"dweb:/ipfs/QmQdW5ykrjB5yMMxkU5zTR4GJ5kBhyrnAbmt3mvtB55kuC\"]},\"src/libraries/external/FullMath.sol\":{\"keccak256\":\"0x4e62215e42605e0a7ac1b29c1ed9ea5e3de0b81b1004fe5db50e08a3d5116384\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35f956c16580edefa156bbcf9a46bb82b32bfb26fe28b8ba5a5e3017d9582741\",\"dweb:/ipfs/QmUyoNEKLxPiftneU2xU2xixKNvCXvG847WEfCX1gsYGoz\"]},\"src/vaults/ERC20Vault.sol\":{\"keccak256\":\"0x02bc0b4e02638341d59157cd5b441f20b295f3266e824cb2c90c21603fbb2fa2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8bbedc82f65c0c7e8f30365317fdacaecdf352201ecb400576dbfeefb8c49119\",\"dweb:/ipfs/QmUNK9MTajfKwXptMh4xGNHkfN94oRRjNjVF2gXTeyy39x\"]},\"src/vaults/IntegrationVault.sol\":{\"keccak256\":\"0xc7c94b708ce2ba583230f4d62d69803e91945d1af63f8989e9023c9115b03c84\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0834feeb7a9412fae1869ac73736dc8aa47dffb3c9b936f75312e50bad007cdb\",\"dweb:/ipfs/QmUZv66T4STKBqPCYeQvdTiWzf8Ptm66TfWtc7oFjFq59Q\"]},\"src/vaults/Vault.sol\":{\"keccak256\":\"0xbee4e72089b03a8c9f546d23583dd190bd0035ad3be38889d80b06a7b5e94271\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4e3ad66c3eeab2cffeb0323631c8c35a3ae37b062e05010fc8958b4ad06da0e5\",\"dweb:/ipfs/QmYYTwZFQufPxfn7zBmHGoogAJwsebd2TjDiJVoNtVLAs8\"]},\"src/vaults/VaultGovernance.sol\":{\"keccak256\":\"0xd484ec7eee06480da27027a0ac81f591440ecdd2ba7bd5bfdee58a3f9e88c22c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8b4f08e9350fadeb03b9561a2fb2798821f7186fe8663207c91402ea62a53cc5\",\"dweb:/ipfs/QmUr73ghYfPzjtFgxE8mPjw5wFwQTQsbcLDGJNQVfT4rEV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address[]",
              "name": "vaultTokens_",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "nft_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Pull",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Push",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReclaimTokens",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "externalCall",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft_",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "vaultTokens_",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "initialized",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "magicValue",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isVaultToken",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nft",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pull",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pullExistentials",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "push",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reclaimTokens",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAndPush",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tvl",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "minTokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "maxTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultGovernance",
          "outputs": [
            {
              "internalType": "contract IVaultGovernance",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultTokens",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "externalCall(address,bytes4,bytes)": {
            "details": "Can only be called by Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. Since this method allows sending arbitrary transactions, the destinations of the calls are whitelisted by Protocol Governance.",
            "params": {
              "data": "Abi encoded parameters to `to::selector`",
              "selector": "Selector of the call",
              "to": "Address of the reward pool"
            },
            "returns": {
              "result": "Result of execution of the call"
            }
          },
          "initialize(uint256,address[])": {
            "details": "Can only be initialized by vault governance",
            "params": {
              "nft_": "NFT of the vault in the VaultRegistry",
              "vaultTokens_": "ERC20 tokens that will be managed by this Vault"
            }
          },
          "isValidSignature(bytes32,bytes)": {
            "details": "Should return whether the signature provided is valid for the provided hash MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls",
            "params": {
              "_hash": "Hash of the data to be signed",
              "_signature": "Signature byte array associated with _hash"
            },
            "returns": {
              "magicValue": "0x1626ba7e if valid, 0xffffffff otherwise"
            }
          },
          "isVaultToken(address)": {
            "params": {
              "token": "Address of the token to check"
            },
            "returns": {
              "_0": "`true` if this token is managed by Vault"
            }
          },
          "pull(address,address[],uint256[],bytes)": {
            "details": "Can only be called but Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. When called by vault owner this method just pulls the tokens from the protocol to the `to` address When called by strategy on vault other than zero vault it pulls the tokens to zero vault (required `to` == zero vault) When called by strategy on zero vault it pulls the tokens to zero vault, pushes tokens on the `to` vault, and reclaims everything that's left. Thus any vault other than zero vault cannot have any tokens on it Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Pull is fulfilled on the best effort basis, i.e. if the tokenAmounts overflows available funds it withdraws all the funds.",
            "params": {
              "options": "Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions",
              "to": "Address to receive the tokens",
              "tokenAmounts": "Amounts of tokens to pull",
              "tokens": "Tokens to pull"
            },
            "returns": {
              "actualTokenAmounts": "The amounts actually withdrawn. It could be less than tokenAmounts (but not higher)"
            }
          },
          "push(address[],uint256[],bytes)": {
            "details": "Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Also notice that this operation doesn't guarantee that tokenAmounts will be invested in full.",
            "params": {
              "options": "Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions",
              "tokenAmounts": "Amounts of tokens to push",
              "tokens": "Tokens to push"
            },
            "returns": {
              "actualTokenAmounts": "The amounts actually invested. It could be less than tokenAmounts (but not higher)"
            }
          },
          "reclaimTokens(address[])": {
            "details": "Cannot be called from zero vault.",
            "params": {
              "tokens": "Tokens to claim"
            },
            "returns": {
              "actualTokenAmounts": "Amounts reclaimed"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "transferAndPush(address,address[],uint256[],bytes)": {
            "params": {
              "options": "Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions",
              "tokenAmounts": "Amounts of tokens to push",
              "tokens": "Tokens to push"
            },
            "returns": {
              "actualTokenAmounts": "The amounts actually invested. It could be less than tokenAmounts (but not higher)"
            }
          },
          "tvl()": {
            "details": "Generally it is the underlying token value of this contract in some other DeFi protocol. For example, for USDC Yearn Vault this would be total USDC balance that could be withdrawn for Yearn to this contract. The tvl itself is estimated in some range. Sometimes the range is exact, sometimes it's not",
            "returns": {
              "maxTokenAmounts": "Upper bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)",
              "minTokenAmounts": "Lower bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "externalCall(address,bytes4,bytes)": {
            "notice": "Execute one of whitelisted calls."
          },
          "initialize(uint256,address[])": {
            "notice": "Initialized a new contract."
          },
          "initialized()": {
            "notice": "Checks if the vault is initialized"
          },
          "isValidSignature(bytes32,bytes)": {
            "notice": "Verifies offchain signature."
          },
          "isVaultToken(address)": {
            "notice": "Checks if a token is vault token"
          },
          "nft()": {
            "notice": "VaultRegistry NFT for this vault"
          },
          "pull(address,address[],uint256[],bytes)": {
            "notice": "Pulls tokens from the underlying protocol to the `to` address."
          },
          "pullExistentials()": {
            "notice": "Existential amounts for each token"
          },
          "push(address[],uint256[],bytes)": {
            "notice": "Pushes tokens on the vault balance to the underlying protocol. For example, for Yearn this operation will take USDC from the contract balance and convert it to yUSDC."
          },
          "reclaimTokens(address[])": {
            "notice": "Claim ERC20 tokens from vault balance to zero vault."
          },
          "transferAndPush(address,address[],uint256[],bytes)": {
            "notice": "The same as `push` method above but transfers tokens to vault balance prior to calling push. After the `push` it returns all the leftover tokens back (`push` method doesn't guarantee that tokenAmounts will be invested in full)."
          },
          "tvl()": {
            "notice": "Total value locked for this contract."
          },
          "vaultGovernance()": {
            "notice": "Address of the Vault Governance for this contract."
          },
          "vaultTokens()": {
            "notice": "ERC20 tokens under Vault management."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/vaults/ERC20Vault.sol": "ERC20Vault"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999",
        "urls": [
          "bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb",
          "dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolGovernance.sol": {
        "keccak256": "0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e",
        "urls": [
          "bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281",
          "dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b"
        ],
        "license": "MIT"
      },
      "src/interfaces/IUnitPricesGovernance.sol": {
        "keccak256": "0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081",
        "urls": [
          "bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87",
          "dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk"
        ],
        "license": "MIT"
      },
      "src/interfaces/IVaultRegistry.sol": {
        "keccak256": "0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55",
        "urls": [
          "bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50",
          "dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/erc/IERC1271.sol": {
        "keccak256": "0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36",
        "urls": [
          "bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779",
          "dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IDefaultAccessControl.sol": {
        "keccak256": "0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60",
        "urls": [
          "bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add",
          "dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu"
        ],
        "license": "MIT"
      },
      "src/interfaces/validators/IBaseValidator.sol": {
        "keccak256": "0x91fa24f9202986d93ef9adf34ba8c17b8b9699ac365a54604abe70d54277a908",
        "urls": [
          "bzz-raw://33f59c4ce1794edbdaf3b4b184e8df3d1dbfab69e87c5ec5c8bda0220d324e11",
          "dweb:/ipfs/QmWstawnPNGrjcmLKZ2Td3gRnK29d5HERF5QevEcLxqx2p"
        ],
        "license": "MIT"
      },
      "src/interfaces/validators/IValidator.sol": {
        "keccak256": "0x8818b72829998c2f4acda6e5d8c66e2765adaf630a755d2865ce9e2559a8f63f",
        "urls": [
          "bzz-raw://c198a3b15883bde77e78d0741d6fe5ea399176ba4d1c69bd32d9e31e6e85b4c1",
          "dweb:/ipfs/QmQyZzxTkPGtmrLJrXrrUU2qy9dtaeGyfqhvixQ7Fh1ekf"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IERC20Vault.sol": {
        "keccak256": "0xe819fd0b6fbad8e6b2c71e986b5859a432308a196b91c209aa0bf1e10bdddf27",
        "urls": [
          "bzz-raw://a0e8b853eed75d97003f269143c4c041070062011296aecbcfefee4879e88d94",
          "dweb:/ipfs/QmWLFHp3LRSzuTu8SRsdxUJ5rxKAMx6F6JgqPBheedbTFx"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IIntegrationVault.sol": {
        "keccak256": "0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e",
        "urls": [
          "bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d",
          "dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVault.sol": {
        "keccak256": "0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43",
        "urls": [
          "bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1",
          "dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultGovernance.sol": {
        "keccak256": "0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813",
        "urls": [
          "bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375",
          "dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultRoot.sol": {
        "keccak256": "0xfc566a9133afe6942e196bcfde5b5e1920094d6f1656885b25b72b91f48c10ef",
        "urls": [
          "bzz-raw://79470664780741869fe81ad1eed10b2afd7d9432ee70be1599f242f102a4deaa",
          "dweb:/ipfs/QmUUPv5juGLrdngD5ZQNcsHxvQzWPG1c8aLjA2nsUC6uJz"
        ],
        "license": "MIT"
      },
      "src/libraries/CommonLibrary.sol": {
        "keccak256": "0xba41d4d3513effc9b74645da78f66d5900dd49669b02b85845babd7c11f30f99",
        "urls": [
          "bzz-raw://485caf8f41614fcd6653910850651ca8f326de2298a39f340970a3e994faa03b",
          "dweb:/ipfs/QmNqJYP98zFeXwKUUCcHjc1HgNBGcxE46fDSjmYn4F78gK"
        ],
        "license": "MIT"
      },
      "src/libraries/ExceptionsLibrary.sol": {
        "keccak256": "0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff",
        "urls": [
          "bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f",
          "dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX"
        ],
        "license": "MIT"
      },
      "src/libraries/PermissionIdsLibrary.sol": {
        "keccak256": "0xc6a4f2515d807b2ad95e9e8f7190c5ea85ab6603d2c1136632a8af9c479ecfcf",
        "urls": [
          "bzz-raw://4e16f3d1e595ffa5b20cd1588e839ee783b1ca246d489cbe42040fd3089bb8b1",
          "dweb:/ipfs/QmQdW5ykrjB5yMMxkU5zTR4GJ5kBhyrnAbmt3mvtB55kuC"
        ],
        "license": "MIT"
      },
      "src/libraries/external/FullMath.sol": {
        "keccak256": "0x4e62215e42605e0a7ac1b29c1ed9ea5e3de0b81b1004fe5db50e08a3d5116384",
        "urls": [
          "bzz-raw://35f956c16580edefa156bbcf9a46bb82b32bfb26fe28b8ba5a5e3017d9582741",
          "dweb:/ipfs/QmUyoNEKLxPiftneU2xU2xixKNvCXvG847WEfCX1gsYGoz"
        ],
        "license": "MIT"
      },
      "src/vaults/ERC20Vault.sol": {
        "keccak256": "0x02bc0b4e02638341d59157cd5b441f20b295f3266e824cb2c90c21603fbb2fa2",
        "urls": [
          "bzz-raw://8bbedc82f65c0c7e8f30365317fdacaecdf352201ecb400576dbfeefb8c49119",
          "dweb:/ipfs/QmUNK9MTajfKwXptMh4xGNHkfN94oRRjNjVF2gXTeyy39x"
        ],
        "license": "BUSL-1.1"
      },
      "src/vaults/IntegrationVault.sol": {
        "keccak256": "0xc7c94b708ce2ba583230f4d62d69803e91945d1af63f8989e9023c9115b03c84",
        "urls": [
          "bzz-raw://0834feeb7a9412fae1869ac73736dc8aa47dffb3c9b936f75312e50bad007cdb",
          "dweb:/ipfs/QmUZv66T4STKBqPCYeQvdTiWzf8Ptm66TfWtc7oFjFq59Q"
        ],
        "license": "BUSL-1.1"
      },
      "src/vaults/Vault.sol": {
        "keccak256": "0xbee4e72089b03a8c9f546d23583dd190bd0035ad3be38889d80b06a7b5e94271",
        "urls": [
          "bzz-raw://4e3ad66c3eeab2cffeb0323631c8c35a3ae37b062e05010fc8958b4ad06da0e5",
          "dweb:/ipfs/QmYYTwZFQufPxfn7zBmHGoogAJwsebd2TjDiJVoNtVLAs8"
        ],
        "license": "BUSL-1.1"
      },
      "src/vaults/VaultGovernance.sol": {
        "keccak256": "0xd484ec7eee06480da27027a0ac81f591440ecdd2ba7bd5bfdee58a3f9e88c22c",
        "urls": [
          "bzz-raw://8b4f08e9350fadeb03b9561a2fb2798821f7186fe8663207c91402ea62a53cc5",
          "dweb:/ipfs/QmUr73ghYfPzjtFgxE8mPjw5wFwQTQsbcLDGJNQVfT4rEV"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/vaults/ERC20Vault.sol",
    "id": 145181,
    "exportedSymbols": {
      "Address": [
        47093
      ],
      "Clones": [
        43615
      ],
      "CommonLibrary": [
        79384
      ],
      "ERC165": [
        48061
      ],
      "ERC20Vault": [
        145180
      ],
      "ExceptionsLibrary": [
        79454
      ],
      "FullMath": [
        80391
      ],
      "IAccessControl": [
        43366
      ],
      "IAccessControlEnumerable": [
        43391
      ],
      "IBaseValidator": [
        76071
      ],
      "IDefaultAccessControl": [
        75786
      ],
      "IERC1271": [
        64026
      ],
      "IERC165": [
        48073
      ],
      "IERC20": [
        45207
      ],
      "IERC20Metadata": [
        45232
      ],
      "IERC20Permit": [
        45268
      ],
      "IERC20Vault": [
        77170
      ],
      "IERC721": [
        46687
      ],
      "IIntegrationVault": [
        77767
      ],
      "IProtocolGovernance": [
        52868
      ],
      "IUnitPricesGovernance": [
        52921
      ],
      "IValidator": [
        76093
      ],
      "IVault": [
        78599
      ],
      "IVaultGovernance": [
        78668
      ],
      "IVaultRegistry": [
        53012
      ],
      "IVaultRoot": [
        78702
      ],
      "IntegrationVault": [
        149908
      ],
      "PermissionIdsLibrary": [
        79479
      ],
      "ReentrancyGuard": [
        44542
      ],
      "SafeERC20": [
        45644
      ],
      "Vault": [
        157396
      ],
      "VaultGovernance": [
        158218
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:3764:460",
    "nodes": [
      {
        "id": 144814,
        "nodeType": "PragmaDirective",
        "src": "37:23:460",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 144815,
        "nodeType": "ImportDirective",
        "src": "62:56:460",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 145181,
        "sourceUnit": 45208,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 144816,
        "nodeType": "ImportDirective",
        "src": "119:65:460",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 145181,
        "sourceUnit": 45645,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 144817,
        "nodeType": "ImportDirective",
        "src": "186:46:460",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/IERC20Vault.sol",
        "file": "../interfaces/vaults/IERC20Vault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 145181,
        "sourceUnit": 77171,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 144818,
        "nodeType": "ImportDirective",
        "src": "233:32:460",
        "nodes": [],
        "absolutePath": "src/vaults/IntegrationVault.sol",
        "file": "./IntegrationVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 145181,
        "sourceUnit": 149909,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 145180,
        "nodeType": "ContractDefinition",
        "src": "311:3489:460",
        "nodes": [
          {
            "id": 144827,
            "nodeType": "UsingForDirective",
            "src": "370:27:460",
            "nodes": [],
            "libraryName": {
              "id": 144824,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45644,
              "src": "376:9:460"
            },
            "typeName": {
              "id": 144826,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 144825,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45207,
                "src": "390:6:460"
              },
              "referencedDeclaration": 45207,
              "src": "390:6:460",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$45207",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 144890,
            "nodeType": "FunctionDefinition",
            "src": "495:416:460",
            "nodes": [],
            "body": {
              "id": 144889,
              "nodeType": "Block",
              "src": "599:312:460",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    144841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 144841,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "626:6:460",
                      "nodeType": "VariableDeclaration",
                      "scope": 144889,
                      "src": "609:23:460",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 144839,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "609:7:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 144840,
                        "nodeType": "ArrayTypeName",
                        "src": "609:9:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 144843,
                  "initialValue": {
                    "id": 144842,
                    "name": "_vaultTokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 157099,
                    "src": "635:12:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "609:38:460"
                },
                {
                  "assignments": [
                    144845
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 144845,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "665:3:460",
                      "nodeType": "VariableDeclaration",
                      "scope": 144889,
                      "src": "657:11:460",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 144844,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "657:7:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 144848,
                  "initialValue": {
                    "expression": {
                      "id": 144846,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144841,
                      "src": "671:6:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 144847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "671:13:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "657:27:460"
                },
                {
                  "expression": {
                    "id": 144855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 144849,
                      "name": "minTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144832,
                      "src": "694:15:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 144853,
                          "name": "len",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144845,
                          "src": "726:3:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 144852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "712:13:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 144850,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "716:7:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 144851,
                          "nodeType": "ArrayTypeName",
                          "src": "716:9:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 144854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "712:18:460",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "694:36:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 144856,
                  "nodeType": "ExpressionStatement",
                  "src": "694:36:460"
                },
                {
                  "body": {
                    "id": 144883,
                    "nodeType": "Block",
                    "src": "774:88:460",
                    "statements": [
                      {
                        "expression": {
                          "id": 144881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 144867,
                              "name": "minTokenAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144832,
                              "src": "788:15:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 144869,
                            "indexExpression": {
                              "id": 144868,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144858,
                              "src": "804:1:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "788:18:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 144878,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "845:4:460",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Vault_$145180",
                                      "typeString": "contract ERC20Vault"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ERC20Vault_$145180",
                                      "typeString": "contract ERC20Vault"
                                    }
                                  ],
                                  "id": 144877,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "837:7:460",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 144876,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "837:7:460",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 144879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "837:13:460",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 144871,
                                      "name": "tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 144841,
                                      "src": "816:6:460",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 144873,
                                    "indexExpression": {
                                      "id": 144872,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 144858,
                                      "src": "823:1:460",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "816:9:460",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 144870,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45207,
                                  "src": "809:6:460",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$45207_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 144874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "809:17:460",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$45207",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 144875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45164,
                              "src": "809:27:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 144880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "809:42:460",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "788:63:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 144882,
                        "nodeType": "ExpressionStatement",
                        "src": "788:63:460"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 144863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 144861,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144858,
                      "src": "760:1:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 144862,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144845,
                      "src": "764:3:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "760:7:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 144884,
                  "initializationExpression": {
                    "assignments": [
                      144858
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 144858,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "753:1:460",
                        "nodeType": "VariableDeclaration",
                        "scope": 144884,
                        "src": "745:9:460",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 144857,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "745:7:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 144860,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 144859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "757:1:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "745:13:460"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 144865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "769:3:460",
                      "subExpression": {
                        "id": 144864,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144858,
                        "src": "771:1:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 144866,
                    "nodeType": "ExpressionStatement",
                    "src": "769:3:460"
                  },
                  "nodeType": "ForStatement",
                  "src": "740:122:460"
                },
                {
                  "expression": {
                    "id": 144887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 144885,
                      "name": "maxTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144835,
                      "src": "871:15:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 144886,
                      "name": "minTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144832,
                      "src": "889:15:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "871:33:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 144888,
                  "nodeType": "ExpressionStatement",
                  "src": "871:33:460"
                }
              ]
            },
            "baseFunctions": [
              78591
            ],
            "documentation": {
              "id": 144828,
              "nodeType": "StructuredDocumentation",
              "src": "468:22:460",
              "text": "@inheritdoc IVault"
            },
            "functionSelector": "e5328e06",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tvl",
            "nameLocation": "504:3:460",
            "parameters": {
              "id": 144829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "507:2:460"
            },
            "returnParameters": {
              "id": 144836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144832,
                  "mutability": "mutable",
                  "name": "minTokenAmounts",
                  "nameLocation": "548:15:460",
                  "nodeType": "VariableDeclaration",
                  "scope": 144890,
                  "src": "531:32:460",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 144830,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "531:7:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 144831,
                    "nodeType": "ArrayTypeName",
                    "src": "531:9:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 144835,
                  "mutability": "mutable",
                  "name": "maxTokenAmounts",
                  "nameLocation": "582:15:460",
                  "nodeType": "VariableDeclaration",
                  "scope": 144890,
                  "src": "565:32:460",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 144833,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "565:7:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 144834,
                    "nodeType": "ArrayTypeName",
                    "src": "565:9:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "530:68:460"
            },
            "scope": 145180,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 144905,
            "nodeType": "FunctionDefinition",
            "src": "1017:122:460",
            "nodes": [],
            "body": {
              "id": 144904,
              "nodeType": "Block",
              "src": "1091:48:460",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 144900,
                        "name": "vaultTokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144896,
                        "src": "1113:12:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 144901,
                        "name": "nft_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144893,
                        "src": "1127:4:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 144899,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157383,
                      "src": "1101:11:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address[] memory,uint256)"
                      }
                    },
                    "id": 144902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1101:31:460",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144903,
                  "nodeType": "ExpressionStatement",
                  "src": "1101:31:460"
                }
              ]
            },
            "baseFunctions": [
              77169
            ],
            "documentation": {
              "id": 144891,
              "nodeType": "StructuredDocumentation",
              "src": "985:27:460",
              "text": "@inheritdoc IERC20Vault"
            },
            "functionSelector": "a920b78c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1026:10:460",
            "parameters": {
              "id": 144897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144893,
                  "mutability": "mutable",
                  "name": "nft_",
                  "nameLocation": "1045:4:460",
                  "nodeType": "VariableDeclaration",
                  "scope": 144905,
                  "src": "1037:12:460",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1037:7:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 144896,
                  "mutability": "mutable",
                  "name": "vaultTokens_",
                  "nameLocation": "1068:12:460",
                  "nodeType": "VariableDeclaration",
                  "scope": 144905,
                  "src": "1051:29:460",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 144894,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1051:7:460",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 144895,
                    "nodeType": "ArrayTypeName",
                    "src": "1051:9:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1036:45:460"
            },
            "returnParameters": {
              "id": 144898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1091:0:460"
            },
            "scope": 145180,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 144942,
            "nodeType": "FunctionDefinition",
            "src": "1213:295:460",
            "nodes": [],
            "body": {
              "id": 144941,
              "nodeType": "Block",
              "src": "1295:213:460",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    144914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 144914,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "1313:3:460",
                      "nodeType": "VariableDeclaration",
                      "scope": 144941,
                      "src": "1305:11:460",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 144913,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1305:7:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 144917,
                  "initialValue": {
                    "expression": {
                      "id": 144915,
                      "name": "_vaultTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157099,
                      "src": "1319:12:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 144916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1319:19:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1305:33:460"
                },
                {
                  "body": {
                    "id": 144937,
                    "nodeType": "Block",
                    "src": "1382:98:460",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 144932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 144928,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144907,
                            "src": "1400:5:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 144929,
                              "name": "_vaultTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157099,
                              "src": "1409:12:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 144931,
                            "indexExpression": {
                              "id": 144930,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144919,
                              "src": "1422:1:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1409:15:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1400:24:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 144936,
                        "nodeType": "IfStatement",
                        "src": "1396:74:460",
                        "trueBody": {
                          "id": 144935,
                          "nodeType": "Block",
                          "src": "1426:44:460",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 144933,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1451:4:460",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 144912,
                              "id": 144934,
                              "nodeType": "Return",
                              "src": "1444:11:460"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 144924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 144922,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144919,
                      "src": "1368:1:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 144923,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144914,
                      "src": "1372:3:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1368:7:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 144938,
                  "initializationExpression": {
                    "assignments": [
                      144919
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 144919,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1361:1:460",
                        "nodeType": "VariableDeclaration",
                        "scope": 144938,
                        "src": "1353:9:460",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 144918,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1353:7:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 144921,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 144920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1365:1:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1353:13:460"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 144926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1377:3:460",
                      "subExpression": {
                        "id": 144925,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144919,
                        "src": "1379:1:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 144927,
                    "nodeType": "ExpressionStatement",
                    "src": "1377:3:460"
                  },
                  "nodeType": "ForStatement",
                  "src": "1348:132:460"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 144939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1496:5:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 144912,
                  "id": 144940,
                  "nodeType": "Return",
                  "src": "1489:12:460"
                }
              ]
            },
            "baseFunctions": [
              149856
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isReclaimForbidden",
            "nameLocation": "1222:19:460",
            "overrides": {
              "id": 144909,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1271:8:460"
            },
            "parameters": {
              "id": 144908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144907,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1250:5:460",
                  "nodeType": "VariableDeclaration",
                  "scope": 144942,
                  "src": "1242:13:460",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 144906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:7:460",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1241:15:460"
            },
            "returnParameters": {
              "id": 144912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144911,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 144942,
                  "src": "1289:4:460",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 144910,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1289:4:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1288:6:460"
            },
            "scope": 145180,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 144957,
            "nodeType": "FunctionDefinition",
            "src": "1583:235:460",
            "nodes": [],
            "body": {
              "id": 144956,
              "nodeType": "Block",
              "src": "1734:84:460",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 144954,
                    "name": "tokenAmounts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 144945,
                    "src": "1799:12:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 144953,
                  "id": 144955,
                  "nodeType": "Return",
                  "src": "1792:19:460"
                }
              ]
            },
            "baseFunctions": [
              149868
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_push",
            "nameLocation": "1592:5:460",
            "overrides": {
              "id": 144949,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1679:8:460"
            },
            "parameters": {
              "id": 144948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144945,
                  "mutability": "mutable",
                  "name": "tokenAmounts",
                  "nameLocation": "1624:12:460",
                  "nodeType": "VariableDeclaration",
                  "scope": 144957,
                  "src": "1607:29:460",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 144943,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1607:7:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 144944,
                    "nodeType": "ArrayTypeName",
                    "src": "1607:9:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 144947,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 144957,
                  "src": "1646:12:460",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 144946,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1646:5:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1597:67:460"
            },
            "returnParameters": {
              "id": 144953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144952,
                  "mutability": "mutable",
                  "name": "actualTokenAmounts",
                  "nameLocation": "1714:18:460",
                  "nodeType": "VariableDeclaration",
                  "scope": 144957,
                  "src": "1697:35:460",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 144950,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1697:7:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 144951,
                    "nodeType": "ArrayTypeName",
                    "src": "1697:9:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1696:37:460"
            },
            "scope": 145180,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 145154,
            "nodeType": "FunctionDefinition",
            "src": "1824:1711:460",
            "nodes": [],
            "body": {
              "id": 145153,
              "nodeType": "Block",
              "src": "1998:1537:460",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 144978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 144971,
                      "name": "actualTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144969,
                      "src": "2008:18:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 144975,
                            "name": "tokenAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144962,
                            "src": "2043:12:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 144976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2043:19:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 144974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2029:13:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 144972,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2033:7:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 144973,
                          "nodeType": "ArrayTypeName",
                          "src": "2033:9:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 144977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2029:34:460",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "2008:55:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 144979,
                  "nodeType": "ExpressionStatement",
                  "src": "2008:55:460"
                },
                {
                  "assignments": [
                    144984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 144984,
                      "mutability": "mutable",
                      "name": "pushTokenAmounts",
                      "nameLocation": "2090:16:460",
                      "nodeType": "VariableDeclaration",
                      "scope": 145153,
                      "src": "2073:33:460",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 144982,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2073:7:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 144983,
                        "nodeType": "ArrayTypeName",
                        "src": "2073:9:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 144991,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 144988,
                          "name": "tokenAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 144962,
                          "src": "2123:12:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 144989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2123:19:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 144987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2109:13:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 144985,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2113:7:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 144986,
                        "nodeType": "ArrayTypeName",
                        "src": "2113:9:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 144990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2109:34:460",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2073:70:460"
                },
                {
                  "assignments": [
                    144996
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 144996,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "2170:6:460",
                      "nodeType": "VariableDeclaration",
                      "scope": 145153,
                      "src": "2153:23:460",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 144994,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2153:7:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 144995,
                        "nodeType": "ArrayTypeName",
                        "src": "2153:9:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 144998,
                  "initialValue": {
                    "id": 144997,
                    "name": "_vaultTokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 157099,
                    "src": "2179:12:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2153:38:460"
                },
                {
                  "assignments": [
                    145001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145001,
                      "mutability": "mutable",
                      "name": "registry",
                      "nameLocation": "2216:8:460",
                      "nodeType": "VariableDeclaration",
                      "scope": 145153,
                      "src": "2201:23:460",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaultRegistry_$53012",
                        "typeString": "contract IVaultRegistry"
                      },
                      "typeName": {
                        "id": 145000,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 144999,
                          "name": "IVaultRegistry",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 53012,
                          "src": "2201:14:460"
                        },
                        "referencedDeclaration": 53012,
                        "src": "2201:14:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaultRegistry_$53012",
                          "typeString": "contract IVaultRegistry"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 145006,
                  "initialValue": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 145002,
                          "name": "_vaultGovernance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157096,
                          "src": "2227:16:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVaultGovernance_$78668",
                            "typeString": "contract IVaultGovernance"
                          }
                        },
                        "id": 145003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "internalParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78649,
                        "src": "2227:31:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_InternalParams_$78614_memory_ptr_$",
                          "typeString": "function () view external returns (struct IVaultGovernance.InternalParams memory)"
                        }
                      },
                      "id": 145004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2227:33:460",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_InternalParams_$78614_memory_ptr",
                        "typeString": "struct IVaultGovernance.InternalParams memory"
                      }
                    },
                    "id": 145005,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "registry",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 78610,
                    "src": "2227:42:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVaultRegistry_$53012",
                      "typeString": "contract IVaultRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2201:68:460"
                },
                {
                  "assignments": [
                    145008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145008,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2287:5:460",
                      "nodeType": "VariableDeclaration",
                      "scope": 145153,
                      "src": "2279:13:460",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 145007,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2279:7:460",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 145013,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 145011,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157105,
                        "src": "2312:4:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 145009,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145001,
                        "src": "2295:8:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaultRegistry_$53012",
                          "typeString": "contract IVaultRegistry"
                        }
                      },
                      "id": 145010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46620,
                      "src": "2295:16:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 145012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2295:22:460",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2279:38:460"
                },
                {
                  "body": {
                    "id": 145091,
                    "nodeType": "Block",
                    "src": "2378:523:460",
                    "statements": [
                      {
                        "assignments": [
                          145027
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 145027,
                            "mutability": "mutable",
                            "name": "vaultToken",
                            "nameLocation": "2399:10:460",
                            "nodeType": "VariableDeclaration",
                            "scope": 145091,
                            "src": "2392:17:460",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$45207",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 145026,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 145025,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 45207,
                                "src": "2392:6:460"
                              },
                              "referencedDeclaration": 45207,
                              "src": "2392:6:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 145033,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 145029,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 144996,
                                "src": "2419:6:460",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 145031,
                              "indexExpression": {
                                "id": 145030,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 145015,
                                "src": "2426:1:460",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2419:9:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 145028,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45207,
                            "src": "2412:6:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$45207_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 145032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2412:17:460",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$45207",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2392:37:460"
                      },
                      {
                        "assignments": [
                          145035
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 145035,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "2451:7:460",
                            "nodeType": "VariableDeclaration",
                            "scope": 145091,
                            "src": "2443:15:460",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 145034,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2443:7:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 145043,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 145040,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2490:4:460",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20Vault_$145180",
                                    "typeString": "contract ERC20Vault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20Vault_$145180",
                                    "typeString": "contract ERC20Vault"
                                  }
                                ],
                                "id": 145039,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2482:7:460",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 145038,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2482:7:460",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 145041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2482:13:460",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 145036,
                              "name": "vaultToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 145027,
                              "src": "2461:10:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 145037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45164,
                            "src": "2461:20:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 145042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2461:35:460",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2443:53:460"
                      },
                      {
                        "assignments": [
                          145045
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 145045,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "2518:6:460",
                            "nodeType": "VariableDeclaration",
                            "scope": 145091,
                            "src": "2510:14:460",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 145044,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2510:7:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 145056,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 145050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 145046,
                                "name": "tokenAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 144962,
                                "src": "2527:12:460",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 145048,
                              "indexExpression": {
                                "id": 145047,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 145015,
                                "src": "2540:1:460",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2527:15:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 145049,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 145035,
                              "src": "2545:7:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2527:25:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 145054,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145035,
                            "src": "2573:7:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 145055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "2527:53:460",
                          "trueExpression": {
                            "baseExpression": {
                              "id": 145051,
                              "name": "tokenAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144962,
                              "src": "2555:12:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 145053,
                            "indexExpression": {
                              "id": 145052,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 145015,
                              "src": "2568:1:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2555:15:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2510:70:460"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 145063,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144959,
                              "src": "2625:2:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 145064,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 145045,
                              "src": "2629:6:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 145058,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 144996,
                                    "src": "2601:6:460",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 145060,
                                  "indexExpression": {
                                    "id": 145059,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 145015,
                                    "src": "2608:1:460",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2601:9:460",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 145057,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45207,
                                "src": "2594:6:460",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$45207_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 145061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2594:17:460",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 145062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45301,
                            "src": "2594:30:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45207_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45207_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 145065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2594:42:460",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 145066,
                        "nodeType": "ExpressionStatement",
                        "src": "2594:42:460"
                      },
                      {
                        "expression": {
                          "id": 145071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 145067,
                              "name": "actualTokenAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144969,
                              "src": "2650:18:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 145069,
                            "indexExpression": {
                              "id": 145068,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 145015,
                              "src": "2669:1:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2650:21:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 145070,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145045,
                            "src": "2674:6:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2650:30:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 145072,
                        "nodeType": "ExpressionStatement",
                        "src": "2650:30:460"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 145075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 145073,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145008,
                            "src": "2698:5:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 145074,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 144959,
                            "src": "2707:2:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2698:11:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 145090,
                        "nodeType": "IfStatement",
                        "src": "2694:197:460",
                        "trueBody": {
                          "id": 145089,
                          "nodeType": "Block",
                          "src": "2711:180:460",
                          "statements": [
                            {
                              "expression": {
                                "id": 145087,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 145076,
                                    "name": "pushTokenAmounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 144984,
                                    "src": "2823:16:460",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 145078,
                                  "indexExpression": {
                                    "id": 145077,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 145015,
                                    "src": "2840:1:460",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2823:19:460",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 145085,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 144959,
                                      "src": "2873:2:460",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 145080,
                                            "name": "tokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 144996,
                                            "src": "2852:6:460",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 145082,
                                          "indexExpression": {
                                            "id": 145081,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 145015,
                                            "src": "2859:1:460",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2852:9:460",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 145079,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 45207,
                                        "src": "2845:6:460",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$45207_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 145083,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2845:17:460",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$45207",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 145084,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 45164,
                                    "src": "2845:27:460",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 145086,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2845:31:460",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2823:53:460",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 145088,
                              "nodeType": "ExpressionStatement",
                              "src": "2823:53:460"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 145021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 145018,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145015,
                      "src": "2348:1:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 145019,
                        "name": "tokenAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144962,
                        "src": "2352:12:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 145020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2352:19:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2348:23:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 145092,
                  "initializationExpression": {
                    "assignments": [
                      145015
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 145015,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2341:1:460",
                        "nodeType": "VariableDeclaration",
                        "scope": 145092,
                        "src": "2333:9:460",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 145014,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2333:7:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 145017,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 145016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2345:1:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2333:13:460"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 145023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2373:3:460",
                      "subExpression": {
                        "id": 145022,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145015,
                        "src": "2375:1:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 145024,
                    "nodeType": "ExpressionStatement",
                    "src": "2373:3:460"
                  },
                  "nodeType": "ForStatement",
                  "src": "2328:573:460"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 145095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 145093,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145008,
                      "src": "2914:5:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 145094,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144959,
                      "src": "2923:2:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2914:11:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 145152,
                  "nodeType": "IfStatement",
                  "src": "2910:619:460",
                  "trueBody": {
                    "id": 145151,
                    "nodeType": "Block",
                    "src": "2927:602:460",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 145100,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144996,
                              "src": "3040:6:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "id": 145101,
                              "name": "pushTokenAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144984,
                              "src": "3048:16:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 145102,
                              "name": "options",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144964,
                              "src": "3066:7:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 145097,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 144959,
                                  "src": "3031:2:460",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 145096,
                                "name": "IIntegrationVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77767,
                                "src": "3013:17:460",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IIntegrationVault_$77767_$",
                                  "typeString": "type(contract IIntegrationVault)"
                                }
                              },
                              "id": 145098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3013:21:460",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIntegrationVault_$77767",
                                "typeString": "contract IIntegrationVault"
                              }
                            },
                            "id": 145099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 77710,
                            "src": "3013:26:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (address[] memory,uint256[] memory,bytes memory) external returns (uint256[] memory)"
                            }
                          },
                          "id": 145103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3013:61:460",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 145104,
                        "nodeType": "ExpressionStatement",
                        "src": "3013:61:460"
                      },
                      {
                        "assignments": [
                          145109
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 145109,
                            "mutability": "mutable",
                            "name": "reclaimed",
                            "nameLocation": "3167:9:460",
                            "nodeType": "VariableDeclaration",
                            "scope": 145151,
                            "src": "3150:26:460",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 145107,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3150:7:460",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 145108,
                              "nodeType": "ArrayTypeName",
                              "src": "3150:9:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 145116,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 145114,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144996,
                              "src": "3215:6:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 145111,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 144959,
                                  "src": "3197:2:460",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 145110,
                                "name": "IIntegrationVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77767,
                                "src": "3179:17:460",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IIntegrationVault_$77767_$",
                                  "typeString": "type(contract IIntegrationVault)"
                                }
                              },
                              "id": 145112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3179:21:460",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIntegrationVault_$77767",
                                "typeString": "contract IIntegrationVault"
                              }
                            },
                            "id": 145113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reclaimTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 77754,
                            "src": "3179:35:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (address[] memory) external returns (uint256[] memory)"
                            }
                          },
                          "id": 145115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3179:43:460",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3150:72:460"
                      },
                      {
                        "body": {
                          "id": 145149,
                          "nodeType": "Block",
                          "src": "3286:233:460",
                          "statements": [
                            {
                              "expression": {
                                "id": 145147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 145128,
                                    "name": "actualTokenAmounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 144969,
                                    "src": "3360:18:460",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 145130,
                                  "indexExpression": {
                                    "id": 145129,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 145118,
                                    "src": "3379:1:460",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3360:21:460",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 145137,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 145131,
                                        "name": "actualTokenAmounts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 144969,
                                        "src": "3384:18:460",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 145133,
                                      "indexExpression": {
                                        "id": 145132,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145118,
                                        "src": "3403:1:460",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3384:21:460",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 145134,
                                        "name": "reclaimed",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145109,
                                        "src": "3409:9:460",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 145136,
                                      "indexExpression": {
                                        "id": 145135,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145118,
                                        "src": "3419:1:460",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3409:12:460",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3384:37:460",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "hexValue": "30",
                                    "id": 145145,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3503:1:460",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "id": 145146,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "3384:120:460",
                                  "trueExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 145144,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 145138,
                                        "name": "actualTokenAmounts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 144969,
                                        "src": "3444:18:460",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 145140,
                                      "indexExpression": {
                                        "id": 145139,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145118,
                                        "src": "3463:1:460",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3444:21:460",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 145141,
                                        "name": "reclaimed",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145109,
                                        "src": "3468:9:460",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 145143,
                                      "indexExpression": {
                                        "id": 145142,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145118,
                                        "src": "3478:1:460",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3468:12:460",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3444:36:460",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3360:144:460",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 145148,
                              "nodeType": "ExpressionStatement",
                              "src": "3360:144:460"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 145124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 145121,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145118,
                            "src": "3256:1:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 145122,
                              "name": "tokenAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144962,
                              "src": "3260:12:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 145123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3260:19:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3256:23:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 145150,
                        "initializationExpression": {
                          "assignments": [
                            145118
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 145118,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3249:1:460",
                              "nodeType": "VariableDeclaration",
                              "scope": 145150,
                              "src": "3241:9:460",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 145117,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3241:7:460",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 145120,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 145119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3253:1:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3241:13:460"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 145126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3281:3:460",
                            "subExpression": {
                              "id": 145125,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 145118,
                              "src": "3281:1:460",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 145127,
                          "nodeType": "ExpressionStatement",
                          "src": "3281:3:460"
                        },
                        "nodeType": "ForStatement",
                        "src": "3236:283:460"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              149882
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_pull",
            "nameLocation": "1833:5:460",
            "overrides": {
              "id": 144966,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1943:8:460"
            },
            "parameters": {
              "id": 144965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144959,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1856:2:460",
                  "nodeType": "VariableDeclaration",
                  "scope": 145154,
                  "src": "1848:10:460",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 144958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1848:7:460",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 144962,
                  "mutability": "mutable",
                  "name": "tokenAmounts",
                  "nameLocation": "1885:12:460",
                  "nodeType": "VariableDeclaration",
                  "scope": 145154,
                  "src": "1868:29:460",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 144960,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1868:7:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 144961,
                    "nodeType": "ArrayTypeName",
                    "src": "1868:9:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 144964,
                  "mutability": "mutable",
                  "name": "options",
                  "nameLocation": "1920:7:460",
                  "nodeType": "VariableDeclaration",
                  "scope": 145154,
                  "src": "1907:20:460",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 144963,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:5:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1838:95:460"
            },
            "returnParameters": {
              "id": 144970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144969,
                  "mutability": "mutable",
                  "name": "actualTokenAmounts",
                  "nameLocation": "1978:18:460",
                  "nodeType": "VariableDeclaration",
                  "scope": 145154,
                  "src": "1961:35:460",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 144967,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1961:7:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 144968,
                    "nodeType": "ArrayTypeName",
                    "src": "1961:9:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1960:37:460"
            },
            "scope": 145180,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 145179,
            "nodeType": "FunctionDefinition",
            "src": "3578:220:460",
            "nodes": [],
            "body": {
              "id": 145178,
              "nodeType": "Block",
              "src": "3688:110:460",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 145176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 145167,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145157,
                          "src": "3729:11:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 145165,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "3705:5:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC20Vault_$145180_$",
                            "typeString": "type(contract super ERC20Vault)"
                          }
                        },
                        "id": 145166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 149012,
                        "src": "3705:23:460",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 145168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3705:36:460",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 145174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 145169,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145157,
                            "src": "3746:11:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 145171,
                                  "name": "IERC20Vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 77170,
                                  "src": "3766:11:460",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20Vault_$77170_$",
                                    "typeString": "type(contract IERC20Vault)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20Vault_$77170_$",
                                    "typeString": "type(contract IERC20Vault)"
                                  }
                                ],
                                "id": 145170,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "3761:4:460",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 145172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3761:17:460",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC20Vault_$77170",
                                "typeString": "type(contract IERC20Vault)"
                              }
                            },
                            "id": 145173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "3761:29:460",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "3746:44:460",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 145175,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3745:46:460",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3705:86:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 145164,
                  "id": 145177,
                  "nodeType": "Return",
                  "src": "3698:93:460"
                }
              ]
            },
            "baseFunctions": [
              48072,
              149012
            ],
            "documentation": {
              "id": 145155,
              "nodeType": "StructuredDocumentation",
              "src": "3541:32:460",
              "text": "@inheritdoc IntegrationVault"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3587:17:460",
            "overrides": {
              "id": 145161,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 145159,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48073,
                  "src": "3646:7:460"
                },
                {
                  "id": 145160,
                  "name": "IntegrationVault",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 149908,
                  "src": "3655:16:460"
                }
              ],
              "src": "3637:35:460"
            },
            "parameters": {
              "id": 145158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145157,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3612:11:460",
                  "nodeType": "VariableDeclaration",
                  "scope": 145179,
                  "src": "3605:18:460",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 145156,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3605:6:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3604:20:460"
            },
            "returnParameters": {
              "id": 145164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145163,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 145179,
                  "src": "3682:4:460",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 145162,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3682:4:460",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3681:6:460"
            },
            "scope": 145180,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 144820,
              "name": "IERC20Vault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 77170,
              "src": "334:11:460"
            },
            "id": 144821,
            "nodeType": "InheritanceSpecifier",
            "src": "334:11:460"
          },
          {
            "baseName": {
              "id": 144822,
              "name": "IntegrationVault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 149908,
              "src": "347:16:460"
            },
            "id": 144823,
            "nodeType": "InheritanceSpecifier",
            "src": "347:16:460"
          }
        ],
        "canonicalName": "ERC20Vault",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 144819,
          "nodeType": "StructuredDocumentation",
          "src": "267:44:460",
          "text": "@notice Vault that stores ERC20 tokens."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          145180,
          149908,
          157396,
          48061,
          44542,
          77170,
          77767,
          64026,
          78599,
          48073
        ],
        "name": "ERC20Vault",
        "nameLocation": "320:10:460",
        "scope": 145181,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 460
}