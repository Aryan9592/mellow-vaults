{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "new_relative_weight_cap",
          "type": "uint256"
        }
      ],
      "name": "RelativeWeightCapChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "getCappedRelativeWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRelativeWeightCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "integrate_fraction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "is_killed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "killGauge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "relativeWeightCap",
          "type": "uint256"
        }
      ],
      "name": "setRelativeWeightCap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unkillGauge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "user_checkpoint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getCappedRelativeWeight(uint256)": "14e956f5",
    "getRelativeWeightCap()": "83f5c39b",
    "integrate_fraction(address)": "09400707",
    "is_killed()": "9c868ac0",
    "killGauge()": "ab8f0945",
    "setRelativeWeightCap(uint256)": "10d3eb04",
    "unkillGauge()": "d34fb267",
    "user_checkpoint(address)": "4b820093"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"new_relative_weight_cap\",\"type\":\"uint256\"}],\"name\":\"RelativeWeightCapChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getCappedRelativeWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRelativeWeightCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"integrate_fraction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"is_killed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"killGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"relativeWeightCap\",\"type\":\"uint256\"}],\"name\":\"setRelativeWeightCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unkillGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"user_checkpoint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getCappedRelativeWeight(uint256)\":{\"params\":{\"time\":\"Timestamp in the past or present.\"}},\"integrate_fraction(address)\":{\"params\":{\"user\":\"User address.\"},\"returns\":{\"_0\":\"uint256 BAL amount to issue for the address.\"}},\"setRelativeWeightCap(uint256)\":{\"params\":{\"relativeWeightCap\":\"New relative weight cap.\"}},\"user_checkpoint(address)\":{\"params\":{\"user\":\"User address.\"},\"returns\":{\"_0\":\"bool Always true.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getCappedRelativeWeight(uint256)\":{\"notice\":\"Returns the gauge's relative weight for a given time, capped to its relative weight cap attribute.\"},\"getRelativeWeightCap()\":{\"notice\":\"Gets the relative weight cap for the gauge.\"},\"integrate_fraction(address)\":{\"notice\":\"Returns BAL liquidity emissions calculated during checkpoints for the given user.\"},\"is_killed()\":{\"notice\":\"Returns true if gauge is killed; false otherwise.\"},\"killGauge()\":{\"notice\":\"Kills the gauge so it cannot mint BAL.\"},\"setRelativeWeightCap(uint256)\":{\"notice\":\"Sets a new relative weight cap for the gauge. The value shall be normalized to 1e18, and not greater than MAX_RELATIVE_WEIGHT_CAP.\"},\"unkillGauge()\":{\"notice\":\"Unkills the gauge so it can mint BAL again.\"},\"user_checkpoint(address)\":{\"notice\":\"Record a checkpoint for a given user.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/external/balancer/liquidity-mining/ILiquidityGauge.sol\":\"ILiquidityGauge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/interfaces/external/balancer/liquidity-mining/ILiquidityGauge.sol\":{\"keccak256\":\"0xa22f0c0868adb9d06d097ecb0a8d8370a6e59d223ef1e07a58340191c402e9ea\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://558942e9f7ff6c6f2becffc28da21bf897e043ceea6bed95d2a362e0eceedbe6\",\"dweb:/ipfs/QmU51CezK36UmBpArAcBmXrDmC5ozDmTrconGfj8pr8NYL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "new_relative_weight_cap",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RelativeWeightCapChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCappedRelativeWeight",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRelativeWeightCap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "integrate_fraction",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "is_killed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "killGauge"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "relativeWeightCap",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRelativeWeightCap"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unkillGauge"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "user_checkpoint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getCappedRelativeWeight(uint256)": {
            "params": {
              "time": "Timestamp in the past or present."
            }
          },
          "integrate_fraction(address)": {
            "params": {
              "user": "User address."
            },
            "returns": {
              "_0": "uint256 BAL amount to issue for the address."
            }
          },
          "setRelativeWeightCap(uint256)": {
            "params": {
              "relativeWeightCap": "New relative weight cap."
            }
          },
          "user_checkpoint(address)": {
            "params": {
              "user": "User address."
            },
            "returns": {
              "_0": "bool Always true."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getCappedRelativeWeight(uint256)": {
            "notice": "Returns the gauge's relative weight for a given time, capped to its relative weight cap attribute."
          },
          "getRelativeWeightCap()": {
            "notice": "Gets the relative weight cap for the gauge."
          },
          "integrate_fraction(address)": {
            "notice": "Returns BAL liquidity emissions calculated during checkpoints for the given user."
          },
          "is_killed()": {
            "notice": "Returns true if gauge is killed; false otherwise."
          },
          "killGauge()": {
            "notice": "Kills the gauge so it cannot mint BAL."
          },
          "setRelativeWeightCap(uint256)": {
            "notice": "Sets a new relative weight cap for the gauge. The value shall be normalized to 1e18, and not greater than MAX_RELATIVE_WEIGHT_CAP."
          },
          "unkillGauge()": {
            "notice": "Unkills the gauge so it can mint BAL again."
          },
          "user_checkpoint(address)": {
            "notice": "Record a checkpoint for a given user."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/external/balancer/liquidity-mining/ILiquidityGauge.sol": "ILiquidityGauge"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/external/balancer/liquidity-mining/ILiquidityGauge.sol": {
        "keccak256": "0xa22f0c0868adb9d06d097ecb0a8d8370a6e59d223ef1e07a58340191c402e9ea",
        "urls": [
          "bzz-raw://558942e9f7ff6c6f2becffc28da21bf897e043ceea6bed95d2a362e0eceedbe6",
          "dweb:/ipfs/QmU51CezK36UmBpArAcBmXrDmC5ozDmTrconGfj8pr8NYL"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/external/balancer/liquidity-mining/ILiquidityGauge.sol",
    "id": 57382,
    "exportedSymbols": {
      "ILiquidityGauge": [
        57381
      ]
    },
    "nodeType": "SourceUnit",
    "src": "688:1956:109",
    "nodes": [
      {
        "id": 57326,
        "nodeType": "PragmaDirective",
        "src": "688:23:109",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 57381,
        "nodeType": "ContractDefinition",
        "src": "936:1707:109",
        "nodes": [
          {
            "id": 57330,
            "nodeType": "EventDefinition",
            "src": "1020:64:109",
            "nodes": [],
            "anonymous": false,
            "name": "RelativeWeightCapChanged",
            "nameLocation": "1026:24:109",
            "parameters": {
              "id": 57329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57328,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "new_relative_weight_cap",
                  "nameLocation": "1059:23:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 57330,
                  "src": "1051:31:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1051:7:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1050:33:109"
            }
          },
          {
            "id": 57338,
            "nodeType": "FunctionDefinition",
            "src": "1296:74:109",
            "nodes": [],
            "documentation": {
              "id": 57331,
              "nodeType": "StructuredDocumentation",
              "src": "1090:201:109",
              "text": " @notice Returns BAL liquidity emissions calculated during checkpoints for the given user.\n @param user User address.\n @return uint256 BAL amount to issue for the address."
            },
            "functionSelector": "09400707",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "integrate_fraction",
            "nameLocation": "1305:18:109",
            "parameters": {
              "id": 57334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57333,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1332:4:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 57338,
                  "src": "1324:12:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1323:14:109"
            },
            "returnParameters": {
              "id": 57337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57336,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57338,
                  "src": "1361:7:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1361:7:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1360:9:109"
            },
            "scope": 57381,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57346,
            "nodeType": "FunctionDefinition",
            "src": "1511:63:109",
            "nodes": [],
            "documentation": {
              "id": 57339,
              "nodeType": "StructuredDocumentation",
              "src": "1376:130:109",
              "text": " @notice Record a checkpoint for a given user.\n @param user User address.\n @return bool Always true."
            },
            "functionSelector": "4b820093",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "user_checkpoint",
            "nameLocation": "1520:15:109",
            "parameters": {
              "id": 57342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57341,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1544:4:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 57346,
                  "src": "1536:12:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1536:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1535:14:109"
            },
            "returnParameters": {
              "id": 57345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57344,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57346,
                  "src": "1568:4:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 57343,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1568:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1567:6:109"
            },
            "scope": 57381,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57352,
            "nodeType": "FunctionDefinition",
            "src": "1661:50:109",
            "nodes": [],
            "documentation": {
              "id": 57347,
              "nodeType": "StructuredDocumentation",
              "src": "1580:76:109",
              "text": " @notice Returns true if gauge is killed; false otherwise."
            },
            "functionSelector": "9c868ac0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "is_killed",
            "nameLocation": "1670:9:109",
            "parameters": {
              "id": 57348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1679:2:109"
            },
            "returnParameters": {
              "id": 57351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57350,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57352,
                  "src": "1705:4:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 57349,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1704:6:109"
            },
            "scope": 57381,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57356,
            "nodeType": "FunctionDefinition",
            "src": "1787:30:109",
            "nodes": [],
            "documentation": {
              "id": 57353,
              "nodeType": "StructuredDocumentation",
              "src": "1717:65:109",
              "text": " @notice Kills the gauge so it cannot mint BAL."
            },
            "functionSelector": "ab8f0945",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "killGauge",
            "nameLocation": "1796:9:109",
            "parameters": {
              "id": 57354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1805:2:109"
            },
            "returnParameters": {
              "id": 57355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1816:0:109"
            },
            "scope": 57381,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57360,
            "nodeType": "FunctionDefinition",
            "src": "1898:32:109",
            "nodes": [],
            "documentation": {
              "id": 57357,
              "nodeType": "StructuredDocumentation",
              "src": "1823:70:109",
              "text": " @notice Unkills the gauge so it can mint BAL again."
            },
            "functionSelector": "d34fb267",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unkillGauge",
            "nameLocation": "1907:11:109",
            "parameters": {
              "id": 57358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1918:2:109"
            },
            "returnParameters": {
              "id": 57359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1929:0:109"
            },
            "scope": 57381,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57366,
            "nodeType": "FunctionDefinition",
            "src": "2162:66:109",
            "nodes": [],
            "documentation": {
              "id": 57361,
              "nodeType": "StructuredDocumentation",
              "src": "1936:221:109",
              "text": " @notice Sets a new relative weight cap for the gauge.\n The value shall be normalized to 1e18, and not greater than MAX_RELATIVE_WEIGHT_CAP.\n @param relativeWeightCap New relative weight cap."
            },
            "functionSelector": "10d3eb04",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setRelativeWeightCap",
            "nameLocation": "2171:20:109",
            "parameters": {
              "id": 57364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57363,
                  "mutability": "mutable",
                  "name": "relativeWeightCap",
                  "nameLocation": "2200:17:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 57366,
                  "src": "2192:25:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2192:7:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2191:27:109"
            },
            "returnParameters": {
              "id": 57365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2227:0:109"
            },
            "scope": 57381,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57372,
            "nodeType": "FunctionDefinition",
            "src": "2309:64:109",
            "nodes": [],
            "documentation": {
              "id": 57367,
              "nodeType": "StructuredDocumentation",
              "src": "2234:70:109",
              "text": " @notice Gets the relative weight cap for the gauge."
            },
            "functionSelector": "83f5c39b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRelativeWeightCap",
            "nameLocation": "2318:20:109",
            "parameters": {
              "id": 57368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2338:2:109"
            },
            "returnParameters": {
              "id": 57371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57370,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57372,
                  "src": "2364:7:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2364:7:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2363:9:109"
            },
            "scope": 57381,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57380,
            "nodeType": "FunctionDefinition",
            "src": "2562:79:109",
            "nodes": [],
            "documentation": {
              "id": 57373,
              "nodeType": "StructuredDocumentation",
              "src": "2379:178:109",
              "text": " @notice Returns the gauge's relative weight for a given time, capped to its relative weight cap attribute.\n @param time Timestamp in the past or present."
            },
            "functionSelector": "14e956f5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCappedRelativeWeight",
            "nameLocation": "2571:23:109",
            "parameters": {
              "id": 57376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57375,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "2603:4:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 57380,
                  "src": "2595:12:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2595:7:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2594:14:109"
            },
            "returnParameters": {
              "id": 57379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57378,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57380,
                  "src": "2632:7:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2632:7:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2631:9:109"
            },
            "scope": 57381,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ILiquidityGauge",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          57381
        ],
        "name": "ILiquidityGauge",
        "nameLocation": "946:15:109",
        "scope": 57382,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 109
}