{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "safetyIndicesSet",
          "type": "uint256"
        }
      ],
      "name": "priceX96",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "pricesX96",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "safetyIndices",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "priceX96(address,address,uint256)": "6d80125b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"safetyIndicesSet\",\"type\":\"uint256\"}],\"name\":\"priceX96\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"pricesX96\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"safetyIndices\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"priceX96(address,address,uint256)\":{\"details\":\"The price is token1 / token0 i.e. how many weis of token1 required for 1 wei of token0. The safety indexes are: 1 - unsafe, this is typically a spot price that can be easily manipulated, 2 - 4 - more or less safe, this is typically a uniV3 oracle, where the safety is defined by the timespan of the average price 5 - safe - this is typically a chailink oracle\",\"params\":{\"safetyIndicesSet\":\"Bitmask of safety indices that are allowed for the return prices. For set of safety indexes = { 1 }, safetyIndicesSet = 0x2\",\"token0\":\"Reference to token0\",\"token1\":\"Reference to token1\"},\"returns\":{\"pricesX96\":\"Prices that satisfy safetyIndex and tokens\",\"safetyIndices\":\"Safety indices for those prices\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"priceX96(address,address,uint256)\":{\"notice\":\"Oracle price for tokens as a Q64.96 value.Returns pricing information based on the indexes of non-zero bits in safetyIndicesSet.It is possible that not all indices will have their respective prices returned.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/oracles/IOracle.sol\":\"IOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/interfaces/oracles/IOracle.sol\":{\"keccak256\":\"0x2d89a1f771e68129d47ae26eccf76f969cd2877e9b7190687056f912c3524b53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f378b9f29c18878e73e251ca97abeca819f0789834281ee1399db878f6baedf5\",\"dweb:/ipfs/QmSrFYZWmGdVkgACwwZEfbkPt3kQCSkr6czBi9HVtzNSJg\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "safetyIndicesSet",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "priceX96",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "pricesX96",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "safetyIndices",
              "type": "uint256[]"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "priceX96(address,address,uint256)": {
            "details": "The price is token1 / token0 i.e. how many weis of token1 required for 1 wei of token0. The safety indexes are: 1 - unsafe, this is typically a spot price that can be easily manipulated, 2 - 4 - more or less safe, this is typically a uniV3 oracle, where the safety is defined by the timespan of the average price 5 - safe - this is typically a chailink oracle",
            "params": {
              "safetyIndicesSet": "Bitmask of safety indices that are allowed for the return prices. For set of safety indexes = { 1 }, safetyIndicesSet = 0x2",
              "token0": "Reference to token0",
              "token1": "Reference to token1"
            },
            "returns": {
              "pricesX96": "Prices that satisfy safetyIndex and tokens",
              "safetyIndices": "Safety indices for those prices"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "priceX96(address,address,uint256)": {
            "notice": "Oracle price for tokens as a Q64.96 value.Returns pricing information based on the indexes of non-zero bits in safetyIndicesSet.It is possible that not all indices will have their respective prices returned."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/oracles/IOracle.sol": "IOracle"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/oracles/IOracle.sol": {
        "keccak256": "0x2d89a1f771e68129d47ae26eccf76f969cd2877e9b7190687056f912c3524b53",
        "urls": [
          "bzz-raw://f378b9f29c18878e73e251ca97abeca819f0789834281ee1399db878f6baedf5",
          "dweb:/ipfs/QmSrFYZWmGdVkgACwwZEfbkPt3kQCSkr6czBi9HVtzNSJg"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/oracles/IOracle.sol",
    "id": 75606,
    "exportedSymbols": {
      "IOracle": [
        75605
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1299:312",
    "nodes": [
      {
        "id": 75588,
        "nodeType": "PragmaDirective",
        "src": "32:23:312",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 75605,
        "nodeType": "ContractDefinition",
        "src": "57:1273:312",
        "nodes": [
          {
            "id": 75604,
            "nodeType": "FunctionDefinition",
            "src": "1139:189:312",
            "nodes": [],
            "documentation": {
              "id": 75589,
              "nodeType": "StructuredDocumentation",
              "src": "81:1053:312",
              "text": "@notice Oracle price for tokens as a Q64.96 value.\n @notice Returns pricing information based on the indexes of non-zero bits in safetyIndicesSet.\n @notice It is possible that not all indices will have their respective prices returned.\n @dev The price is token1 / token0 i.e. how many weis of token1 required for 1 wei of token0.\n The safety indexes are:\n 1 - unsafe, this is typically a spot price that can be easily manipulated,\n 2 - 4 - more or less safe, this is typically a uniV3 oracle, where the safety is defined by the timespan of the average price\n 5 - safe - this is typically a chailink oracle\n @param token0 Reference to token0\n @param token1 Reference to token1\n @param safetyIndicesSet Bitmask of safety indices that are allowed for the return prices. For set of safety indexes = { 1 }, safetyIndicesSet = 0x2\n @return pricesX96 Prices that satisfy safetyIndex and tokens\n @return safetyIndices Safety indices for those prices"
            },
            "functionSelector": "6d80125b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "priceX96",
            "nameLocation": "1148:8:312",
            "parameters": {
              "id": 75596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75591,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "1174:6:312",
                  "nodeType": "VariableDeclaration",
                  "scope": 75604,
                  "src": "1166:14:312",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:7:312",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75593,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "1198:6:312",
                  "nodeType": "VariableDeclaration",
                  "scope": 75604,
                  "src": "1190:14:312",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1190:7:312",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75595,
                  "mutability": "mutable",
                  "name": "safetyIndicesSet",
                  "nameLocation": "1222:16:312",
                  "nodeType": "VariableDeclaration",
                  "scope": 75604,
                  "src": "1214:24:312",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75594,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:7:312",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1156:88:312"
            },
            "returnParameters": {
              "id": 75603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75599,
                  "mutability": "mutable",
                  "name": "pricesX96",
                  "nameLocation": "1285:9:312",
                  "nodeType": "VariableDeclaration",
                  "scope": 75604,
                  "src": "1268:26:312",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 75597,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1268:7:312",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 75598,
                    "nodeType": "ArrayTypeName",
                    "src": "1268:9:312",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75602,
                  "mutability": "mutable",
                  "name": "safetyIndices",
                  "nameLocation": "1313:13:312",
                  "nodeType": "VariableDeclaration",
                  "scope": 75604,
                  "src": "1296:30:312",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 75600,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1296:7:312",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 75601,
                    "nodeType": "ArrayTypeName",
                    "src": "1296:9:312",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1267:60:312"
            },
            "scope": 75605,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IOracle",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          75605
        ],
        "name": "IOracle",
        "nameLocation": "67:7:312",
        "scope": 75606,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 312
}