{
  "abi": [
    {
      "inputs": [],
      "name": "AccountTransferNotAllowedException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ActionProhibitedWithForbiddenTokensException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AdaptersOrCreditFacadeOnlyException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AllowanceFailedException",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "BalanceLessThanMinimumDesiredException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BorrowAmountOutOfLimitsException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BorrowedBlockLimitException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CantLiquidateNonExpiredException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CantLiquidateWithSuchHealthFactorException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CantTransferLiquidatableAccountException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CreditConfiguratorOnlyException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CreditFacadeOnlyException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedBalancesAlreadySetException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ForbiddenDuringClosureException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "HasNoOpenedAccountException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncorrectCallDataException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncreaseAndDecreaseForbiddenInOneCallException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncreaseDebtForbiddenException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAllowedInWhitelistedMode",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAllowedWhenNotExpirableException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotEnoughCollateralException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OpenAccountNotAllowedAfterExpirationException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyLockException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TargetContractNotAllowedException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TokenAlreadyAddedException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TokenNotAllowedException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TooManyEnabledTokensException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TooManyTokensException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnknownMethodException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddressOrUserAlreadyHasAccountException",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "onBehalfOf",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "AddCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "CloseCreditAccount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DecreaseBorrowedAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "IncreaseBorrowedAmount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "remainingFunds",
          "type": "uint256"
        }
      ],
      "name": "LiquidateCreditAccount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "remainingFunds",
          "type": "uint256"
        }
      ],
      "name": "LiquidateExpiredCreditAccount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MultiCallFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "MultiCallStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "onBehalfOf",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creditAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint16",
          "name": "referralCode",
          "type": "uint16"
        }
      ],
      "name": "OpenCreditAccount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creditAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "TokenDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creditAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "TokenEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "TransferAccount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "TransferAccountAllowed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "onBehalfOf",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "addCollateral",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "targetContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "approveAccountTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creditAccount",
          "type": "address"
        }
      ],
      "name": "calcCreditAccountHealthFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "hf",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creditAccount",
          "type": "address"
        }
      ],
      "name": "calcTotalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "total",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "twv",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "skipTokenMask",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "convertWETH",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct MultiCall[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "closeCreditAccount",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creditManager",
      "outputs": [
        {
          "internalType": "contract ICreditManagerV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "decreaseDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "degenNFT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "enableToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "hasOpenedCreditAccount",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "increaseDebt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "isTokenAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "limits",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "minBorrowedAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "maxBorrowedAmount",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "skipTokenMask",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "convertWETH",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct MultiCall[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "liquidateCreditAccount",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "skipTokenMask",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "convertWETH",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct MultiCall[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "liquidateExpiredCreditAccount",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct MultiCall[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "multicall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "onBehalfOf",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "leverageFactor",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "referralCode",
          "type": "uint16"
        }
      ],
      "name": "openCreditAccount",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "borrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "onBehalfOf",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct MultiCall[]",
          "name": "calls",
          "type": "tuple[]"
        },
        {
          "internalType": "uint16",
          "name": "referralCode",
          "type": "uint16"
        }
      ],
      "name": "openCreditAccountMulticall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "params",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "maxBorrowedAmountPerBlock",
          "type": "uint128"
        },
        {
          "internalType": "bool",
          "name": "isIncreaseDebtForbidden",
          "type": "bool"
        },
        {
          "internalType": "uint40",
          "name": "expirationDate",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferAccountOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transfersAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addCollateral(address,address,uint256)": "59781034",
    "approve(address,address,uint256)": "e1f21c67",
    "approveAccountTransfer(address,bool)": "00842b57",
    "calcCreditAccountHealthFactor(address)": "dfd59465",
    "calcTotalValue(address)": "c7de38a6",
    "closeCreditAccount(address,uint256,bool,(address,bytes)[])": "5f73fbec",
    "creditManager()": "c12c21c0",
    "decreaseDebt(uint256)": "2a7ba1f7",
    "degenNFT()": "9408b63f",
    "enableToken(address)": "c690908a",
    "hasOpenedCreditAccount(address)": "256ac915",
    "increaseDebt(uint256)": "2b7c7b11",
    "isTokenAllowed(address)": "f9eaee0d",
    "limits()": "860aefcf",
    "liquidateCreditAccount(address,address,uint256,bool,(address,bytes)[])": "5d91a0e0",
    "liquidateExpiredCreditAccount(address,address,uint256,bool,(address,bytes)[])": "82871ace",
    "multicall((address,bytes)[])": "caa5c23f",
    "openCreditAccount(uint256,address,uint16,uint16)": "6c8f225d",
    "openCreditAccountMulticall(uint256,address,(address,bytes)[],uint16)": "7071b7c5",
    "params()": "cff0ab96",
    "transferAccountOwnership(address)": "5019e20a",
    "transfersAllowed(address,address)": "d9ccbec1",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccountTransferNotAllowedException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ActionProhibitedWithForbiddenTokensException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AdaptersOrCreditFacadeOnlyException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AllowanceFailedException\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"BalanceLessThanMinimumDesiredException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BorrowAmountOutOfLimitsException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BorrowedBlockLimitException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantLiquidateNonExpiredException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantLiquidateWithSuchHealthFactorException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantTransferLiquidatableAccountException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CreditConfiguratorOnlyException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CreditFacadeOnlyException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedBalancesAlreadySetException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ForbiddenDuringClosureException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HasNoOpenedAccountException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectCallDataException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncreaseAndDecreaseForbiddenInOneCallException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncreaseDebtForbiddenException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAllowedInWhitelistedMode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAllowedWhenNotExpirableException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughCollateralException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OpenAccountNotAllowedAfterExpirationException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyLockException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TargetContractNotAllowedException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyAddedException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenNotAllowedException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyEnabledTokensException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyTokensException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnknownMethodException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressOrUserAlreadyHasAccountException\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"AddCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"CloseCreditAccount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DecreaseBorrowedAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"IncreaseBorrowedAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"remainingFunds\",\"type\":\"uint256\"}],\"name\":\"LiquidateCreditAccount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"remainingFunds\",\"type\":\"uint256\"}],\"name\":\"LiquidateExpiredCreditAccount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MultiCallFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"MultiCallStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creditAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"OpenCreditAccount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creditAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creditAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferAccount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"TransferAccountAllowed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addCollateral\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"approveAccountTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creditAccount\",\"type\":\"address\"}],\"name\":\"calcCreditAccountHealthFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hf\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creditAccount\",\"type\":\"address\"}],\"name\":\"calcTotalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"twv\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"skipTokenMask\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"convertWETH\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct MultiCall[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"closeCreditAccount\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creditManager\",\"outputs\":[{\"internalType\":\"contract ICreditManagerV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"decreaseDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"degenNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"enableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"hasOpenedCreditAccount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"increaseDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isTokenAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"limits\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"minBorrowedAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"maxBorrowedAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"skipTokenMask\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"convertWETH\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct MultiCall[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"liquidateCreditAccount\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"skipTokenMask\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"convertWETH\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct MultiCall[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"liquidateExpiredCreditAccount\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct MultiCall[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"multicall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"leverageFactor\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"openCreditAccount\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct MultiCall[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"openCreditAccountMulticall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"params\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"maxBorrowedAmountPerBlock\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"isIncreaseDebtForbidden\",\"type\":\"bool\"},{\"internalType\":\"uint40\",\"name\":\"expirationDate\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferAccountOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transfersAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccountTransferNotAllowedException()\":[{\"details\":\"Thrown if a user attempts to transfer a CA to an address that didn't allow it\"}],\"ActionProhibitedWithForbiddenTokensException()\":[{\"details\":\"Thrown if a Credit Account has enabled forbidden tokens and the owner attempts to perform an action      that is not allowed with any forbidden tokens enabled\"}],\"AdaptersOrCreditFacadeOnlyException()\":[{\"details\":\"Thrown if an access-restricted function is called by an address that is not      the connected Credit Facade, or an allowed adapter\"}],\"AllowanceFailedException()\":[{\"details\":\"Thrown if an attempt to approve a collateral token to a target contract failed\"}],\"BalanceLessThanMinimumDesiredException(address)\":[{\"details\":\"Thrown if one of the balances on a Credit Account is less than expected      at the end of a multicall, if revertIfReceivedLessThan was called\"}],\"BorrowAmountOutOfLimitsException()\":[{\"details\":\"Thrown if the new debt principal for a CA falls outside of borrowing limits\"}],\"BorrowedBlockLimitException()\":[{\"details\":\"Thrown if too much new debt was taken within a single block\"}],\"CantLiquidateNonExpiredException()\":[{\"details\":\"Thrown if a liquidator tries to liquidate an account by expiry while a Credit Facade is not expired\"}],\"CantLiquidateWithSuchHealthFactorException()\":[{\"details\":\"Thrown if a liquidator tries to liquidate an account with a health factor above 1\"}],\"CantTransferLiquidatableAccountException()\":[{\"details\":\"Thrown if the account owner tries to transfer an unhealthy account\"}],\"CreditConfiguratorOnlyException()\":[{\"details\":\"Thrown if an access-restricted function is called by an address that is not      the connected Credit Configurator\"}],\"CreditFacadeOnlyException()\":[{\"details\":\"Thrown if an access-restricted function is called by an address that is not      the connected Credit Facade\"}],\"ExpectedBalancesAlreadySetException()\":[{\"details\":\"Thrown if expected balances are attempted to be set through revertIfReceivedLessThan twice\"}],\"ForbiddenDuringClosureException()\":[{\"details\":\"Thrown inside account closure multicall if the borrower attempts an action that is forbidden on closing      an account\"}],\"HasNoOpenedAccountException()\":[{\"details\":\"Thrown on attempting to perform an action for an address that owns no Credit Account\"}],\"IncorrectCallDataException()\":[{\"details\":\"Thrown if call data passed to a multicall is too short\"}],\"IncreaseAndDecreaseForbiddenInOneCallException()\":[{\"details\":\"Thrown if debt increase and decrease are subsequently attempted in one multicall\"}],\"IncreaseDebtForbiddenException()\":[{\"details\":\"Thrown if a user tries to open an account or increase debt with increaseDebtForbidden mode on\"}],\"NotAllowedInWhitelistedMode()\":[{\"details\":\"Thrown if whitelisted mode is enabled, and an action is attempted that is      not allowed in whitelisted mode\"}],\"NotAllowedWhenNotExpirableException()\":[{\"details\":\"Thrown if the CreditFacade is not expirable, and an aciton is attempted that      requires expirability\"}],\"NotEnoughCollateralException()\":[{\"details\":\"Thrown on failing a full collateral check after an operation\"}],\"OpenAccountNotAllowedAfterExpirationException()\":[{\"details\":\"Thrown if a user attempts to open an account on a Credit Facade that has expired\"}],\"ReentrancyLockException()\":[{\"details\":\"Thrown when a reentrancy into the contract is attempted\"}],\"TargetContractNotAllowedException()\":[{\"details\":\"Thrown on attempting to execute an order to an address that is not an allowed      target contract\"}],\"TokenAlreadyAddedException()\":[{\"details\":\"Thrown on attempting to add a token that is already in a collateral list\"}],\"TokenNotAllowedException()\":[{\"details\":\"Thrown on attempting to receive a token that is not a collateral token      or was forbidden\"}],\"TooManyEnabledTokensException()\":[{\"details\":\"Thrown if more than the maximal number of tokens were enabled on a Credit Account,      and there are not enough unused token to disable\"}],\"TooManyTokensException()\":[{\"details\":\"Thrown on configurator attempting to add more than 256 collateral tokens\"}],\"UnknownMethodException()\":[{\"details\":\"Thrown if a selector that doesn't match any allowed function is passed to the Credit Facade      during a multicall\"}],\"ZeroAddressOrUserAlreadyHasAccountException()\":[{\"details\":\"Thrown on attempting to open a Credit Account for or transfer a Credit Account      to the zero address or an address that already owns a Credit Account\"}]},\"kind\":\"dev\",\"methods\":{\"addCollateral(address,address,uint256)\":{\"details\":\"Adds collateral to borrower's credit account\",\"params\":{\"amount\":\"Amount to add\",\"onBehalfOf\":\"Address of the borrower whose account is funded\",\"token\":\"Address of a collateral token\"}},\"approve(address,address,uint256)\":{\"details\":\"Sets token allowance from msg.sender's Credit Account to a connected target contract\",\"params\":{\"amount\":\"Allowance amount\",\"targetContract\":\"Contract to set allowance to. Cannot be in the list of upgradeable contracts\",\"token\":\"Token address\"}},\"approveAccountTransfer(address,bool)\":{\"details\":\"Approves account transfer from another user to msg.sender\",\"params\":{\"from\":\"Address for which account transfers are allowed/forbidden\",\"state\":\"True is transfer is allowed, false if forbidden\"}},\"calcCreditAccountHealthFactor(address)\":{\"details\":\"Calculates health factor for the credit account          sum(asset[i] * liquidation threshold[i])   Hf = --------------------------------------------         borrowed amount + interest accrued + fees More info: https://dev.gearbox.fi/developers/credit/economy#health-factor\",\"params\":{\"creditAccount\":\"Credit account address\"},\"returns\":{\"hf\":\"= Health factor in bp (see PERCENTAGE FACTOR in PercentageMath.sol)\"}},\"calcTotalValue(address)\":{\"details\":\"Calculates total value for provided Credit Account in underlying\",\"params\":{\"creditAccount\":\"Credit Account address\"},\"returns\":{\"total\":\"Total value in underlying\",\"twv\":\"Total weighted (discounted by liquidation thresholds) value in underlying\"}},\"closeCreditAccount(address,uint256,bool,(address,bytes)[])\":{\"details\":\"Runs a batch of transactions within a multicall and closes the account - Wraps ETH to WETH and sends it msg.sender if value > 0 - Executes the multicall - the main purpose of a multicall when closing is to convert all assets to underlying in order to pay the debt. - Closes credit account:    + Checks the underlying balance: if it is greater than the amount paid to the pool, transfers the underlying      from the Credit Account and proceeds. If not, tries to transfer the shortfall from msg.sender.    + Transfers all enabled assets with non-zero balances to the \\\"to\\\" address, unless they are marked      to be skipped in skipTokenMask    + If convertWETH is true, converts WETH into ETH before sending to the recipient - Emits a CloseCreditAccount event\",\"params\":{\"calls\":\"The array of MultiCall structs encoding the operations to execute before closing the account.\",\"convertWETH\":\"If true, converts WETH into ETH before sending to \\\"to\\\"\",\"skipTokenMask\":\"Uint-encoded bit mask where 1's mark tokens that shouldn't be transferred\",\"to\":\"Address to send funds to during account closing\"}},\"creditManager()\":{\"details\":\"Returns the CreditManager connected to this Credit Facade\"},\"decreaseDebt(uint256)\":{\"details\":\"Decrease debt - Decreases the debt by paying the requested amount + accrued interest + fees back to the pool - It's also include to this payment interest accrued at the moment and fees - Updates cunulativeIndex to cumulativeIndex now\",\"params\":{\"amount\":\"Amount to increase borrowed amount\"}},\"degenNFT()\":{\"details\":\"Address of the DegenNFT that gatekeeps account openings in whitelisted mode\"},\"enableToken(address)\":{\"details\":\"Enables token in enabledTokenMask for the Credit Account of msg.sender\",\"params\":{\"token\":\"Address of token to enable\"}},\"hasOpenedCreditAccount(address)\":{\"details\":\"Returns true if the borrower has an open Credit Account\",\"params\":{\"borrower\":\"Borrower address\"}},\"increaseDebt(uint256)\":{\"details\":\"Increases debt for msg.sender's Credit Account - Borrows the requested amount from the pool - Updates the CA's borrowAmount / cumulativeIndexOpen   to correctly compute interest going forward - Performs a full collateral check\",\"params\":{\"amount\":\"Amount to borrow\"}},\"isTokenAllowed(address)\":{\"details\":\"Returns true if token is a collateral token and is not forbidden, otherwise returns false\",\"params\":{\"token\":\"Token to check\"}},\"limits()\":{\"returns\":{\"maxBorrowedAmount\":\"Maximal borrowed amount per credit account\",\"minBorrowedAmount\":\"Minimal borrowed amount per credit account\"}},\"liquidateCreditAccount(address,address,uint256,bool,(address,bytes)[])\":{\"details\":\"Runs a batch of transactions within a multicall and liquidates the account - Computes the total value and checks that hf < 1. An account can't be liquidated when hf >= 1.   Total value has to be computed before the multicall, otherwise the liquidator would be able   to manipulate it. - Wraps ETH to WETH and sends it to msg.sender (liquidator) if value > 0 - Executes the multicall - the main purpose of a multicall when liquidating is to convert all assets to underlying   in order to pay the debt. - Liquidate credit account:    + Computes the amount that needs to be paid to the pool. If totalValue * liquidationDiscount < borrow + interest + fees,      only totalValue * liquidationDiscount has to be paid. Since liquidationDiscount < 1, the liquidator can take      totalValue * (1 - liquidationDiscount) as premium. Also computes the remaining funds to be sent to borrower      as totalValue * liquidationDiscount - amountToPool.    + Checks the underlying balance: if it is greater than amountToPool + remainingFunds, transfers the underlying      from the Credit Account and proceeds. If not, tries to transfer the shortfall from the liquidator.    + Transfers all enabled assets with non-zero balances to the \\\"to\\\" address, unless they are marked      to be skipped in skipTokenMask. If the liquidator is confident that all assets were converted      during the multicall, they can set the mask to uint256.max - 1, to only transfer the underlying    + If convertWETH is true, converts WETH into ETH before sending - Emits LiquidateCreditAccount event\",\"params\":{\"calls\":\"The array of MultiCall structs encoding the operations to execute before liquidating the account.\",\"convertWETH\":\"If true, converts WETH into ETH before sending to \\\"to\\\"\",\"skipTokenMask\":\"Uint-encoded bit mask where 1's mark tokens that shouldn't be transferred\",\"to\":\"Address to send funds to after liquidation\"}},\"liquidateExpiredCreditAccount(address,address,uint256,bool,(address,bytes)[])\":{\"details\":\"Runs a batch of transactions within a multicall and liquidates the account when this Credit Facade is expired The general flow of liquidation is nearly the same as normal liquidations, with two main differences:     - An account can be liquidated on an expired Credit Facade even with hf > 1. However,       no accounts can be liquidated through this function if the Credit Facade is not expired.     - Liquidation premiums and fees for liquidating expired accounts are reduced. It is still possible to normally liquidate an underwater Credit Account, even when the Credit Facade is expired.\",\"params\":{\"calls\":\"The array of MultiCall structs encoding the operations to execute before liquidating the account.\",\"convertWETH\":\"If true, converts WETH into ETH before sending to \\\"to\\\"\",\"skipTokenMask\":\"Uint-encoded bit mask where 1's mark tokens that shouldn't be transferred\",\"to\":\"Address to send funds to after liquidation\"}},\"multicall((address,bytes)[])\":{\"details\":\"Executes a batch of transactions within a Multicall, to manage an existing account  - Wraps ETH and sends it back to msg.sender, if value > 0  - Executes the Multicall  - Performs a fullCollateralCheck to verify that hf > 1 after all actions\",\"params\":{\"calls\":\"The array of MultiCall structs encoding the operations to execute.\"}},\"openCreditAccount(uint256,address,uint16,uint16)\":{\"details\":\"Opens credit account, borrows funds from the pool and pulls collateral without any additional action.\",\"params\":{\"amount\":\"The amount of collateral provided by the borrower\",\"leverageFactor\":\"Percentage of the user's own funds to borrow. 100 is equal to 100% - borrows the same amount as the user's own collateral, equivalent to 2x leverage.\",\"onBehalfOf\":\"The address to open an account for. Transfers to it have to be allowed if msg.sender != obBehalfOf\",\"referralCode\":\"Referral code that is used for potential rewards. 0 if no referral code provided.\"}},\"openCreditAccountMulticall(uint256,address,(address,bytes)[],uint16)\":{\"details\":\"Opens a Credit Account and runs a batch of operations in a multicall\",\"params\":{\"borrowedAmount\":\"Debt size\",\"calls\":\"The array of MultiCall structs encoding the required operations. Generally must have at least a call to addCollateral, as otherwise the health check at the end will fail.\",\"onBehalfOf\":\"The address to open an account for. Transfers to it have to be allowed if msg.sender != obBehalfOf\",\"referralCode\":\"Referral code which is used for potential rewards. 0 if no referral code provided\"}},\"params()\":{\"returns\":{\"expirationDate\":\"Timestamp of the next expiration (for expirable Credit Facades only)\",\"isIncreaseDebtForbidden\":\"True if increasing debt is forbidden\",\"maxBorrowedAmountPerBlock\":\"Maximal amount of new debt that can be taken per block\"}},\"transferAccountOwnership(address)\":{\"details\":\"Transfers credit account to another user By default, this action is forbidden, and the user has to approve transfers from sender to itself by calling approveAccountTransfer. This is done to prevent malicious actors from transferring compromised accounts to other users.\",\"params\":{\"to\":\"Address to transfer the account to\"}},\"transfersAllowed(address,address)\":{\"details\":\"Returns true if 'from' is allowed to transfer Credit Accounts to 'to'\",\"params\":{\"from\":\"Sender address to check allowance for\",\"to\":\"Receiver address to check allowance for\"}},\"version()\":{\"details\":\"Returns contract version\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"liquidateExpiredCreditAccount(address,address,uint256,bool,(address,bytes)[])\":{\"notice\":\"See more at https://dev.gearbox.fi/docs/documentation/credit/liquidation#liquidating-accounts-by-expiration\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/external/gearbox/ICreditFacade.sol\":\"ICreditFacade\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/interfaces/external/gearbox/ICreditFacade.sol\":{\"keccak256\":\"0x9c61f736793e3244ce9978bbc812160960103ca24f99d543fc8f70d7a983a98a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21034e103c20a08a00cc60da4b9a1d627859c834d717324a160dbc971aacbe6f\",\"dweb:/ipfs/QmRDfCFYuNzpbfFrEnVtUFqPiSd1JCazjrvbpwB9PYgyFs\"]},\"src/interfaces/external/gearbox/helpers/ICreditManagerV2.sol\":{\"keccak256\":\"0xf9aefda5462194b70878870317f741dde46e2f8df6d851d7bca463040d7bfba6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e3d1a6bde67ed1194a2fbe8e872a5aa0c5bec5aa9cb0cd70ee904d8be666851\",\"dweb:/ipfs/QmTqPiMMh9vkc5o4ytXQUUsKHZComobm3cveRwqJCKKSFU\"]},\"src/interfaces/external/gearbox/helpers/IPriceOracle.sol\":{\"keccak256\":\"0x604d96744b07bdfb25e68b01d1831d4437c48c41072053040bdeaaf047faecf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1121a26d6e9c2ed1927a97c47ab636f01b694401f72f5e54ea4d9ecb33d94d9f\",\"dweb:/ipfs/QmUtVdWDQUfZXgXDVM4oGdmUMtj8fJWMNBCjg8njv65krP\"]},\"src/interfaces/external/gearbox/helpers/IVersion.sol\":{\"keccak256\":\"0x4ca08c37d06931a13902066f6476b1de63d831e5898f09da0cc3b3de6d168aa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://179e1d106bb9b5e0928e1b3a79c0e6dc7ded68946434a6d0640f0ef7f78b481a\",\"dweb:/ipfs/QmVqvWpeCq9qF5utQ7xUXGAxuFagd5JCyQi7KWX5iQ98ug\"]},\"src/interfaces/external/gearbox/helpers/libraries/Balances.sol\":{\"keccak256\":\"0x59ebf267b837e81326dc9613b8ad632de5f084b2fd0c7f38373a75056c41bcdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7af98c0c46f1a477ee8053b24ee18062e2df17f17f6bc0b63dd5929acfec6e2\",\"dweb:/ipfs/QmQaEWKAzS5dd3J76z4EXYP8GkkuwAdP16xzW6SCexiYHV\"]},\"src/interfaces/external/gearbox/helpers/libraries/MultiCall.sol\":{\"keccak256\":\"0x9ce2d25a8f8d138de0f3bd228d65bbc2ba097684c41e0ed891dff7a8b10d6b11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08bd8ae0877e0746c75f79893191c8181efeed49e7aad94b6d1fc3a0fa24e743\",\"dweb:/ipfs/QmWQmCphY5WfGvuC2bnjTnd15drhHqHGfE47PdwBeJzG3v\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "AccountTransferNotAllowedException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ActionProhibitedWithForbiddenTokensException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AdaptersOrCreditFacadeOnlyException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AllowanceFailedException"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "BalanceLessThanMinimumDesiredException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BorrowAmountOutOfLimitsException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BorrowedBlockLimitException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CantLiquidateNonExpiredException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CantLiquidateWithSuchHealthFactorException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CantTransferLiquidatableAccountException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CreditConfiguratorOnlyException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CreditFacadeOnlyException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExpectedBalancesAlreadySetException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ForbiddenDuringClosureException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "HasNoOpenedAccountException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncorrectCallDataException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncreaseAndDecreaseForbiddenInOneCallException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IncreaseDebtForbiddenException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotAllowedInWhitelistedMode"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotAllowedWhenNotExpirableException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotEnoughCollateralException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OpenAccountNotAllowedAfterExpirationException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyLockException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TargetContractNotAllowedException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TokenAlreadyAddedException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TokenNotAllowedException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TooManyEnabledTokensException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TooManyTokensException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnknownMethodException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddressOrUserAlreadyHasAccountException"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onBehalfOf",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddCollateral",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "CloseCreditAccount",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DecreaseBorrowedAmount",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "IncreaseBorrowedAmount",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "liquidator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "remainingFunds",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LiquidateCreditAccount",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "liquidator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "remainingFunds",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LiquidateExpiredCreditAccount",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "MultiCallFinished",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MultiCallStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onBehalfOf",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "creditAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "borrowAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint16",
              "name": "referralCode",
              "type": "uint16",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OpenCreditAccount",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creditAccount",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creditAccount",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenEnabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "TransferAccount",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "state",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferAccountAllowed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "onBehalfOf",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addCollateral"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "targetContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "state",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approveAccountTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creditAccount",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calcCreditAccountHealthFactor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "hf",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creditAccount",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calcTotalValue",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "twv",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "skipTokenMask",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "convertWETH",
              "type": "bool"
            },
            {
              "internalType": "struct MultiCall[]",
              "name": "calls",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "closeCreditAccount"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creditManager",
          "outputs": [
            {
              "internalType": "contract ICreditManagerV2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseDebt"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "degenNFT",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasOpenedCreditAccount",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseDebt"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTokenAllowed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "limits",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "minBorrowedAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "maxBorrowedAmount",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "skipTokenMask",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "convertWETH",
              "type": "bool"
            },
            {
              "internalType": "struct MultiCall[]",
              "name": "calls",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "liquidateCreditAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "skipTokenMask",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "convertWETH",
              "type": "bool"
            },
            {
              "internalType": "struct MultiCall[]",
              "name": "calls",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "liquidateExpiredCreditAccount"
        },
        {
          "inputs": [
            {
              "internalType": "struct MultiCall[]",
              "name": "calls",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "onBehalfOf",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "leverageFactor",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "referralCode",
              "type": "uint16"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "openCreditAccount"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "borrowedAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "onBehalfOf",
              "type": "address"
            },
            {
              "internalType": "struct MultiCall[]",
              "name": "calls",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint16",
              "name": "referralCode",
              "type": "uint16"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "openCreditAccountMulticall"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "params",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "maxBorrowedAmountPerBlock",
              "type": "uint128"
            },
            {
              "internalType": "bool",
              "name": "isIncreaseDebtForbidden",
              "type": "bool"
            },
            {
              "internalType": "uint40",
              "name": "expirationDate",
              "type": "uint40"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAccountOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "transfersAllowed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addCollateral(address,address,uint256)": {
            "details": "Adds collateral to borrower's credit account",
            "params": {
              "amount": "Amount to add",
              "onBehalfOf": "Address of the borrower whose account is funded",
              "token": "Address of a collateral token"
            }
          },
          "approve(address,address,uint256)": {
            "details": "Sets token allowance from msg.sender's Credit Account to a connected target contract",
            "params": {
              "amount": "Allowance amount",
              "targetContract": "Contract to set allowance to. Cannot be in the list of upgradeable contracts",
              "token": "Token address"
            }
          },
          "approveAccountTransfer(address,bool)": {
            "details": "Approves account transfer from another user to msg.sender",
            "params": {
              "from": "Address for which account transfers are allowed/forbidden",
              "state": "True is transfer is allowed, false if forbidden"
            }
          },
          "calcCreditAccountHealthFactor(address)": {
            "details": "Calculates health factor for the credit account          sum(asset[i] * liquidation threshold[i])   Hf = --------------------------------------------         borrowed amount + interest accrued + fees More info: https://dev.gearbox.fi/developers/credit/economy#health-factor",
            "params": {
              "creditAccount": "Credit account address"
            },
            "returns": {
              "hf": "= Health factor in bp (see PERCENTAGE FACTOR in PercentageMath.sol)"
            }
          },
          "calcTotalValue(address)": {
            "details": "Calculates total value for provided Credit Account in underlying",
            "params": {
              "creditAccount": "Credit Account address"
            },
            "returns": {
              "total": "Total value in underlying",
              "twv": "Total weighted (discounted by liquidation thresholds) value in underlying"
            }
          },
          "closeCreditAccount(address,uint256,bool,(address,bytes)[])": {
            "details": "Runs a batch of transactions within a multicall and closes the account - Wraps ETH to WETH and sends it msg.sender if value > 0 - Executes the multicall - the main purpose of a multicall when closing is to convert all assets to underlying in order to pay the debt. - Closes credit account:    + Checks the underlying balance: if it is greater than the amount paid to the pool, transfers the underlying      from the Credit Account and proceeds. If not, tries to transfer the shortfall from msg.sender.    + Transfers all enabled assets with non-zero balances to the \"to\" address, unless they are marked      to be skipped in skipTokenMask    + If convertWETH is true, converts WETH into ETH before sending to the recipient - Emits a CloseCreditAccount event",
            "params": {
              "calls": "The array of MultiCall structs encoding the operations to execute before closing the account.",
              "convertWETH": "If true, converts WETH into ETH before sending to \"to\"",
              "skipTokenMask": "Uint-encoded bit mask where 1's mark tokens that shouldn't be transferred",
              "to": "Address to send funds to during account closing"
            }
          },
          "creditManager()": {
            "details": "Returns the CreditManager connected to this Credit Facade"
          },
          "decreaseDebt(uint256)": {
            "details": "Decrease debt - Decreases the debt by paying the requested amount + accrued interest + fees back to the pool - It's also include to this payment interest accrued at the moment and fees - Updates cunulativeIndex to cumulativeIndex now",
            "params": {
              "amount": "Amount to increase borrowed amount"
            }
          },
          "degenNFT()": {
            "details": "Address of the DegenNFT that gatekeeps account openings in whitelisted mode"
          },
          "enableToken(address)": {
            "details": "Enables token in enabledTokenMask for the Credit Account of msg.sender",
            "params": {
              "token": "Address of token to enable"
            }
          },
          "hasOpenedCreditAccount(address)": {
            "details": "Returns true if the borrower has an open Credit Account",
            "params": {
              "borrower": "Borrower address"
            }
          },
          "increaseDebt(uint256)": {
            "details": "Increases debt for msg.sender's Credit Account - Borrows the requested amount from the pool - Updates the CA's borrowAmount / cumulativeIndexOpen   to correctly compute interest going forward - Performs a full collateral check",
            "params": {
              "amount": "Amount to borrow"
            }
          },
          "isTokenAllowed(address)": {
            "details": "Returns true if token is a collateral token and is not forbidden, otherwise returns false",
            "params": {
              "token": "Token to check"
            }
          },
          "limits()": {
            "returns": {
              "maxBorrowedAmount": "Maximal borrowed amount per credit account",
              "minBorrowedAmount": "Minimal borrowed amount per credit account"
            }
          },
          "liquidateCreditAccount(address,address,uint256,bool,(address,bytes)[])": {
            "details": "Runs a batch of transactions within a multicall and liquidates the account - Computes the total value and checks that hf < 1. An account can't be liquidated when hf >= 1.   Total value has to be computed before the multicall, otherwise the liquidator would be able   to manipulate it. - Wraps ETH to WETH and sends it to msg.sender (liquidator) if value > 0 - Executes the multicall - the main purpose of a multicall when liquidating is to convert all assets to underlying   in order to pay the debt. - Liquidate credit account:    + Computes the amount that needs to be paid to the pool. If totalValue * liquidationDiscount < borrow + interest + fees,      only totalValue * liquidationDiscount has to be paid. Since liquidationDiscount < 1, the liquidator can take      totalValue * (1 - liquidationDiscount) as premium. Also computes the remaining funds to be sent to borrower      as totalValue * liquidationDiscount - amountToPool.    + Checks the underlying balance: if it is greater than amountToPool + remainingFunds, transfers the underlying      from the Credit Account and proceeds. If not, tries to transfer the shortfall from the liquidator.    + Transfers all enabled assets with non-zero balances to the \"to\" address, unless they are marked      to be skipped in skipTokenMask. If the liquidator is confident that all assets were converted      during the multicall, they can set the mask to uint256.max - 1, to only transfer the underlying    + If convertWETH is true, converts WETH into ETH before sending - Emits LiquidateCreditAccount event",
            "params": {
              "calls": "The array of MultiCall structs encoding the operations to execute before liquidating the account.",
              "convertWETH": "If true, converts WETH into ETH before sending to \"to\"",
              "skipTokenMask": "Uint-encoded bit mask where 1's mark tokens that shouldn't be transferred",
              "to": "Address to send funds to after liquidation"
            }
          },
          "liquidateExpiredCreditAccount(address,address,uint256,bool,(address,bytes)[])": {
            "details": "Runs a batch of transactions within a multicall and liquidates the account when this Credit Facade is expired The general flow of liquidation is nearly the same as normal liquidations, with two main differences:     - An account can be liquidated on an expired Credit Facade even with hf > 1. However,       no accounts can be liquidated through this function if the Credit Facade is not expired.     - Liquidation premiums and fees for liquidating expired accounts are reduced. It is still possible to normally liquidate an underwater Credit Account, even when the Credit Facade is expired.",
            "params": {
              "calls": "The array of MultiCall structs encoding the operations to execute before liquidating the account.",
              "convertWETH": "If true, converts WETH into ETH before sending to \"to\"",
              "skipTokenMask": "Uint-encoded bit mask where 1's mark tokens that shouldn't be transferred",
              "to": "Address to send funds to after liquidation"
            }
          },
          "multicall((address,bytes)[])": {
            "details": "Executes a batch of transactions within a Multicall, to manage an existing account  - Wraps ETH and sends it back to msg.sender, if value > 0  - Executes the Multicall  - Performs a fullCollateralCheck to verify that hf > 1 after all actions",
            "params": {
              "calls": "The array of MultiCall structs encoding the operations to execute."
            }
          },
          "openCreditAccount(uint256,address,uint16,uint16)": {
            "details": "Opens credit account, borrows funds from the pool and pulls collateral without any additional action.",
            "params": {
              "amount": "The amount of collateral provided by the borrower",
              "leverageFactor": "Percentage of the user's own funds to borrow. 100 is equal to 100% - borrows the same amount as the user's own collateral, equivalent to 2x leverage.",
              "onBehalfOf": "The address to open an account for. Transfers to it have to be allowed if msg.sender != obBehalfOf",
              "referralCode": "Referral code that is used for potential rewards. 0 if no referral code provided."
            }
          },
          "openCreditAccountMulticall(uint256,address,(address,bytes)[],uint16)": {
            "details": "Opens a Credit Account and runs a batch of operations in a multicall",
            "params": {
              "borrowedAmount": "Debt size",
              "calls": "The array of MultiCall structs encoding the required operations. Generally must have at least a call to addCollateral, as otherwise the health check at the end will fail.",
              "onBehalfOf": "The address to open an account for. Transfers to it have to be allowed if msg.sender != obBehalfOf",
              "referralCode": "Referral code which is used for potential rewards. 0 if no referral code provided"
            }
          },
          "params()": {
            "returns": {
              "expirationDate": "Timestamp of the next expiration (for expirable Credit Facades only)",
              "isIncreaseDebtForbidden": "True if increasing debt is forbidden",
              "maxBorrowedAmountPerBlock": "Maximal amount of new debt that can be taken per block"
            }
          },
          "transferAccountOwnership(address)": {
            "details": "Transfers credit account to another user By default, this action is forbidden, and the user has to approve transfers from sender to itself by calling approveAccountTransfer. This is done to prevent malicious actors from transferring compromised accounts to other users.",
            "params": {
              "to": "Address to transfer the account to"
            }
          },
          "transfersAllowed(address,address)": {
            "details": "Returns true if 'from' is allowed to transfer Credit Accounts to 'to'",
            "params": {
              "from": "Sender address to check allowance for",
              "to": "Receiver address to check allowance for"
            }
          },
          "version()": {
            "details": "Returns contract version"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "liquidateExpiredCreditAccount(address,address,uint256,bool,(address,bytes)[])": {
            "notice": "See more at https://dev.gearbox.fi/docs/documentation/credit/liquidation#liquidating-accounts-by-expiration"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/external/gearbox/ICreditFacade.sol": "ICreditFacade"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/external/gearbox/ICreditFacade.sol": {
        "keccak256": "0x9c61f736793e3244ce9978bbc812160960103ca24f99d543fc8f70d7a983a98a",
        "urls": [
          "bzz-raw://21034e103c20a08a00cc60da4b9a1d627859c834d717324a160dbc971aacbe6f",
          "dweb:/ipfs/QmRDfCFYuNzpbfFrEnVtUFqPiSd1JCazjrvbpwB9PYgyFs"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/gearbox/helpers/ICreditManagerV2.sol": {
        "keccak256": "0xf9aefda5462194b70878870317f741dde46e2f8df6d851d7bca463040d7bfba6",
        "urls": [
          "bzz-raw://8e3d1a6bde67ed1194a2fbe8e872a5aa0c5bec5aa9cb0cd70ee904d8be666851",
          "dweb:/ipfs/QmTqPiMMh9vkc5o4ytXQUUsKHZComobm3cveRwqJCKKSFU"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/gearbox/helpers/IPriceOracle.sol": {
        "keccak256": "0x604d96744b07bdfb25e68b01d1831d4437c48c41072053040bdeaaf047faecf4",
        "urls": [
          "bzz-raw://1121a26d6e9c2ed1927a97c47ab636f01b694401f72f5e54ea4d9ecb33d94d9f",
          "dweb:/ipfs/QmUtVdWDQUfZXgXDVM4oGdmUMtj8fJWMNBCjg8njv65krP"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/gearbox/helpers/IVersion.sol": {
        "keccak256": "0x4ca08c37d06931a13902066f6476b1de63d831e5898f09da0cc3b3de6d168aa6",
        "urls": [
          "bzz-raw://179e1d106bb9b5e0928e1b3a79c0e6dc7ded68946434a6d0640f0ef7f78b481a",
          "dweb:/ipfs/QmVqvWpeCq9qF5utQ7xUXGAxuFagd5JCyQi7KWX5iQ98ug"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/gearbox/helpers/libraries/Balances.sol": {
        "keccak256": "0x59ebf267b837e81326dc9613b8ad632de5f084b2fd0c7f38373a75056c41bcdb",
        "urls": [
          "bzz-raw://c7af98c0c46f1a477ee8053b24ee18062e2df17f17f6bc0b63dd5929acfec6e2",
          "dweb:/ipfs/QmQaEWKAzS5dd3J76z4EXYP8GkkuwAdP16xzW6SCexiYHV"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/gearbox/helpers/libraries/MultiCall.sol": {
        "keccak256": "0x9ce2d25a8f8d138de0f3bd228d65bbc2ba097684c41e0ed891dff7a8b10d6b11",
        "urls": [
          "bzz-raw://08bd8ae0877e0746c75f79893191c8181efeed49e7aad94b6d1fc3a0fa24e743",
          "dweb:/ipfs/QmWQmCphY5WfGvuC2bnjTnd15drhHqHGfE47PdwBeJzG3v"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/external/gearbox/ICreditFacade.sol",
    "id": 64489,
    "exportedSymbols": {
      "Balance": [
        65989
      ],
      "ICreditFacade": [
        64488
      ],
      "ICreditFacadeEvents": [
        64218
      ],
      "ICreditFacadeExceptions": [
        64274
      ],
      "ICreditFacadeExtended": [
        64116
      ],
      "ICreditManagerV2": [
        65201
      ],
      "ICreditManagerV2Exceptions": [
        64852
      ],
      "IVersion": [
        65465
      ],
      "MultiCall": [
        66256
      ]
    },
    "nodeType": "SourceUnit",
    "src": "123:18273:198",
    "nodes": [
      {
        "id": 64092,
        "nodeType": "PragmaDirective",
        "src": "123:23:198",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 64094,
        "nodeType": "ImportDirective",
        "src": "148:48:198",
        "nodes": [],
        "absolutePath": "src/interfaces/external/gearbox/helpers/IVersion.sol",
        "file": "./helpers/IVersion.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64489,
        "sourceUnit": 65466,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64093,
              "name": "IVersion",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "156:8:198",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64097,
        "nodeType": "ImportDirective",
        "src": "197:92:198",
        "nodes": [],
        "absolutePath": "src/interfaces/external/gearbox/helpers/ICreditManagerV2.sol",
        "file": "./helpers/ICreditManagerV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64489,
        "sourceUnit": 65202,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64095,
              "name": "ICreditManagerV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "205:16:198",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 64096,
              "name": "ICreditManagerV2Exceptions",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "223:26:198",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64099,
        "nodeType": "ImportDirective",
        "src": "290:57:198",
        "nodes": [],
        "absolutePath": "src/interfaces/external/gearbox/helpers/libraries/Balances.sol",
        "file": "./helpers/libraries/Balances.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64489,
        "sourceUnit": 66250,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64098,
              "name": "Balance",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "298:7:198",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64101,
        "nodeType": "ImportDirective",
        "src": "348:60:198",
        "nodes": [],
        "absolutePath": "src/interfaces/external/gearbox/helpers/libraries/MultiCall.sol",
        "file": "./helpers/libraries/MultiCall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64489,
        "sourceUnit": 66608,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64100,
              "name": "MultiCall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "356:9:198",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64116,
        "nodeType": "ContractDefinition",
        "src": "410:836:198",
        "nodes": [
          {
            "id": 64109,
            "nodeType": "FunctionDefinition",
            "src": "872:70:198",
            "nodes": [],
            "documentation": {
              "id": 64102,
              "nodeType": "StructuredDocumentation",
              "src": "448:419:198",
              "text": "@dev Stores expected balances (computed as current balance + passed delta)\n      and compare with actual balances at the end of a multicall, reverts\n      if at least one is less than expected\n @param expected Array of expected balance changes\n @notice This is an extenstion function that does not exist in the Credit Facade\n         itself and can only be used within a multicall"
            },
            "functionSelector": "81314b59",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revertIfReceivedLessThan",
            "nameLocation": "881:24:198",
            "parameters": {
              "id": 64107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64106,
                  "mutability": "mutable",
                  "name": "expected",
                  "nameLocation": "923:8:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64109,
                  "src": "906:25:198",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Balance_$65989_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Balance[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 64104,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 64103,
                        "name": "Balance",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 65989,
                        "src": "906:7:198"
                      },
                      "referencedDeclaration": 65989,
                      "src": "906:7:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Balance_$65989_storage_ptr",
                        "typeString": "struct Balance"
                      }
                    },
                    "id": 64105,
                    "nodeType": "ArrayTypeName",
                    "src": "906:9:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Balance_$65989_storage_$dyn_storage_ptr",
                      "typeString": "struct Balance[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:27:198"
            },
            "returnParameters": {
              "id": 64108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "941:0:198"
            },
            "scope": 64116,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64115,
            "nodeType": "FunctionDefinition",
            "src": "1198:46:198",
            "nodes": [],
            "documentation": {
              "id": 64110,
              "nodeType": "StructuredDocumentation",
              "src": "948:245:198",
              "text": "@dev Disables a token on the caller's Credit Account\n @param token Token to disable\n @notice This is an extenstion function that does not exist in the Credit Facade\n         itself and can only be used within a multicall"
            },
            "functionSelector": "23e27a64",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "disableToken",
            "nameLocation": "1207:12:198",
            "parameters": {
              "id": 64113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64112,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1228:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64115,
                  "src": "1220:13:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1219:15:198"
            },
            "returnParameters": {
              "id": 64114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1243:0:198"
            },
            "scope": 64116,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ICreditFacadeExtended",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          64116
        ],
        "name": "ICreditFacadeExtended",
        "nameLocation": "420:21:198",
        "scope": 64489,
        "usedErrors": []
      },
      {
        "id": 64218,
        "nodeType": "ContractDefinition",
        "src": "1248:2152:198",
        "nodes": [
          {
            "id": 64127,
            "nodeType": "EventDefinition",
            "src": "1378:164:198",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64117,
              "nodeType": "StructuredDocumentation",
              "src": "1284:89:198",
              "text": "@dev Emits when a new Credit Account is opened through the\n      Credit Facade"
            },
            "name": "OpenCreditAccount",
            "nameLocation": "1384:17:198",
            "parameters": {
              "id": 64126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64119,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "onBehalfOf",
                  "nameLocation": "1427:10:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64127,
                  "src": "1411:26:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1411:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64121,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "creditAccount",
                  "nameLocation": "1463:13:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64127,
                  "src": "1447:29:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64123,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "borrowAmount",
                  "nameLocation": "1494:12:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64127,
                  "src": "1486:20:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1486:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64125,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "referralCode",
                  "nameLocation": "1523:12:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64127,
                  "src": "1516:19:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 64124,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1516:6:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1401:140:198"
            }
          },
          {
            "id": 64134,
            "nodeType": "EventDefinition",
            "src": "1615:68:198",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64128,
              "nodeType": "StructuredDocumentation",
              "src": "1548:62:198",
              "text": "@dev Emits when the account owner closes their CA normally"
            },
            "name": "CloseCreditAccount",
            "nameLocation": "1621:18:198",
            "parameters": {
              "id": 64133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64130,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1656:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64134,
                  "src": "1640:21:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1640:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64132,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1679:2:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64134,
                  "src": "1663:18:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1639:43:198"
            }
          },
          {
            "id": 64145,
            "nodeType": "EventDefinition",
            "src": "1769:162:198",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64135,
              "nodeType": "StructuredDocumentation",
              "src": "1689:75:198",
              "text": "@dev Emits when a Credit Account is liquidated due to low health factor"
            },
            "name": "LiquidateCreditAccount",
            "nameLocation": "1775:22:198",
            "parameters": {
              "id": 64144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64137,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1823:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64145,
                  "src": "1807:21:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1807:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64139,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "liquidator",
                  "nameLocation": "1854:10:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64145,
                  "src": "1838:26:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1838:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64141,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1890:2:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64145,
                  "src": "1874:18:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1874:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64143,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "remainingFunds",
                  "nameLocation": "1910:14:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64145,
                  "src": "1902:22:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1902:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1797:133:198"
            }
          },
          {
            "id": 64156,
            "nodeType": "EventDefinition",
            "src": "2006:169:198",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64146,
              "nodeType": "StructuredDocumentation",
              "src": "1937:64:198",
              "text": "@dev Emits when a Credit Account is liquidated due to expiry"
            },
            "name": "LiquidateExpiredCreditAccount",
            "nameLocation": "2012:29:198",
            "parameters": {
              "id": 64155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64148,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2067:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64156,
                  "src": "2051:21:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2051:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64150,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "liquidator",
                  "nameLocation": "2098:10:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64156,
                  "src": "2082:26:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2082:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64152,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2134:2:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64156,
                  "src": "2118:18:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2118:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64154,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "remainingFunds",
                  "nameLocation": "2154:14:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64156,
                  "src": "2146:22:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2146:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2041:133:198"
            }
          },
          {
            "id": 64163,
            "nodeType": "EventDefinition",
            "src": "2243:71:198",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64157,
              "nodeType": "StructuredDocumentation",
              "src": "2181:57:198",
              "text": "@dev Emits when the account owner increases CA's debt"
            },
            "name": "IncreaseBorrowedAmount",
            "nameLocation": "2249:22:198",
            "parameters": {
              "id": 64162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64159,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "2288:8:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64163,
                  "src": "2272:24:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2272:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64161,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2306:6:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64163,
                  "src": "2298:14:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2298:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2271:42:198"
            }
          },
          {
            "id": 64170,
            "nodeType": "EventDefinition",
            "src": "2380:71:198",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64164,
              "nodeType": "StructuredDocumentation",
              "src": "2320:55:198",
              "text": "@dev Emits when the account owner reduces CA's debt"
            },
            "name": "DecreaseBorrowedAmount",
            "nameLocation": "2386:22:198",
            "parameters": {
              "id": 64169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64166,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "2425:8:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64170,
                  "src": "2409:24:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2409:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64168,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2443:6:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64170,
                  "src": "2435:14:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2435:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2408:42:198"
            }
          },
          {
            "id": 64179,
            "nodeType": "EventDefinition",
            "src": "2526:86:198",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64171,
              "nodeType": "StructuredDocumentation",
              "src": "2457:64:198",
              "text": "@dev Emits when the account owner add new collateral to a CA"
            },
            "name": "AddCollateral",
            "nameLocation": "2532:13:198",
            "parameters": {
              "id": 64178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64173,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "onBehalfOf",
                  "nameLocation": "2562:10:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64179,
                  "src": "2546:26:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2546:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64175,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2590:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64179,
                  "src": "2574:21:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2574:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64177,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2605:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64179,
                  "src": "2597:13:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2597:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2545:66:198"
            }
          },
          {
            "id": 64184,
            "nodeType": "EventDefinition",
            "src": "2665:49:198",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64180,
              "nodeType": "StructuredDocumentation",
              "src": "2618:42:198",
              "text": "@dev Emits when a multicall is started"
            },
            "name": "MultiCallStarted",
            "nameLocation": "2671:16:198",
            "parameters": {
              "id": 64183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64182,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "2704:8:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64184,
                  "src": "2688:24:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2688:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2687:26:198"
            }
          },
          {
            "id": 64187,
            "nodeType": "EventDefinition",
            "src": "2768:26:198",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64185,
              "nodeType": "StructuredDocumentation",
              "src": "2720:43:198",
              "text": "@dev Emits when a multicall is finished"
            },
            "name": "MultiCallFinished",
            "nameLocation": "2774:17:198",
            "parameters": {
              "id": 64186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2791:2:198"
            }
          },
          {
            "id": 64194,
            "nodeType": "EventDefinition",
            "src": "2864:74:198",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64188,
              "nodeType": "StructuredDocumentation",
              "src": "2800:59:198",
              "text": "@dev Emits when Credit Account ownership is transferred"
            },
            "name": "TransferAccount",
            "nameLocation": "2870:15:198",
            "parameters": {
              "id": 64193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64190,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oldOwner",
                  "nameLocation": "2902:8:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64194,
                  "src": "2886:24:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2886:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64192,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "2928:8:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64194,
                  "src": "2912:24:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2912:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2885:52:198"
            }
          },
          {
            "id": 64203,
            "nodeType": "EventDefinition",
            "src": "3047:83:198",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64195,
              "nodeType": "StructuredDocumentation",
              "src": "2944:98:198",
              "text": "@dev Emits when the user changes approval for account transfers to itself from another address"
            },
            "name": "TransferAccountAllowed",
            "nameLocation": "3053:22:198",
            "parameters": {
              "id": 64202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64197,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3092:4:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64203,
                  "src": "3076:20:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3076:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64199,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3114:2:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64203,
                  "src": "3098:18:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3098:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64201,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "3123:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64203,
                  "src": "3118:10:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64200,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3118:4:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3075:54:198"
            }
          },
          {
            "id": 64210,
            "nodeType": "EventDefinition",
            "src": "3206:57:198",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64204,
              "nodeType": "StructuredDocumentation",
              "src": "3136:65:198",
              "text": "@dev Emits when the account owner enables a token on their CA"
            },
            "name": "TokenEnabled",
            "nameLocation": "3212:12:198",
            "parameters": {
              "id": 64209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64206,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creditAccount",
                  "nameLocation": "3233:13:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64210,
                  "src": "3225:21:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3225:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64208,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3256:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64210,
                  "src": "3248:13:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3248:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3224:38:198"
            }
          },
          {
            "id": 64217,
            "nodeType": "EventDefinition",
            "src": "3340:58:198",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 64211,
              "nodeType": "StructuredDocumentation",
              "src": "3269:66:198",
              "text": "@dev Emits when the account owner disables a token on their CA"
            },
            "name": "TokenDisabled",
            "nameLocation": "3346:13:198",
            "parameters": {
              "id": 64216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64213,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creditAccount",
                  "nameLocation": "3368:13:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64217,
                  "src": "3360:21:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3360:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64215,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3391:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64217,
                  "src": "3383:13:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3383:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3359:38:198"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ICreditFacadeEvents",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          64218
        ],
        "name": "ICreditFacadeEvents",
        "nameLocation": "1258:19:198",
        "scope": 64489,
        "usedErrors": []
      },
      {
        "id": 64274,
        "nodeType": "ContractDefinition",
        "src": "3402:2801:198",
        "nodes": [
          {
            "id": 64223,
            "nodeType": "ErrorDefinition",
            "src": "3597:44:198",
            "nodes": [],
            "documentation": {
              "id": 64221,
              "nodeType": "StructuredDocumentation",
              "src": "3472:120:198",
              "text": "@dev Thrown if the CreditFacade is not expirable, and an aciton is attempted that\n      requires expirability"
            },
            "name": "NotAllowedWhenNotExpirableException",
            "nameLocation": "3603:35:198",
            "parameters": {
              "id": 64222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3638:2:198"
            }
          },
          {
            "id": 64226,
            "nodeType": "ErrorDefinition",
            "src": "3779:36:198",
            "nodes": [],
            "documentation": {
              "id": 64224,
              "nodeType": "StructuredDocumentation",
              "src": "3647:127:198",
              "text": "@dev Thrown if whitelisted mode is enabled, and an action is attempted that is\n      not allowed in whitelisted mode"
            },
            "name": "NotAllowedInWhitelistedMode",
            "nameLocation": "3785:27:198",
            "parameters": {
              "id": 64225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3812:2:198"
            }
          },
          {
            "id": 64229,
            "nodeType": "ErrorDefinition",
            "src": "3912:43:198",
            "nodes": [],
            "documentation": {
              "id": 64227,
              "nodeType": "StructuredDocumentation",
              "src": "3821:86:198",
              "text": "@dev Thrown if a user attempts to transfer a CA to an address that didn't allow it"
            },
            "name": "AccountTransferNotAllowedException",
            "nameLocation": "3918:34:198",
            "parameters": {
              "id": 64228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3952:2:198"
            }
          },
          {
            "id": 64232,
            "nodeType": "ErrorDefinition",
            "src": "4056:51:198",
            "nodes": [],
            "documentation": {
              "id": 64230,
              "nodeType": "StructuredDocumentation",
              "src": "3961:90:198",
              "text": "@dev Thrown if a liquidator tries to liquidate an account with a health factor above 1"
            },
            "name": "CantLiquidateWithSuchHealthFactorException",
            "nameLocation": "4062:42:198",
            "parameters": {
              "id": 64231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4104:2:198"
            }
          },
          {
            "id": 64235,
            "nodeType": "ErrorDefinition",
            "src": "4226:41:198",
            "nodes": [],
            "documentation": {
              "id": 64233,
              "nodeType": "StructuredDocumentation",
              "src": "4113:108:198",
              "text": "@dev Thrown if a liquidator tries to liquidate an account by expiry while a Credit Facade is not expired"
            },
            "name": "CantLiquidateNonExpiredException",
            "nameLocation": "4232:32:198",
            "parameters": {
              "id": 64234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4264:2:198"
            }
          },
          {
            "id": 64238,
            "nodeType": "ErrorDefinition",
            "src": "4341:35:198",
            "nodes": [],
            "documentation": {
              "id": 64236,
              "nodeType": "StructuredDocumentation",
              "src": "4273:63:198",
              "text": "@dev Thrown if call data passed to a multicall is too short"
            },
            "name": "IncorrectCallDataException",
            "nameLocation": "4347:26:198",
            "parameters": {
              "id": 64237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4373:2:198"
            }
          },
          {
            "id": 64241,
            "nodeType": "ErrorDefinition",
            "src": "4523:40:198",
            "nodes": [],
            "documentation": {
              "id": 64239,
              "nodeType": "StructuredDocumentation",
              "src": "4382:136:198",
              "text": "@dev Thrown inside account closure multicall if the borrower attempts an action that is forbidden on closing\n      an account"
            },
            "name": "ForbiddenDuringClosureException",
            "nameLocation": "4529:31:198",
            "parameters": {
              "id": 64240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4560:2:198"
            }
          },
          {
            "id": 64244,
            "nodeType": "ErrorDefinition",
            "src": "4663:55:198",
            "nodes": [],
            "documentation": {
              "id": 64242,
              "nodeType": "StructuredDocumentation",
              "src": "4569:89:198",
              "text": "@dev Thrown if debt increase and decrease are subsequently attempted in one multicall"
            },
            "name": "IncreaseAndDecreaseForbiddenInOneCallException",
            "nameLocation": "4669:46:198",
            "parameters": {
              "id": 64243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4715:2:198"
            }
          },
          {
            "id": 64247,
            "nodeType": "ErrorDefinition",
            "src": "4861:31:198",
            "nodes": [],
            "documentation": {
              "id": 64245,
              "nodeType": "StructuredDocumentation",
              "src": "4724:132:198",
              "text": "@dev Thrown if a selector that doesn't match any allowed function is passed to the Credit Facade\n      during a multicall"
            },
            "name": "UnknownMethodException",
            "nameLocation": "4867:22:198",
            "parameters": {
              "id": 64246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4889:2:198"
            }
          },
          {
            "id": 64250,
            "nodeType": "ErrorDefinition",
            "src": "5005:39:198",
            "nodes": [],
            "documentation": {
              "id": 64248,
              "nodeType": "StructuredDocumentation",
              "src": "4898:102:198",
              "text": "@dev Thrown if a user tries to open an account or increase debt with increaseDebtForbidden mode on"
            },
            "name": "IncreaseDebtForbiddenException",
            "nameLocation": "5011:30:198",
            "parameters": {
              "id": 64249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5041:2:198"
            }
          },
          {
            "id": 64253,
            "nodeType": "ErrorDefinition",
            "src": "5130:49:198",
            "nodes": [],
            "documentation": {
              "id": 64251,
              "nodeType": "StructuredDocumentation",
              "src": "5050:75:198",
              "text": "@dev Thrown if the account owner tries to transfer an unhealthy account"
            },
            "name": "CantTransferLiquidatableAccountException",
            "nameLocation": "5136:40:198",
            "parameters": {
              "id": 64252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5176:2:198"
            }
          },
          {
            "id": 64256,
            "nodeType": "ErrorDefinition",
            "src": "5258:36:198",
            "nodes": [],
            "documentation": {
              "id": 64254,
              "nodeType": "StructuredDocumentation",
              "src": "5185:68:198",
              "text": "@dev Thrown if too much new debt was taken within a single block"
            },
            "name": "BorrowedBlockLimitException",
            "nameLocation": "5264:27:198",
            "parameters": {
              "id": 64255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5291:2:198"
            }
          },
          {
            "id": 64259,
            "nodeType": "ErrorDefinition",
            "src": "5389:41:198",
            "nodes": [],
            "documentation": {
              "id": 64257,
              "nodeType": "StructuredDocumentation",
              "src": "5300:84:198",
              "text": "@dev Thrown if the new debt principal for a CA falls outside of borrowing limits"
            },
            "name": "BorrowAmountOutOfLimitsException",
            "nameLocation": "5395:32:198",
            "parameters": {
              "id": 64258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5427:2:198"
            }
          },
          {
            "id": 64264,
            "nodeType": "ErrorDefinition",
            "src": "5600:54:198",
            "nodes": [],
            "documentation": {
              "id": 64260,
              "nodeType": "StructuredDocumentation",
              "src": "5436:159:198",
              "text": "@dev Thrown if one of the balances on a Credit Account is less than expected\n      at the end of a multicall, if revertIfReceivedLessThan was called"
            },
            "name": "BalanceLessThanMinimumDesiredException",
            "nameLocation": "5606:38:198",
            "parameters": {
              "id": 64263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64262,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64264,
                  "src": "5645:7:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5645:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5644:9:198"
            }
          },
          {
            "id": 64267,
            "nodeType": "ErrorDefinition",
            "src": "5754:54:198",
            "nodes": [],
            "documentation": {
              "id": 64265,
              "nodeType": "StructuredDocumentation",
              "src": "5660:89:198",
              "text": "@dev Thrown if a user attempts to open an account on a Credit Facade that has expired"
            },
            "name": "OpenAccountNotAllowedAfterExpirationException",
            "nameLocation": "5760:45:198",
            "parameters": {
              "id": 64266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5805:2:198"
            }
          },
          {
            "id": 64270,
            "nodeType": "ErrorDefinition",
            "src": "5918:44:198",
            "nodes": [],
            "documentation": {
              "id": 64268,
              "nodeType": "StructuredDocumentation",
              "src": "5814:99:198",
              "text": "@dev Thrown if expected balances are attempted to be set through revertIfReceivedLessThan twice"
            },
            "name": "ExpectedBalancesAlreadySetException",
            "nameLocation": "5924:35:198",
            "parameters": {
              "id": 64269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5959:2:198"
            }
          },
          {
            "id": 64273,
            "nodeType": "ErrorDefinition",
            "src": "6148:53:198",
            "nodes": [],
            "documentation": {
              "id": 64271,
              "nodeType": "StructuredDocumentation",
              "src": "5968:175:198",
              "text": "@dev Thrown if a Credit Account has enabled forbidden tokens and the owner attempts to perform an action\n      that is not allowed with any forbidden tokens enabled"
            },
            "name": "ActionProhibitedWithForbiddenTokensException",
            "nameLocation": "6154:44:198",
            "parameters": {
              "id": 64272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6198:2:198"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 64219,
              "name": "ICreditManagerV2Exceptions",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64852,
              "src": "3439:26:198"
            },
            "id": 64220,
            "nodeType": "InheritanceSpecifier",
            "src": "3439:26:198"
          }
        ],
        "canonicalName": "ICreditFacadeExceptions",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          64274,
          64852
        ],
        "name": "ICreditFacadeExceptions",
        "nameLocation": "3412:23:198",
        "scope": 64489,
        "usedErrors": [
          64223,
          64226,
          64229,
          64232,
          64235,
          64238,
          64241,
          64244,
          64247,
          64250,
          64253,
          64256,
          64259,
          64264,
          64267,
          64270,
          64273,
          64815,
          64818,
          64821,
          64824,
          64827,
          64830,
          64833,
          64836,
          64839,
          64842,
          64845,
          64848,
          64851
        ]
      },
      {
        "id": 64488,
        "nodeType": "ContractDefinition",
        "src": "6205:12190:198",
        "nodes": [
          {
            "id": 64292,
            "nodeType": "FunctionDefinition",
            "src": "6967:162:198",
            "nodes": [],
            "documentation": {
              "id": 64281,
              "nodeType": "StructuredDocumentation",
              "src": "6341:621:198",
              "text": "@dev Opens credit account, borrows funds from the pool and pulls collateral\n without any additional action.\n @param amount The amount of collateral provided by the borrower\n @param onBehalfOf The address to open an account for. Transfers to it have to be allowed if\n msg.sender != obBehalfOf\n @param leverageFactor Percentage of the user's own funds to borrow. 100 is equal to 100% - borrows the same amount\n as the user's own collateral, equivalent to 2x leverage.\n @param referralCode Referral code that is used for potential rewards. 0 if no referral code provided."
            },
            "functionSelector": "6c8f225d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "openCreditAccount",
            "nameLocation": "6976:17:198",
            "parameters": {
              "id": 64290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64283,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7011:6:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64292,
                  "src": "7003:14:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7003:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64285,
                  "mutability": "mutable",
                  "name": "onBehalfOf",
                  "nameLocation": "7035:10:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64292,
                  "src": "7027:18:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64284,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7027:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64287,
                  "mutability": "mutable",
                  "name": "leverageFactor",
                  "nameLocation": "7062:14:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64292,
                  "src": "7055:21:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 64286,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "7055:6:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64289,
                  "mutability": "mutable",
                  "name": "referralCode",
                  "nameLocation": "7093:12:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64292,
                  "src": "7086:19:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 64288,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "7086:6:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6993:118:198"
            },
            "returnParameters": {
              "id": 64291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7128:0:198"
            },
            "scope": 64488,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64306,
            "nodeType": "FunctionDefinition",
            "src": "7700:184:198",
            "nodes": [],
            "documentation": {
              "id": 64293,
              "nodeType": "StructuredDocumentation",
              "src": "7135:560:198",
              "text": "@dev Opens a Credit Account and runs a batch of operations in a multicall\n @param borrowedAmount Debt size\n @param onBehalfOf The address to open an account for. Transfers to it have to be allowed if\n msg.sender != obBehalfOf\n @param calls The array of MultiCall structs encoding the required operations. Generally must have\n at least a call to addCollateral, as otherwise the health check at the end will fail.\n @param referralCode Referral code which is used for potential rewards. 0 if no referral code provided"
            },
            "functionSelector": "7071b7c5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "openCreditAccountMulticall",
            "nameLocation": "7709:26:198",
            "parameters": {
              "id": 64304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64295,
                  "mutability": "mutable",
                  "name": "borrowedAmount",
                  "nameLocation": "7753:14:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64306,
                  "src": "7745:22:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7745:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64297,
                  "mutability": "mutable",
                  "name": "onBehalfOf",
                  "nameLocation": "7785:10:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64306,
                  "src": "7777:18:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64296,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7777:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64301,
                  "mutability": "mutable",
                  "name": "calls",
                  "nameLocation": "7826:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64306,
                  "src": "7805:26:198",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_MultiCall_$66256_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct MultiCall[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 64299,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 64298,
                        "name": "MultiCall",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 66256,
                        "src": "7805:9:198"
                      },
                      "referencedDeclaration": 66256,
                      "src": "7805:9:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MultiCall_$66256_storage_ptr",
                        "typeString": "struct MultiCall"
                      }
                    },
                    "id": 64300,
                    "nodeType": "ArrayTypeName",
                    "src": "7805:11:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MultiCall_$66256_storage_$dyn_storage_ptr",
                      "typeString": "struct MultiCall[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64303,
                  "mutability": "mutable",
                  "name": "referralCode",
                  "nameLocation": "7848:12:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64306,
                  "src": "7841:19:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 64302,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "7841:6:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7735:131:198"
            },
            "returnParameters": {
              "id": 64305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7883:0:198"
            },
            "scope": 64488,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64320,
            "nodeType": "FunctionDefinition",
            "src": "9115:164:198",
            "nodes": [],
            "documentation": {
              "id": 64307,
              "nodeType": "StructuredDocumentation",
              "src": "7890:1220:198",
              "text": "@dev Runs a batch of transactions within a multicall and closes the account\n - Wraps ETH to WETH and sends it msg.sender if value > 0\n - Executes the multicall - the main purpose of a multicall when closing is to convert all assets to underlying\n in order to pay the debt.\n - Closes credit account:\n    + Checks the underlying balance: if it is greater than the amount paid to the pool, transfers the underlying\n      from the Credit Account and proceeds. If not, tries to transfer the shortfall from msg.sender.\n    + Transfers all enabled assets with non-zero balances to the \"to\" address, unless they are marked\n      to be skipped in skipTokenMask\n    + If convertWETH is true, converts WETH into ETH before sending to the recipient\n - Emits a CloseCreditAccount event\n @param to Address to send funds to during account closing\n @param skipTokenMask Uint-encoded bit mask where 1's mark tokens that shouldn't be transferred\n @param convertWETH If true, converts WETH into ETH before sending to \"to\"\n @param calls The array of MultiCall structs encoding the operations to execute before closing the account."
            },
            "functionSelector": "5f73fbec",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "closeCreditAccount",
            "nameLocation": "9124:18:198",
            "parameters": {
              "id": 64318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64309,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9160:2:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64320,
                  "src": "9152:10:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9152:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64311,
                  "mutability": "mutable",
                  "name": "skipTokenMask",
                  "nameLocation": "9180:13:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64320,
                  "src": "9172:21:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9172:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64313,
                  "mutability": "mutable",
                  "name": "convertWETH",
                  "nameLocation": "9208:11:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64320,
                  "src": "9203:16:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64312,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9203:4:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64317,
                  "mutability": "mutable",
                  "name": "calls",
                  "nameLocation": "9250:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64320,
                  "src": "9229:26:198",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_MultiCall_$66256_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct MultiCall[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 64315,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 64314,
                        "name": "MultiCall",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 66256,
                        "src": "9229:9:198"
                      },
                      "referencedDeclaration": 66256,
                      "src": "9229:9:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MultiCall_$66256_storage_ptr",
                        "typeString": "struct MultiCall"
                      }
                    },
                    "id": 64316,
                    "nodeType": "ArrayTypeName",
                    "src": "9229:11:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MultiCall_$66256_storage_$dyn_storage_ptr",
                      "typeString": "struct MultiCall[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9142:119:198"
            },
            "returnParameters": {
              "id": 64319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9278:0:198"
            },
            "scope": 64488,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64336,
            "nodeType": "FunctionDefinition",
            "src": "11375:194:198",
            "nodes": [],
            "documentation": {
              "id": 64321,
              "nodeType": "StructuredDocumentation",
              "src": "9285:2085:198",
              "text": "@dev Runs a batch of transactions within a multicall and liquidates the account\n - Computes the total value and checks that hf < 1. An account can't be liquidated when hf >= 1.\n   Total value has to be computed before the multicall, otherwise the liquidator would be able\n   to manipulate it.\n - Wraps ETH to WETH and sends it to msg.sender (liquidator) if value > 0\n - Executes the multicall - the main purpose of a multicall when liquidating is to convert all assets to underlying\n   in order to pay the debt.\n - Liquidate credit account:\n    + Computes the amount that needs to be paid to the pool. If totalValue * liquidationDiscount < borrow + interest + fees,\n      only totalValue * liquidationDiscount has to be paid. Since liquidationDiscount < 1, the liquidator can take\n      totalValue * (1 - liquidationDiscount) as premium. Also computes the remaining funds to be sent to borrower\n      as totalValue * liquidationDiscount - amountToPool.\n    + Checks the underlying balance: if it is greater than amountToPool + remainingFunds, transfers the underlying\n      from the Credit Account and proceeds. If not, tries to transfer the shortfall from the liquidator.\n    + Transfers all enabled assets with non-zero balances to the \"to\" address, unless they are marked\n      to be skipped in skipTokenMask. If the liquidator is confident that all assets were converted\n      during the multicall, they can set the mask to uint256.max - 1, to only transfer the underlying\n    + If convertWETH is true, converts WETH into ETH before sending\n - Emits LiquidateCreditAccount event\n @param to Address to send funds to after liquidation\n @param skipTokenMask Uint-encoded bit mask where 1's mark tokens that shouldn't be transferred\n @param convertWETH If true, converts WETH into ETH before sending to \"to\"\n @param calls The array of MultiCall structs encoding the operations to execute before liquidating the account."
            },
            "functionSelector": "5d91a0e0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "liquidateCreditAccount",
            "nameLocation": "11384:22:198",
            "parameters": {
              "id": 64334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64323,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "11424:8:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64336,
                  "src": "11416:16:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11416:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64325,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11450:2:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64336,
                  "src": "11442:10:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11442:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64327,
                  "mutability": "mutable",
                  "name": "skipTokenMask",
                  "nameLocation": "11470:13:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64336,
                  "src": "11462:21:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11462:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64329,
                  "mutability": "mutable",
                  "name": "convertWETH",
                  "nameLocation": "11498:11:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64336,
                  "src": "11493:16:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64328,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11493:4:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64333,
                  "mutability": "mutable",
                  "name": "calls",
                  "nameLocation": "11540:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64336,
                  "src": "11519:26:198",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_MultiCall_$66256_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct MultiCall[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 64331,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 64330,
                        "name": "MultiCall",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 66256,
                        "src": "11519:9:198"
                      },
                      "referencedDeclaration": 66256,
                      "src": "11519:9:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MultiCall_$66256_storage_ptr",
                        "typeString": "struct MultiCall"
                      }
                    },
                    "id": 64332,
                    "nodeType": "ArrayTypeName",
                    "src": "11519:11:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MultiCall_$66256_storage_$dyn_storage_ptr",
                      "typeString": "struct MultiCall[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11406:145:198"
            },
            "returnParameters": {
              "id": 64335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11568:0:198"
            },
            "scope": 64488,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64352,
            "nodeType": "FunctionDefinition",
            "src": "12725:201:198",
            "nodes": [],
            "documentation": {
              "id": 64337,
              "nodeType": "StructuredDocumentation",
              "src": "11575:1145:198",
              "text": "@dev Runs a batch of transactions within a multicall and liquidates the account when\n this Credit Facade is expired\n The general flow of liquidation is nearly the same as normal liquidations, with two main differences:\n     - An account can be liquidated on an expired Credit Facade even with hf > 1. However,\n       no accounts can be liquidated through this function if the Credit Facade is not expired.\n     - Liquidation premiums and fees for liquidating expired accounts are reduced.\n It is still possible to normally liquidate an underwater Credit Account, even when the Credit Facade\n is expired.\n @param to Address to send funds to after liquidation\n @param skipTokenMask Uint-encoded bit mask where 1's mark tokens that shouldn't be transferred\n @param convertWETH If true, converts WETH into ETH before sending to \"to\"\n @param calls The array of MultiCall structs encoding the operations to execute before liquidating the account.\n @notice See more at https://dev.gearbox.fi/docs/documentation/credit/liquidation#liquidating-accounts-by-expiration"
            },
            "functionSelector": "82871ace",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "liquidateExpiredCreditAccount",
            "nameLocation": "12734:29:198",
            "parameters": {
              "id": 64350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64339,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "12781:8:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64352,
                  "src": "12773:16:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12773:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64341,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12807:2:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64352,
                  "src": "12799:10:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12799:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64343,
                  "mutability": "mutable",
                  "name": "skipTokenMask",
                  "nameLocation": "12827:13:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64352,
                  "src": "12819:21:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12819:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64345,
                  "mutability": "mutable",
                  "name": "convertWETH",
                  "nameLocation": "12855:11:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64352,
                  "src": "12850:16:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64344,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12850:4:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64349,
                  "mutability": "mutable",
                  "name": "calls",
                  "nameLocation": "12897:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64352,
                  "src": "12876:26:198",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_MultiCall_$66256_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct MultiCall[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 64347,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 64346,
                        "name": "MultiCall",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 66256,
                        "src": "12876:9:198"
                      },
                      "referencedDeclaration": 66256,
                      "src": "12876:9:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MultiCall_$66256_storage_ptr",
                        "typeString": "struct MultiCall"
                      }
                    },
                    "id": 64348,
                    "nodeType": "ArrayTypeName",
                    "src": "12876:11:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MultiCall_$66256_storage_$dyn_storage_ptr",
                      "typeString": "struct MultiCall[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12763:145:198"
            },
            "returnParameters": {
              "id": 64351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12925:0:198"
            },
            "scope": 64488,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64358,
            "nodeType": "FunctionDefinition",
            "src": "13251:47:198",
            "nodes": [],
            "documentation": {
              "id": 64353,
              "nodeType": "StructuredDocumentation",
              "src": "12932:314:198",
              "text": "@dev Increases debt for msg.sender's Credit Account\n - Borrows the requested amount from the pool\n - Updates the CA's borrowAmount / cumulativeIndexOpen\n   to correctly compute interest going forward\n - Performs a full collateral check\n @param amount Amount to borrow"
            },
            "functionSelector": "2b7c7b11",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "increaseDebt",
            "nameLocation": "13260:12:198",
            "parameters": {
              "id": 64356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64355,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13281:6:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64358,
                  "src": "13273:14:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13273:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13272:16:198"
            },
            "returnParameters": {
              "id": 64357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13297:0:198"
            },
            "scope": 64488,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64364,
            "nodeType": "FunctionDefinition",
            "src": "13640:47:198",
            "nodes": [],
            "documentation": {
              "id": 64359,
              "nodeType": "StructuredDocumentation",
              "src": "13304:331:198",
              "text": "@dev Decrease debt\n - Decreases the debt by paying the requested amount + accrued interest + fees back to the pool\n - It's also include to this payment interest accrued at the moment and fees\n - Updates cunulativeIndex to cumulativeIndex now\n @param amount Amount to increase borrowed amount"
            },
            "functionSelector": "2a7ba1f7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseDebt",
            "nameLocation": "13649:12:198",
            "parameters": {
              "id": 64362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64361,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13670:6:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64364,
                  "src": "13662:14:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13662:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13661:16:198"
            },
            "returnParameters": {
              "id": 64363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13686:0:198"
            },
            "scope": 64488,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64374,
            "nodeType": "FunctionDefinition",
            "src": "13912:91:198",
            "nodes": [],
            "documentation": {
              "id": 64365,
              "nodeType": "StructuredDocumentation",
              "src": "13693:214:198",
              "text": "@dev Adds collateral to borrower's credit account\n @param onBehalfOf Address of the borrower whose account is funded\n @param token Address of a collateral token\n @param amount Amount to add"
            },
            "functionSelector": "59781034",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addCollateral",
            "nameLocation": "13921:13:198",
            "parameters": {
              "id": 64372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64367,
                  "mutability": "mutable",
                  "name": "onBehalfOf",
                  "nameLocation": "13943:10:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64374,
                  "src": "13935:18:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13935:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64369,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "13963:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64374,
                  "src": "13955:13:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13955:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64371,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13978:6:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64374,
                  "src": "13970:14:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13970:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13934:51:198"
            },
            "returnParameters": {
              "id": 64373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14002:0:198"
            },
            "scope": 64488,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64382,
            "nodeType": "FunctionDefinition",
            "src": "14376:64:198",
            "nodes": [],
            "documentation": {
              "id": 64375,
              "nodeType": "StructuredDocumentation",
              "src": "14009:362:198",
              "text": "@dev Executes a batch of transactions within a Multicall, to manage an existing account\n  - Wraps ETH and sends it back to msg.sender, if value > 0\n  - Executes the Multicall\n  - Performs a fullCollateralCheck to verify that hf > 1 after all actions\n @param calls The array of MultiCall structs encoding the operations to execute."
            },
            "functionSelector": "caa5c23f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "multicall",
            "nameLocation": "14385:9:198",
            "parameters": {
              "id": 64380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64379,
                  "mutability": "mutable",
                  "name": "calls",
                  "nameLocation": "14416:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64382,
                  "src": "14395:26:198",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_MultiCall_$66256_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct MultiCall[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 64377,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 64376,
                        "name": "MultiCall",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 66256,
                        "src": "14395:9:198"
                      },
                      "referencedDeclaration": 66256,
                      "src": "14395:9:198",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MultiCall_$66256_storage_ptr",
                        "typeString": "struct MultiCall"
                      }
                    },
                    "id": 64378,
                    "nodeType": "ArrayTypeName",
                    "src": "14395:11:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_MultiCall_$66256_storage_$dyn_storage_ptr",
                      "typeString": "struct MultiCall[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14394:28:198"
            },
            "returnParameters": {
              "id": 64381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14439:0:198"
            },
            "scope": 64488,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64390,
            "nodeType": "FunctionDefinition",
            "src": "14556:79:198",
            "nodes": [],
            "documentation": {
              "id": 64383,
              "nodeType": "StructuredDocumentation",
              "src": "14446:105:198",
              "text": "@dev Returns true if the borrower has an open Credit Account\n @param borrower Borrower address"
            },
            "functionSelector": "256ac915",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "hasOpenedCreditAccount",
            "nameLocation": "14565:22:198",
            "parameters": {
              "id": 64386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64385,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "14596:8:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64390,
                  "src": "14588:16:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14588:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14587:18:198"
            },
            "returnParameters": {
              "id": 64389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64388,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64390,
                  "src": "14629:4:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64387,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14629:4:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14628:6:198"
            },
            "scope": 64488,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64400,
            "nodeType": "FunctionDefinition",
            "src": "14920:81:198",
            "nodes": [],
            "documentation": {
              "id": 64391,
              "nodeType": "StructuredDocumentation",
              "src": "14641:274:198",
              "text": "@dev Sets token allowance from msg.sender's Credit Account to a connected target contract\n @param targetContract Contract to set allowance to. Cannot be in the list of upgradeable contracts\n @param token Token address\n @param amount Allowance amount"
            },
            "functionSelector": "e1f21c67",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "14929:7:198",
            "parameters": {
              "id": 64398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64393,
                  "mutability": "mutable",
                  "name": "targetContract",
                  "nameLocation": "14945:14:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64400,
                  "src": "14937:22:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14937:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64395,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "14969:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64400,
                  "src": "14961:13:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14961:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64397,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "14984:6:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64400,
                  "src": "14976:14:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14976:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14936:55:198"
            },
            "returnParameters": {
              "id": 64399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15000:0:198"
            },
            "scope": 64488,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64408,
            "nodeType": "FunctionDefinition",
            "src": "15225:67:198",
            "nodes": [],
            "documentation": {
              "id": 64401,
              "nodeType": "StructuredDocumentation",
              "src": "15007:213:198",
              "text": "@dev Approves account transfer from another user to msg.sender\n @param from Address for which account transfers are allowed/forbidden\n @param state True is transfer is allowed, false if forbidden"
            },
            "functionSelector": "00842b57",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approveAccountTransfer",
            "nameLocation": "15234:22:198",
            "parameters": {
              "id": 64406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64403,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15265:4:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64408,
                  "src": "15257:12:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64402,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15257:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64405,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "15276:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64408,
                  "src": "15271:10:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64404,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15271:4:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15256:26:198"
            },
            "returnParameters": {
              "id": 64407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15291:0:198"
            },
            "scope": 64488,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64414,
            "nodeType": "FunctionDefinition",
            "src": "15430:45:198",
            "nodes": [],
            "documentation": {
              "id": 64409,
              "nodeType": "StructuredDocumentation",
              "src": "15298:127:198",
              "text": "@dev Enables token in enabledTokenMask for the Credit Account of msg.sender\n @param token Address of token to enable"
            },
            "functionSelector": "c690908a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "enableToken",
            "nameLocation": "15439:11:198",
            "parameters": {
              "id": 64412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64411,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "15459:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64414,
                  "src": "15451:13:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15451:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15450:15:198"
            },
            "returnParameters": {
              "id": 64413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15474:0:198"
            },
            "scope": 64488,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64420,
            "nodeType": "FunctionDefinition",
            "src": "15841:55:198",
            "nodes": [],
            "documentation": {
              "id": 64415,
              "nodeType": "StructuredDocumentation",
              "src": "15481:355:198",
              "text": "@dev Transfers credit account to another user\n By default, this action is forbidden, and the user has to approve transfers from sender to itself\n by calling approveAccountTransfer.\n This is done to prevent malicious actors from transferring compromised accounts to other users.\n @param to Address to transfer the account to"
            },
            "functionSelector": "5019e20a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferAccountOwnership",
            "nameLocation": "15850:24:198",
            "parameters": {
              "id": 64418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64417,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15883:2:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64420,
                  "src": "15875:10:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15875:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15874:12:198"
            },
            "returnParameters": {
              "id": 64419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15895:0:198"
            },
            "scope": 64488,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64430,
            "nodeType": "FunctionDefinition",
            "src": "16212:98:198",
            "nodes": [],
            "documentation": {
              "id": 64421,
              "nodeType": "StructuredDocumentation",
              "src": "15932:275:198",
              "text": "@dev Calculates total value for provided Credit Account in underlying\n @param creditAccount Credit Account address\n @return total Total value in underlying\n @return twv Total weighted (discounted by liquidation thresholds) value in underlying"
            },
            "functionSelector": "c7de38a6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calcTotalValue",
            "nameLocation": "16221:14:198",
            "parameters": {
              "id": 64424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64423,
                  "mutability": "mutable",
                  "name": "creditAccount",
                  "nameLocation": "16244:13:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64430,
                  "src": "16236:21:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16236:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16235:23:198"
            },
            "returnParameters": {
              "id": 64429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64426,
                  "mutability": "mutable",
                  "name": "total",
                  "nameLocation": "16290:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64430,
                  "src": "16282:13:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16282:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64428,
                  "mutability": "mutable",
                  "name": "twv",
                  "nameLocation": "16305:3:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64430,
                  "src": "16297:11:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16297:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16281:28:198"
            },
            "scope": 64488,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64438,
            "nodeType": "FunctionDefinition",
            "src": "16811:97:198",
            "nodes": [],
            "documentation": {
              "id": 64431,
              "nodeType": "StructuredDocumentation",
              "src": "16316:490:198",
              "text": " @dev Calculates health factor for the credit account\n          sum(asset[i] * liquidation threshold[i])\n   Hf = --------------------------------------------\n         borrowed amount + interest accrued + fees\n More info: https://dev.gearbox.fi/developers/credit/economy#health-factor\n @param creditAccount Credit account address\n @return hf = Health factor in bp (see PERCENTAGE FACTOR in PercentageMath.sol)"
            },
            "functionSelector": "dfd59465",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calcCreditAccountHealthFactor",
            "nameLocation": "16820:29:198",
            "parameters": {
              "id": 64434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64433,
                  "mutability": "mutable",
                  "name": "creditAccount",
                  "nameLocation": "16858:13:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64438,
                  "src": "16850:21:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16850:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16849:23:198"
            },
            "returnParameters": {
              "id": 64437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64436,
                  "mutability": "mutable",
                  "name": "hf",
                  "nameLocation": "16904:2:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64438,
                  "src": "16896:10:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16896:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16895:12:198"
            },
            "scope": 64488,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64446,
            "nodeType": "FunctionDefinition",
            "src": "17061:68:198",
            "nodes": [],
            "documentation": {
              "id": 64439,
              "nodeType": "StructuredDocumentation",
              "src": "16914:142:198",
              "text": "@dev Returns true if token is a collateral token and is not forbidden,\n otherwise returns false\n @param token Token to check"
            },
            "functionSelector": "f9eaee0d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isTokenAllowed",
            "nameLocation": "17070:14:198",
            "parameters": {
              "id": 64442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64441,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "17093:5:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64446,
                  "src": "17085:13:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17085:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17084:15:198"
            },
            "returnParameters": {
              "id": 64445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64444,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64446,
                  "src": "17123:4:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64443,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17123:4:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17122:6:198"
            },
            "scope": 64488,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64453,
            "nodeType": "FunctionDefinition",
            "src": "17206:66:198",
            "nodes": [],
            "documentation": {
              "id": 64447,
              "nodeType": "StructuredDocumentation",
              "src": "17135:66:198",
              "text": "@dev Returns the CreditManager connected to this Credit Facade"
            },
            "functionSelector": "c12c21c0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "creditManager",
            "nameLocation": "17215:13:198",
            "parameters": {
              "id": 64448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17228:2:198"
            },
            "returnParameters": {
              "id": 64452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64451,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64453,
                  "src": "17254:16:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICreditManagerV2_$65201",
                    "typeString": "contract ICreditManagerV2"
                  },
                  "typeName": {
                    "id": 64450,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 64449,
                      "name": "ICreditManagerV2",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 65201,
                      "src": "17254:16:198"
                    },
                    "referencedDeclaration": 65201,
                    "src": "17254:16:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICreditManagerV2_$65201",
                      "typeString": "contract ICreditManagerV2"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17253:18:198"
            },
            "scope": 64488,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64463,
            "nodeType": "FunctionDefinition",
            "src": "17477:81:198",
            "nodes": [],
            "documentation": {
              "id": 64454,
              "nodeType": "StructuredDocumentation",
              "src": "17278:194:198",
              "text": "@dev Returns true if 'from' is allowed to transfer Credit Accounts to 'to'\n @param from Sender address to check allowance for\n @param to Receiver address to check allowance for"
            },
            "functionSelector": "d9ccbec1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfersAllowed",
            "nameLocation": "17486:16:198",
            "parameters": {
              "id": 64459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64456,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "17511:4:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64463,
                  "src": "17503:12:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17503:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64458,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "17525:2:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64463,
                  "src": "17517:10:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64457,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17517:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17502:26:198"
            },
            "returnParameters": {
              "id": 64462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64461,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64463,
                  "src": "17552:4:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64460,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17552:4:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17551:6:198"
            },
            "scope": 64488,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64473,
            "nodeType": "FunctionDefinition",
            "src": "17838:153:198",
            "nodes": [],
            "documentation": {
              "id": 64464,
              "nodeType": "StructuredDocumentation",
              "src": "17564:269:198",
              "text": "@return maxBorrowedAmountPerBlock Maximal amount of new debt that can be taken per block\n @return isIncreaseDebtForbidden True if increasing debt is forbidden\n @return expirationDate Timestamp of the next expiration (for expirable Credit Facades only)"
            },
            "functionSelector": "cff0ab96",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "params",
            "nameLocation": "17847:6:198",
            "parameters": {
              "id": 64465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17853:2:198"
            },
            "returnParameters": {
              "id": 64472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64467,
                  "mutability": "mutable",
                  "name": "maxBorrowedAmountPerBlock",
                  "nameLocation": "17911:25:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64473,
                  "src": "17903:33:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 64466,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "17903:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64469,
                  "mutability": "mutable",
                  "name": "isIncreaseDebtForbidden",
                  "nameLocation": "17943:23:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64473,
                  "src": "17938:28:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 64468,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17938:4:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64471,
                  "mutability": "mutable",
                  "name": "expirationDate",
                  "nameLocation": "17975:14:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64473,
                  "src": "17968:21:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 64470,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "17968:6:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17902:88:198"
            },
            "scope": 64488,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64481,
            "nodeType": "FunctionDefinition",
            "src": "18151:95:198",
            "nodes": [],
            "documentation": {
              "id": 64474,
              "nodeType": "StructuredDocumentation",
              "src": "17997:149:198",
              "text": "@return minBorrowedAmount Minimal borrowed amount per credit account\n @return maxBorrowedAmount Maximal borrowed amount per credit account"
            },
            "functionSelector": "860aefcf",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "limits",
            "nameLocation": "18160:6:198",
            "parameters": {
              "id": 64475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18166:2:198"
            },
            "returnParameters": {
              "id": 64480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64477,
                  "mutability": "mutable",
                  "name": "minBorrowedAmount",
                  "nameLocation": "18200:17:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64481,
                  "src": "18192:25:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 64476,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "18192:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64479,
                  "mutability": "mutable",
                  "name": "maxBorrowedAmount",
                  "nameLocation": "18227:17:198",
                  "nodeType": "VariableDeclaration",
                  "scope": 64481,
                  "src": "18219:25:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 64478,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "18219:7:198",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18191:54:198"
            },
            "scope": 64488,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64487,
            "nodeType": "FunctionDefinition",
            "src": "18341:52:198",
            "nodes": [],
            "documentation": {
              "id": 64482,
              "nodeType": "StructuredDocumentation",
              "src": "18252:84:198",
              "text": "@dev Address of the DegenNFT that gatekeeps account openings in whitelisted mode"
            },
            "functionSelector": "9408b63f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "degenNFT",
            "nameLocation": "18350:8:198",
            "parameters": {
              "id": 64483,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18358:2:198"
            },
            "returnParameters": {
              "id": 64486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64485,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64487,
                  "src": "18384:7:198",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18384:7:198",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18383:9:198"
            },
            "scope": 64488,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 64275,
              "name": "ICreditFacadeEvents",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64218,
              "src": "6232:19:198"
            },
            "id": 64276,
            "nodeType": "InheritanceSpecifier",
            "src": "6232:19:198"
          },
          {
            "baseName": {
              "id": 64277,
              "name": "ICreditFacadeExceptions",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64274,
              "src": "6253:23:198"
            },
            "id": 64278,
            "nodeType": "InheritanceSpecifier",
            "src": "6253:23:198"
          },
          {
            "baseName": {
              "id": 64279,
              "name": "IVersion",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 65465,
              "src": "6278:8:198"
            },
            "id": 64280,
            "nodeType": "InheritanceSpecifier",
            "src": "6278:8:198"
          }
        ],
        "canonicalName": "ICreditFacade",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          64488,
          65465,
          64274,
          64852,
          64218
        ],
        "name": "ICreditFacade",
        "nameLocation": "6215:13:198",
        "scope": 64489,
        "usedErrors": [
          64223,
          64226,
          64229,
          64232,
          64235,
          64238,
          64241,
          64244,
          64247,
          64250,
          64253,
          64256,
          64259,
          64264,
          64267,
          64270,
          64273,
          64815,
          64818,
          64821,
          64824,
          64827,
          64830,
          64833,
          64836,
          64839,
          64842,
          64845,
          64848,
          64851
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 198
}