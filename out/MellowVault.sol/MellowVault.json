{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nft_",
          "type": "uint256"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "Pull",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "Push",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "ReclaimTokens",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "externalCall",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft_",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20RootVault",
          "name": "vault_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magicValue",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "isVaultToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        }
      ],
      "name": "pull",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pullExistentials",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        }
      ],
      "name": "push",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "reclaimTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        }
      ],
      "name": "transferAndPush",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tvl",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "minTokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "maxTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "contract IERC20RootVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultGovernance",
      "outputs": [
        {
          "internalType": "contract IVaultGovernance",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "329:3700:468:-:0;;;;;;;;;;;;-1:-1:-1;1716:1:32;1821:7;:22;-1:-1:-1;;1696:4:476;:24;329:3700:468;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "329:3700:468:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1603:306:465;;;;;;;;;;-1:-1:-1;1603:306:465;;;;;:::i;:::-;;:::i;:::-;;;565:14:488;;558:22;540:41;;528:2;513:18;1603:306:465;;;;;;;;5321:1203;;;;;;;;;;-1:-1:-1;5321:1203:465;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1825:85:476:-;;;;;;;;;;-1:-1:-1;1894:4:476;;:9;;1825:85;;6559:1122:465;;;;;;;;;;-1:-1:-1;6559:1122:465;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;4219:33:488;;;4201:52;;4189:2;4174:18;6559:1122:465;4057:202:488;3829:1448:465;;;;;;;;;;-1:-1:-1;3829:1448:465;;;;;:::i;:::-;;:::i;3017:768::-;;;;;;;;;;-1:-1:-1;3017:768:465;;;;;:::i;:::-;;:::i;7725:995::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1943:117:476:-;;;;;;;;;;-1:-1:-1;1943:117:476;;;;;:::i;:::-;-1:-1:-1;;;;;2024:24:476;2001:4;2024:24;;;:17;:24;;;;;;:29;;;1943:117;2367:75;;;;;;;;;;-1:-1:-1;2431:4:476;;2367:75;;7880:25:488;;;7868:2;7853:18;2367:75:476;7734:177:488;1254:556:468;;;;;;;;;;-1:-1:-1;1254:556:468;;;;;:::i;:::-;;:::i;:::-;;2022:951:465;;;;;;;;;;-1:-1:-1;2022:951:465;;;;;:::i;:::-;;:::i;2234:100:476:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2620:110::-;;;;;;;;;;;;;:::i;583:563:468:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;456:28::-;;;;;;;;;;-1:-1:-1;456:28:468;;;;-1:-1:-1;;;;;456:28:468;;;;;;-1:-1:-1;;;;;10686:32:488;;;10668:51;;10656:2;10641:18;456:28:468;10497:228:488;2093:108:476;;;;;;;;;;-1:-1:-1;2178:16:476;;-1:-1:-1;;;;;2178:16:476;2093:108;;1603:306:465;1704:4;1739:36;1763:11;1739:23;:36::i;:::-;:104;;;-1:-1:-1;;;;;;;1792:50:465;;-1:-1:-1;;;1792:50:465;1739:104;:163;;;-1:-1:-1;;;;;;;1860:41:465;;-1:-1:-1;;;1860:41:465;1739:163;1720:182;1603:306;-1:-1:-1;;1603:306:465:o;5321:1203::-;5422:35;2261:21:32;:19;:21::i;:::-;5484:4:465::1;::::0;;5517:22:::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;;5517:22:465::1;::::0;::::1;::::0;5484:4;5506:9;5498:42:::1;;;;-1:-1:-1::0;;;5498:42:465::1;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;5598:16:465::1;::::0;:33:::1;::::0;;-1:-1:-1;;;5598:33:465;;;;5550:45:::1;::::0;-1:-1:-1;;;;;5598:16:465::1;::::0;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:16;:33;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5674:25:::0;;5735:15:::1;::::0;::::1;::::0;5776:22:::1;::::0;-1:-1:-1;;;5776:22:465;;::::1;::::0;::::1;7880:25:488::0;;;5674::465;;-1:-1:-1;5674:25:465;;5641:30:::1;::::0;-1:-1:-1;;;;;5776:16:465;::::1;::::0;::::1;::::0;7853:18:488;;5776:22:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5760:38;;5808:10;5821:28;5827:8;5837:4;5843:5;5821;:28::i;:::-;:42;::::0;-1:-1:-1;;;5821:42:465;;5861:1:::1;5821:42;::::0;::::1;7880:25:488::0;-1:-1:-1;;;;;5821:39:465;;;::::1;::::0;::::1;::::0;7853:18:488;;5821:42:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5808:55;;5908:6;:13;-1:-1:-1::0;;;;;5894:28:465::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;5894:28:465::1;-1:-1:-1::0;5873:49:465;-1:-1:-1;;;;;;5936:19:465;::::1;5950:4;5936:19;5932:75;;;5971:25;;;;;;;;5932:75;6021:9;6016:442;6040:6;:13;6036:1;:17;6016:442;;;6095:30;6115:6;6122:1;6115:9;;;;;;;;:::i;:::-;;;;;;;6095:19;:30::i;:::-;:123;;;;6146:10;-1:-1:-1::0;;;;;6146:24:465::1;;6171:6;6178:1;6171:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;6146:72:::1;::::0;-1:-1:-1;;;;;;6146:72:465::1;::::0;;;;;;-1:-1:-1;;;;;12740:32:488;;;6146:72:465::1;::::0;::::1;12722:51:488::0;402:1:362::1;12789:18:488::0;;;12782:45;12695:18;;6146:72:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6145:73;6095:123;6074:200;;;6251:8;;6074:200;6287:12;6309:6;6316:1;6309:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;6357:30:::1;::::0;-1:-1:-1;;;6357:30:465;;6381:4:::1;6357:30;::::0;::::1;10668:51:488::0;6309:9:465;;-1:-1:-1;;;;;;6357:15:465;::::1;::::0;::::1;::::0;10641:18:488;;6357:30:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6333:18;6352:1;6333:21;;;;;;;;:::i;:::-;;;;;;:54;;;::::0;::::1;6402:45;6421:2;6425:18;6444:1;6425:21;;;;;;;;:::i;:::-;;;;;;;6402:5;-1:-1:-1::0;;;;;6402:18:465::1;;;:45;;;;;:::i;:::-;6060:398;6016:442;6055:3;::::0;::::1;:::i;:::-;;;6016:442;;;;6472:45;6486:2;6490:6;6498:18;6472:45;;;;;;;;:::i;:::-;;;;;;;;5459:1065;;;;;;2292:1:32;2303:20:::0;1716:1;2809:7;:22;2629:209;2303:20;5321:1203:465;;;:::o;6559:1122::-;6648:17;6677:45;6725:16;;;;;;;;;-1:-1:-1;;;;;6725:16:465;-1:-1:-1;;;;;6725:31:465;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6794:15;;;;6860:25;;6910:4;;6677:81;;-1:-1:-1;6794:15:465;;6928:9;6924:57;;-1:-1:-1;;;;;;;6953:17:465;-1:-1:-1;6953:17:465;;-1:-1:-1;;;6953:17:465;6924:57;7009:26;;-1:-1:-1;;;7009:26:465;;;;;7880:25:488;;;6990:16:465;;-1:-1:-1;;;;;7009:20:465;;;;;7853:18:488;;7009:26:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7050:81;;-1:-1:-1;;;7050:81:465;;-1:-1:-1;;;;;12740:32:488;;;7050:81:465;;;12722:51:488;860:1:362;12789:18:488;;;12782:45;6990::465;;-1:-1:-1;7050:32:465;;;;;;12695:18:488;;7050:81:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7045:130;;-1:-1:-1;;;;;;;7147:17:465;-1:-1:-1;7147:17:465;;-1:-1:-1;;;;7147:17:465;7045:130;7236:21;;7280:8;;;;7276:257;;7308:63;;-1:-1:-1;;;7308:63:465;;-1:-1:-1;;;7308:63:465;;;4201:52:488;-1:-1:-1;;;;;7308:35:465;;;;;4174:18:488;;7308:63:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7304:219;;;7398:54;;-1:-1:-1;;;7398:54:465;;-1:-1:-1;;;;;7398:35:465;;;;;:54;;7434:5;;7441:10;;7398:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7391:61;;;;;;;;;;7304:219;-1:-1:-1;;;;;;;7491:17:465;-1:-1:-1;7491:17:465;;-1:-1:-1;;;;;7491:17:465;7304:219;7596:8;-1:-1:-1;;;;;7546:58:465;:46;7574:5;7581:10;7546:27;:46::i;:::-;-1:-1:-1;;;;;7546:58:465;;7542:106;;;-1:-1:-1;;;;7620:17:465;-1:-1:-1;7620:17:465;;-1:-1:-1;;;;;7620:17:465;7542:106;-1:-1:-1;;;;;;;7657:17:465;6559:1122;-1:-1:-1;;;;;;;;6559:1122:465:o;3829:1448::-;4002:35;2261:21:32;:19;:21::i;:::-;4064:4:465::1;::::0;;4097:22:::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;;4097:22:465::1;::::0;::::1;::::0;4064:4;4086:9;4078:42:::1;;;;-1:-1:-1::0;;;4078:42:465::1;;;;;;;;:::i;:::-;;4138:30;4157:10;4138:18;:30::i;:::-;4170:27;;;;;;;;;;;;;-1:-1:-1::0;;;4170:27:465::1;;::::0;4130:68:::1;;;;;-1:-1:-1::0;;;4130:68:465::1;;;;;;;;:::i;:::-;-1:-1:-1::0;4271:16:465::1;::::0;:33:::1;::::0;;-1:-1:-1;;;4271:33:465;;;;4245:23:::1;::::0;-1:-1:-1;;;;;4271:16:465::1;::::0;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:16;:33;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;::::0;4339:22:::1;::::0;-1:-1:-1;;;4339:22:465;;::::1;::::0;::::1;7880:25:488::0;;;4271:42:465;;-1:-1:-1;4323:13:465::1;::::0;-1:-1:-1;;;;;4339:16:465;::::1;::::0;::::1;::::0;7853:18:488;;4339:22:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4323:38;;4371:15;4389:28;4395:8;4405:4;4411:5;4389;:28::i;:::-;4371:46:::0;-1:-1:-1;;;;;;4431:19:465;::::1;4440:10;4431:19;4427:522;;4486:18;::::0;-1:-1:-1;;;4486:18:465;;4466:17:::1;4486:18;::::0;::::1;7880:25:488::0;;;4466:17:465;-1:-1:-1;;;;;4486:15:465;::::1;::::0;::::1;::::0;7853:18:488;;4486::465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4466:38:::0;-1:-1:-1;;;;;;4522:26:465;::::1;4543:4;4522:26;4518:421;;;4660:24;::::0;-1:-1:-1;;;4660:24:465;;-1:-1:-1;;;;;10686:32:488;;;4660:24:465::1;::::0;::::1;10668:51:488::0;4643:16:465;;::::1;::::0;::::1;::::0;4660:20;::::1;::::0;::::1;::::0;10641:18:488;;4660:24:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4643:42;;;;;;;;;;;;;7880:25:488::0;;7868:2;7853:18;;7734:177;4643:42:465::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;;;-1:-1:-1::0;;;;;;4689:19:465;::::1;4703:4;4689:19;;4643:65;4730:32;;;;;;;;;;;;;-1:-1:-1::0;;;4730:32:465::1;;::::0;4614:166:::1;;;;;-1:-1:-1::0;;;4614:166:465::1;;;;;;;;:::i;:::-;;4518:421;;;4887:2;-1:-1:-1::0;;;;;4874:15:465::1;:9;-1:-1:-1::0;;;;;4874:15:465::1;;4891:32;;;;;;;;;;;;;-1:-1:-1::0;;;4891:32:465::1;;::::0;4866:58:::1;;;;;-1:-1:-1::0;;;4866:58:465::1;;;;;;;;:::i;:::-;;4518:421;4452:497;4427:522;4958:30;4991:47;5017:6;5025:12;4991:25;:47::i;:::-;4958:80;;5048:36;5087:33;5093:2;5097:13;5112:7;5087:5;:33::i;:::-;5048:72;;5151:76;5185:6;5193:12;5151:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;5151:76:465::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;5207:19;5151:33;:76::i;:::-;5130:97;;5242:28;5247:2;5251:18;5242:28;;;;;;;:::i;:::-;;;;;;;;4039:1238;;;;;;2303:20:32::0;1716:1;2809:7;:22;2629:209;2303:20;3829:1448:465;;;;;;:::o;3017:768::-;3251:13;;3190:35;;3237:11;3274:177;3298:3;3294:1;:7;3274:177;;;3324:12;3337:1;3324:15;;;;;;;;:::i;:::-;;;;;;;3343:1;3324:20;3320:131;;3364:72;3399:4;3413;3420:12;3433:1;3420:15;;;;;;;;:::i;:::-;;;;;;;3371:6;3378:1;3371:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3364:34:465;;;:72;;;;;;:::i;:::-;3303:3;;;:::i;:::-;;;3274:177;;;;3482:35;3487:6;3495:12;3509:7;3482:4;:35::i;:::-;3461:56;;3532:9;3527:252;3551:6;:13;3547:1;:17;3527:252;;;3585:16;3628:12;3641:1;3628:15;;;;;;;;:::i;:::-;;;;;;;3604:18;3623:1;3604:21;;;;;;;;:::i;:::-;;;;;;;:39;:85;;3688:1;3604:85;;;3664:18;3683:1;3664:21;;;;;;;;:::i;:::-;;;;;;;3646:12;3659:1;3646:15;;;;;;;;:::i;:::-;;;;;;;:39;;;;:::i;:::-;3585:104;-1:-1:-1;3707:13:465;;3703:65;;3722:46;3753:4;3759:8;3729:6;3736:1;3729:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3722:30:465;;;:46;;;;;:::i;:::-;-1:-1:-1;3566:3:465;;;:::i;:::-;;;3527:252;;;;3227:558;3017:768;;;;;;:::o;7725:995::-;7866:19;2261:21:32;:19;:21::i;:::-;7905:4:465::1;::::0;;7916:22:::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;;7916:22:465::1;::::0;::::1;::::0;7897:42:::1;;;;-1:-1:-1::0;;;7897:42:465::1;;;;;;;;:::i;:::-;;7957:30;7976:10;7957:18;:30::i;:::-;7989:27;;;;;;;;;;;;;-1:-1:-1::0;;;7989:27:465::1;;::::0;7949:68:::1;;;;;-1:-1:-1::0;;;7949:68:465::1;;;;;;;;:::i;:::-;-1:-1:-1::0;8068:16:465::1;::::0;:33:::1;::::0;;-1:-1:-1;;;8068:33:465;;;;8027:38:::1;::::0;-1:-1:-1;;;;;8068:16:465::1;::::0;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:16;:33;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52:::0;8164:33:::1;::::0;-1:-1:-1;;;8164:33:465;;-1:-1:-1;;;;;10686:32:488;;;8164:33:465::1;::::0;::::1;10668:51:488::0;8068:52:465;;-1:-1:-1;8068:52:465::1;::::0;8164:29;::::1;::::0;::::1;::::0;10641:18:488;;8164:33:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8250:27;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;8250:27:465::1;::::0;::::1;::::0;8130:68;;-1:-1:-1;;;;;;8216:32:465;::::1;8208:70;;;;-1:-1:-1::0;;;8208:70:465::1;;;;;;;;:::i;:::-;-1:-1:-1::0;8288:61:465::1;::::0;-1:-1:-1;;;8288:61:465;;-1:-1:-1;;;;;8288:18:465;::::1;::::0;::::1;::::0;:61:::1;::::0;8307:10:::1;::::0;8319:2;;8323:9:::1;::::0;8334:8;;8344:4;;;;8288:61:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8360:8;8370:23:::0;8397:2:::1;-1:-1:-1::0;;;;;8397:7:465::1;8412:9;8440:8;8450:4;;8423:32;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;8423:32:465;;::::1;::::0;;;;;;;8397:59:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8359:97;;;;8471:3;8466:219;;8546:10;8540:17;8645:15;8632:10;8628:2;8624:19;8617:44;8466:219;1716:1:32::0;2809:7;:22;8703:10:465;-1:-1:-1;2303:20:32;;-1:-1:-1;;;2629:209:32;1254:556:468;1362:31;1374:12;1388:4;1362:11;:31::i;:::-;1403:24;1430:6;-1:-1:-1;;;;;1430:18:468;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1430:20:468;;;;;;;;;;;;:::i;:::-;1403:47;;1465:9;1460:146;1484:12;:19;1480:1;:23;1460:146;;;1546:12;1559:1;1546:15;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1532:29:468;:7;1540:1;1532:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1532:29:468;;1563:31;;;;;;;;;;;;;-1:-1:-1;;;1563:31:468;;;1524:71;;;;;-1:-1:-1;;;1524:71:468;;;;;;;;:::i;:::-;-1:-1:-1;1505:3:468;;;;:::i;:::-;;;;1460:146;;;-1:-1:-1;1641:16:468;;:33;;;-1:-1:-1;;;1641:33:468;;;;1615:23;;-1:-1:-1;;;;;1641:16:468;;:31;;:33;;;;;;;;;;;;;;:16;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;1730:5;;1701:36;;-1:-1:-1;;;1701:36:468;;-1:-1:-1;;;;;1730:5:468;;;1701:36;;;10668:51:488;1641:42:468;;-1:-1:-1;1740:1:468;;1701:20;;;;;;10641:18:488;;1701:36:468;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;1743:35;;;;;;;;;;;;;-1:-1:-1;;;1743:35:468;;;1693:86;;;;;-1:-1:-1;;;1693:86:468;;;;;;;;:::i;:::-;-1:-1:-1;;1789:5:468;:14;;-1:-1:-1;;;;;;1789:14:468;-1:-1:-1;;;;;1789:14:468;;;;;;;;;;;-1:-1:-1;;;1254:556:468:o;2022:951:465:-;2173:35;2261:21:32;:19;:21::i;:::-;2235:4:465::1;::::0;;2268:22:::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;;2268:22:465::1;::::0;::::1;::::0;2235:4;2257:9;2249:42:::1;;;;-1:-1:-1::0;;;2249:42:465::1;;;;;;;;:::i;:::-;-1:-1:-1::0;2332:16:465::1;::::0;:33:::1;::::0;;-1:-1:-1;;;2332:33:465;;;;2301:28:::1;::::0;-1:-1:-1;;;;;2332:16:465::1;::::0;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:16;:33;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;::::0;2411:27:::1;::::0;-1:-1:-1;;;2411:27:465;;::::1;::::0;::::1;7880:25:488::0;;;2332:42:465;;-1:-1:-1;2384:17:465::1;::::0;-1:-1:-1;;;;;2411:21:465;::::1;::::0;::::1;::::0;7853:18:488;;2411:27:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2505:46;::::0;-1:-1:-1;;;2505:46:465;;-1:-1:-1;;;;;10686:32:488;;;2505:46:465::1;::::0;::::1;10668:51:488::0;2384:55:465;;-1:-1:-1;2486:16:465::1;::::0;2505:25;::::1;::::0;::::1;::::0;10641:18:488;;2505:46:465::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2584:27;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;2584:27:465::1;::::0;::::1;::::0;2486:65;;-1:-1:-1;2569:13:465;2561:51:::1;;;;-1:-1:-1::0;;;2561:51:465::1;;;;;;;;:::i;:::-;;2661:30;2694:47;2720:6;2728:12;2694:25;:47::i;:::-;2661:80;;2751:36;2790:29;2796:13;2811:7;2790:5;:29::i;:::-;2751:68;;2850:76;2884:6;2892:12;2850:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;2850:76:465::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;2906:19;2850:33;:76::i;:::-;2829:97;;2941:25;2946:19;2941:25;;;;;;:::i;:::-;;;;;;;;2210:763;;;;;;2303:20:32::0;1716:1;2809:7;:22;2629:209;2303:20;2022:951:465;;;;;:::o;2234:100:476:-;2280:16;2315:12;2308:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2308:19:476;;;;;;;;;;;;;;;;;;;;;;;2234:100;:::o;2620:110::-;2671:16;2706:17;2699:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2620:110;:::o;583:563:468:-;722:5;;755:31;;-1:-1:-1;;;755:31:468;;780:4;755:31;;;10668:51:488;619:32:468;;;;-1:-1:-1;;;;;722:5:468;;;;697:22;;722:5;;755:16;;10641:18:488;;755:31:468;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;737:49;;796:14;813:6;-1:-1:-1;;;;;813:18:468;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;796:37;;880:6;-1:-1:-1;;;;;880:10:468;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;880:12:468;;;;;;;;;;;;:::i;:::-;843:49;;-1:-1:-1;843:49:468;-1:-1:-1;907:9:468;902:238;926:15;:22;922:1;:26;902:238;;;990:52;1006:7;1015:15;1031:1;1015:18;;;;;;;;:::i;:::-;;;;;;;1035:6;990:15;:52::i;:::-;969:15;985:1;969:18;;;;;;;;:::i;:::-;;;;;;:73;;;;;1077:52;1093:7;1102:15;1118:1;1102:18;;;;;;;;:::i;1077:52::-;1056:15;1072:1;1056:18;;;;;;;;:::i;:::-;;;;;;;;;;:73;950:3;;;;:::i;:::-;;;;902:238;;;;687:459;;;583:563;;:::o;2764:213:476:-;2866:4;-1:-1:-1;;;;;;;;;937:40:49;;;2889:81:476;;;-1:-1:-1;;;;;;;2930:39:476;;-1:-1:-1;;;2930:39:476;2882:88;2764:213;-1:-1:-1;;2764:213:476:o;2336:287:32:-;1759:1;2468:7;;:19;;2460:63;;;;-1:-1:-1;;;2460:63:32;;19258:2:488;2460:63:32;;;19240:21:488;19297:2;19277:18;;;19270:30;19336:33;19316:18;;;19309:61;19387:18;;2460:63:32;19056:355:488;2460:63:32;1759:1;2598:7;:18;2336:287::o;9242:301:465:-;9386:31;;-1:-1:-1;;;9386:31:465;;-1:-1:-1;;;;;10686:32:488;;;9386:31:465;;;10668:51:488;9341:10:465;;;;9386:20;;;;;10641:18:488;;9386:31:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9363:54;-1:-1:-1;9436:12:465;;;;;9435:37;;-1:-1:-1;9454:17:465;;;9435:37;9474:22;;;;;;;;;;;;;-1:-1:-1;;;9474:22:465;;;9427:70;;;;;-1:-1:-1;;;9427:70:465;;;;;;;;:::i;:::-;-1:-1:-1;9526:9:465;;9242:301;-1:-1:-1;;;;9242:301:465:o;1884:314:468:-;1960:4;1976:24;2003:5;;;;;;;;;-1:-1:-1;;;;;2003:5:468;-1:-1:-1;;;;;2003:17:468;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2003:19:468;;;;;;;;;;;;:::i;:::-;1976:46;;2037:9;2032:138;2056:7;:14;2052:1;:18;2032:138;;;2109:5;-1:-1:-1;;;;;2095:19:468;:7;2103:1;2095:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2095:19:468;;2091:69;;;-1:-1:-1;2141:4:468;;1884:314;-1:-1:-1;;;1884:314:468:o;2091:69::-;2072:3;;;:::i;:::-;;;2032:138;;;-1:-1:-1;2186:5:468;;1884:314;-1:-1:-1;;;1884:314:468:o;941:175:37:-;1050:58;;-1:-1:-1;;;;;19608:32:488;;1050:58:37;;;19590:51:488;19657:18;;;19650:34;;;1023:86:37;;1043:5;;-1:-1:-1;;;1073:23:37;19563:18:488;;1050:58:37;;;;-1:-1:-1;;1050:58:37;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:37;-1:-1:-1;;;;;;1050:58:37;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;4987:247:360:-;5089:7;5109:9;5120;5131:7;5142:26;5157:10;5142:14;:26::i;:::-;5186:41;;;;;;;;;;;;19922:25:488;;;19995:4;19983:17;;19963:18;;;19956:45;;;;20017:18;;;20010:34;;;20060:18;;;20053:34;;;5108:60:360;;-1:-1:-1;5108:60:360;;-1:-1:-1;5108:60:360;-1:-1:-1;5186:41:360;;19894:19:488;;5186:41:360;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5186:41:360;;-1:-1:-1;;5186:41:360;;;4987:247;-1:-1:-1;;;;;;;4987:247:360:o;9549:337:465:-;9616:4;9632:23;9658:16;;;;;;;;;-1:-1:-1;;;;;9658:16:465;-1:-1:-1;;;;;9658:31:465;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;9725:4;;9658:42;;-1:-1:-1;9743:9:465;9739:52;;-1:-1:-1;9775:5:465;;9549:337;-1:-1:-1;;;9549:337:465:o;9739:52::-;9807:26;;-1:-1:-1;;;9807:26:465;;;;;7880:25:488;;;-1:-1:-1;;;;;9807:36:465;;;;:20;;;;;;7853:18:488;;9807:26:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9807:36:465;;:72;;;-1:-1:-1;9847:22:465;;-1:-1:-1;;;9847:22:465;;;;;7880:25:488;;;-1:-1:-1;;;;;9847:32:465;;;;:16;;;;;;7853:18:488;;9847:22:465;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9847:32:465;;9800:79;9549:337;-1:-1:-1;;;;9549:337:465:o;8791:445::-;8927:30;8977:39;9009:6;8977:31;:39::i;:::-;9018:27;;;;;;;;;;;;;-1:-1:-1;;;9018:27:465;;;8969:77;;;;;-1:-1:-1;;;8969:77:465;;;;;;;;:::i;:::-;;9081:12;:19;9064:6;:13;:36;9102:31;;;;;;;;;;;;;-1:-1:-1;;;9102:31:465;;;9056:78;;;;;-1:-1:-1;;;9056:78:465;;;;;;;;:::i;:::-;;9160:69;9194:12;9160:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9160:69:465;;;;;;;;;;;;;;;;;;;;;9208:6;9216:12;9160:33;:69::i;2926:1101:468:-;3135:5;;3185:32;;3063:35;;-1:-1:-1;;;;;3135:5:468;;3110:22;;3185:32;;;;;;;;;;;;:::i;:::-;3150:67;;3228:23;3257:5;:3;:5::i;:::-;-1:-1:-1;3296:5:468;;:30;;-1:-1:-1;;;3296:30:468;;3320:4;3296:30;;;10668:51:488;3227:35:468;;-1:-1:-1;3272:21:468;;-1:-1:-1;;;;;3296:5:468;;;;:15;;10641:18:488;;3296:30:468;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3272:54;-1:-1:-1;;;3336:21:468;3387:255;3411:12;:19;3407:1;:23;3387:255;;;3451:17;3471:58;3487:13;3502:12;3515:1;3502:15;;;;;;;;:::i;:::-;;;;;;;3519:6;3526:1;3519:9;;;;;;;;:::i;:::-;;;;;;;3471:15;:58::i;:::-;3451:78;;3559:13;3547:9;:25;3543:89;;;3608:9;3592:25;;3543:89;-1:-1:-1;3432:3:468;;;;:::i;:::-;;;;3387:255;;;;3671:13;3655;:29;3651:89;;;-1:-1:-1;3716:13:468;3651:89;3792:5;;:20;;;-1:-1:-1;;;3792:20:468;;;;3750:27;;-1:-1:-1;;;;;3792:5:468;;:18;;:20;;;;;3750:27;;3792:20;;;;;;;:5;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3792:20:468;;;;;;;;;;;;:::i;:::-;:27;-1:-1:-1;;;;;3780:40:468;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3750:70;;3835:9;3830:95;3854:12;:19;3850:1;:23;3830:95;;;3894:20;;;;;;;;;;;;:12;3907:1;3894:15;;;;;;;;:::i;:::-;;;;;;:20;;;;3875:3;;;;:::i;:::-;;;3830:95;;;-1:-1:-1;3955:65:468;;-1:-1:-1;;;3955:65:468;;-1:-1:-1;;;;;3955:15:468;;;;;:65;;3971:2;;3975:13;;3990:15;;4007:12;;3955:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3955:65:468;;;;;;;;;;;;:::i;:::-;3934:86;2926:1101;-1:-1:-1;;;;;;;;;;2926:1101:468:o;1954:948:360:-;2135:16;2163:20;2200:6;:13;-1:-1:-1;;;;;2186:28:360;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2186:28:360;;2163:51;;2224:9;2247:10;2271:518;2283:6;:13;2279:1;:17;2278:52;;;;;2307:15;:22;2302:2;:27;2278:52;2271:518;;;2362:15;2378:2;2362:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2350:31:360;:6;2357:1;2350:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2350:31:360;;2346:433;;;2410:1;2401:3;2405:1;2401:6;;;;;;;;:::i;:::-;;;;;;;;;;:10;2429:3;;;;:::i;:::-;;;;2271:518;;2346:433;2469:15;2485:2;2469:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2457:31:360;:6;2464:1;2457:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2457:31:360;;2453:326;;;2512:21;2534:2;2512:25;;;;;;;;:::i;:::-;;;;;;;2541:1;2512:30;2508:141;;;2566:4;;;;:::i;:::-;;;;2271:518;;2508:141;2617:13;;-1:-1:-1;;;2617:13:360;;21809:2:488;2617:13:360;;;21791:21:488;21848:1;21828:18;;;21821:29;-1:-1:-1;;;21866:18:488;;;21859:33;21909:18;;2617:13:360;21607:326:488;2453::360;2696:21;2718:2;2696:25;;;;;;;;:::i;:::-;;;;;;;2687:3;2691:1;2687:6;;;;;;;;:::i;:::-;;;;;;;;;;:34;2739:3;;;;:::i;:::-;;;;2760:4;;;;;:::i;2271:518::-;2809:6;:13;2805:1;:17;2798:78;;;2847:1;2838:3;2842:1;2838:6;;;;;;;;:::i;:::-;;;;;;;;;;:10;2862:3;;;;:::i;:::-;;;;2798:78;;;-1:-1:-1;2892:3:360;;1954:948;-1:-1:-1;;;;;1954:948:360:o;1355:203:37:-;1482:68;;-1:-1:-1;;;;;22196:15:488;;;1482:68:37;;;22178:34:488;22248:15;;22228:18;;;22221:43;22280:18;;;22273:34;;;1455:96:37;;1475:5;;-1:-1:-1;;;1505:27:37;22113:18:488;;1482:68:37;21938:375:488;1455:96:37;1355:203;;;;:::o;3052:1350:476:-;3153:4;;;3164:22;;;;;;;;;;;;-1:-1:-1;;;3164:22:476;;;;3153:9;3145:42;;;;-1:-1:-1;;;3145:42:476;;;;;;;;:::i;:::-;;3205:45;3237:12;3205:31;:45::i;:::-;3252:27;;;;;;;;;;;;;-1:-1:-1;;;3252:27:476;;;3197:83;;;;;-1:-1:-1;;;3197:83:476;;;;;;;;:::i;:::-;-1:-1:-1;3309:28:476;;;;;;;;;;;;-1:-1:-1;;;3309:28:476;;;;3298:9;3290:48;;;;-1:-1:-1;;;3290:48:476;;;;;;;;:::i;:::-;;3403:30;3453:10;-1:-1:-1;;;;;3436:43:476;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;3531:19;;3436:64;;-1:-1:-1;3531:23:476;;;;:80;;;3581:10;-1:-1:-1;;;;;3581:28:476;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3558:12;:19;:53;;3531:80;3625:31;;;;;;;;;;;;;-1:-1:-1;;;3625:31:476;;;3510:156;;;;;-1:-1:-1;;;3510:156:476;;;;;;;;:::i;:::-;;3681:9;3676:240;3700:12;:19;3696:1;:23;3676:240;;;3765:10;-1:-1:-1;;;;;3765:24:476;;3790:12;3803:1;3790:15;;;;;;;;:::i;:::-;;;;;;;;;;;3765:81;;-1:-1:-1;;;;;;3765:81:476;;;;;;;-1:-1:-1;;;;;12740:32:488;;;3765:81:476;;;12722:51:488;493:1:362;12789:18:488;;;12782:45;12695:18;;3765:81:476;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3864:27;;;;;;;;;;;;;-1:-1:-1;;;3864:27:476;;;3740:165;;;;;-1:-1:-1;;;3740:165:476;;;;;;;;:::i;:::-;-1:-1:-1;3721:3:476;;;;:::i;:::-;;;;3676:240;;;-1:-1:-1;3925:16:476;:47;;-1:-1:-1;;;;;;3925:47:476;3961:10;3925:47;;;3982:27;;;;:12;;:27;;;;;:::i;:::-;-1:-1:-1;4019:4:476;:11;;;4054:12;:19;4040:11;4083:244;4107:3;4103:1;:7;4083:244;;;4175:5;:1;4179;4175:5;:::i;:::-;4131:17;:34;4149:12;4162:1;4149:15;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4131:34:476;-1:-1:-1;;;;;4131:34:476;;;;;;;;;;;;:50;;;;4196:20;4234:12;4247:1;4234:15;;;;;;;;:::i;:::-;;;;;;;4196:54;;4264:17;4313:1;4294:5;-1:-1:-1;;;;;4294:14:476;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:20;;;;:::i;:::-;4287:28;;:2;:28;:::i;:::-;4264:52;;;;;;;-1:-1:-1;4264:52:476;;;;;;;;;;;-1:-1:-1;4112:3:476;;;:::i;:::-;;;4083:244;;;-1:-1:-1;4341:54:476;;4364:10;;4353:9;;4341:54;;;;4376:12;;4390:4;;4341:54;:::i;:::-;;;;;;;;3135:1267;;3052:1350;;:::o;2273:647:468:-;2523:4;2510:18;;2504:25;2390:35;;2437:19;2548:153;2572:12;:19;2568:1;:23;2548:153;;;2666:5;;2674:15;;2612:78;;-1:-1:-1;;;;;2666:5:468;;2674:12;;2687:1;;2674:15;;;;;;:::i;:::-;;;;;;;2619:12;2632:1;2619:15;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2619:15:468;;2612:78;:45;:78::i;:::-;2593:3;;;;:::i;:::-;;;;2548:153;;;-1:-1:-1;2731:5:468;;:44;;-1:-1:-1;;;2731:44:468;;-1:-1:-1;;;;;2731:5:468;;;;:13;;:44;;2745:12;;2759:11;;2731:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2731:44:468;;;;;;;;;;;;:::i;:::-;2710:65;;2790:9;2785:129;2809:12;:19;2805:1;:23;2785:129;;;2893:5;;2856:12;:15;;2849:54;;-1:-1:-1;;;;;2893:5:468;;;;2869:1;;2856:15;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;2856:15:468;;2849:54;:35;:54::i;:::-;2830:3;;;;:::i;:::-;;;;2785:129;;;;2427:493;2273:647;;;;:::o;741:4283:368:-;853:14;;;-1:-1:-1;;1487:1:368;1484;1477:20;1530:1;1527;1523:9;1514:18;;1585:5;1581:2;1578:13;1570:5;1566:2;1562:14;1558:34;1549:43;;;1686:5;1695:1;1686:10;1682:203;;;1738:1;1724:11;:15;1716:24;;;;;;-1:-1:-1;1799:23:368;;;;-1:-1:-1;1857:13:368;;1682:203;2024:5;2010:11;:19;2002:28;;;;;;2331:17;2415:11;2412:1;2409;2402:25;2880:12;2903:20;;;2895:43;;3044:22;;;;;3919:1;3900;:15;;3899:21;;4162:17;;;4158:21;;4151:28;4224:17;;;4220:21;;4213:28;4287:17;;;4283:21;;4276:28;4350:17;;;4346:21;;4339:28;4413:17;;;4409:21;;4402:28;4477:17;;;4473:21;;;4466:28;3456:12;;;;3452:23;;;3477:1;3448:31;2560:20;;;2549:32;;;3515:12;;;;2607:21;;;;3188:16;;;;3506:21;;;;4969:11;;;;;-1:-1:-1;;741:4283:368;;;;;:::o;5196:642:37:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:37;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:37;;25478:2:488;5720:111:37;;;25460:21:488;25517:2;25497:18;;;25490:30;25556:34;25536:18;;;25529:62;-1:-1:-1;;;25607:18:488;;;25600:40;25657:19;;5720:111:37;25276:406:488;5407:322:360;5472:9;5483;5494:7;5521:3;:10;5535:2;5521:16;5539:32;;;;;;;;;;;;;-1:-1:-1;;;5539:32:360;;;5513:59;;;;;-1:-1:-1;;;5513:59:360;;;;;;;;:::i;:::-;-1:-1:-1;;;;5626:2:360;5617:12;;5611:19;5663:2;5654:12;;5648:19;5708:2;5699:12;;;5693:19;5611;;5690:1;5685:28;;;;;5407:322::o;1239:335::-;1314:4;1350:1;1334:6;:13;:17;1330:59;;;-1:-1:-1;1374:4:360;;1239:335;-1:-1:-1;1239:335:360:o;1330:59::-;1403:9;1398:149;1438:1;1422:6;:13;:17;;;;:::i;:::-;1418:1;:21;1398:149;;;1477:6;1484:5;:1;1488;1484:5;:::i;:::-;1477:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1464:26:360;:6;1471:1;1464:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1464:26:360;;1460:77;;-1:-1:-1;1517:5:360;;1239:335;-1:-1:-1;;1239:335:360:o;1460:77::-;1441:3;;;:::i;:::-;;;1398:149;;;-1:-1:-1;1563:4:360;;1239:335;-1:-1:-1;;1239:335:360:o;2582:280:37:-;2701:39;;-1:-1:-1;;;2701:39:37;;2725:4;2701:39;;;25899:34:488;-1:-1:-1;;;;;25969:15:488;;;25949:18;;;25942:43;2678:20:37;;2701:15;;;;;;25834:18:488;;2701:39:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2678:62;-1:-1:-1;2750:105:37;2770:5;-1:-1:-1;;;2824:7:37;2833:20;2848:5;2678:62;2833:20;:::i;:::-;2777:77;;-1:-1:-1;;;;;19608:32:488;;;2777:77:37;;;19590:51:488;19657:18;;;19650:34;19563:18;;2777:77:37;19416:274:488;1818:573:37;2143:10;;;2142:62;;-1:-1:-1;2159:39:37;;-1:-1:-1;;;2159:39:37;;2183:4;2159:39;;;25899:34:488;-1:-1:-1;;;;;25969:15:488;;;25949:18;;;25942:43;2159:15:37;;;;;25834:18:488;;2159:39:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2142:62;2121:163;;;;-1:-1:-1;;;2121:163:37;;26198:2:488;2121:163:37;;;26180:21:488;26237:2;26217:18;;;26210:30;26276:34;26256:18;;;26249:62;-1:-1:-1;;;26327:18:488;;;26320:52;26389:19;;2121:163:37;25996:418:488;2121:163:37;2321:62;;-1:-1:-1;;;;;19608:32:488;;2321:62:37;;;19590:51:488;19657:18;;;19650:34;;;2294:90:37;;2314:5;;-1:-1:-1;;;2344:22:37;19563:18:488;;2321:62:37;19416:274:488;4108:223:43;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:43;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:43:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:17;;7902:286;;-1:-1:-1;;;;;1702:19:43;;;8113:60;;;;-1:-1:-1;;;8113:60:43;;27028:2:488;8113:60:43;;;27010:21:488;27067:2;27047:18;;;27040:30;27106:31;27086:18;;;27079:59;27155:18;;8113:60:43;26826:353:488;8113:60:43;-1:-1:-1;8208:10:43;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:43;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:488;-1:-1:-1;;;;;;88:32:488;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:127::-;653:10;648:3;644:20;641:1;634:31;684:4;681:1;674:15;708:4;705:1;698:15;724:275;795:2;789:9;860:2;841:13;;-1:-1:-1;;837:27:488;825:40;;-1:-1:-1;;;;;880:34:488;;916:22;;;877:62;874:88;;;942:18;;:::i;:::-;978:2;971:22;724:275;;-1:-1:-1;724:275:488:o;1004:183::-;1064:4;-1:-1:-1;;;;;1089:6:488;1086:30;1083:56;;;1119:18;;:::i;:::-;-1:-1:-1;1164:1:488;1160:14;1176:4;1156:25;;1004:183::o;1192:131::-;-1:-1:-1;;;;;1267:31:488;;1257:42;;1247:70;;1313:1;1310;1303:12;1328:737;1382:5;1435:3;1428:4;1420:6;1416:17;1412:27;1402:55;;1453:1;1450;1443:12;1402:55;1489:6;1476:20;1515:4;1539:60;1555:43;1595:2;1555:43;:::i;:::-;1539:60;:::i;:::-;1633:15;;;1719:1;1715:10;;;;1703:23;;1699:32;;;1664:12;;;;1743:15;;;1740:35;;;1771:1;1768;1761:12;1740:35;1807:2;1799:6;1795:15;1819:217;1835:6;1830:3;1827:15;1819:217;;;1915:3;1902:17;1932:31;1957:5;1932:31;:::i;:::-;1976:18;;2014:12;;;;1852;;1819:217;;;-1:-1:-1;2054:5:488;1328:737;-1:-1:-1;;;;;;1328:737:488:o;2070:348::-;2154:6;2207:2;2195:9;2186:7;2182:23;2178:32;2175:52;;;2223:1;2220;2213:12;2175:52;2263:9;2250:23;-1:-1:-1;;;;;2288:6:488;2285:30;2282:50;;;2328:1;2325;2318:12;2282:50;2351:61;2404:7;2395:6;2384:9;2380:22;2351:61;:::i;2423:435::-;2476:3;2514:5;2508:12;2541:6;2536:3;2529:19;2567:4;2596:2;2591:3;2587:12;2580:19;;2633:2;2626:5;2622:14;2654:1;2664:169;2678:6;2675:1;2672:13;2664:169;;;2739:13;;2727:26;;2773:12;;;;2808:15;;;;2700:1;2693:9;2664:169;;;-1:-1:-1;2849:3:488;;2423:435;-1:-1:-1;;;;;2423:435:488:o;2863:261::-;3042:2;3031:9;3024:21;3005:4;3062:56;3114:2;3103:9;3099:18;3091:6;3062:56;:::i;3129:530::-;3171:5;3224:3;3217:4;3209:6;3205:17;3201:27;3191:55;;3242:1;3239;3232:12;3191:55;3278:6;3265:20;-1:-1:-1;;;;;3300:2:488;3297:26;3294:52;;;3326:18;;:::i;:::-;3370:55;3413:2;3394:13;;-1:-1:-1;;3390:27:488;3419:4;3386:38;3370:55;:::i;:::-;3450:2;3441:7;3434:19;3496:3;3489:4;3484:2;3476:6;3472:15;3468:26;3465:35;3462:55;;;3513:1;3510;3503:12;3462:55;3578:2;3571:4;3563:6;3559:17;3552:4;3543:7;3539:18;3526:55;3626:1;3601:16;;;3619:4;3597:27;3590:38;;;;3605:7;3129:530;-1:-1:-1;;;3129:530:488:o;3664:388::-;3741:6;3749;3802:2;3790:9;3781:7;3777:23;3773:32;3770:52;;;3818:1;3815;3808:12;3770:52;3854:9;3841:23;3831:33;;3915:2;3904:9;3900:18;3887:32;-1:-1:-1;;;;;3934:6:488;3931:30;3928:50;;;3974:1;3971;3964:12;3928:50;3997:49;4038:7;4029:6;4018:9;4014:22;3997:49;:::i;:::-;3987:59;;;3664:388;;;;;:::o;4264:662::-;4318:5;4371:3;4364:4;4356:6;4352:17;4348:27;4338:55;;4389:1;4386;4379:12;4338:55;4425:6;4412:20;4451:4;4475:60;4491:43;4531:2;4491:43;:::i;4475:60::-;4569:15;;;4655:1;4651:10;;;;4639:23;;4635:32;;;4600:12;;;;4679:15;;;4676:35;;;4707:1;4704;4697:12;4676:35;4743:2;4735:6;4731:15;4755:142;4771:6;4766:3;4763:15;4755:142;;;4837:17;;4825:30;;4875:12;;;;4788;;4755:142;;4931:929;5076:6;5084;5092;5100;5153:3;5141:9;5132:7;5128:23;5124:33;5121:53;;;5170:1;5167;5160:12;5121:53;5209:9;5196:23;5228:31;5253:5;5228:31;:::i;:::-;5278:5;-1:-1:-1;5334:2:488;5319:18;;5306:32;-1:-1:-1;;;;;5387:14:488;;;5384:34;;;5414:1;5411;5404:12;5384:34;5437:61;5490:7;5481:6;5470:9;5466:22;5437:61;:::i;:::-;5427:71;;5551:2;5540:9;5536:18;5523:32;5507:48;;5580:2;5570:8;5567:16;5564:36;;;5596:1;5593;5586:12;5564:36;5619:63;5674:7;5663:8;5652:9;5648:24;5619:63;:::i;:::-;5609:73;;5735:2;5724:9;5720:18;5707:32;5691:48;;5764:2;5754:8;5751:16;5748:36;;;5780:1;5777;5770:12;5748:36;;5803:51;5846:7;5835:8;5824:9;5820:24;5803:51;:::i;:::-;5793:61;;;4931:929;;;;;;;:::o;5865:865::-;5952:6;5960;5968;5976;6029:2;6017:9;6008:7;6004:23;6000:32;5997:52;;;6045:1;6042;6035:12;5997:52;6084:9;6071:23;6103:31;6128:5;6103:31;:::i;:::-;6153:5;-1:-1:-1;6210:2:488;6195:18;;6182:32;6223;6182;6223;:::i;:::-;6274:7;-1:-1:-1;6332:2:488;6317:18;;6304:32;-1:-1:-1;;;;;6385:14:488;;;6382:34;;;6412:1;6409;6402:12;6382:34;6450:6;6439:9;6435:22;6425:32;;6495:7;6488:4;6484:2;6480:13;6476:27;6466:55;;6517:1;6514;6507:12;6466:55;6557:2;6544:16;6583:2;6575:6;6572:14;6569:34;;;6599:1;6596;6589:12;6569:34;6644:7;6639:2;6630:6;6626:2;6622:15;6618:24;6615:37;6612:57;;;6665:1;6662;6655:12;6612:57;5865:865;;;;-1:-1:-1;;6696:2:488;6688:11;;-1:-1:-1;;;5865:865:488:o;6735:258::-;6807:1;6817:113;6831:6;6828:1;6825:13;6817:113;;;6907:11;;;6901:18;6888:11;;;6881:39;6853:2;6846:10;6817:113;;;6948:6;6945:1;6942:13;6939:48;;;-1:-1:-1;;6983:1:488;6965:16;;6958:27;6735:258::o;6998:257::-;7039:3;7077:5;7071:12;7104:6;7099:3;7092:19;7120:63;7176:6;7169:4;7164:3;7160:14;7153:4;7146:5;7142:16;7120:63;:::i;:::-;7237:2;7216:15;-1:-1:-1;;7212:29:488;7203:39;;;;7244:4;7199:50;;6998:257;-1:-1:-1;;6998:257:488:o;7260:217::-;7407:2;7396:9;7389:21;7370:4;7427:44;7467:2;7456:9;7452:18;7444:6;7427:44;:::i;7482:247::-;7541:6;7594:2;7582:9;7573:7;7569:23;7565:32;7562:52;;;7610:1;7607;7600:12;7562:52;7649:9;7636:23;7668:31;7693:5;7668:31;:::i;7916:576::-;8043:6;8051;8059;8112:2;8100:9;8091:7;8087:23;8083:32;8080:52;;;8128:1;8125;8118:12;8080:52;8164:9;8151:23;8141:33;;8225:2;8214:9;8210:18;8197:32;-1:-1:-1;;;;;8244:6:488;8241:30;8238:50;;;8284:1;8281;8274:12;8238:50;8307:61;8360:7;8351:6;8340:9;8336:22;8307:61;:::i;:::-;8297:71;;;8418:2;8407:9;8403:18;8390:32;8431:31;8456:5;8431:31;:::i;:::-;8481:5;8471:15;;;7916:576;;;;;:::o;8497:793::-;8633:6;8641;8649;8702:2;8690:9;8681:7;8677:23;8673:32;8670:52;;;8718:1;8715;8708:12;8670:52;8758:9;8745:23;-1:-1:-1;;;;;8828:2:488;8820:6;8817:14;8814:34;;;8844:1;8841;8834:12;8814:34;8867:61;8920:7;8911:6;8900:9;8896:22;8867:61;:::i;:::-;8857:71;;8981:2;8970:9;8966:18;8953:32;8937:48;;9010:2;9000:8;8997:16;8994:36;;;9026:1;9023;9016:12;8994:36;9049:63;9104:7;9093:8;9082:9;9078:24;9049:63;:::i;:::-;9039:73;;9165:2;9154:9;9150:18;9137:32;9121:48;;9194:2;9184:8;9181:16;9178:36;;;9210:1;9207;9200:12;9178:36;;9233:51;9276:7;9265:8;9254:9;9250:24;9233:51;:::i;:::-;9223:61;;;8497:793;;;;;:::o;9295:461::-;9348:3;9386:5;9380:12;9413:6;9408:3;9401:19;9439:4;9468:2;9463:3;9459:12;9452:19;;9505:2;9498:5;9494:14;9526:1;9536:195;9550:6;9547:1;9544:13;9536:195;;;9615:13;;-1:-1:-1;;;;;9611:39:488;9599:52;;9671:12;;;;9706:15;;;;9647:1;9565:9;9536:195;;9761:261;9940:2;9929:9;9922:21;9903:4;9960:56;10012:2;10001:9;9997:18;9989:6;9960:56;:::i;10027:465::-;10284:2;10273:9;10266:21;10247:4;10310:56;10362:2;10351:9;10347:18;10339:6;10310:56;:::i;:::-;10414:9;10406:6;10402:22;10397:2;10386:9;10382:18;10375:50;10442:44;10479:6;10471;10442:44;:::i;:::-;10434:52;10027:465;-1:-1:-1;;;;;10027:465:488:o;11188:781::-;11291:6;11344:2;11332:9;11323:7;11319:23;11315:32;11312:52;;;11360:1;11357;11350:12;11312:52;11393:2;11387:9;11435:2;11427:6;11423:15;11504:6;11492:10;11489:22;-1:-1:-1;;;;;11456:10:488;11453:34;11450:62;11447:88;;;11515:18;;:::i;:::-;11551:2;11544:22;11588:16;;11613:31;11588:16;11613:31;:::i;:::-;11653:21;;11719:2;11704:18;;11698:25;11732:33;11698:25;11732:33;:::i;:::-;11793:2;11781:15;;11774:32;11851:2;11836:18;;11830:25;11864:33;11830:25;11864:33;:::i;:::-;11925:2;11913:15;;11906:32;11917:6;11188:781;-1:-1:-1;;;11188:781:488:o;11974:251::-;12044:6;12097:2;12085:9;12076:7;12072:23;12068:32;12065:52;;;12113:1;12110;12103:12;12065:52;12145:9;12139:16;12164:31;12189:5;12164:31;:::i;12420:127::-;12481:10;12476:3;12472:20;12469:1;12462:31;12512:4;12509:1;12502:15;12536:4;12533:1;12526:15;12838:277;12905:6;12958:2;12946:9;12937:7;12933:23;12929:32;12926:52;;;12974:1;12971;12964:12;12926:52;13006:9;13000:16;13059:5;13052:13;13045:21;13038:5;13035:32;13025:60;;13081:1;13078;13071:12;13328:184;13398:6;13451:2;13439:9;13430:7;13426:23;13422:32;13419:52;;;13467:1;13464;13457:12;13419:52;-1:-1:-1;13490:16:488;;13328:184;-1:-1:-1;13328:184:488:o;13517:127::-;13578:10;13573:3;13569:20;13566:1;13559:31;13609:4;13606:1;13599:15;13633:4;13630:1;13623:15;13649:135;13688:3;-1:-1:-1;;13709:17:488;;13706:43;;;13729:18;;:::i;:::-;-1:-1:-1;13776:1:488;13765:13;;13649:135::o;13789:562::-;-1:-1:-1;;;;;14074:32:488;;14056:51;;14143:2;14138;14123:18;;14116:30;;;-1:-1:-1;;14169:56:488;;14206:18;;14198:6;14169:56;:::i;:::-;14273:9;14265:6;14261:22;14256:2;14245:9;14241:18;14234:50;14301:44;14338:6;14330;14301:44;:::i;:::-;14293:52;13789:562;-1:-1:-1;;;;;;13789:562:488:o;14356:288::-;14531:6;14520:9;14513:25;14574:2;14569;14558:9;14554:18;14547:30;14494:4;14594:44;14634:2;14623:9;14619:18;14611:6;14594:44;:::i;14649:249::-;14718:6;14771:2;14759:9;14750:7;14746:23;14742:32;14739:52;;;14787:1;14784;14777:12;14739:52;14819:9;14813:16;14838:30;14862:5;14838:30;:::i;14903:358::-;-1:-1:-1;;;;;15110:32:488;;15092:51;;15179:2;15174;15159:18;;15152:30;;;-1:-1:-1;;15199:56:488;;15236:18;;15228:6;15199:56;:::i;15266:125::-;15306:4;15334:1;15331;15328:8;15325:34;;;15339:18;;:::i;:::-;-1:-1:-1;15376:9:488;;15266:125::o;15396:759::-;-1:-1:-1;;;;;15701:15:488;;;15683:34;;15753:15;;15748:2;15733:18;;15726:43;15800:2;15785:18;;15778:34;;;-1:-1:-1;;;;;;15848:33:488;;15843:2;15828:18;;15821:61;15663:3;15913;15898:19;;15891:32;;;15939:19;;15932:35;;;15626:4;15960:6;16010;16004:3;15989:19;;15976:49;16075:1;16069:3;16060:6;16049:9;16045:22;16041:32;16034:43;16145:3;16138:2;16134:7;16129:2;16121:6;16117:15;16113:29;16102:9;16098:45;16094:55;16086:63;;15396:759;;;;;;;;;:::o;16160:368::-;-1:-1:-1;;;;;;16355:33:488;;16343:46;;16432:6;16424;16420:1;16411:11;;16398:41;16325:3;16462:16;;16480:1;16458:24;16491:13;;;16458:24;16160:368;-1:-1:-1;;16160:368:488:o;16533:274::-;16662:3;16700:6;16694:13;16716:53;16762:6;16757:3;16750:4;16742:6;16738:17;16716:53;:::i;:::-;16785:16;;;;;16533:274;-1:-1:-1;;16533:274:488:o;16812:956::-;16907:6;16938:2;16981;16969:9;16960:7;16956:23;16952:32;16949:52;;;16997:1;16994;16987:12;16949:52;17030:9;17024:16;-1:-1:-1;;;;;17055:6:488;17052:30;17049:50;;;17095:1;17092;17085:12;17049:50;17118:22;;17171:4;17163:13;;17159:27;-1:-1:-1;17149:55:488;;17200:1;17197;17190:12;17149:55;17229:2;17223:9;17252:60;17268:43;17308:2;17268:43;:::i;17252:60::-;17346:15;;;17428:1;17424:10;;;;17416:19;;17412:28;;;17377:12;;;;17452:19;;;17449:39;;;17484:1;17481;17474:12;17449:39;17508:11;;;;17528:210;17544:6;17539:3;17536:15;17528:210;;;17617:3;17611:10;17634:31;17659:5;17634:31;:::i;:::-;17678:18;;17561:12;;;;17716;;;;17528:210;;17773:659;17838:5;17891:3;17884:4;17876:6;17872:17;17868:27;17858:55;;17909:1;17906;17899:12;17858:55;17938:6;17932:13;17964:4;17988:60;18004:43;18044:2;18004:43;:::i;17988:60::-;18082:15;;;18168:1;18164:10;;;;18152:23;;18148:32;;;18113:12;;;;18192:15;;;18189:35;;;18220:1;18217;18210:12;18189:35;18256:2;18248:6;18244:15;18268:135;18284:6;18279:3;18276:15;18268:135;;;18350:10;;18338:23;;18381:12;;;;18301;;18268:135;;18437:614;18566:6;18574;18627:2;18615:9;18606:7;18602:23;18598:32;18595:52;;;18643:1;18640;18633:12;18595:52;18676:9;18670:16;-1:-1:-1;;;;;18746:2:488;18738:6;18735:14;18732:34;;;18762:1;18759;18752:12;18732:34;18785:72;18849:7;18840:6;18829:9;18825:22;18785:72;:::i;:::-;18775:82;;18903:2;18892:9;18888:18;18882:25;18866:41;;18932:2;18922:8;18919:16;18916:36;;;18948:1;18945;18938:12;18916:36;;18971:74;19037:7;19026:8;19015:9;19011:24;18971:74;:::i;20098:363::-;20193:6;20246:2;20234:9;20225:7;20221:23;20217:32;20214:52;;;20262:1;20259;20252:12;20214:52;20295:9;20289:16;-1:-1:-1;;;;;20320:6:488;20317:30;20314:50;;;20360:1;20357;20350:12;20314:50;20383:72;20447:7;20438:6;20427:9;20423:22;20383:72;:::i;20466:1136::-;20826:1;20822;20817:3;20813:11;20809:19;20801:6;20797:32;20786:9;20779:51;20760:4;20849:2;20887:6;20882:2;20871:9;20867:18;20860:34;20930:3;20925:2;20914:9;20910:18;20903:31;20957:57;21009:3;20998:9;20994:19;20986:6;20957:57;:::i;:::-;21050:22;;;21045:2;21030:18;;21023:50;21122:13;;21144:22;;;21182:15;;;;21240:1;21236:14;;;21224:27;;21220:36;;21279:15;;;21312:1;21322:251;21336:6;21333:1;21330:13;21322:251;;;21426:2;21422:7;21413:6;21405;21401:19;21397:33;21392:3;21385:46;21454:39;21486:6;21477;21471:13;21454:39;:::i;:::-;21551:12;;;;21444:49;-1:-1:-1;21516:15:488;;;;21358:1;21351:9;21322:251;;;-1:-1:-1;21590:6:488;;20466:1136;-1:-1:-1;;;;;;;;;;;20466:1136:488:o;22318:128::-;22358:3;22389:1;22385:6;22382:1;22379:13;22376:39;;;22395:18;;:::i;:::-;-1:-1:-1;22431:9:488;;22318:128::o;22451:273::-;22519:6;22572:2;22560:9;22551:7;22547:23;22543:32;22540:52;;;22588:1;22585;22578:12;22540:52;22620:9;22614:16;22670:4;22663:5;22659:16;22652:5;22649:27;22639:55;;22690:1;22687;22680:12;22729:262;22767:1;22801:4;22798:1;22794:12;22825:3;22815:134;;22871:10;22866:3;22862:20;22859:1;22852:31;22906:4;22903:1;22896:15;22934:4;22931:1;22924:15;22815:134;22981:3;22974:4;22971:1;22967:12;22963:22;22958:27;;;22729:262;;;;:::o;22996:422::-;23085:1;23128:5;23085:1;23142:270;23163:7;23153:8;23150:21;23142:270;;;23222:4;23218:1;23214:6;23210:17;23204:4;23201:27;23198:53;;;23231:18;;:::i;:::-;23281:7;23271:8;23267:22;23264:55;;;23301:16;;;;23264:55;23380:22;;;;23340:15;;;;23142:270;;;23146:3;22996:422;;;;;:::o;23423:806::-;23472:5;23502:8;23492:80;;-1:-1:-1;23543:1:488;23557:5;;23492:80;23591:4;23581:76;;-1:-1:-1;23628:1:488;23642:5;;23581:76;23673:4;23691:1;23686:59;;;;23759:1;23754:130;;;;23666:218;;23686:59;23716:1;23707:10;;23730:5;;;23754:130;23791:3;23781:8;23778:17;23775:43;;;23798:18;;:::i;:::-;-1:-1:-1;;23854:1:488;23840:16;;23869:5;;23666:218;;23968:2;23958:8;23955:16;23949:3;23943:4;23940:13;23936:36;23930:2;23920:8;23917:16;23912:2;23906:4;23903:12;23899:35;23896:77;23893:159;;;-1:-1:-1;24005:19:488;;;24037:5;;23893:159;24084:34;24109:8;24103:4;24084:34;:::i;:::-;24154:6;24150:1;24146:6;24142:19;24133:7;24130:32;24127:58;;;24165:18;;:::i;:::-;24203:20;;23423:806;-1:-1:-1;;;23423:806:488:o;24234:140::-;24292:5;24321:47;24362:4;24352:8;24348:19;24342:4;24321:47;:::i;24379:332::-;24586:2;24575:9;24568:21;24549:4;24606:56;24658:2;24647:9;24643:18;24635:6;24606:56;:::i;:::-;24598:64;;24698:6;24693:2;24682:9;24678:18;24671:34;24379:332;;;;;:::o;24716:555::-;25023:2;25012:9;25005:21;24986:4;25049:56;25101:2;25090:9;25086:18;25078:6;25049:56;:::i;:::-;25141:6;25136:2;25125:9;25121:18;25114:34;25196:9;25188:6;25184:22;25179:2;25168:9;25164:18;25157:50;25231:1;25223:6;25216:17;25262:2;25254:6;25250:15;25242:23;;;24716:555;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "externalCall(address,bytes4,bytes)": "2e2f4cc2",
    "initialize(uint256,address[],address)": "52af719f",
    "initialized()": "158ef93e",
    "isValidSignature(bytes32,bytes)": "1626ba7e",
    "isVaultToken(address)": "338c4ccb",
    "nft()": "47ccca02",
    "pull(address,address[],uint256[],bytes)": "2062d754",
    "pullExistentials()": "d2c219b0",
    "push(address[],uint256[],bytes)": "566ca6b4",
    "reclaimTokens(address[])": "05e1c942",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferAndPush(address,address[],uint256[],bytes)": "27a35e5a",
    "tvl()": "e5328e06",
    "vault()": "fbfa77cf",
    "vaultGovernance()": "fe255a5e",
    "vaultTokens()": "69722233"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nft_\",\"type\":\"uint256\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"Pull\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"Push\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"ReclaimTokens\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"externalCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"},{\"internalType\":\"contract IERC20RootVault\",\"name\":\"vault_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isVaultToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"pull\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullExistentials\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"push\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"reclaimTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"transferAndPush\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tvl\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"minTokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"contract IERC20RootVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultGovernance\",\"outputs\":[{\"internalType\":\"contract IVaultGovernance\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"externalCall(address,bytes4,bytes)\":{\"details\":\"Can only be called by Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. Since this method allows sending arbitrary transactions, the destinations of the calls are whitelisted by Protocol Governance.\",\"params\":{\"data\":\"Abi encoded parameters to `to::selector`\",\"selector\":\"Selector of the call\",\"to\":\"Address of the reward pool\"},\"returns\":{\"result\":\"Result of execution of the call\"}},\"initialize(uint256,address[],address)\":{\"details\":\"Can only be initialized by vault governance\",\"params\":{\"nft_\":\"NFT of the vault in the VaultRegistry\",\"rootVault_\":\"Reference to mellow root vault\",\"vaultTokens_\":\"ERC20 tokens that will be managed by this Vault\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided hash MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls\",\"params\":{\"_hash\":\"Hash of the data to be signed\",\"_signature\":\"Signature byte array associated with _hash\"},\"returns\":{\"magicValue\":\"0x1626ba7e if valid, 0xffffffff otherwise\"}},\"isVaultToken(address)\":{\"params\":{\"token\":\"Address of the token to check\"},\"returns\":{\"_0\":\"`true` if this token is managed by Vault\"}},\"pull(address,address[],uint256[],bytes)\":{\"details\":\"Can only be called but Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. When called by vault owner this method just pulls the tokens from the protocol to the `to` address When called by strategy on vault other than zero vault it pulls the tokens to zero vault (required `to` == zero vault) When called by strategy on zero vault it pulls the tokens to zero vault, pushes tokens on the `to` vault, and reclaims everything that's left. Thus any vault other than zero vault cannot have any tokens on it Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Pull is fulfilled on the best effort basis, i.e. if the tokenAmounts overflows available funds it withdraws all the funds.\",\"params\":{\"options\":\"Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\",\"to\":\"Address to receive the tokens\",\"tokenAmounts\":\"Amounts of tokens to pull\",\"tokens\":\"Tokens to pull\"},\"returns\":{\"actualTokenAmounts\":\"The amounts actually withdrawn. It could be less than tokenAmounts (but not higher)\"}},\"push(address[],uint256[],bytes)\":{\"details\":\"Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Also notice that this operation doesn't guarantee that tokenAmounts will be invested in full.\",\"params\":{\"options\":\"Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\",\"tokenAmounts\":\"Amounts of tokens to push\",\"tokens\":\"Tokens to push\"},\"returns\":{\"actualTokenAmounts\":\"The amounts actually invested. It could be less than tokenAmounts (but not higher)\"}},\"reclaimTokens(address[])\":{\"details\":\"Cannot be called from zero vault.\",\"params\":{\"tokens\":\"Tokens to claim\"},\"returns\":{\"actualTokenAmounts\":\"Amounts reclaimed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferAndPush(address,address[],uint256[],bytes)\":{\"params\":{\"options\":\"Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\",\"tokenAmounts\":\"Amounts of tokens to push\",\"tokens\":\"Tokens to push\"},\"returns\":{\"actualTokenAmounts\":\"The amounts actually invested. It could be less than tokenAmounts (but not higher)\"}},\"tvl()\":{\"details\":\"Generally it is the underlying token value of this contract in some other DeFi protocol. For example, for USDC Yearn Vault this would be total USDC balance that could be withdrawn for Yearn to this contract. The tvl itself is estimated in some range. Sometimes the range is exact, sometimes it's not\",\"returns\":{\"maxTokenAmounts\":\"Upper bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)\",\"minTokenAmounts\":\"Lower bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Initialized(address,address,address[],uint256)\":{\"notice\":\"Emitted when Vault is intialized\"},\"Pull(address,uint256[])\":{\"notice\":\"Emitted on successful pull\"},\"Push(uint256[])\":{\"notice\":\"Emitted on successful push\"},\"ReclaimTokens(address,address[],uint256[])\":{\"notice\":\"Emitted when tokens are reclaimed\"}},\"kind\":\"user\",\"methods\":{\"externalCall(address,bytes4,bytes)\":{\"notice\":\"Execute one of whitelisted calls.\"},\"initialize(uint256,address[],address)\":{\"notice\":\"Initialized a new contract.\"},\"initialized()\":{\"notice\":\"Checks if the vault is initialized\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies offchain signature.\"},\"isVaultToken(address)\":{\"notice\":\"Checks if a token is vault token\"},\"nft()\":{\"notice\":\"VaultRegistry NFT for this vault\"},\"pull(address,address[],uint256[],bytes)\":{\"notice\":\"Pulls tokens from the underlying protocol to the `to` address.\"},\"pullExistentials()\":{\"notice\":\"Existential amounts for each token\"},\"push(address[],uint256[],bytes)\":{\"notice\":\"Pushes tokens on the vault balance to the underlying protocol. For example, for Yearn this operation will take USDC from the contract balance and convert it to yUSDC.\"},\"reclaimTokens(address[])\":{\"notice\":\"Claim ERC20 tokens from vault balance to zero vault.\"},\"transferAndPush(address,address[],uint256[],bytes)\":{\"notice\":\"The same as `push` method above but transfers tokens to vault balance prior to calling push. After the `push` it returns all the leftover tokens back (`push` method doesn't guarantee that tokenAmounts will be invested in full).\"},\"tvl()\":{\"notice\":\"Total value locked for this contract.\"},\"vault()\":{\"notice\":\"Reference to mellow root vault\"},\"vaultGovernance()\":{\"notice\":\"Address of the Vault Governance for this contract.\"},\"vaultTokens()\":{\"notice\":\"ERC20 tokens under Vault management.\"}},\"notice\":\"Vault that stores ERC20 tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vaults/MellowVault.sol\":\"MellowVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281\",\"dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b\"]},\"src/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87\",\"dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk\"]},\"src/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50\",\"dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1\"]},\"src/interfaces/external/erc/IERC1271.sol\":{\"keccak256\":\"0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779\",\"dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd\"]},\"src/interfaces/oracles/IOracle.sol\":{\"keccak256\":\"0x2d89a1f771e68129d47ae26eccf76f969cd2877e9b7190687056f912c3524b53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f378b9f29c18878e73e251ca97abeca819f0789834281ee1399db878f6baedf5\",\"dweb:/ipfs/QmSrFYZWmGdVkgACwwZEfbkPt3kQCSkr6czBi9HVtzNSJg\"]},\"src/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add\",\"dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu\"]},\"src/interfaces/utils/IERC20RootVaultHelper.sol\":{\"keccak256\":\"0x58a7fcc0db33c498d00b2ece9876a5fc272f362fb5f96d1b666fc10b5683a38f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ebd1b47e1dee02800bbf211f45a13dc6accfb2e91c645711486bb9e3f5559cd\",\"dweb:/ipfs/QmYFVKRWs73onqQxiUw8AJHfHbhib6nshmAzvCr3T5pqpW\"]},\"src/interfaces/validators/IBaseValidator.sol\":{\"keccak256\":\"0x91fa24f9202986d93ef9adf34ba8c17b8b9699ac365a54604abe70d54277a908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33f59c4ce1794edbdaf3b4b184e8df3d1dbfab69e87c5ec5c8bda0220d324e11\",\"dweb:/ipfs/QmWstawnPNGrjcmLKZ2Td3gRnK29d5HERF5QevEcLxqx2p\"]},\"src/interfaces/validators/IValidator.sol\":{\"keccak256\":\"0x8818b72829998c2f4acda6e5d8c66e2765adaf630a755d2865ce9e2559a8f63f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c198a3b15883bde77e78d0741d6fe5ea399176ba4d1c69bd32d9e31e6e85b4c1\",\"dweb:/ipfs/QmQyZzxTkPGtmrLJrXrrUU2qy9dtaeGyfqhvixQ7Fh1ekf\"]},\"src/interfaces/vaults/IAggregateVault.sol\":{\"keccak256\":\"0x22c60a8c3758f52aeeabf448cff491582357bed969cf9328cd93623ed12df3f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34fc54a3c550f28f0d77bdecad9e2b1083a79f37b6d783277c06741b1ecae35a\",\"dweb:/ipfs/QmdAXG1NpbzNPH6o8NxsVSVmnoUdtQeP9cNxmQ44Dm6qCT\"]},\"src/interfaces/vaults/IERC20RootVault.sol\":{\"keccak256\":\"0x81fae667b46299223c56ed34d77aa64d7d2a2b19d80167c23f0ba0dcbdd97cf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69b4669c0267163c52c78904f8a090b60b171e76dacc2468c1b8e82e20df8b2a\",\"dweb:/ipfs/QmUwAJcY157nBGxdGEpBTYLmRNW5WbsF74qF7WT8hQVj3k\"]},\"src/interfaces/vaults/IIntegrationVault.sol\":{\"keccak256\":\"0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d\",\"dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy\"]},\"src/interfaces/vaults/IMellowVault.sol\":{\"keccak256\":\"0x9940eb465a11c86eafd5cecf0de2c66c59273338e709e43897ebdd34377ecfb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b03dd6c094facbcd8873e06821dbf04b33bf55d716a1803da3f37f72bb8ddeb\",\"dweb:/ipfs/QmXoSZLM61SMMqPqba7cczpdtPJpDaMNQsUxu3iixSL3xh\"]},\"src/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1\",\"dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw\"]},\"src/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375\",\"dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu\"]},\"src/interfaces/vaults/IVaultRoot.sol\":{\"keccak256\":\"0xfc566a9133afe6942e196bcfde5b5e1920094d6f1656885b25b72b91f48c10ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79470664780741869fe81ad1eed10b2afd7d9432ee70be1599f242f102a4deaa\",\"dweb:/ipfs/QmUUPv5juGLrdngD5ZQNcsHxvQzWPG1c8aLjA2nsUC6uJz\"]},\"src/libraries/CommonLibrary.sol\":{\"keccak256\":\"0xba41d4d3513effc9b74645da78f66d5900dd49669b02b85845babd7c11f30f99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://485caf8f41614fcd6653910850651ca8f326de2298a39f340970a3e994faa03b\",\"dweb:/ipfs/QmNqJYP98zFeXwKUUCcHjc1HgNBGcxE46fDSjmYn4F78gK\"]},\"src/libraries/ExceptionsLibrary.sol\":{\"keccak256\":\"0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f\",\"dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX\"]},\"src/libraries/PermissionIdsLibrary.sol\":{\"keccak256\":\"0xc6a4f2515d807b2ad95e9e8f7190c5ea85ab6603d2c1136632a8af9c479ecfcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e16f3d1e595ffa5b20cd1588e839ee783b1ca246d489cbe42040fd3089bb8b1\",\"dweb:/ipfs/QmQdW5ykrjB5yMMxkU5zTR4GJ5kBhyrnAbmt3mvtB55kuC\"]},\"src/libraries/external/FullMath.sol\":{\"keccak256\":\"0x4e62215e42605e0a7ac1b29c1ed9ea5e3de0b81b1004fe5db50e08a3d5116384\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35f956c16580edefa156bbcf9a46bb82b32bfb26fe28b8ba5a5e3017d9582741\",\"dweb:/ipfs/QmUyoNEKLxPiftneU2xU2xixKNvCXvG847WEfCX1gsYGoz\"]},\"src/vaults/IntegrationVault.sol\":{\"keccak256\":\"0xc7c94b708ce2ba583230f4d62d69803e91945d1af63f8989e9023c9115b03c84\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0834feeb7a9412fae1869ac73736dc8aa47dffb3c9b936f75312e50bad007cdb\",\"dweb:/ipfs/QmUZv66T4STKBqPCYeQvdTiWzf8Ptm66TfWtc7oFjFq59Q\"]},\"src/vaults/MellowVault.sol\":{\"keccak256\":\"0x895ca62129a4874bb6944b3133a29e821d2e730fcfadf702f4c22f3890055a66\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9e39cd371b77cf3f410efbe2d645ee94936dc7d25af6494a342567590ed03e8f\",\"dweb:/ipfs/Qmby7WfkRrHJFk1pJjP7t55KcgNvkTNEKpHy4qntdWHWAL\"]},\"src/vaults/Vault.sol\":{\"keccak256\":\"0xbee4e72089b03a8c9f546d23583dd190bd0035ad3be38889d80b06a7b5e94271\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4e3ad66c3eeab2cffeb0323631c8c35a3ae37b062e05010fc8958b4ad06da0e5\",\"dweb:/ipfs/QmYYTwZFQufPxfn7zBmHGoogAJwsebd2TjDiJVoNtVLAs8\"]},\"src/vaults/VaultGovernance.sol\":{\"keccak256\":\"0xd484ec7eee06480da27027a0ac81f591440ecdd2ba7bd5bfdee58a3f9e88c22c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8b4f08e9350fadeb03b9561a2fb2798821f7186fe8663207c91402ea62a53cc5\",\"dweb:/ipfs/QmUr73ghYfPzjtFgxE8mPjw5wFwQTQsbcLDGJNQVfT4rEV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address[]",
              "name": "vaultTokens_",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "nft_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Pull",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Push",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReclaimTokens",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "externalCall",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft_",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "vaultTokens_",
              "type": "address[]"
            },
            {
              "internalType": "contract IERC20RootVault",
              "name": "vault_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "initialized",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "magicValue",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isVaultToken",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nft",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pull",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pullExistentials",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "push",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reclaimTokens",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAndPush",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tvl",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "minTokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "maxTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vault",
          "outputs": [
            {
              "internalType": "contract IERC20RootVault",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultGovernance",
          "outputs": [
            {
              "internalType": "contract IVaultGovernance",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultTokens",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "externalCall(address,bytes4,bytes)": {
            "details": "Can only be called by Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. Since this method allows sending arbitrary transactions, the destinations of the calls are whitelisted by Protocol Governance.",
            "params": {
              "data": "Abi encoded parameters to `to::selector`",
              "selector": "Selector of the call",
              "to": "Address of the reward pool"
            },
            "returns": {
              "result": "Result of execution of the call"
            }
          },
          "initialize(uint256,address[],address)": {
            "details": "Can only be initialized by vault governance",
            "params": {
              "nft_": "NFT of the vault in the VaultRegistry",
              "rootVault_": "Reference to mellow root vault",
              "vaultTokens_": "ERC20 tokens that will be managed by this Vault"
            }
          },
          "isValidSignature(bytes32,bytes)": {
            "details": "Should return whether the signature provided is valid for the provided hash MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls",
            "params": {
              "_hash": "Hash of the data to be signed",
              "_signature": "Signature byte array associated with _hash"
            },
            "returns": {
              "magicValue": "0x1626ba7e if valid, 0xffffffff otherwise"
            }
          },
          "isVaultToken(address)": {
            "params": {
              "token": "Address of the token to check"
            },
            "returns": {
              "_0": "`true` if this token is managed by Vault"
            }
          },
          "pull(address,address[],uint256[],bytes)": {
            "details": "Can only be called but Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. When called by vault owner this method just pulls the tokens from the protocol to the `to` address When called by strategy on vault other than zero vault it pulls the tokens to zero vault (required `to` == zero vault) When called by strategy on zero vault it pulls the tokens to zero vault, pushes tokens on the `to` vault, and reclaims everything that's left. Thus any vault other than zero vault cannot have any tokens on it Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Pull is fulfilled on the best effort basis, i.e. if the tokenAmounts overflows available funds it withdraws all the funds.",
            "params": {
              "options": "Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions",
              "to": "Address to receive the tokens",
              "tokenAmounts": "Amounts of tokens to pull",
              "tokens": "Tokens to pull"
            },
            "returns": {
              "actualTokenAmounts": "The amounts actually withdrawn. It could be less than tokenAmounts (but not higher)"
            }
          },
          "push(address[],uint256[],bytes)": {
            "details": "Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Also notice that this operation doesn't guarantee that tokenAmounts will be invested in full.",
            "params": {
              "options": "Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions",
              "tokenAmounts": "Amounts of tokens to push",
              "tokens": "Tokens to push"
            },
            "returns": {
              "actualTokenAmounts": "The amounts actually invested. It could be less than tokenAmounts (but not higher)"
            }
          },
          "reclaimTokens(address[])": {
            "details": "Cannot be called from zero vault.",
            "params": {
              "tokens": "Tokens to claim"
            },
            "returns": {
              "actualTokenAmounts": "Amounts reclaimed"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "transferAndPush(address,address[],uint256[],bytes)": {
            "params": {
              "options": "Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions",
              "tokenAmounts": "Amounts of tokens to push",
              "tokens": "Tokens to push"
            },
            "returns": {
              "actualTokenAmounts": "The amounts actually invested. It could be less than tokenAmounts (but not higher)"
            }
          },
          "tvl()": {
            "details": "Generally it is the underlying token value of this contract in some other DeFi protocol. For example, for USDC Yearn Vault this would be total USDC balance that could be withdrawn for Yearn to this contract. The tvl itself is estimated in some range. Sometimes the range is exact, sometimes it's not",
            "returns": {
              "maxTokenAmounts": "Upper bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)",
              "minTokenAmounts": "Lower bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "externalCall(address,bytes4,bytes)": {
            "notice": "Execute one of whitelisted calls."
          },
          "initialize(uint256,address[],address)": {
            "notice": "Initialized a new contract."
          },
          "initialized()": {
            "notice": "Checks if the vault is initialized"
          },
          "isValidSignature(bytes32,bytes)": {
            "notice": "Verifies offchain signature."
          },
          "isVaultToken(address)": {
            "notice": "Checks if a token is vault token"
          },
          "nft()": {
            "notice": "VaultRegistry NFT for this vault"
          },
          "pull(address,address[],uint256[],bytes)": {
            "notice": "Pulls tokens from the underlying protocol to the `to` address."
          },
          "pullExistentials()": {
            "notice": "Existential amounts for each token"
          },
          "push(address[],uint256[],bytes)": {
            "notice": "Pushes tokens on the vault balance to the underlying protocol. For example, for Yearn this operation will take USDC from the contract balance and convert it to yUSDC."
          },
          "reclaimTokens(address[])": {
            "notice": "Claim ERC20 tokens from vault balance to zero vault."
          },
          "transferAndPush(address,address[],uint256[],bytes)": {
            "notice": "The same as `push` method above but transfers tokens to vault balance prior to calling push. After the `push` it returns all the leftover tokens back (`push` method doesn't guarantee that tokenAmounts will be invested in full)."
          },
          "tvl()": {
            "notice": "Total value locked for this contract."
          },
          "vault()": {
            "notice": "Reference to mellow root vault"
          },
          "vaultGovernance()": {
            "notice": "Address of the Vault Governance for this contract."
          },
          "vaultTokens()": {
            "notice": "ERC20 tokens under Vault management."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/vaults/MellowVault.sol": "MellowVault"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999",
        "urls": [
          "bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb",
          "dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolGovernance.sol": {
        "keccak256": "0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e",
        "urls": [
          "bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281",
          "dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b"
        ],
        "license": "MIT"
      },
      "src/interfaces/IUnitPricesGovernance.sol": {
        "keccak256": "0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081",
        "urls": [
          "bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87",
          "dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk"
        ],
        "license": "MIT"
      },
      "src/interfaces/IVaultRegistry.sol": {
        "keccak256": "0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55",
        "urls": [
          "bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50",
          "dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/erc/IERC1271.sol": {
        "keccak256": "0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36",
        "urls": [
          "bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779",
          "dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd"
        ],
        "license": "MIT"
      },
      "src/interfaces/oracles/IOracle.sol": {
        "keccak256": "0x2d89a1f771e68129d47ae26eccf76f969cd2877e9b7190687056f912c3524b53",
        "urls": [
          "bzz-raw://f378b9f29c18878e73e251ca97abeca819f0789834281ee1399db878f6baedf5",
          "dweb:/ipfs/QmSrFYZWmGdVkgACwwZEfbkPt3kQCSkr6czBi9HVtzNSJg"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IDefaultAccessControl.sol": {
        "keccak256": "0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60",
        "urls": [
          "bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add",
          "dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IERC20RootVaultHelper.sol": {
        "keccak256": "0x58a7fcc0db33c498d00b2ece9876a5fc272f362fb5f96d1b666fc10b5683a38f",
        "urls": [
          "bzz-raw://8ebd1b47e1dee02800bbf211f45a13dc6accfb2e91c645711486bb9e3f5559cd",
          "dweb:/ipfs/QmYFVKRWs73onqQxiUw8AJHfHbhib6nshmAzvCr3T5pqpW"
        ],
        "license": "MIT"
      },
      "src/interfaces/validators/IBaseValidator.sol": {
        "keccak256": "0x91fa24f9202986d93ef9adf34ba8c17b8b9699ac365a54604abe70d54277a908",
        "urls": [
          "bzz-raw://33f59c4ce1794edbdaf3b4b184e8df3d1dbfab69e87c5ec5c8bda0220d324e11",
          "dweb:/ipfs/QmWstawnPNGrjcmLKZ2Td3gRnK29d5HERF5QevEcLxqx2p"
        ],
        "license": "MIT"
      },
      "src/interfaces/validators/IValidator.sol": {
        "keccak256": "0x8818b72829998c2f4acda6e5d8c66e2765adaf630a755d2865ce9e2559a8f63f",
        "urls": [
          "bzz-raw://c198a3b15883bde77e78d0741d6fe5ea399176ba4d1c69bd32d9e31e6e85b4c1",
          "dweb:/ipfs/QmQyZzxTkPGtmrLJrXrrUU2qy9dtaeGyfqhvixQ7Fh1ekf"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IAggregateVault.sol": {
        "keccak256": "0x22c60a8c3758f52aeeabf448cff491582357bed969cf9328cd93623ed12df3f9",
        "urls": [
          "bzz-raw://34fc54a3c550f28f0d77bdecad9e2b1083a79f37b6d783277c06741b1ecae35a",
          "dweb:/ipfs/QmdAXG1NpbzNPH6o8NxsVSVmnoUdtQeP9cNxmQ44Dm6qCT"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IERC20RootVault.sol": {
        "keccak256": "0x81fae667b46299223c56ed34d77aa64d7d2a2b19d80167c23f0ba0dcbdd97cf1",
        "urls": [
          "bzz-raw://69b4669c0267163c52c78904f8a090b60b171e76dacc2468c1b8e82e20df8b2a",
          "dweb:/ipfs/QmUwAJcY157nBGxdGEpBTYLmRNW5WbsF74qF7WT8hQVj3k"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IIntegrationVault.sol": {
        "keccak256": "0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e",
        "urls": [
          "bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d",
          "dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IMellowVault.sol": {
        "keccak256": "0x9940eb465a11c86eafd5cecf0de2c66c59273338e709e43897ebdd34377ecfb8",
        "urls": [
          "bzz-raw://9b03dd6c094facbcd8873e06821dbf04b33bf55d716a1803da3f37f72bb8ddeb",
          "dweb:/ipfs/QmXoSZLM61SMMqPqba7cczpdtPJpDaMNQsUxu3iixSL3xh"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVault.sol": {
        "keccak256": "0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43",
        "urls": [
          "bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1",
          "dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultGovernance.sol": {
        "keccak256": "0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813",
        "urls": [
          "bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375",
          "dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultRoot.sol": {
        "keccak256": "0xfc566a9133afe6942e196bcfde5b5e1920094d6f1656885b25b72b91f48c10ef",
        "urls": [
          "bzz-raw://79470664780741869fe81ad1eed10b2afd7d9432ee70be1599f242f102a4deaa",
          "dweb:/ipfs/QmUUPv5juGLrdngD5ZQNcsHxvQzWPG1c8aLjA2nsUC6uJz"
        ],
        "license": "MIT"
      },
      "src/libraries/CommonLibrary.sol": {
        "keccak256": "0xba41d4d3513effc9b74645da78f66d5900dd49669b02b85845babd7c11f30f99",
        "urls": [
          "bzz-raw://485caf8f41614fcd6653910850651ca8f326de2298a39f340970a3e994faa03b",
          "dweb:/ipfs/QmNqJYP98zFeXwKUUCcHjc1HgNBGcxE46fDSjmYn4F78gK"
        ],
        "license": "MIT"
      },
      "src/libraries/ExceptionsLibrary.sol": {
        "keccak256": "0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff",
        "urls": [
          "bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f",
          "dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX"
        ],
        "license": "MIT"
      },
      "src/libraries/PermissionIdsLibrary.sol": {
        "keccak256": "0xc6a4f2515d807b2ad95e9e8f7190c5ea85ab6603d2c1136632a8af9c479ecfcf",
        "urls": [
          "bzz-raw://4e16f3d1e595ffa5b20cd1588e839ee783b1ca246d489cbe42040fd3089bb8b1",
          "dweb:/ipfs/QmQdW5ykrjB5yMMxkU5zTR4GJ5kBhyrnAbmt3mvtB55kuC"
        ],
        "license": "MIT"
      },
      "src/libraries/external/FullMath.sol": {
        "keccak256": "0x4e62215e42605e0a7ac1b29c1ed9ea5e3de0b81b1004fe5db50e08a3d5116384",
        "urls": [
          "bzz-raw://35f956c16580edefa156bbcf9a46bb82b32bfb26fe28b8ba5a5e3017d9582741",
          "dweb:/ipfs/QmUyoNEKLxPiftneU2xU2xixKNvCXvG847WEfCX1gsYGoz"
        ],
        "license": "MIT"
      },
      "src/vaults/IntegrationVault.sol": {
        "keccak256": "0xc7c94b708ce2ba583230f4d62d69803e91945d1af63f8989e9023c9115b03c84",
        "urls": [
          "bzz-raw://0834feeb7a9412fae1869ac73736dc8aa47dffb3c9b936f75312e50bad007cdb",
          "dweb:/ipfs/QmUZv66T4STKBqPCYeQvdTiWzf8Ptm66TfWtc7oFjFq59Q"
        ],
        "license": "BUSL-1.1"
      },
      "src/vaults/MellowVault.sol": {
        "keccak256": "0x895ca62129a4874bb6944b3133a29e821d2e730fcfadf702f4c22f3890055a66",
        "urls": [
          "bzz-raw://9e39cd371b77cf3f410efbe2d645ee94936dc7d25af6494a342567590ed03e8f",
          "dweb:/ipfs/Qmby7WfkRrHJFk1pJjP7t55KcgNvkTNEKpHy4qntdWHWAL"
        ],
        "license": "BUSL-1.1"
      },
      "src/vaults/Vault.sol": {
        "keccak256": "0xbee4e72089b03a8c9f546d23583dd190bd0035ad3be38889d80b06a7b5e94271",
        "urls": [
          "bzz-raw://4e3ad66c3eeab2cffeb0323631c8c35a3ae37b062e05010fc8958b4ad06da0e5",
          "dweb:/ipfs/QmYYTwZFQufPxfn7zBmHGoogAJwsebd2TjDiJVoNtVLAs8"
        ],
        "license": "BUSL-1.1"
      },
      "src/vaults/VaultGovernance.sol": {
        "keccak256": "0xd484ec7eee06480da27027a0ac81f591440ecdd2ba7bd5bfdee58a3f9e88c22c",
        "urls": [
          "bzz-raw://8b4f08e9350fadeb03b9561a2fb2798821f7186fe8663207c91402ea62a53cc5",
          "dweb:/ipfs/QmUr73ghYfPzjtFgxE8mPjw5wFwQTQsbcLDGJNQVfT4rEV"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/vaults/MellowVault.sol",
    "id": 151987,
    "exportedSymbols": {
      "Address": [
        47093
      ],
      "Clones": [
        43615
      ],
      "CommonLibrary": [
        79384
      ],
      "ERC165": [
        48061
      ],
      "ExceptionsLibrary": [
        79454
      ],
      "FullMath": [
        80391
      ],
      "IAccessControl": [
        43366
      ],
      "IAccessControlEnumerable": [
        43391
      ],
      "IAggregateVault": [
        76190
      ],
      "IBaseValidator": [
        76071
      ],
      "IDefaultAccessControl": [
        75786
      ],
      "IERC1271": [
        64026
      ],
      "IERC165": [
        48073
      ],
      "IERC20": [
        45207
      ],
      "IERC20Metadata": [
        45232
      ],
      "IERC20Permit": [
        45268
      ],
      "IERC20RootVault": [
        76955
      ],
      "IERC20RootVaultHelper": [
        75804
      ],
      "IERC721": [
        46687
      ],
      "IIntegrationVault": [
        77767
      ],
      "IMellowVault": [
        77929
      ],
      "IOracle": [
        75605
      ],
      "IProtocolGovernance": [
        52868
      ],
      "IUnitPricesGovernance": [
        52921
      ],
      "IValidator": [
        76093
      ],
      "IVault": [
        78599
      ],
      "IVaultGovernance": [
        78668
      ],
      "IVaultRegistry": [
        53012
      ],
      "IVaultRoot": [
        78702
      ],
      "IntegrationVault": [
        149908
      ],
      "MellowVault": [
        151986
      ],
      "PermissionIdsLibrary": [
        79479
      ],
      "ReentrancyGuard": [
        44542
      ],
      "SafeERC20": [
        45644
      ],
      "Vault": [
        157396
      ],
      "VaultGovernance": [
        158218
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:3993:468",
    "nodes": [
      {
        "id": 151541,
        "nodeType": "PragmaDirective",
        "src": "37:23:468",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 151542,
        "nodeType": "ImportDirective",
        "src": "62:47:468",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/IMellowVault.sol",
        "file": "../interfaces/vaults/IMellowVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 151987,
        "sourceUnit": 77930,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 151543,
        "nodeType": "ImportDirective",
        "src": "110:50:468",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/IERC20RootVault.sol",
        "file": "../interfaces/vaults/IERC20RootVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 151987,
        "sourceUnit": 76956,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 151544,
        "nodeType": "ImportDirective",
        "src": "161:44:468",
        "nodes": [],
        "absolutePath": "src/libraries/external/FullMath.sol",
        "file": "../libraries/external/FullMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 151987,
        "sourceUnit": 80392,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 151545,
        "nodeType": "ImportDirective",
        "src": "206:44:468",
        "nodes": [],
        "absolutePath": "src/libraries/ExceptionsLibrary.sol",
        "file": "../libraries/ExceptionsLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 151987,
        "sourceUnit": 79455,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 151546,
        "nodeType": "ImportDirective",
        "src": "251:32:468",
        "nodes": [],
        "absolutePath": "src/vaults/IntegrationVault.sol",
        "file": "./IntegrationVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 151987,
        "sourceUnit": 149909,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 151986,
        "nodeType": "ContractDefinition",
        "src": "329:3700:468",
        "nodes": [
          {
            "id": 151555,
            "nodeType": "UsingForDirective",
            "src": "390:27:468",
            "nodes": [],
            "libraryName": {
              "id": 151552,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45644,
              "src": "396:9:468"
            },
            "typeName": {
              "id": 151554,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 151553,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45207,
                "src": "410:6:468"
              },
              "referencedDeclaration": 45207,
              "src": "410:6:468",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$45207",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 151559,
            "nodeType": "VariableDeclaration",
            "src": "456:28:468",
            "nodes": [],
            "baseFunctions": [
              77916
            ],
            "constant": false,
            "documentation": {
              "id": 151556,
              "nodeType": "StructuredDocumentation",
              "src": "423:28:468",
              "text": "@inheritdoc IMellowVault"
            },
            "functionSelector": "fbfa77cf",
            "mutability": "mutable",
            "name": "vault",
            "nameLocation": "479:5:468",
            "scope": 151986,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
              "typeString": "contract IERC20RootVault"
            },
            "typeName": {
              "id": 151558,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 151557,
                "name": "IERC20RootVault",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 76955,
                "src": "456:15:468"
              },
              "referencedDeclaration": 76955,
              "src": "456:15:468",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                "typeString": "contract IERC20RootVault"
              }
            },
            "visibility": "public"
          },
          {
            "id": 151638,
            "nodeType": "FunctionDefinition",
            "src": "583:563:468",
            "nodes": [],
            "body": {
              "id": 151637,
              "nodeType": "Block",
              "src": "687:459:468",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    151571
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151571,
                      "mutability": "mutable",
                      "name": "vault_",
                      "nameLocation": "713:6:468",
                      "nodeType": "VariableDeclaration",
                      "scope": 151637,
                      "src": "697:22:468",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                        "typeString": "contract IERC20RootVault"
                      },
                      "typeName": {
                        "id": 151570,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 151569,
                          "name": "IERC20RootVault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 76955,
                          "src": "697:15:468"
                        },
                        "referencedDeclaration": 76955,
                        "src": "697:15:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                          "typeString": "contract IERC20RootVault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151573,
                  "initialValue": {
                    "id": 151572,
                    "name": "vault",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 151559,
                    "src": "722:5:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                      "typeString": "contract IERC20RootVault"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "697:30:468"
                },
                {
                  "assignments": [
                    151575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151575,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "745:7:468",
                      "nodeType": "VariableDeclaration",
                      "scope": 151637,
                      "src": "737:15:468",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 151574,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "737:7:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151583,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 151580,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "780:4:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MellowVault_$151986",
                              "typeString": "contract MellowVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MellowVault_$151986",
                              "typeString": "contract MellowVault"
                            }
                          ],
                          "id": 151579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "772:7:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 151578,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "772:7:468",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 151581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "772:13:468",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 151576,
                        "name": "vault_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151571,
                        "src": "755:6:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                          "typeString": "contract IERC20RootVault"
                        }
                      },
                      "id": 151577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45164,
                      "src": "755:16:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 151582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "755:31:468",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "737:49:468"
                },
                {
                  "assignments": [
                    151585
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151585,
                      "mutability": "mutable",
                      "name": "supply",
                      "nameLocation": "804:6:468",
                      "nodeType": "VariableDeclaration",
                      "scope": 151637,
                      "src": "796:14:468",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 151584,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "796:7:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151589,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 151586,
                        "name": "vault_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151571,
                        "src": "813:6:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                          "typeString": "contract IERC20RootVault"
                        }
                      },
                      "id": 151587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45156,
                      "src": "813:18:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 151588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "813:20:468",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "796:37:468"
                },
                {
                  "expression": {
                    "id": 151596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 151590,
                          "name": "minTokenAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151564,
                          "src": "844:15:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 151591,
                          "name": "maxTokenAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151567,
                          "src": "861:15:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        }
                      ],
                      "id": 151592,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "843:34:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256[] memory,uint256[] memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 151593,
                          "name": "vault_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151571,
                          "src": "880:6:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                            "typeString": "contract IERC20RootVault"
                          }
                        },
                        "id": 151594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tvl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78591,
                        "src": "880:10:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function () view external returns (uint256[] memory,uint256[] memory)"
                        }
                      },
                      "id": 151595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "880:12:468",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "tuple(uint256[] memory,uint256[] memory)"
                      }
                    },
                    "src": "843:49:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151597,
                  "nodeType": "ExpressionStatement",
                  "src": "843:49:468"
                },
                {
                  "body": {
                    "id": 151635,
                    "nodeType": "Block",
                    "src": "955:185:468",
                    "statements": [
                      {
                        "expression": {
                          "id": 151620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 151609,
                              "name": "minTokenAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151564,
                              "src": "969:15:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 151611,
                            "indexExpression": {
                              "id": 151610,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151599,
                              "src": "985:1:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "969:18:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 151614,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 151575,
                                "src": "1006:7:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 151615,
                                  "name": "minTokenAmounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151564,
                                  "src": "1015:15:468",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 151617,
                                "indexExpression": {
                                  "id": 151616,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151599,
                                  "src": "1031:1:468",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1015:18:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 151618,
                                "name": "supply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 151585,
                                "src": "1035:6:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 151612,
                                "name": "FullMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80391,
                                "src": "990:8:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FullMath_$80391_$",
                                  "typeString": "type(library FullMath)"
                                }
                              },
                              "id": 151613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mulDiv",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80182,
                              "src": "990:15:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 151619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "990:52:468",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "969:73:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 151621,
                        "nodeType": "ExpressionStatement",
                        "src": "969:73:468"
                      },
                      {
                        "expression": {
                          "id": 151633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 151622,
                              "name": "maxTokenAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151567,
                              "src": "1056:15:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 151624,
                            "indexExpression": {
                              "id": 151623,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151599,
                              "src": "1072:1:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1056:18:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 151627,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 151575,
                                "src": "1093:7:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 151628,
                                  "name": "maxTokenAmounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151567,
                                  "src": "1102:15:468",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 151630,
                                "indexExpression": {
                                  "id": 151629,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151599,
                                  "src": "1118:1:468",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1102:18:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 151631,
                                "name": "supply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 151585,
                                "src": "1122:6:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 151625,
                                "name": "FullMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80391,
                                "src": "1077:8:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FullMath_$80391_$",
                                  "typeString": "type(library FullMath)"
                                }
                              },
                              "id": 151626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mulDiv",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80182,
                              "src": "1077:15:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 151632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1077:52:468",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1056:73:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 151634,
                        "nodeType": "ExpressionStatement",
                        "src": "1056:73:468"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 151605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 151602,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151599,
                      "src": "922:1:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 151603,
                        "name": "minTokenAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151564,
                        "src": "926:15:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 151604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "926:22:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "922:26:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 151636,
                  "initializationExpression": {
                    "assignments": [
                      151599
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 151599,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "915:1:468",
                        "nodeType": "VariableDeclaration",
                        "scope": 151636,
                        "src": "907:9:468",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 151598,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "907:7:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 151601,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 151600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "919:1:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "907:13:468"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 151607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "950:3:468",
                      "subExpression": {
                        "id": 151606,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151599,
                        "src": "950:1:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 151608,
                    "nodeType": "ExpressionStatement",
                    "src": "950:3:468"
                  },
                  "nodeType": "ForStatement",
                  "src": "902:238:468"
                }
              ]
            },
            "baseFunctions": [
              78591
            ],
            "documentation": {
              "id": 151560,
              "nodeType": "StructuredDocumentation",
              "src": "556:22:468",
              "text": "@inheritdoc IVault"
            },
            "functionSelector": "e5328e06",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tvl",
            "nameLocation": "592:3:468",
            "parameters": {
              "id": 151561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "595:2:468"
            },
            "returnParameters": {
              "id": 151568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151564,
                  "mutability": "mutable",
                  "name": "minTokenAmounts",
                  "nameLocation": "636:15:468",
                  "nodeType": "VariableDeclaration",
                  "scope": 151638,
                  "src": "619:32:468",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 151562,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "619:7:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 151563,
                    "nodeType": "ArrayTypeName",
                    "src": "619:9:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151567,
                  "mutability": "mutable",
                  "name": "maxTokenAmounts",
                  "nameLocation": "670:15:468",
                  "nodeType": "VariableDeclaration",
                  "scope": 151638,
                  "src": "653:32:468",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 151565,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "653:7:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 151566,
                    "nodeType": "ArrayTypeName",
                    "src": "653:9:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "618:68:468"
            },
            "scope": 151986,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 151716,
            "nodeType": "FunctionDefinition",
            "src": "1254:556:468",
            "nodes": [],
            "body": {
              "id": 151715,
              "nodeType": "Block",
              "src": "1352:458:468",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 151651,
                        "name": "vaultTokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151644,
                        "src": "1374:12:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 151652,
                        "name": "nft_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151641,
                        "src": "1388:4:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 151650,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157383,
                      "src": "1362:11:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address[] memory,uint256)"
                      }
                    },
                    "id": 151653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1362:31:468",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151654,
                  "nodeType": "ExpressionStatement",
                  "src": "1362:31:468"
                },
                {
                  "assignments": [
                    151659
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151659,
                      "mutability": "mutable",
                      "name": "mTokens",
                      "nameLocation": "1420:7:468",
                      "nodeType": "VariableDeclaration",
                      "scope": 151715,
                      "src": "1403:24:468",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 151657,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1403:7:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 151658,
                        "nodeType": "ArrayTypeName",
                        "src": "1403:9:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151663,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 151660,
                        "name": "vault_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151647,
                        "src": "1430:6:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                          "typeString": "contract IERC20RootVault"
                        }
                      },
                      "id": 151661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaultTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78573,
                      "src": "1430:18:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 151662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1430:20:468",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1403:47:468"
                },
                {
                  "body": {
                    "id": 151687,
                    "nodeType": "Block",
                    "src": "1510:96:468",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 151682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 151676,
                                  "name": "mTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151659,
                                  "src": "1532:7:468",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 151678,
                                "indexExpression": {
                                  "id": 151677,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151665,
                                  "src": "1540:1:468",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1532:10:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 151679,
                                  "name": "vaultTokens_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151644,
                                  "src": "1546:12:468",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 151681,
                                "indexExpression": {
                                  "id": 151680,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151665,
                                  "src": "1559:1:468",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1546:15:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1532:29:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "expression": {
                                "id": 151683,
                                "name": "ExceptionsLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 79454,
                                "src": "1563:17:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                                  "typeString": "type(library ExceptionsLibrary)"
                                }
                              },
                              "id": 151684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "INVALID_TOKEN",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 79435,
                              "src": "1563:31:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 151675,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1524:7:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 151685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1524:71:468",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 151686,
                        "nodeType": "ExpressionStatement",
                        "src": "1524:71:468"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 151671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 151668,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151665,
                      "src": "1480:1:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 151669,
                        "name": "vaultTokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151644,
                        "src": "1484:12:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 151670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1484:19:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1480:23:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 151688,
                  "initializationExpression": {
                    "assignments": [
                      151665
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 151665,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1473:1:468",
                        "nodeType": "VariableDeclaration",
                        "scope": 151688,
                        "src": "1465:9:468",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 151664,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1465:7:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 151667,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 151666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1477:1:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1465:13:468"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 151673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1505:3:468",
                      "subExpression": {
                        "id": 151672,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151665,
                        "src": "1505:1:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 151674,
                    "nodeType": "ExpressionStatement",
                    "src": "1505:3:468"
                  },
                  "nodeType": "ForStatement",
                  "src": "1460:146:468"
                },
                {
                  "assignments": [
                    151691
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151691,
                      "mutability": "mutable",
                      "name": "registry",
                      "nameLocation": "1630:8:468",
                      "nodeType": "VariableDeclaration",
                      "scope": 151715,
                      "src": "1615:23:468",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaultRegistry_$53012",
                        "typeString": "contract IVaultRegistry"
                      },
                      "typeName": {
                        "id": 151690,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 151689,
                          "name": "IVaultRegistry",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 53012,
                          "src": "1615:14:468"
                        },
                        "referencedDeclaration": 53012,
                        "src": "1615:14:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaultRegistry_$53012",
                          "typeString": "contract IVaultRegistry"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151696,
                  "initialValue": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 151692,
                          "name": "_vaultGovernance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157096,
                          "src": "1641:16:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVaultGovernance_$78668",
                            "typeString": "contract IVaultGovernance"
                          }
                        },
                        "id": 151693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "internalParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78649,
                        "src": "1641:31:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_InternalParams_$78614_memory_ptr_$",
                          "typeString": "function () view external returns (struct IVaultGovernance.InternalParams memory)"
                        }
                      },
                      "id": 151694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1641:33:468",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_InternalParams_$78614_memory_ptr",
                        "typeString": "struct IVaultGovernance.InternalParams memory"
                      }
                    },
                    "id": 151695,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "registry",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 78610,
                    "src": "1641:42:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVaultRegistry_$53012",
                      "typeString": "contract IVaultRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1615:68:468"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 151706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 151702,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151559,
                                  "src": "1730:5:468",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                                    "typeString": "contract IERC20RootVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                                    "typeString": "contract IERC20RootVault"
                                  }
                                ],
                                "id": 151701,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1722:7:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 151700,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1722:7:468",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 151703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1722:14:468",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 151698,
                              "name": "registry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151691,
                              "src": "1701:8:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVaultRegistry_$53012",
                                "typeString": "contract IVaultRegistry"
                              }
                            },
                            "id": 151699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nftForVault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52943,
                            "src": "1701:20:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 151704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1701:36:468",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 151705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1740:1:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1701:40:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 151707,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "1743:17:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 151708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "INVALID_INTERFACE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79438,
                        "src": "1743:35:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 151697,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1693:7:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 151709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1693:86:468",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151710,
                  "nodeType": "ExpressionStatement",
                  "src": "1693:86:468"
                },
                {
                  "expression": {
                    "id": 151713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 151711,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151559,
                      "src": "1789:5:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                        "typeString": "contract IERC20RootVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 151712,
                      "name": "vault_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151647,
                      "src": "1797:6:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                        "typeString": "contract IERC20RootVault"
                      }
                    },
                    "src": "1789:14:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                      "typeString": "contract IERC20RootVault"
                    }
                  },
                  "id": 151714,
                  "nodeType": "ExpressionStatement",
                  "src": "1789:14:468"
                }
              ]
            },
            "baseFunctions": [
              77928
            ],
            "documentation": {
              "id": 151639,
              "nodeType": "StructuredDocumentation",
              "src": "1221:28:468",
              "text": "@inheritdoc IMellowVault"
            },
            "functionSelector": "52af719f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1263:10:468",
            "parameters": {
              "id": 151648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151641,
                  "mutability": "mutable",
                  "name": "nft_",
                  "nameLocation": "1282:4:468",
                  "nodeType": "VariableDeclaration",
                  "scope": 151716,
                  "src": "1274:12:468",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 151640,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:7:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151644,
                  "mutability": "mutable",
                  "name": "vaultTokens_",
                  "nameLocation": "1305:12:468",
                  "nodeType": "VariableDeclaration",
                  "scope": 151716,
                  "src": "1288:29:468",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 151642,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1288:7:468",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 151643,
                    "nodeType": "ArrayTypeName",
                    "src": "1288:9:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151647,
                  "mutability": "mutable",
                  "name": "vault_",
                  "nameLocation": "1335:6:468",
                  "nodeType": "VariableDeclaration",
                  "scope": 151716,
                  "src": "1319:22:468",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                    "typeString": "contract IERC20RootVault"
                  },
                  "typeName": {
                    "id": 151646,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 151645,
                      "name": "IERC20RootVault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76955,
                      "src": "1319:15:468"
                    },
                    "referencedDeclaration": 76955,
                    "src": "1319:15:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                      "typeString": "contract IERC20RootVault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1273:69:468"
            },
            "returnParameters": {
              "id": 151649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1352:0:468"
            },
            "scope": 151986,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 151758,
            "nodeType": "FunctionDefinition",
            "src": "1884:314:468",
            "nodes": [],
            "body": {
              "id": 151757,
              "nodeType": "Block",
              "src": "1966:232:468",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    151728
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151728,
                      "mutability": "mutable",
                      "name": "mTokens",
                      "nameLocation": "1993:7:468",
                      "nodeType": "VariableDeclaration",
                      "scope": 151757,
                      "src": "1976:24:468",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 151726,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1976:7:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 151727,
                        "nodeType": "ArrayTypeName",
                        "src": "1976:9:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151732,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 151729,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151559,
                        "src": "2003:5:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                          "typeString": "contract IERC20RootVault"
                        }
                      },
                      "id": 151730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaultTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78573,
                      "src": "2003:17:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 151731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2003:19:468",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1976:46:468"
                },
                {
                  "body": {
                    "id": 151753,
                    "nodeType": "Block",
                    "src": "2077:93:468",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 151748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 151744,
                              "name": "mTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151728,
                              "src": "2095:7:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 151746,
                            "indexExpression": {
                              "id": 151745,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151734,
                              "src": "2103:1:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2095:10:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 151747,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151718,
                            "src": "2109:5:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2095:19:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 151752,
                        "nodeType": "IfStatement",
                        "src": "2091:69:468",
                        "trueBody": {
                          "id": 151751,
                          "nodeType": "Block",
                          "src": "2116:44:468",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 151749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2141:4:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 151723,
                              "id": 151750,
                              "nodeType": "Return",
                              "src": "2134:11:468"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 151740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 151737,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151734,
                      "src": "2052:1:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 151738,
                        "name": "mTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151728,
                        "src": "2056:7:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 151739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2056:14:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2052:18:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 151754,
                  "initializationExpression": {
                    "assignments": [
                      151734
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 151734,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2045:1:468",
                        "nodeType": "VariableDeclaration",
                        "scope": 151754,
                        "src": "2037:9:468",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 151733,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2037:7:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 151736,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 151735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2049:1:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2037:13:468"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 151742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2072:3:468",
                      "subExpression": {
                        "id": 151741,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151734,
                        "src": "2074:1:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 151743,
                    "nodeType": "ExpressionStatement",
                    "src": "2072:3:468"
                  },
                  "nodeType": "ForStatement",
                  "src": "2032:138:468"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 151755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2186:5:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 151723,
                  "id": 151756,
                  "nodeType": "Return",
                  "src": "2179:12:468"
                }
              ]
            },
            "baseFunctions": [
              149856
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isReclaimForbidden",
            "nameLocation": "1893:19:468",
            "overrides": {
              "id": 151720,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1942:8:468"
            },
            "parameters": {
              "id": 151719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151718,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1921:5:468",
                  "nodeType": "VariableDeclaration",
                  "scope": 151758,
                  "src": "1913:13:468",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 151717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1913:7:468",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1912:15:468"
            },
            "returnParameters": {
              "id": 151723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151722,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 151758,
                  "src": "1960:4:468",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 151721,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1960:4:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1959:6:468"
            },
            "scope": 151986,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 151838,
            "nodeType": "FunctionDefinition",
            "src": "2273:647:468",
            "nodes": [],
            "body": {
              "id": 151837,
              "nodeType": "Block",
              "src": "2427:493:468",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    151771
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151771,
                      "mutability": "mutable",
                      "name": "minLpTokens",
                      "nameLocation": "2445:11:468",
                      "nodeType": "VariableDeclaration",
                      "scope": 151837,
                      "src": "2437:19:468",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 151770,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2437:7:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151772,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2437:19:468"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2475:64:468",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2489:40:468",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "options",
                                  "nodeType": "YulIdentifier",
                                  "src": "2514:7:468"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2523:4:468",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2510:3:468"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2510:18:468"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2504:5:468"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2504:25:468"
                        },
                        "variableNames": [
                          {
                            "name": "minLpTokens",
                            "nodeType": "YulIdentifier",
                            "src": "2489:11:468"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 151771,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2489:11:468",
                      "valueSize": 1
                    },
                    {
                      "declaration": 151763,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2514:7:468",
                      "valueSize": 1
                    }
                  ],
                  "id": 151773,
                  "nodeType": "InlineAssembly",
                  "src": "2466:73:468"
                },
                {
                  "body": {
                    "id": 151800,
                    "nodeType": "Block",
                    "src": "2598:103:468",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 151793,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151559,
                                  "src": "2666:5:468",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                                    "typeString": "contract IERC20RootVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                                    "typeString": "contract IERC20RootVault"
                                  }
                                ],
                                "id": 151792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2658:7:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 151791,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2658:7:468",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 151794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2658:14:468",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 151795,
                                "name": "tokenAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 151761,
                                "src": "2674:12:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 151797,
                              "indexExpression": {
                                "id": 151796,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 151775,
                                "src": "2687:1:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2674:15:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 151786,
                                    "name": "_vaultTokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 157099,
                                    "src": "2619:12:468",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 151788,
                                  "indexExpression": {
                                    "id": 151787,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 151775,
                                    "src": "2632:1:468",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2619:15:468",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 151785,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45207,
                                "src": "2612:6:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$45207_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 151789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2612:23:468",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 151790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeIncreaseAllowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45409,
                            "src": "2612:45:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45207_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45207_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 151798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2612:78:468",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 151799,
                        "nodeType": "ExpressionStatement",
                        "src": "2612:78:468"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 151781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 151778,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151775,
                      "src": "2568:1:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 151779,
                        "name": "tokenAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151761,
                        "src": "2572:12:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 151780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2572:19:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2568:23:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 151801,
                  "initializationExpression": {
                    "assignments": [
                      151775
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 151775,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2561:1:468",
                        "nodeType": "VariableDeclaration",
                        "scope": 151801,
                        "src": "2553:9:468",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 151774,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2553:7:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 151777,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 151776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2565:1:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2553:13:468"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 151783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2593:3:468",
                      "subExpression": {
                        "id": 151782,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151775,
                        "src": "2593:1:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 151784,
                    "nodeType": "ExpressionStatement",
                    "src": "2593:3:468"
                  },
                  "nodeType": "ForStatement",
                  "src": "2548:153:468"
                },
                {
                  "expression": {
                    "id": 151809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 151802,
                      "name": "actualTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151768,
                      "src": "2710:18:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 151805,
                          "name": "tokenAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151761,
                          "src": "2745:12:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 151806,
                          "name": "minLpTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151771,
                          "src": "2759:11:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "",
                          "id": 151807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2772:2:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 151803,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151559,
                          "src": "2731:5:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                            "typeString": "contract IERC20RootVault"
                          }
                        },
                        "id": 151804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76937,
                        "src": "2731:13:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256[] memory,uint256,bytes memory) external returns (uint256[] memory)"
                        }
                      },
                      "id": 151808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2731:44:468",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "2710:65:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 151810,
                  "nodeType": "ExpressionStatement",
                  "src": "2710:65:468"
                },
                {
                  "body": {
                    "id": 151835,
                    "nodeType": "Block",
                    "src": "2835:79:468",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 151830,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151559,
                                  "src": "2893:5:468",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                                    "typeString": "contract IERC20RootVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                                    "typeString": "contract IERC20RootVault"
                                  }
                                ],
                                "id": 151829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2885:7:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 151828,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2885:7:468",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 151831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2885:14:468",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 151832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2901:1:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 151823,
                                    "name": "_vaultTokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 157099,
                                    "src": "2856:12:468",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 151825,
                                  "indexExpression": {
                                    "id": 151824,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 151812,
                                    "src": "2869:1:468",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2856:15:468",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 151822,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45207,
                                "src": "2849:6:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$45207_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 151826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2849:23:468",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 151827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45372,
                            "src": "2849:35:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45207_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45207_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 151833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2849:54:468",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 151834,
                        "nodeType": "ExpressionStatement",
                        "src": "2849:54:468"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 151818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 151815,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151812,
                      "src": "2805:1:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 151816,
                        "name": "tokenAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151761,
                        "src": "2809:12:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 151817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2809:19:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2805:23:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 151836,
                  "initializationExpression": {
                    "assignments": [
                      151812
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 151812,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2798:1:468",
                        "nodeType": "VariableDeclaration",
                        "scope": 151836,
                        "src": "2790:9:468",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 151811,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2790:7:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 151814,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 151813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2802:1:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2790:13:468"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 151820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2830:3:468",
                      "subExpression": {
                        "id": 151819,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151812,
                        "src": "2830:1:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 151821,
                    "nodeType": "ExpressionStatement",
                    "src": "2830:3:468"
                  },
                  "nodeType": "ForStatement",
                  "src": "2785:129:468"
                }
              ]
            },
            "baseFunctions": [
              149868
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_push",
            "nameLocation": "2282:5:468",
            "overrides": {
              "id": 151765,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2372:8:468"
            },
            "parameters": {
              "id": 151764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151761,
                  "mutability": "mutable",
                  "name": "tokenAmounts",
                  "nameLocation": "2314:12:468",
                  "nodeType": "VariableDeclaration",
                  "scope": 151838,
                  "src": "2297:29:468",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 151759,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2297:7:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 151760,
                    "nodeType": "ArrayTypeName",
                    "src": "2297:9:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151763,
                  "mutability": "mutable",
                  "name": "options",
                  "nameLocation": "2349:7:468",
                  "nodeType": "VariableDeclaration",
                  "scope": 151838,
                  "src": "2336:20:468",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 151762,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2336:5:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2287:75:468"
            },
            "returnParameters": {
              "id": 151769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151768,
                  "mutability": "mutable",
                  "name": "actualTokenAmounts",
                  "nameLocation": "2407:18:468",
                  "nodeType": "VariableDeclaration",
                  "scope": 151838,
                  "src": "2390:35:468",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 151766,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2390:7:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 151767,
                    "nodeType": "ArrayTypeName",
                    "src": "2390:9:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2389:37:468"
            },
            "scope": 151986,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 151985,
            "nodeType": "FunctionDefinition",
            "src": "2926:1101:468",
            "nodes": [],
            "body": {
              "id": 151984,
              "nodeType": "Block",
              "src": "3100:927:468",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    151854
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151854,
                      "mutability": "mutable",
                      "name": "vault_",
                      "nameLocation": "3126:6:468",
                      "nodeType": "VariableDeclaration",
                      "scope": 151984,
                      "src": "3110:22:468",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                        "typeString": "contract IERC20RootVault"
                      },
                      "typeName": {
                        "id": 151853,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 151852,
                          "name": "IERC20RootVault",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 76955,
                          "src": "3110:15:468"
                        },
                        "referencedDeclaration": 76955,
                        "src": "3110:15:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                          "typeString": "contract IERC20RootVault"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151856,
                  "initialValue": {
                    "id": 151855,
                    "name": "vault",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 151559,
                    "src": "3135:5:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                      "typeString": "contract IERC20RootVault"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3110:30:468"
                },
                {
                  "assignments": [
                    151861
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151861,
                      "mutability": "mutable",
                      "name": "minTokenAmounts",
                      "nameLocation": "3167:15:468",
                      "nodeType": "VariableDeclaration",
                      "scope": 151984,
                      "src": "3150:32:468",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 151859,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3150:7:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 151860,
                        "nodeType": "ArrayTypeName",
                        "src": "3150:9:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151870,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 151864,
                        "name": "options",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151845,
                        "src": "3196:7:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 151866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3206:7:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 151865,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3206:7:468",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 151867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3206:9:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "type(uint256[] memory)"
                            }
                          }
                        ],
                        "id": 151868,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3205:11:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "type(uint256[] memory)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "type(uint256[] memory)"
                        }
                      ],
                      "expression": {
                        "id": 151862,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3185:3:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 151863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3185:10:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 151869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3185:32:468",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3150:67:468"
                },
                {
                  "assignments": [
                    151875,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151875,
                      "mutability": "mutable",
                      "name": "minTvl",
                      "nameLocation": "3245:6:468",
                      "nodeType": "VariableDeclaration",
                      "scope": 151984,
                      "src": "3228:23:468",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 151873,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3228:7:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 151874,
                        "nodeType": "ArrayTypeName",
                        "src": "3228:9:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 151878,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 151876,
                      "name": "tvl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        151638
                      ],
                      "referencedDeclaration": 151638,
                      "src": "3257:3:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function () view returns (uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 151877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3257:5:468",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256[] memory,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3227:35:468"
                },
                {
                  "assignments": [
                    151880
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151880,
                      "mutability": "mutable",
                      "name": "totalLpTokens",
                      "nameLocation": "3280:13:468",
                      "nodeType": "VariableDeclaration",
                      "scope": 151984,
                      "src": "3272:21:468",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 151879,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3272:7:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151888,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 151885,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3320:4:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MellowVault_$151986",
                              "typeString": "contract MellowVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MellowVault_$151986",
                              "typeString": "contract MellowVault"
                            }
                          ],
                          "id": 151884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3312:7:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 151883,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3312:7:468",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 151886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3312:13:468",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 151881,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151559,
                        "src": "3296:5:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                          "typeString": "contract IERC20RootVault"
                        }
                      },
                      "id": 151882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45164,
                      "src": "3296:15:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 151887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3296:30:468",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3272:54:468"
                },
                {
                  "assignments": [
                    151890
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151890,
                      "mutability": "mutable",
                      "name": "lpTokenAmount",
                      "nameLocation": "3344:13:468",
                      "nodeType": "VariableDeclaration",
                      "scope": 151984,
                      "src": "3336:21:468",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 151889,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3336:7:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151896,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 151893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3365:7:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 151892,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3365:7:468",
                            "typeDescriptions": {}
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        ],
                        "id": 151891,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -27,
                        "src": "3360:4:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 151894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3360:13:468",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_uint256",
                        "typeString": "type(uint256)"
                      }
                    },
                    "id": 151895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "max",
                    "nodeType": "MemberAccess",
                    "src": "3360:17:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3336:41:468"
                },
                {
                  "body": {
                    "id": 151930,
                    "nodeType": "Block",
                    "src": "3437:205:468",
                    "statements": [
                      {
                        "assignments": [
                          151909
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 151909,
                            "mutability": "mutable",
                            "name": "newAmount",
                            "nameLocation": "3459:9:468",
                            "nodeType": "VariableDeclaration",
                            "scope": 151930,
                            "src": "3451:17:468",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 151908,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3451:7:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 151920,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 151912,
                              "name": "totalLpTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151880,
                              "src": "3487:13:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 151913,
                                "name": "tokenAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 151843,
                                "src": "3502:12:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 151915,
                              "indexExpression": {
                                "id": 151914,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 151898,
                                "src": "3515:1:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3502:15:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 151916,
                                "name": "minTvl",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 151875,
                                "src": "3519:6:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 151918,
                              "indexExpression": {
                                "id": 151917,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 151898,
                                "src": "3526:1:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3519:9:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 151910,
                              "name": "FullMath",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80391,
                              "src": "3471:8:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FullMath_$80391_$",
                                "typeString": "type(library FullMath)"
                              }
                            },
                            "id": 151911,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mulDiv",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80182,
                            "src": "3471:15:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 151919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3471:58:468",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3451:78:468"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 151923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 151921,
                            "name": "newAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151909,
                            "src": "3547:9:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 151922,
                            "name": "lpTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151890,
                            "src": "3559:13:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3547:25:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 151929,
                        "nodeType": "IfStatement",
                        "src": "3543:89:468",
                        "trueBody": {
                          "id": 151928,
                          "nodeType": "Block",
                          "src": "3574:58:468",
                          "statements": [
                            {
                              "expression": {
                                "id": 151926,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 151924,
                                  "name": "lpTokenAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151890,
                                  "src": "3592:13:468",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 151925,
                                  "name": "newAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 151909,
                                  "src": "3608:9:468",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3592:25:468",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 151927,
                              "nodeType": "ExpressionStatement",
                              "src": "3592:25:468"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 151904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 151901,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151898,
                      "src": "3407:1:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 151902,
                        "name": "tokenAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151843,
                        "src": "3411:12:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 151903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3411:19:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3407:23:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 151931,
                  "initializationExpression": {
                    "assignments": [
                      151898
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 151898,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3400:1:468",
                        "nodeType": "VariableDeclaration",
                        "scope": 151931,
                        "src": "3392:9:468",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 151897,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3392:7:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 151900,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 151899,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3404:1:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3392:13:468"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 151906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3432:3:468",
                      "subExpression": {
                        "id": 151905,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151898,
                        "src": "3432:1:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 151907,
                    "nodeType": "ExpressionStatement",
                    "src": "3432:3:468"
                  },
                  "nodeType": "ForStatement",
                  "src": "3387:255:468"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 151934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 151932,
                      "name": "lpTokenAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151890,
                      "src": "3655:13:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 151933,
                      "name": "totalLpTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151880,
                      "src": "3671:13:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3655:29:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 151940,
                  "nodeType": "IfStatement",
                  "src": "3651:89:468",
                  "trueBody": {
                    "id": 151939,
                    "nodeType": "Block",
                    "src": "3686:54:468",
                    "statements": [
                      {
                        "expression": {
                          "id": 151937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 151935,
                            "name": "lpTokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151890,
                            "src": "3700:13:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 151936,
                            "name": "totalLpTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151880,
                            "src": "3716:13:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3700:29:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 151938,
                        "nodeType": "ExpressionStatement",
                        "src": "3700:29:468"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    151945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151945,
                      "mutability": "mutable",
                      "name": "emptyOptions",
                      "nameLocation": "3765:12:468",
                      "nodeType": "VariableDeclaration",
                      "scope": 151984,
                      "src": "3750:27:468",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 151943,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3750:5:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 151944,
                        "nodeType": "ArrayTypeName",
                        "src": "3750:7:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151954,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 151949,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151559,
                              "src": "3792:5:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                                "typeString": "contract IERC20RootVault"
                              }
                            },
                            "id": 151950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "subvaultNfts",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78701,
                            "src": "3792:18:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function () view external returns (uint256[] memory)"
                            }
                          },
                          "id": 151951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3792:20:468",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 151952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3792:27:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 151948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3780:11:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 151946,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3784:5:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 151947,
                        "nodeType": "ArrayTypeName",
                        "src": "3784:7:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 151953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3780:40:468",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3750:70:468"
                },
                {
                  "body": {
                    "id": 151972,
                    "nodeType": "Block",
                    "src": "3880:45:468",
                    "statements": [
                      {
                        "expression": {
                          "id": 151970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 151966,
                              "name": "emptyOptions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151945,
                              "src": "3894:12:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            },
                            "id": 151968,
                            "indexExpression": {
                              "id": 151967,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151956,
                              "src": "3907:1:468",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3894:15:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "",
                            "id": 151969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3912:2:468",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          "src": "3894:20:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 151971,
                        "nodeType": "ExpressionStatement",
                        "src": "3894:20:468"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 151962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 151959,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151956,
                      "src": "3850:1:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 151960,
                        "name": "emptyOptions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151945,
                        "src": "3854:12:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 151961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3854:19:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3850:23:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 151973,
                  "initializationExpression": {
                    "assignments": [
                      151956
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 151956,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3843:1:468",
                        "nodeType": "VariableDeclaration",
                        "scope": 151973,
                        "src": "3835:9:468",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 151955,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3835:7:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 151958,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 151957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3847:1:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3835:13:468"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 151964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "3875:3:468",
                      "subExpression": {
                        "id": 151963,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151956,
                        "src": "3877:1:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 151965,
                    "nodeType": "ExpressionStatement",
                    "src": "3875:3:468"
                  },
                  "nodeType": "ForStatement",
                  "src": "3830:95:468"
                },
                {
                  "expression": {
                    "id": 151982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 151974,
                      "name": "actualTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151850,
                      "src": "3934:18:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 151977,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151840,
                          "src": "3971:2:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 151978,
                          "name": "lpTokenAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151890,
                          "src": "3975:13:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 151979,
                          "name": "minTokenAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151861,
                          "src": "3990:15:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 151980,
                          "name": "emptyOptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151945,
                          "src": "4007:12:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                            "typeString": "bytes memory[] memory"
                          }
                        ],
                        "expression": {
                          "id": 151975,
                          "name": "vault_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151854,
                          "src": "3955:6:468",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                            "typeString": "contract IERC20RootVault"
                          }
                        },
                        "id": 151976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdraw",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76954,
                        "src": "3955:15:468",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (address,uint256,uint256[] memory,bytes memory[] memory) external returns (uint256[] memory)"
                        }
                      },
                      "id": 151981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3955:65:468",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "3934:86:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 151983,
                  "nodeType": "ExpressionStatement",
                  "src": "3934:86:468"
                }
              ]
            },
            "baseFunctions": [
              149882
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_pull",
            "nameLocation": "2935:5:468",
            "overrides": {
              "id": 151847,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3045:8:468"
            },
            "parameters": {
              "id": 151846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151840,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2958:2:468",
                  "nodeType": "VariableDeclaration",
                  "scope": 151985,
                  "src": "2950:10:468",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 151839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2950:7:468",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151843,
                  "mutability": "mutable",
                  "name": "tokenAmounts",
                  "nameLocation": "2987:12:468",
                  "nodeType": "VariableDeclaration",
                  "scope": 151985,
                  "src": "2970:29:468",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 151841,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2970:7:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 151842,
                    "nodeType": "ArrayTypeName",
                    "src": "2970:9:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151845,
                  "mutability": "mutable",
                  "name": "options",
                  "nameLocation": "3022:7:468",
                  "nodeType": "VariableDeclaration",
                  "scope": 151985,
                  "src": "3009:20:468",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 151844,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3009:5:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2940:95:468"
            },
            "returnParameters": {
              "id": 151851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151850,
                  "mutability": "mutable",
                  "name": "actualTokenAmounts",
                  "nameLocation": "3080:18:468",
                  "nodeType": "VariableDeclaration",
                  "scope": 151985,
                  "src": "3063:35:468",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 151848,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3063:7:468",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 151849,
                    "nodeType": "ArrayTypeName",
                    "src": "3063:9:468",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3062:37:468"
            },
            "scope": 151986,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 151548,
              "name": "IMellowVault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 77929,
              "src": "353:12:468"
            },
            "id": 151549,
            "nodeType": "InheritanceSpecifier",
            "src": "353:12:468"
          },
          {
            "baseName": {
              "id": 151550,
              "name": "IntegrationVault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 149908,
              "src": "367:16:468"
            },
            "id": 151551,
            "nodeType": "InheritanceSpecifier",
            "src": "367:16:468"
          }
        ],
        "canonicalName": "MellowVault",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 151547,
          "nodeType": "StructuredDocumentation",
          "src": "285:44:468",
          "text": "@notice Vault that stores ERC20 tokens."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          151986,
          149908,
          157396,
          48061,
          44542,
          77929,
          77767,
          64026,
          78599,
          48073
        ],
        "name": "MellowVault",
        "nameLocation": "338:11:468",
        "scope": 151987,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 468
}