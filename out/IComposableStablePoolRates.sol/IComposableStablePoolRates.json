{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "setTokenRateCacheDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "updateTokenRateCache",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "setTokenRateCacheDuration(address,uint256)": "f4b7964d",
    "updateTokenRateCache(address)": "2df2c7c0"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"setTokenRateCacheDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"updateTokenRateCache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"setTokenRateCacheDuration(address,uint256)\":{\"details\":\"Sets a new duration for a token rate cache. It reverts if there was no rate provider set initially. Note this function also updates the current cached value.\",\"params\":{\"duration\":\"Number of seconds until the current token rate is fetched again.\"}},\"updateTokenRateCache(address)\":{\"details\":\"Forces a rate cache hit for a token. It will revert if the requested token does not have an associated rate provider.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/external/balancer/pool-stable/IComposableStablePoolRates.sol\":\"IComposableStablePoolRates\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/interfaces/external/balancer/pool-stable/IComposableStablePoolRates.sol\":{\"keccak256\":\"0xfd97f2bdcea19f4ecd28966a6c0e4f3a70b3bc48a85a8f7a5fe8076e65f01509\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6e9ad9b279a719dcf5fc7e7157e3e1aacb8ccb1d7af508502bbbd309156b1789\",\"dweb:/ipfs/QmSEenJFb4rNAASgCKhsae6ERVvtjhAvKWWGP7Ac6byUn9\"]},\"src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTokenRateCacheDuration"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateTokenRateCache"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "setTokenRateCacheDuration(address,uint256)": {
            "details": "Sets a new duration for a token rate cache. It reverts if there was no rate provider set initially. Note this function also updates the current cached value.",
            "params": {
              "duration": "Number of seconds until the current token rate is fetched again."
            }
          },
          "updateTokenRateCache(address)": {
            "details": "Forces a rate cache hit for a token. It will revert if the requested token does not have an associated rate provider."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/external/balancer/pool-stable/IComposableStablePoolRates.sol": "IComposableStablePoolRates"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/external/balancer/pool-stable/IComposableStablePoolRates.sol": {
        "keccak256": "0xfd97f2bdcea19f4ecd28966a6c0e4f3a70b3bc48a85a8f7a5fe8076e65f01509",
        "urls": [
          "bzz-raw://6e9ad9b279a719dcf5fc7e7157e3e1aacb8ccb1d7af508502bbbd309156b1789",
          "dweb:/ipfs/QmSEenJFb4rNAASgCKhsae6ERVvtjhAvKWWGP7Ac6byUn9"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol": {
        "keccak256": "0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835",
        "urls": [
          "bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f",
          "dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/external/balancer/pool-stable/IComposableStablePoolRates.sol",
    "id": 58272,
    "exportedSymbols": {
      "IComposableStablePoolRates": [
        58271
      ],
      "IERC20": [
        60345
      ]
    },
    "nodeType": "SourceUnit",
    "src": "688:693:127",
    "nodes": [
      {
        "id": 58253,
        "nodeType": "PragmaDirective",
        "src": "688:23:127",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 58254,
        "nodeType": "ImportDirective",
        "src": "713:51:127",
        "nodes": [],
        "absolutePath": "src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol",
        "file": "../solidity-utils/openzeppelin/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58272,
        "sourceUnit": 60346,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58271,
        "nodeType": "ContractDefinition",
        "src": "766:614:127",
        "nodes": [
          {
            "id": 58261,
            "nodeType": "FunctionDefinition",
            "src": "962:53:127",
            "nodes": [],
            "documentation": {
              "id": 58255,
              "nodeType": "StructuredDocumentation",
              "src": "809:148:127",
              "text": " @dev Forces a rate cache hit for a token.\n It will revert if the requested token does not have an associated rate provider."
            },
            "functionSelector": "2df2c7c0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateTokenRateCache",
            "nameLocation": "971:20:127",
            "parameters": {
              "id": 58259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58258,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "999:5:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 58261,
                  "src": "992:12:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$60345",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 58257,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 58256,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60345,
                      "src": "992:6:127"
                    },
                    "referencedDeclaration": 60345,
                    "src": "992:6:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$60345",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "991:14:127"
            },
            "returnParameters": {
              "id": 58260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1014:0:127"
            },
            "scope": 58271,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 58270,
            "nodeType": "FunctionDefinition",
            "src": "1302:76:127",
            "nodes": [],
            "documentation": {
              "id": 58262,
              "nodeType": "StructuredDocumentation",
              "src": "1021:276:127",
              "text": " @dev Sets a new duration for a token rate cache. It reverts if there was no rate provider set initially.\n Note this function also updates the current cached value.\n @param duration Number of seconds until the current token rate is fetched again."
            },
            "functionSelector": "f4b7964d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setTokenRateCacheDuration",
            "nameLocation": "1311:25:127",
            "parameters": {
              "id": 58268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58265,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1344:5:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 58270,
                  "src": "1337:12:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$60345",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 58264,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 58263,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 60345,
                      "src": "1337:6:127"
                    },
                    "referencedDeclaration": 60345,
                    "src": "1337:6:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$60345",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58267,
                  "mutability": "mutable",
                  "name": "duration",
                  "nameLocation": "1359:8:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 58270,
                  "src": "1351:16:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1351:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1336:32:127"
            },
            "returnParameters": {
              "id": 58269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1377:0:127"
            },
            "scope": 58271,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IComposableStablePoolRates",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          58271
        ],
        "name": "IComposableStablePoolRates",
        "nameLocation": "776:26:127",
        "scope": 58272,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 127
}