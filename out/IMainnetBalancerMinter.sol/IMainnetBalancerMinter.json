{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "gauge",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minted",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "allowed_to_mint_for",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalancerToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalancerTokenAdmin",
      "outputs": [
        {
          "internalType": "contract IBalancerTokenAdmin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGaugeController",
      "outputs": [
        {
          "internalType": "contract IGaugeController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getMinterApproval",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "gauge",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "gauge",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "mintFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "gauges",
          "type": "address[]"
        }
      ],
      "name": "mintMany",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "gauges",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "mintManyFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "gauge",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "mint_for",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[8]",
          "name": "gauges",
          "type": "address[8]"
        }
      ],
      "name": "mint_many",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "gauge",
          "type": "address"
        }
      ],
      "name": "minted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approval",
          "type": "bool"
        }
      ],
      "name": "setMinterApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approval",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "setMinterApprovalWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "toggle_approve_mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowed_to_mint_for(address,address)": "a0990033",
    "getBalancerToken()": "c0039699",
    "getBalancerTokenAdmin()": "e6dec36f",
    "getGaugeController()": "58de9ade",
    "getMinterApproval(address,address)": "3c543bc6",
    "mint(address)": "6a627842",
    "mintFor(address,address)": "7504a15d",
    "mintMany(address[])": "397ada21",
    "mintManyFor(address[],address)": "3b9f7384",
    "mint_for(address,address)": "27f18ae3",
    "mint_many(address[8])": "a51e1904",
    "minted(address,address)": "8b752bb0",
    "setMinterApproval(address,bool)": "0de54ba0",
    "setMinterApprovalWithSignature(address,bool,address,uint256,uint8,bytes32,bytes32)": "c6542794",
    "toggle_approve_mint(address)": "dd289d60"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minted\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"allowed_to_mint_for\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalancerToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalancerTokenAdmin\",\"outputs\":[{\"internalType\":\"contract IBalancerTokenAdmin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGaugeController\",\"outputs\":[{\"internalType\":\"contract IGaugeController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getMinterApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"mintFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"gauges\",\"type\":\"address[]\"}],\"name\":\"mintMany\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"gauges\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"mintManyFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"mint_for\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[8]\",\"name\":\"gauges\",\"type\":\"address[8]\"}],\"name\":\"mint_many\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"}],\"name\":\"minted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approval\",\"type\":\"bool\"}],\"name\":\"setMinterApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approval\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"setMinterApprovalWithSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"toggle_approve_mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Full L1 Balancer minter interface with singleton getters.\",\"kind\":\"dev\",\"methods\":{\"mint(address)\":{\"params\":{\"gauge\":\"`LiquidityGauge` address to get mintable amount from\"}},\"mintFor(address,address)\":{\"details\":\"Only possible when `msg.sender` has been approved by `user` to mint on their behalf\",\"params\":{\"gauge\":\"`LiquidityGauge` address to get mintable amount from\",\"user\":\"Address to mint to\"}},\"mintMany(address[])\":{\"params\":{\"gauges\":\"List of `LiquidityGauge` addresses\"}},\"mintManyFor(address[],address)\":{\"details\":\"Only possible when `msg.sender` has been approved by `user` to mint on their behalf\",\"params\":{\"gauges\":\"List of `LiquidityGauge` addresses\",\"user\":\"Address to mint to\"}},\"mint_for(address,address)\":{\"details\":\"Only possible when `msg.sender` has been approved by `user` to mint on their behalf\",\"params\":{\"gauge\":\"`LiquidityGauge` address to get mintable amount from\",\"user\":\"Address to mint to\"}},\"mint_many(address[8])\":{\"details\":\"This function is not recommended as `mintMany()` is more flexible and gas efficient\",\"params\":{\"gauges\":\"List of `LiquidityGauge` addresses\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowed_to_mint_for(address,address)\":{\"notice\":\"Whether `minter` is approved to mint tokens for `user`\"},\"getBalancerToken()\":{\"notice\":\"Returns the address of the Balancer Governance Token\"},\"getBalancerTokenAdmin()\":{\"notice\":\"Returns the address of the Balancer Token Admin contract\"},\"getGaugeController()\":{\"notice\":\"Returns the address of the Gauge Controller\"},\"getMinterApproval(address,address)\":{\"notice\":\"Whether `minter` is approved to mint tokens for `user`\"},\"mint(address)\":{\"notice\":\"Mint everything which belongs to `msg.sender` and send to them\"},\"mintFor(address,address)\":{\"notice\":\"Mint tokens for `user`\"},\"mintMany(address[])\":{\"notice\":\"Mint everything which belongs to `msg.sender` across multiple gauges\"},\"mintManyFor(address[],address)\":{\"notice\":\"Mint tokens for `user` across multiple gauges\"},\"mint_for(address,address)\":{\"notice\":\"Mint tokens for `user`\"},\"mint_many(address[8])\":{\"notice\":\"Mint everything which belongs to `msg.sender` across multiple gauges\"},\"minted(address,address)\":{\"notice\":\"The total number of tokens minted for `user` from `gauge`\"},\"setMinterApproval(address,bool)\":{\"notice\":\"Set whether `minter` is approved to mint tokens on your behalf\"},\"setMinterApprovalWithSignature(address,bool,address,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Set whether `minter` is approved to mint tokens on behalf of `user`, who has signed a message authorizing them.\"},\"toggle_approve_mint(address)\":{\"notice\":\"Toggle whether `minter` is approved to mint tokens for `user`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/external/balancer/liquidity-mining/IMainnetBalancerMinter.sol\":\"IMainnetBalancerMinter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/interfaces/external/balancer/liquidity-mining/IAuthorizerAdaptor.sol\":{\"keccak256\":\"0x1a9bad00c0084984cd3364cfcdeaece137157816fe8078f706ed78adc803cad7\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d69ccb7c506a7b56fe8f4e59ee10595d3e5cbb881e8215fdda879ec7bf34a5c6\",\"dweb:/ipfs/QmZc3HoxcdRivJ8xePXBxceAtvxo8LA7P8Rf3pjjED9e7y\"]},\"src/interfaces/external/balancer/liquidity-mining/IBalancerMinter.sol\":{\"keccak256\":\"0x57c8b7d70735acf87d479398aa31fbd0c078835e59cb0db24fb75818d190052c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://73521a8258bdd64dddebdb2216b21fe2b684fa2edb5e97e5c117279f81ef9025\",\"dweb:/ipfs/QmW5kFvgKiqkxUJyWs7MZykKHjfBpthks9wha433dNeEQm\"]},\"src/interfaces/external/balancer/liquidity-mining/IBalancerToken.sol\":{\"keccak256\":\"0xf39563e71b99bb5bf6ce4d4e4a8b61ef6c5b3c7bf5e31b7ff8cec240fdf2d35f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://6586800570f10d6b9a610adda486a9388cbe087fdc395348b84cfb50f9e16659\",\"dweb:/ipfs/QmeV54xwTwSkwxUJ1G5j8X7MnKR43jXZQdN9VMUEJ23RWi\"]},\"src/interfaces/external/balancer/liquidity-mining/IBalancerTokenAdmin.sol\":{\"keccak256\":\"0x440ea0bb10bf14da70c46ebfcf1aba3797fb7a101ab71e740144b82d3cce260a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3be43434f2470956e6c361b2012856e65a1e7751b14d317e6be3bebc78bbba6e\",\"dweb:/ipfs/QmSj7usYa7HF67C4zpNfzqkCiLvGpd3V5oowhuudbLb3QX\"]},\"src/interfaces/external/balancer/liquidity-mining/IGaugeController.sol\":{\"keccak256\":\"0xe5fb4837f4dbe3d0a3a00ca489ebfa2b51cf4145a9a1b8c77c1ad7caeb9ad2e4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://120b30fc0e0aa38d49cb3679d2456847e25ed05c281834e414436f0a9abe4e90\",\"dweb:/ipfs/QmNr6PJJJj36BtaMnjxWEg7AbPZpXvzWm57V8YGJAVfcf3\"]},\"src/interfaces/external/balancer/liquidity-mining/ILMGetters.sol\":{\"keccak256\":\"0xe620ace2dab42b8a1b617fca9990c64ba9c1da2c711402e685d2557c73483a69\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1af6eaabc697f2ced92b42d87899ab06f2786706621367ec0f22a7a600f5796e\",\"dweb:/ipfs/QmTNeAuJe2fzUB9GrzPyqK2PDvnBFoeuQ6jAkfp9NgprGh\"]},\"src/interfaces/external/balancer/liquidity-mining/IMainnetBalancerMinter.sol\":{\"keccak256\":\"0x8be926e279cecb1c9b3540b5fa0a317ffb325c0a4001da34cbc67f0fc2229a01\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7eda1c619f975b29a075e0ce71ff977d4dcf345e01f2e5d289e0f7957cb0886c\",\"dweb:/ipfs/QmVzv82DtsSxmQaSgGQp68RmUW5UwfrzhR524in7Q1taLj\"]},\"src/interfaces/external/balancer/liquidity-mining/ISmartWalletChecker.sol\":{\"keccak256\":\"0x8f76f086f3d153b7542a027abdf7a5c5ca71acef1525d9a0a2219e561133c42c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://10e75e488da4be267b28819a0fad4507a42476f14136a8cf6c283bc2d14515d9\",\"dweb:/ipfs/QmfXQibu6k9zCT55DGWTTHaD4JkeTyu8Rnugfkx7GpknWk\"]},\"src/interfaces/external/balancer/liquidity-mining/IVotingEscrow.sol\":{\"keccak256\":\"0xbf08c2800a22fb2f2b6bdfb6fc18aefb8a1fe302958a1053c6cc952b5e64b5e0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://41375a51dd8822d3c46047621dcad60e66e272af7f7d58b0dfd7712d40c30ed6\",\"dweb:/ipfs/QmbsaZkB5NEQJ1UtiWRja8LuLesyKaFVfq9g1L1HxSLC6g\"]},\"src/interfaces/external/balancer/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x8032fd6d7f660d9536d252897336462bb932d1e91bd3b87c087be017a35dc842\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3724cffd85daa36371999e0e9ea56617df12fd7f2cc5c123139705766e3b89a1\",\"dweb:/ipfs/QmaM2wHuKrpKcc8mRhdYmXqPVAimHjGK1xubPWXKafiKYa\"]},\"src/interfaces/external/balancer/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x52bd09272e9ec2cff838df757e8b690ff4ca3f4f07e9edd9b711e31e474dd979\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://92ae86c99ce4b92fc666a4c6053bc5ae2932d07b23471647cae7c541c68071b3\",\"dweb:/ipfs/QmeKHMVTVLfG5MKQ7ewM7uwB41WEXkDKhkkL3qCd7mokFo\"]},\"src/interfaces/external/balancer/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xf952ad04a5d4e8523212315e19b8d874e13ceadb7dbc1f5025510da1e153405c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://81d7e364e8c7a76879f9be650559d3de53879918ab721372931d0e51daa464b5\",\"dweb:/ipfs/QmNyXjvxr3cXzVeBaPrApS9fdjufyN6dXtjGy746xxtj2z\"]},\"src/interfaces/external/balancer/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x90278f677649701309ab0902f5bca2fd0d9603e5ce7193b15cf05a7c5582c3b9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://991dce71671de9fb0f5fafda69994705e358a5cb235bc3acf961dbc9895b6dd6\",\"dweb:/ipfs/QmP7479cjgvMa2DjXNSB6gvHZ2WibU4TGb3DTjqw6UuFb6\"]},\"src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"src/interfaces/external/balancer/vault/IAsset.sol\":{\"keccak256\":\"0x746354db670eb3b94179963b522c4deb0b9854483ab293e3025689749923ebef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bcd5a7e0519f94c25f4e3b568b8c0446b2240bd3808c56c3b498a6fed459b2e4\",\"dweb:/ipfs/QmRXvcCy9oKhwPMr8QQ74pg9jormcgq3GHmLSGTDhUWAsn\"]},\"src/interfaces/external/balancer/vault/IAuthorizer.sol\":{\"keccak256\":\"0x4adfebbc478ab323d0679386ef8e2384f5205eb280f72757c151eca62ea4f91b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://49a34c9ad9cb559931b465cea2d570ab015751c6dbc4a52eab8c36b5b949eec1\",\"dweb:/ipfs/QmUiUSZz8gjANUcTqaPCfNkUp3gpjt8Qq2z4UWuQWhaK34\"]},\"src/interfaces/external/balancer/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xef16377e5ee7ac8151fe8abc3f7b8f0a420008ae1c1336f3cbaea5e171403a43\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ca460a387ce27682beecc1f93a07c7ef6139504f2d4e2fce715abe82b6d2b039\",\"dweb:/ipfs/QmS8QgcAqhtHepcf8LYGToutbhsUXaTE7UNLQQi4fBJsUC\"]},\"src/interfaces/external/balancer/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xa42e8b311517ce70dd7f2af6b497603a81c3dd678961a5ffd8a2968eff6b7b5a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9a11ea954c234e348896cec60165624d71e9fe7b44d7341d74e3bdc7790f2b6a\",\"dweb:/ipfs/QmNq1f6yAeJawBKpMmfNyoQ84nZquQ78YtT3tt3dMBtyCK\"]},\"src/interfaces/external/balancer/vault/IVault.sol\":{\"keccak256\":\"0x08d254ba643e02507305b570f794a75b5439d2ae799f761d26d3a2fd77f6d2fb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2de3bcdb5d5805a44e2c643bc76bc14858825b2b018049f89962c8bc532ac24d\",\"dweb:/ipfs/QmfWZGKRChzwe97R8nqShjKdRX5k8Tp9HKwr7UAq9rCg1m\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "gauge",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "minted",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowed_to_mint_for",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBalancerToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBalancerTokenAdmin",
          "outputs": [
            {
              "internalType": "contract IBalancerTokenAdmin",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGaugeController",
          "outputs": [
            {
              "internalType": "contract IGaugeController",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMinterApproval",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "gauge",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "gauge",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "gauges",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintMany",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "gauges",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintManyFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "gauge",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint_for"
        },
        {
          "inputs": [
            {
              "internalType": "address[8]",
              "name": "gauges",
              "type": "address[8]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint_many"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "gauge",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "minted",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approval",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinterApproval"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approval",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinterApprovalWithSignature"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "toggle_approve_mint"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "mint(address)": {
            "params": {
              "gauge": "`LiquidityGauge` address to get mintable amount from"
            }
          },
          "mintFor(address,address)": {
            "details": "Only possible when `msg.sender` has been approved by `user` to mint on their behalf",
            "params": {
              "gauge": "`LiquidityGauge` address to get mintable amount from",
              "user": "Address to mint to"
            }
          },
          "mintMany(address[])": {
            "params": {
              "gauges": "List of `LiquidityGauge` addresses"
            }
          },
          "mintManyFor(address[],address)": {
            "details": "Only possible when `msg.sender` has been approved by `user` to mint on their behalf",
            "params": {
              "gauges": "List of `LiquidityGauge` addresses",
              "user": "Address to mint to"
            }
          },
          "mint_for(address,address)": {
            "details": "Only possible when `msg.sender` has been approved by `user` to mint on their behalf",
            "params": {
              "gauge": "`LiquidityGauge` address to get mintable amount from",
              "user": "Address to mint to"
            }
          },
          "mint_many(address[8])": {
            "details": "This function is not recommended as `mintMany()` is more flexible and gas efficient",
            "params": {
              "gauges": "List of `LiquidityGauge` addresses"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "allowed_to_mint_for(address,address)": {
            "notice": "Whether `minter` is approved to mint tokens for `user`"
          },
          "getBalancerToken()": {
            "notice": "Returns the address of the Balancer Governance Token"
          },
          "getBalancerTokenAdmin()": {
            "notice": "Returns the address of the Balancer Token Admin contract"
          },
          "getGaugeController()": {
            "notice": "Returns the address of the Gauge Controller"
          },
          "getMinterApproval(address,address)": {
            "notice": "Whether `minter` is approved to mint tokens for `user`"
          },
          "mint(address)": {
            "notice": "Mint everything which belongs to `msg.sender` and send to them"
          },
          "mintFor(address,address)": {
            "notice": "Mint tokens for `user`"
          },
          "mintMany(address[])": {
            "notice": "Mint everything which belongs to `msg.sender` across multiple gauges"
          },
          "mintManyFor(address[],address)": {
            "notice": "Mint tokens for `user` across multiple gauges"
          },
          "mint_for(address,address)": {
            "notice": "Mint tokens for `user`"
          },
          "mint_many(address[8])": {
            "notice": "Mint everything which belongs to `msg.sender` across multiple gauges"
          },
          "minted(address,address)": {
            "notice": "The total number of tokens minted for `user` from `gauge`"
          },
          "setMinterApproval(address,bool)": {
            "notice": "Set whether `minter` is approved to mint tokens on your behalf"
          },
          "setMinterApprovalWithSignature(address,bool,address,uint256,uint8,bytes32,bytes32)": {
            "notice": "Set whether `minter` is approved to mint tokens on behalf of `user`, who has signed a message authorizing them."
          },
          "toggle_approve_mint(address)": {
            "notice": "Toggle whether `minter` is approved to mint tokens for `user`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/external/balancer/liquidity-mining/IMainnetBalancerMinter.sol": "IMainnetBalancerMinter"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/external/balancer/liquidity-mining/IAuthorizerAdaptor.sol": {
        "keccak256": "0x1a9bad00c0084984cd3364cfcdeaece137157816fe8078f706ed78adc803cad7",
        "urls": [
          "bzz-raw://d69ccb7c506a7b56fe8f4e59ee10595d3e5cbb881e8215fdda879ec7bf34a5c6",
          "dweb:/ipfs/QmZc3HoxcdRivJ8xePXBxceAtvxo8LA7P8Rf3pjjED9e7y"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/IBalancerMinter.sol": {
        "keccak256": "0x57c8b7d70735acf87d479398aa31fbd0c078835e59cb0db24fb75818d190052c",
        "urls": [
          "bzz-raw://73521a8258bdd64dddebdb2216b21fe2b684fa2edb5e97e5c117279f81ef9025",
          "dweb:/ipfs/QmW5kFvgKiqkxUJyWs7MZykKHjfBpthks9wha433dNeEQm"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/IBalancerToken.sol": {
        "keccak256": "0xf39563e71b99bb5bf6ce4d4e4a8b61ef6c5b3c7bf5e31b7ff8cec240fdf2d35f",
        "urls": [
          "bzz-raw://6586800570f10d6b9a610adda486a9388cbe087fdc395348b84cfb50f9e16659",
          "dweb:/ipfs/QmeV54xwTwSkwxUJ1G5j8X7MnKR43jXZQdN9VMUEJ23RWi"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/IBalancerTokenAdmin.sol": {
        "keccak256": "0x440ea0bb10bf14da70c46ebfcf1aba3797fb7a101ab71e740144b82d3cce260a",
        "urls": [
          "bzz-raw://3be43434f2470956e6c361b2012856e65a1e7751b14d317e6be3bebc78bbba6e",
          "dweb:/ipfs/QmSj7usYa7HF67C4zpNfzqkCiLvGpd3V5oowhuudbLb3QX"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/IGaugeController.sol": {
        "keccak256": "0xe5fb4837f4dbe3d0a3a00ca489ebfa2b51cf4145a9a1b8c77c1ad7caeb9ad2e4",
        "urls": [
          "bzz-raw://120b30fc0e0aa38d49cb3679d2456847e25ed05c281834e414436f0a9abe4e90",
          "dweb:/ipfs/QmNr6PJJJj36BtaMnjxWEg7AbPZpXvzWm57V8YGJAVfcf3"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/ILMGetters.sol": {
        "keccak256": "0xe620ace2dab42b8a1b617fca9990c64ba9c1da2c711402e685d2557c73483a69",
        "urls": [
          "bzz-raw://1af6eaabc697f2ced92b42d87899ab06f2786706621367ec0f22a7a600f5796e",
          "dweb:/ipfs/QmTNeAuJe2fzUB9GrzPyqK2PDvnBFoeuQ6jAkfp9NgprGh"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/IMainnetBalancerMinter.sol": {
        "keccak256": "0x8be926e279cecb1c9b3540b5fa0a317ffb325c0a4001da34cbc67f0fc2229a01",
        "urls": [
          "bzz-raw://7eda1c619f975b29a075e0ce71ff977d4dcf345e01f2e5d289e0f7957cb0886c",
          "dweb:/ipfs/QmVzv82DtsSxmQaSgGQp68RmUW5UwfrzhR524in7Q1taLj"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/ISmartWalletChecker.sol": {
        "keccak256": "0x8f76f086f3d153b7542a027abdf7a5c5ca71acef1525d9a0a2219e561133c42c",
        "urls": [
          "bzz-raw://10e75e488da4be267b28819a0fad4507a42476f14136a8cf6c283bc2d14515d9",
          "dweb:/ipfs/QmfXQibu6k9zCT55DGWTTHaD4JkeTyu8Rnugfkx7GpknWk"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/IVotingEscrow.sol": {
        "keccak256": "0xbf08c2800a22fb2f2b6bdfb6fc18aefb8a1fe302958a1053c6cc952b5e64b5e0",
        "urls": [
          "bzz-raw://41375a51dd8822d3c46047621dcad60e66e272af7f7d58b0dfd7712d40c30ed6",
          "dweb:/ipfs/QmbsaZkB5NEQJ1UtiWRja8LuLesyKaFVfq9g1L1HxSLC6g"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/helpers/IAuthentication.sol": {
        "keccak256": "0x8032fd6d7f660d9536d252897336462bb932d1e91bd3b87c087be017a35dc842",
        "urls": [
          "bzz-raw://3724cffd85daa36371999e0e9ea56617df12fd7f2cc5c123139705766e3b89a1",
          "dweb:/ipfs/QmaM2wHuKrpKcc8mRhdYmXqPVAimHjGK1xubPWXKafiKYa"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/helpers/ISignaturesValidator.sol": {
        "keccak256": "0x52bd09272e9ec2cff838df757e8b690ff4ca3f4f07e9edd9b711e31e474dd979",
        "urls": [
          "bzz-raw://92ae86c99ce4b92fc666a4c6053bc5ae2932d07b23471647cae7c541c68071b3",
          "dweb:/ipfs/QmeKHMVTVLfG5MKQ7ewM7uwB41WEXkDKhkkL3qCd7mokFo"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/helpers/ITemporarilyPausable.sol": {
        "keccak256": "0xf952ad04a5d4e8523212315e19b8d874e13ceadb7dbc1f5025510da1e153405c",
        "urls": [
          "bzz-raw://81d7e364e8c7a76879f9be650559d3de53879918ab721372931d0e51daa464b5",
          "dweb:/ipfs/QmNyXjvxr3cXzVeBaPrApS9fdjufyN6dXtjGy746xxtj2z"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/misc/IWETH.sol": {
        "keccak256": "0x90278f677649701309ab0902f5bca2fd0d9603e5ce7193b15cf05a7c5582c3b9",
        "urls": [
          "bzz-raw://991dce71671de9fb0f5fafda69994705e358a5cb235bc3acf961dbc9895b6dd6",
          "dweb:/ipfs/QmP7479cjgvMa2DjXNSB6gvHZ2WibU4TGb3DTjqw6UuFb6"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol": {
        "keccak256": "0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835",
        "urls": [
          "bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f",
          "dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/balancer/vault/IAsset.sol": {
        "keccak256": "0x746354db670eb3b94179963b522c4deb0b9854483ab293e3025689749923ebef",
        "urls": [
          "bzz-raw://bcd5a7e0519f94c25f4e3b568b8c0446b2240bd3808c56c3b498a6fed459b2e4",
          "dweb:/ipfs/QmRXvcCy9oKhwPMr8QQ74pg9jormcgq3GHmLSGTDhUWAsn"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IAuthorizer.sol": {
        "keccak256": "0x4adfebbc478ab323d0679386ef8e2384f5205eb280f72757c151eca62ea4f91b",
        "urls": [
          "bzz-raw://49a34c9ad9cb559931b465cea2d570ab015751c6dbc4a52eab8c36b5b949eec1",
          "dweb:/ipfs/QmUiUSZz8gjANUcTqaPCfNkUp3gpjt8Qq2z4UWuQWhaK34"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IFlashLoanRecipient.sol": {
        "keccak256": "0xef16377e5ee7ac8151fe8abc3f7b8f0a420008ae1c1336f3cbaea5e171403a43",
        "urls": [
          "bzz-raw://ca460a387ce27682beecc1f93a07c7ef6139504f2d4e2fce715abe82b6d2b039",
          "dweb:/ipfs/QmS8QgcAqhtHepcf8LYGToutbhsUXaTE7UNLQQi4fBJsUC"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IProtocolFeesCollector.sol": {
        "keccak256": "0xa42e8b311517ce70dd7f2af6b497603a81c3dd678961a5ffd8a2968eff6b7b5a",
        "urls": [
          "bzz-raw://9a11ea954c234e348896cec60165624d71e9fe7b44d7341d74e3bdc7790f2b6a",
          "dweb:/ipfs/QmNq1f6yAeJawBKpMmfNyoQ84nZquQ78YtT3tt3dMBtyCK"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IVault.sol": {
        "keccak256": "0x08d254ba643e02507305b570f794a75b5439d2ae799f761d26d3a2fd77f6d2fb",
        "urls": [
          "bzz-raw://2de3bcdb5d5805a44e2c643bc76bc14858825b2b018049f89962c8bc532ac24d",
          "dweb:/ipfs/QmfWZGKRChzwe97R8nqShjKdRX5k8Tp9HKwr7UAq9rCg1m"
        ],
        "license": "GPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/external/balancer/liquidity-mining/IMainnetBalancerMinter.sol",
    "id": 57405,
    "exportedSymbols": {
      "IAsset": [
        61808
      ],
      "IAuthentication": [
        60077
      ],
      "IAuthorizer": [
        61823
      ],
      "IAuthorizerAdaptor": [
        56468
      ],
      "IBalancerMinter": [
        56638
      ],
      "IBalancerToken": [
        56715
      ],
      "IBalancerTokenAdmin": [
        56769
      ],
      "IERC20": [
        60345
      ],
      "IFlashLoanRecipient": [
        62001
      ],
      "IGaugeController": [
        57291
      ],
      "ILMGetters": [
        57324
      ],
      "IMainnetBalancerMinter": [
        57404
      ],
      "IProtocolFeesCollector": [
        62141
      ],
      "ISignaturesValidator": [
        60129
      ],
      "ISmartWalletChecker": [
        57680
      ],
      "ITemporarilyPausable": [
        60148
      ],
      "IVault": [
        63277
      ],
      "IVotingEscrow": [
        58008
      ],
      "IWETH": [
        60253
      ]
    },
    "nodeType": "SourceUnit",
    "src": "688:280:111",
    "nodes": [
      {
        "id": 57396,
        "nodeType": "PragmaDirective",
        "src": "688:23:111",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 57397,
        "nodeType": "ImportDirective",
        "src": "713:31:111",
        "nodes": [],
        "absolutePath": "src/interfaces/external/balancer/liquidity-mining/IBalancerMinter.sol",
        "file": "./IBalancerMinter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57405,
        "sourceUnit": 56639,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 57398,
        "nodeType": "ImportDirective",
        "src": "745:26:111",
        "nodes": [],
        "absolutePath": "src/interfaces/external/balancer/liquidity-mining/ILMGetters.sol",
        "file": "./ILMGetters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57405,
        "sourceUnit": 57325,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 57404,
        "nodeType": "ContractDefinition",
        "src": "847:120:111",
        "nodes": [],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 57400,
              "name": "IBalancerMinter",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56638,
              "src": "883:15:111"
            },
            "id": 57401,
            "nodeType": "InheritanceSpecifier",
            "src": "883:15:111"
          },
          {
            "baseName": {
              "id": 57402,
              "name": "ILMGetters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57324,
              "src": "900:10:111"
            },
            "id": 57403,
            "nodeType": "InheritanceSpecifier",
            "src": "900:10:111"
          }
        ],
        "canonicalName": "IMainnetBalancerMinter",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 57399,
          "nodeType": "StructuredDocumentation",
          "src": "773:73:111",
          "text": " @dev Full L1 Balancer minter interface with singleton getters."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          57404,
          57324,
          56638
        ],
        "name": "IMainnetBalancerMinter",
        "nameLocation": "857:22:111",
        "scope": 57405,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0-or-later"
  },
  "id": 111
}