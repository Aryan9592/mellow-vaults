{
  "abi": [
    {
      "inputs": [],
      "name": "commitDelayedProtocolParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "commitDelayedStrategyParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "commitInternalParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "fee_",
          "type": "uint24"
        },
        {
          "internalType": "address",
          "name": "helper_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "masterChef_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "erc20Vault_",
          "type": "address"
        }
      ],
      "name": "createVault",
      "outputs": [
        {
          "internalType": "contract IPancakeSwapVault",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delayedProtocolParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IPancakeNonfungiblePositionManager",
              "name": "positionManager",
              "type": "address"
            },
            {
              "internalType": "contract IOracle",
              "name": "oracle",
              "type": "address"
            }
          ],
          "internalType": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delayedProtocolParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedProtocolPerVaultParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedStrategyParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "safetyIndicesSet",
              "type": "uint32"
            }
          ],
          "internalType": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedStrategyParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "internalParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "internalParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "swapSlippageD",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "poolForSwap",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "cake",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "underlyingToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "smartRouter",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "averageTickTimespan",
              "type": "uint32"
            }
          ],
          "internalType": "struct IPancakeSwapVaultGovernance.StrategyParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "setStrategyParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IPancakeNonfungiblePositionManager",
              "name": "positionManager",
              "type": "address"
            },
            {
              "internalType": "contract IOracle",
              "name": "oracle",
              "type": "address"
            }
          ],
          "internalType": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "stageDelayedProtocolParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "safetyIndicesSet",
              "type": "uint32"
            }
          ],
          "internalType": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "stageDelayedStrategyParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "newParams",
          "type": "tuple"
        }
      ],
      "name": "stageInternalParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stagedDelayedProtocolParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IPancakeNonfungiblePositionManager",
              "name": "positionManager",
              "type": "address"
            },
            {
              "internalType": "contract IOracle",
              "name": "oracle",
              "type": "address"
            }
          ],
          "internalType": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "stagedDelayedStrategyParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "safetyIndicesSet",
              "type": "uint32"
            }
          ],
          "internalType": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stagedInternalParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "strategyParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "swapSlippageD",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "poolForSwap",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "cake",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "underlyingToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "smartRouter",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "averageTickTimespan",
              "type": "uint32"
            }
          ],
          "internalType": "struct IPancakeSwapVaultGovernance.StrategyParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "commitDelayedProtocolParams()": "98347a5d",
    "commitDelayedStrategyParams(uint256)": "0bdedd56",
    "commitInternalParams()": "d4a07d34",
    "createVault(address[],address,uint24,address,address,address)": "ae12783f",
    "delayedProtocolParams()": "d34cc380",
    "delayedProtocolParamsTimestamp()": "e4af6e79",
    "delayedProtocolPerVaultParamsTimestamp(uint256)": "511ce798",
    "delayedStrategyParams(uint256)": "8860d248",
    "delayedStrategyParamsTimestamp(uint256)": "6707acee",
    "internalParams()": "7ac46fbb",
    "internalParamsTimestamp()": "1c7f4c73",
    "setStrategyParams(uint256,(uint256,address,address,address,address,uint32))": "b0e6ba34",
    "stageDelayedProtocolParams((address,address))": "b2fe31ad",
    "stageDelayedStrategyParams(uint256,(uint32))": "25281714",
    "stageInternalParams((address,address,address))": "09946538",
    "stagedDelayedProtocolParams()": "c2cbdc67",
    "stagedDelayedStrategyParams(uint256)": "59f3dae7",
    "stagedInternalParams()": "86c6be3e",
    "strategyParams(uint256)": "12466b68"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"commitDelayedProtocolParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"commitDelayedStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee_\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"helper_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"masterChef_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Vault_\",\"type\":\"address\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"contract IPancakeSwapVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedProtocolParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IPancakeNonfungiblePositionManager\",\"name\":\"positionManager\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"internalType\":\"struct IPancakeSwapVaultGovernance.DelayedProtocolParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedProtocolParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedProtocolPerVaultParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedStrategyParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"safetyIndicesSet\",\"type\":\"uint32\"}],\"internalType\":\"struct IPancakeSwapVaultGovernance.DelayedStrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedStrategyParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"swapSlippageD\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poolForSwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"smartRouter\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"averageTickTimespan\",\"type\":\"uint32\"}],\"internalType\":\"struct IPancakeSwapVaultGovernance.StrategyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"setStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IPancakeNonfungiblePositionManager\",\"name\":\"positionManager\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"internalType\":\"struct IPancakeSwapVaultGovernance.DelayedProtocolParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"stageDelayedProtocolParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"safetyIndicesSet\",\"type\":\"uint32\"}],\"internalType\":\"struct IPancakeSwapVaultGovernance.DelayedStrategyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"stageDelayedStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"newParams\",\"type\":\"tuple\"}],\"name\":\"stageInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedDelayedProtocolParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IPancakeNonfungiblePositionManager\",\"name\":\"positionManager\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"internalType\":\"struct IPancakeSwapVaultGovernance.DelayedProtocolParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"stagedDelayedStrategyParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"safetyIndicesSet\",\"type\":\"uint32\"}],\"internalType\":\"struct IPancakeSwapVaultGovernance.DelayedStrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedInternalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"strategyParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"swapSlippageD\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poolForSwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"smartRouter\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"averageTickTimespan\",\"type\":\"uint32\"}],\"internalType\":\"struct IPancakeSwapVaultGovernance.StrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"commitDelayedStrategyParams(uint256)\":{\"details\":\"Can only be called after delayedStrategyParamsTimestamp\",\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"createVault(address[],address,uint24,address,address,address)\":{\"params\":{\"fee_\":\"Fee of the UniV3 pool\",\"helper_\":\"address of helper for UniV3 arithmetic with ticks\",\"owner_\":\"Owner of the vault NFT\",\"vaultTokens_\":\"ERC20 tokens that will be managed by this Vault\"}},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"delayedStrategyParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"delayedStrategyParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"setStrategyParams(uint256,(uint256,address,address,address,address,uint32))\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"stageDelayedProtocolParams((address,address))\":{\"params\":{\"params\":\"New params\"}},\"stageDelayedStrategyParams(uint256,(uint32))\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\",\"params\":\"New params\"}},\"stageInternalParams((address,address,address))\":{\"params\":{\"newParams\":\"New Internal Params\"}},\"stagedDelayedStrategyParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"stagedInternalParams()\":{\"details\":\"The Internal Params could be committed after internalParamsTimestamp\"},\"strategyParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"commitDelayedProtocolParams()\":{\"notice\":\"Commit Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\"},\"commitDelayedStrategyParams(uint256)\":{\"notice\":\"Commit Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay.\"},\"commitInternalParams()\":{\"notice\":\"Commit staged Internal Params.\"},\"createVault(address[],address,uint24,address,address,address)\":{\"notice\":\"Deploys a new vault.\"},\"delayedProtocolParams()\":{\"notice\":\"Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\"},\"delayedProtocolParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed.\"},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed.\"},\"delayedStrategyParams(uint256)\":{\"notice\":\"Delayed Strategy Params\"},\"delayedStrategyParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed.\"},\"internalParams()\":{\"notice\":\"Internal Params of the contract.\"},\"internalParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Internal Params could be committed.\"},\"setStrategyParams(uint256,(uint256,address,address,address,address,uint32))\":{\"notice\":\"Delayed Strategy Params staged for commit after delay.\"},\"stageDelayedProtocolParams((address,address))\":{\"notice\":\"Stage Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\"},\"stageDelayedStrategyParams(uint256,(uint32))\":{\"notice\":\"Stage Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay.\"},\"stageInternalParams((address,address,address))\":{\"notice\":\"Stage new Internal Params.\"},\"stagedDelayedProtocolParams()\":{\"notice\":\"Delayed Protocol Params staged for commit after delay.\"},\"stagedDelayedStrategyParams(uint256)\":{\"notice\":\"Delayed Strategy Params staged for commit after delay.\"},\"stagedInternalParams()\":{\"notice\":\"Staged new Internal Params.\"},\"strategyParams(uint256)\":{\"notice\":\"Delayed Strategy Params\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/vaults/IPancakeSwapVaultGovernance.sol\":\"IPancakeSwapVaultGovernance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281\",\"dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b\"]},\"src/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87\",\"dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk\"]},\"src/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50\",\"dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1\"]},\"src/interfaces/external/erc/IERC1271.sol\":{\"keccak256\":\"0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779\",\"dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd\"]},\"src/interfaces/external/pancakeswap/IPancakeNonfungiblePositionManager.sol\":{\"keccak256\":\"0x2c4e79aefc42335fba80144f0d067699807e24c7f3199054ed34729629cd129f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6a7447e742fa1bf468ae1aec5f2b93ac870b4f21ef35bf926574cca3a4a639e3\",\"dweb:/ipfs/QmYiJUU6mV7nTMYat64UNav1Hsq7TSxfT2WaaQErMq3dEW\"]},\"src/interfaces/external/pancakeswap/IPancakeV3Pool.sol\":{\"keccak256\":\"0x03255a87abde262839ddcbb0ad3b1b045ec710cec2f64b997f087ed4c33a0106\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6849d0e311fe5eacc3c86935c0a7099292b41cddd7f2df2782ce5482c260a17b\",\"dweb:/ipfs/QmexQgWXNxhZae6XsBcm2NvxoN8SDeQooDQBvJ7PbLxFLD\"]},\"src/interfaces/external/pancakeswap/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x13cc0099846b5329a0808ba52498087129a628ca69f838a626e8e19c928320cc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3369b299016ef5fc0364f699a4c85ac87f267629a1add8090536a0cd52e9e946\",\"dweb:/ipfs/QmTz7FP8fyPGdQsPbMyZRv34eNcuNw8QwAVSph38tyxpYa\"]},\"src/interfaces/external/pancakeswap/IPeripheryPayments.sol\":{\"keccak256\":\"0xd99977991fa825ec46f13a44ca137bdb801f53d77e141ac066732c49714bdfab\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://154fbf2d218157d3ce46b4a96683b3f26f8bce43e48804dcb5ad8b2dc72552cb\",\"dweb:/ipfs/QmahLuEAzkqAbNp2hi6qJCPnv4QZmDBubXX3F8f5SYoJNy\"]},\"src/interfaces/external/pancakeswap/IPoolInitializer.sol\":{\"keccak256\":\"0x89682f8b38a8c900cf705cd7f2a6fe1ff0d17d940d1e2d02d01ba82664236b6d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ad59f253f9afb1ef514b7fb2efae2f62e86a3d513e6be267951b9b6044125bba\",\"dweb:/ipfs/QmdequarSBA7HBbnvnJrtXY6TjVyu67WFuCEwXTgNkxEuK\"]},\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolActions.sol\":{\"keccak256\":\"0x59ee2c617abe65adac032507772e8c11d23f1ebe3c34c54cd954712b5a417f1c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6db7f40df0dc6c1125e6cb13a8b91eff425b128e269f4df830f57fa36288b3bc\",\"dweb:/ipfs/QmT35pt82WzqFzTuBzRAaCjVrcgtqmTk4x5eLvgeQJEnzE\"]},\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolDerivedState.sol\":{\"keccak256\":\"0xbb8590d870d29ae248f7e50b1fb3d07ac0faf6077aa959e52e875643cff8f575\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5129eac8fe38d2e3ba8a30db0b5fa389efa1119edbbf4b7a058b1a78691417f1\",\"dweb:/ipfs/QmNnRQfGWwxV3VmnBhh5aAjVYUD5K3sPMiw1zn3k2njsbL\"]},\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolEvents.sol\":{\"keccak256\":\"0x3f5f268cabea4583ab138b8408bf876831becb2eda3c3399142539cad4c1b7f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5ecdb61c88c2372fa3782bd52e624b991aa2fff89beae98b831c963dd9bf7144\",\"dweb:/ipfs/QmVH8gFMqWcTj6Fd6MtYXme5GfRYnmAJsmxXErVx37ha4a\"]},\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolImmutables.sol\":{\"keccak256\":\"0x9166871e1f206ff9002fe1864fcc4c7ecde3e745f3a7740485569c9edd2960f2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://56bb208edd594b774bb95b51fbcbcd4dc7fc3e8615499a9306b05539bb31028d\",\"dweb:/ipfs/QmdytBtwQKD44rc5oVPv7SiRdNS4js9JimH2AaFkUvWWJq\"]},\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolOwnerActions.sol\":{\"keccak256\":\"0xb28a50116de98147bb91e35eaeb51b29a7899c16d3d1a99941cd4f13b565550b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5e493a4c2938834d44283af81fb258c1ac320556f382aeeafe00bd7205efeba0\",\"dweb:/ipfs/QmbWYfzDnwWD2vfL69iKVpy9zEHCvJ32kpC4MEAfexkw4X\"]},\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolState.sol\":{\"keccak256\":\"0xf727a5c34395306548e55f765e7fc47c2f485b2f9f068e9a96fee27ddea3a535\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54c278a5906df814f8cc5bf1dc5cd330db0d7383fcc86c5e6a7fb57c16c58432\",\"dweb:/ipfs/QmSDmQTuAwXdhBANEvYpsrEpTEVJbzPYM7f5fXEDxwvkPJ\"]},\"src/interfaces/oracles/IOracle.sol\":{\"keccak256\":\"0x2d89a1f771e68129d47ae26eccf76f969cd2877e9b7190687056f912c3524b53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f378b9f29c18878e73e251ca97abeca819f0789834281ee1399db878f6baedf5\",\"dweb:/ipfs/QmSrFYZWmGdVkgACwwZEfbkPt3kQCSkr6czBi9HVtzNSJg\"]},\"src/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add\",\"dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu\"]},\"src/interfaces/vaults/IIntegrationVault.sol\":{\"keccak256\":\"0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d\",\"dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy\"]},\"src/interfaces/vaults/IPancakeSwapVault.sol\":{\"keccak256\":\"0x43d100383c27c207cae8f1badae9ae54a8f7eb1ed0489077c367d53bd751aca6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7bb043ea24f220fb28f33a143e79fe7afba4f47f9cc7b2854a5fbb99873286ca\",\"dweb:/ipfs/QmSUDqkxw9EDEvb8P3gMUxHyeHtqWxr8tK1LNKKU6SefHC\"]},\"src/interfaces/vaults/IPancakeSwapVaultGovernance.sol\":{\"keccak256\":\"0xd2d1c9a831459441cd545743dfa361486bd25423a1987fca10287a05dc901958\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e15c86f1bf09a8114e650bdd7cd1426a313b34fc012fe1e18d2800cb5ef5873f\",\"dweb:/ipfs/QmYqiNcpv8dcExDaQar7a14EyztQVjxzvpJeGB3FJ3v6DJ\"]},\"src/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1\",\"dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw\"]},\"src/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375\",\"dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitDelayedProtocolParams"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitDelayedStrategyParams"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitInternalParams"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "vaultTokens_",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee_",
              "type": "uint24"
            },
            {
              "internalType": "address",
              "name": "helper_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "masterChef_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc20Vault_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createVault",
          "outputs": [
            {
              "internalType": "contract IPancakeSwapVault",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolParams",
          "outputs": [
            {
              "internalType": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IPancakeNonfungiblePositionManager",
                  "name": "positionManager",
                  "type": "address"
                },
                {
                  "internalType": "contract IOracle",
                  "name": "oracle",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolPerVaultParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedStrategyParams",
          "outputs": [
            {
              "internalType": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "safetyIndicesSet",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedStrategyParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "internalParams",
          "outputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "internalParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            },
            {
              "internalType": "struct IPancakeSwapVaultGovernance.StrategyParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "swapSlippageD",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "poolForSwap",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "cake",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "smartRouter",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "averageTickTimespan",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategyParams"
        },
        {
          "inputs": [
            {
              "internalType": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IPancakeNonfungiblePositionManager",
                  "name": "positionManager",
                  "type": "address"
                },
                {
                  "internalType": "contract IOracle",
                  "name": "oracle",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stageDelayedProtocolParams"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            },
            {
              "internalType": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "safetyIndicesSet",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stageDelayedStrategyParams"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "newParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stageInternalParams"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stagedDelayedProtocolParams",
          "outputs": [
            {
              "internalType": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IPancakeNonfungiblePositionManager",
                  "name": "positionManager",
                  "type": "address"
                },
                {
                  "internalType": "contract IOracle",
                  "name": "oracle",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stagedDelayedStrategyParams",
          "outputs": [
            {
              "internalType": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "safetyIndicesSet",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stagedInternalParams",
          "outputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyParams",
          "outputs": [
            {
              "internalType": "struct IPancakeSwapVaultGovernance.StrategyParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "swapSlippageD",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "poolForSwap",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "cake",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "smartRouter",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "averageTickTimespan",
                  "type": "uint32"
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "commitDelayedStrategyParams(uint256)": {
            "details": "Can only be called after delayedStrategyParamsTimestamp",
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "createVault(address[],address,uint24,address,address,address)": {
            "params": {
              "fee_": "Fee of the UniV3 pool",
              "helper_": "address of helper for UniV3 arithmetic with ticks",
              "owner_": "Owner of the vault NFT",
              "vaultTokens_": "ERC20 tokens that will be managed by this Vault"
            }
          },
          "delayedProtocolPerVaultParamsTimestamp(uint256)": {
            "params": {
              "nft": "Nft of the vault"
            }
          },
          "delayedStrategyParams(uint256)": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "delayedStrategyParamsTimestamp(uint256)": {
            "params": {
              "nft": "Nft of the vault"
            }
          },
          "setStrategyParams(uint256,(uint256,address,address,address,address,uint32))": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "stageDelayedProtocolParams((address,address))": {
            "params": {
              "params": "New params"
            }
          },
          "stageDelayedStrategyParams(uint256,(uint32))": {
            "params": {
              "nft": "VaultRegistry NFT of the vault",
              "params": "New params"
            }
          },
          "stageInternalParams((address,address,address))": {
            "params": {
              "newParams": "New Internal Params"
            }
          },
          "stagedDelayedStrategyParams(uint256)": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "stagedInternalParams()": {
            "details": "The Internal Params could be committed after internalParamsTimestamp"
          },
          "strategyParams(uint256)": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "commitDelayedProtocolParams()": {
            "notice": "Commit Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
          },
          "commitDelayedStrategyParams(uint256)": {
            "notice": "Commit Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay."
          },
          "commitInternalParams()": {
            "notice": "Commit staged Internal Params."
          },
          "createVault(address[],address,uint24,address,address,address)": {
            "notice": "Deploys a new vault."
          },
          "delayedProtocolParams()": {
            "notice": "Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
          },
          "delayedProtocolParamsTimestamp()": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed."
          },
          "delayedProtocolPerVaultParamsTimestamp(uint256)": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed."
          },
          "delayedStrategyParams(uint256)": {
            "notice": "Delayed Strategy Params"
          },
          "delayedStrategyParamsTimestamp(uint256)": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed."
          },
          "internalParams()": {
            "notice": "Internal Params of the contract."
          },
          "internalParamsTimestamp()": {
            "notice": "Timestamp in unix time seconds after which staged Internal Params could be committed."
          },
          "setStrategyParams(uint256,(uint256,address,address,address,address,uint32))": {
            "notice": "Delayed Strategy Params staged for commit after delay."
          },
          "stageDelayedProtocolParams((address,address))": {
            "notice": "Stage Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
          },
          "stageDelayedStrategyParams(uint256,(uint32))": {
            "notice": "Stage Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay."
          },
          "stageInternalParams((address,address,address))": {
            "notice": "Stage new Internal Params."
          },
          "stagedDelayedProtocolParams()": {
            "notice": "Delayed Protocol Params staged for commit after delay."
          },
          "stagedDelayedStrategyParams(uint256)": {
            "notice": "Delayed Strategy Params staged for commit after delay."
          },
          "stagedInternalParams()": {
            "notice": "Staged new Internal Params."
          },
          "strategyParams(uint256)": {
            "notice": "Delayed Strategy Params"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/vaults/IPancakeSwapVaultGovernance.sol": "IPancakeSwapVaultGovernance"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolGovernance.sol": {
        "keccak256": "0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e",
        "urls": [
          "bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281",
          "dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b"
        ],
        "license": "MIT"
      },
      "src/interfaces/IUnitPricesGovernance.sol": {
        "keccak256": "0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081",
        "urls": [
          "bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87",
          "dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk"
        ],
        "license": "MIT"
      },
      "src/interfaces/IVaultRegistry.sol": {
        "keccak256": "0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55",
        "urls": [
          "bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50",
          "dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/erc/IERC1271.sol": {
        "keccak256": "0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36",
        "urls": [
          "bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779",
          "dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/pancakeswap/IPancakeNonfungiblePositionManager.sol": {
        "keccak256": "0x2c4e79aefc42335fba80144f0d067699807e24c7f3199054ed34729629cd129f",
        "urls": [
          "bzz-raw://6a7447e742fa1bf468ae1aec5f2b93ac870b4f21ef35bf926574cca3a4a639e3",
          "dweb:/ipfs/QmYiJUU6mV7nTMYat64UNav1Hsq7TSxfT2WaaQErMq3dEW"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/IPancakeV3Pool.sol": {
        "keccak256": "0x03255a87abde262839ddcbb0ad3b1b045ec710cec2f64b997f087ed4c33a0106",
        "urls": [
          "bzz-raw://6849d0e311fe5eacc3c86935c0a7099292b41cddd7f2df2782ce5482c260a17b",
          "dweb:/ipfs/QmexQgWXNxhZae6XsBcm2NvxoN8SDeQooDQBvJ7PbLxFLD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/IPeripheryImmutableState.sol": {
        "keccak256": "0x13cc0099846b5329a0808ba52498087129a628ca69f838a626e8e19c928320cc",
        "urls": [
          "bzz-raw://3369b299016ef5fc0364f699a4c85ac87f267629a1add8090536a0cd52e9e946",
          "dweb:/ipfs/QmTz7FP8fyPGdQsPbMyZRv34eNcuNw8QwAVSph38tyxpYa"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/IPeripheryPayments.sol": {
        "keccak256": "0xd99977991fa825ec46f13a44ca137bdb801f53d77e141ac066732c49714bdfab",
        "urls": [
          "bzz-raw://154fbf2d218157d3ce46b4a96683b3f26f8bce43e48804dcb5ad8b2dc72552cb",
          "dweb:/ipfs/QmahLuEAzkqAbNp2hi6qJCPnv4QZmDBubXX3F8f5SYoJNy"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/IPoolInitializer.sol": {
        "keccak256": "0x89682f8b38a8c900cf705cd7f2a6fe1ff0d17d940d1e2d02d01ba82664236b6d",
        "urls": [
          "bzz-raw://ad59f253f9afb1ef514b7fb2efae2f62e86a3d513e6be267951b9b6044125bba",
          "dweb:/ipfs/QmdequarSBA7HBbnvnJrtXY6TjVyu67WFuCEwXTgNkxEuK"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolActions.sol": {
        "keccak256": "0x59ee2c617abe65adac032507772e8c11d23f1ebe3c34c54cd954712b5a417f1c",
        "urls": [
          "bzz-raw://6db7f40df0dc6c1125e6cb13a8b91eff425b128e269f4df830f57fa36288b3bc",
          "dweb:/ipfs/QmT35pt82WzqFzTuBzRAaCjVrcgtqmTk4x5eLvgeQJEnzE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolDerivedState.sol": {
        "keccak256": "0xbb8590d870d29ae248f7e50b1fb3d07ac0faf6077aa959e52e875643cff8f575",
        "urls": [
          "bzz-raw://5129eac8fe38d2e3ba8a30db0b5fa389efa1119edbbf4b7a058b1a78691417f1",
          "dweb:/ipfs/QmNnRQfGWwxV3VmnBhh5aAjVYUD5K3sPMiw1zn3k2njsbL"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolEvents.sol": {
        "keccak256": "0x3f5f268cabea4583ab138b8408bf876831becb2eda3c3399142539cad4c1b7f8",
        "urls": [
          "bzz-raw://5ecdb61c88c2372fa3782bd52e624b991aa2fff89beae98b831c963dd9bf7144",
          "dweb:/ipfs/QmVH8gFMqWcTj6Fd6MtYXme5GfRYnmAJsmxXErVx37ha4a"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolImmutables.sol": {
        "keccak256": "0x9166871e1f206ff9002fe1864fcc4c7ecde3e745f3a7740485569c9edd2960f2",
        "urls": [
          "bzz-raw://56bb208edd594b774bb95b51fbcbcd4dc7fc3e8615499a9306b05539bb31028d",
          "dweb:/ipfs/QmdytBtwQKD44rc5oVPv7SiRdNS4js9JimH2AaFkUvWWJq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolOwnerActions.sol": {
        "keccak256": "0xb28a50116de98147bb91e35eaeb51b29a7899c16d3d1a99941cd4f13b565550b",
        "urls": [
          "bzz-raw://5e493a4c2938834d44283af81fb258c1ac320556f382aeeafe00bd7205efeba0",
          "dweb:/ipfs/QmbWYfzDnwWD2vfL69iKVpy9zEHCvJ32kpC4MEAfexkw4X"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolState.sol": {
        "keccak256": "0xf727a5c34395306548e55f765e7fc47c2f485b2f9f068e9a96fee27ddea3a535",
        "urls": [
          "bzz-raw://54c278a5906df814f8cc5bf1dc5cd330db0d7383fcc86c5e6a7fb57c16c58432",
          "dweb:/ipfs/QmSDmQTuAwXdhBANEvYpsrEpTEVJbzPYM7f5fXEDxwvkPJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/oracles/IOracle.sol": {
        "keccak256": "0x2d89a1f771e68129d47ae26eccf76f969cd2877e9b7190687056f912c3524b53",
        "urls": [
          "bzz-raw://f378b9f29c18878e73e251ca97abeca819f0789834281ee1399db878f6baedf5",
          "dweb:/ipfs/QmSrFYZWmGdVkgACwwZEfbkPt3kQCSkr6czBi9HVtzNSJg"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IDefaultAccessControl.sol": {
        "keccak256": "0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60",
        "urls": [
          "bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add",
          "dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IIntegrationVault.sol": {
        "keccak256": "0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e",
        "urls": [
          "bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d",
          "dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IPancakeSwapVault.sol": {
        "keccak256": "0x43d100383c27c207cae8f1badae9ae54a8f7eb1ed0489077c367d53bd751aca6",
        "urls": [
          "bzz-raw://7bb043ea24f220fb28f33a143e79fe7afba4f47f9cc7b2854a5fbb99873286ca",
          "dweb:/ipfs/QmSUDqkxw9EDEvb8P3gMUxHyeHtqWxr8tK1LNKKU6SefHC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/vaults/IPancakeSwapVaultGovernance.sol": {
        "keccak256": "0xd2d1c9a831459441cd545743dfa361486bd25423a1987fca10287a05dc901958",
        "urls": [
          "bzz-raw://e15c86f1bf09a8114e650bdd7cd1426a313b34fc012fe1e18d2800cb5ef5873f",
          "dweb:/ipfs/QmYqiNcpv8dcExDaQar7a14EyztQVjxzvpJeGB3FJ3v6DJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/vaults/IVault.sol": {
        "keccak256": "0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43",
        "urls": [
          "bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1",
          "dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultGovernance.sol": {
        "keccak256": "0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813",
        "urls": [
          "bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375",
          "dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/vaults/IPancakeSwapVaultGovernance.sol",
    "id": 78192,
    "exportedSymbols": {
      "IAccessControl": [
        43366
      ],
      "IAccessControlEnumerable": [
        43391
      ],
      "IDefaultAccessControl": [
        75786
      ],
      "IERC1271": [
        64026
      ],
      "IERC165": [
        48073
      ],
      "IERC721": [
        46687
      ],
      "IERC721Receiver": [
        46705
      ],
      "IIntegrationVault": [
        77767
      ],
      "IOracle": [
        75605
      ],
      "IPancakeNonfungiblePositionManager": [
        69260
      ],
      "IPancakeSwapVault": [
        78061
      ],
      "IPancakeSwapVaultGovernance": [
        78191
      ],
      "IPancakeV3Pool": [
        69556
      ],
      "IPancakeV3PoolActions": [
        70887
      ],
      "IPancakeV3PoolDerivedState": [
        70918
      ],
      "IPancakeV3PoolEvents": [
        71041
      ],
      "IPancakeV3PoolImmutables": [
        71081
      ],
      "IPancakeV3PoolOwnerActions": [
        71113
      ],
      "IPancakeV3PoolState": [
        71221
      ],
      "IPeripheryImmutableState": [
        69611
      ],
      "IPeripheryPayments": [
        69637
      ],
      "IPoolInitializer": [
        69689
      ],
      "IProtocolGovernance": [
        52868
      ],
      "IUnitPricesGovernance": [
        52921
      ],
      "IVault": [
        78599
      ],
      "IVaultGovernance": [
        78668
      ],
      "IVaultRegistry": [
        53012
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:3772:350",
    "nodes": [
      {
        "id": 78063,
        "nodeType": "PragmaDirective",
        "src": "45:23:350",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 78064,
        "nodeType": "ImportDirective",
        "src": "70:72:350",
        "nodes": [],
        "absolutePath": "src/interfaces/external/pancakeswap/IPancakeNonfungiblePositionManager.sol",
        "file": "../external/pancakeswap/IPancakeNonfungiblePositionManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78192,
        "sourceUnit": 69261,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78065,
        "nodeType": "ImportDirective",
        "src": "143:32:350",
        "nodes": [],
        "absolutePath": "src/interfaces/oracles/IOracle.sol",
        "file": "../oracles/IOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78192,
        "sourceUnit": 75606,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78066,
        "nodeType": "ImportDirective",
        "src": "176:32:350",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/IVaultGovernance.sol",
        "file": "./IVaultGovernance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78192,
        "sourceUnit": 78669,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78067,
        "nodeType": "ImportDirective",
        "src": "209:33:350",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/IPancakeSwapVault.sol",
        "file": "./IPancakeSwapVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78192,
        "sourceUnit": 78062,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 78191,
        "nodeType": "ContractDefinition",
        "src": "244:3572:350",
        "nodes": [
          {
            "id": 78076,
            "nodeType": "StructDefinition",
            "src": "499:120:350",
            "nodes": [],
            "canonicalName": "IPancakeSwapVaultGovernance.DelayedProtocolParams",
            "members": [
              {
                "constant": false,
                "id": 78072,
                "mutability": "mutable",
                "name": "positionManager",
                "nameLocation": "573:15:350",
                "nodeType": "VariableDeclaration",
                "scope": 78076,
                "src": "538:50:350",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IPancakeNonfungiblePositionManager_$69260",
                  "typeString": "contract IPancakeNonfungiblePositionManager"
                },
                "typeName": {
                  "id": 78071,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 78070,
                    "name": "IPancakeNonfungiblePositionManager",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 69260,
                    "src": "538:34:350"
                  },
                  "referencedDeclaration": 69260,
                  "src": "538:34:350",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPancakeNonfungiblePositionManager_$69260",
                    "typeString": "contract IPancakeNonfungiblePositionManager"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78075,
                "mutability": "mutable",
                "name": "oracle",
                "nameLocation": "606:6:350",
                "nodeType": "VariableDeclaration",
                "scope": 78076,
                "src": "598:14:350",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IOracle_$75605",
                  "typeString": "contract IOracle"
                },
                "typeName": {
                  "id": 78074,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 78073,
                    "name": "IOracle",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 75605,
                    "src": "598:7:350"
                  },
                  "referencedDeclaration": 75605,
                  "src": "598:7:350",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IOracle_$75605",
                    "typeString": "contract IOracle"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DelayedProtocolParams",
            "nameLocation": "506:21:350",
            "scope": 78191,
            "visibility": "public"
          },
          {
            "id": 78079,
            "nodeType": "StructDefinition",
            "src": "683:69:350",
            "nodes": [],
            "canonicalName": "IPancakeSwapVaultGovernance.DelayedStrategyParams",
            "members": [
              {
                "constant": false,
                "id": 78078,
                "mutability": "mutable",
                "name": "safetyIndicesSet",
                "nameLocation": "729:16:350",
                "nodeType": "VariableDeclaration",
                "scope": 78079,
                "src": "722:23:350",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 78077,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "722:6:350",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DelayedStrategyParams",
            "nameLocation": "690:21:350",
            "scope": 78191,
            "visibility": "public"
          },
          {
            "id": 78092,
            "nodeType": "StructDefinition",
            "src": "758:209:350",
            "nodes": [],
            "canonicalName": "IPancakeSwapVaultGovernance.StrategyParams",
            "members": [
              {
                "constant": false,
                "id": 78081,
                "mutability": "mutable",
                "name": "swapSlippageD",
                "nameLocation": "798:13:350",
                "nodeType": "VariableDeclaration",
                "scope": 78092,
                "src": "790:21:350",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78080,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "790:7:350",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78083,
                "mutability": "mutable",
                "name": "poolForSwap",
                "nameLocation": "829:11:350",
                "nodeType": "VariableDeclaration",
                "scope": 78092,
                "src": "821:19:350",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 78082,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "821:7:350",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78085,
                "mutability": "mutable",
                "name": "cake",
                "nameLocation": "858:4:350",
                "nodeType": "VariableDeclaration",
                "scope": 78092,
                "src": "850:12:350",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 78084,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "850:7:350",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78087,
                "mutability": "mutable",
                "name": "underlyingToken",
                "nameLocation": "880:15:350",
                "nodeType": "VariableDeclaration",
                "scope": 78092,
                "src": "872:23:350",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 78086,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "872:7:350",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78089,
                "mutability": "mutable",
                "name": "smartRouter",
                "nameLocation": "913:11:350",
                "nodeType": "VariableDeclaration",
                "scope": 78092,
                "src": "905:19:350",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 78088,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "905:7:350",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78091,
                "mutability": "mutable",
                "name": "averageTickTimespan",
                "nameLocation": "941:19:350",
                "nodeType": "VariableDeclaration",
                "scope": 78092,
                "src": "934:26:350",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 78090,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "934:6:350",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StrategyParams",
            "nameLocation": "765:14:350",
            "scope": 78191,
            "visibility": "public"
          },
          {
            "id": 78099,
            "nodeType": "FunctionDefinition",
            "src": "1103:86:350",
            "nodes": [],
            "documentation": {
              "id": 78093,
              "nodeType": "StructuredDocumentation",
              "src": "973:125:350",
              "text": "@notice Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
            },
            "functionSelector": "d34cc380",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delayedProtocolParams",
            "nameLocation": "1112:21:350",
            "parameters": {
              "id": 78094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1133:2:350"
            },
            "returnParameters": {
              "id": 78098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78097,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78099,
                  "src": "1159:28:350",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_memory_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams"
                  },
                  "typeName": {
                    "id": 78096,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78095,
                      "name": "DelayedProtocolParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78076,
                      "src": "1159:21:350"
                    },
                    "referencedDeclaration": 78076,
                    "src": "1159:21:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1158:30:350"
            },
            "scope": 78191,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 78106,
            "nodeType": "FunctionDefinition",
            "src": "1266:92:350",
            "nodes": [],
            "documentation": {
              "id": 78100,
              "nodeType": "StructuredDocumentation",
              "src": "1195:66:350",
              "text": "@notice Delayed Protocol Params staged for commit after delay."
            },
            "functionSelector": "c2cbdc67",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stagedDelayedProtocolParams",
            "nameLocation": "1275:27:350",
            "parameters": {
              "id": 78101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1302:2:350"
            },
            "returnParameters": {
              "id": 78105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78106,
                  "src": "1328:28:350",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_memory_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams"
                  },
                  "typeName": {
                    "id": 78103,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78102,
                      "name": "DelayedProtocolParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78076,
                      "src": "1328:21:350"
                    },
                    "referencedDeclaration": 78076,
                    "src": "1328:21:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:30:350"
            },
            "scope": 78191,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 78113,
            "nodeType": "FunctionDefinition",
            "src": "1533:84:350",
            "nodes": [],
            "documentation": {
              "id": 78107,
              "nodeType": "StructuredDocumentation",
              "src": "1364:164:350",
              "text": "@notice Stage Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\n @param params New params"
            },
            "functionSelector": "b2fe31ad",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stageDelayedProtocolParams",
            "nameLocation": "1542:26:350",
            "parameters": {
              "id": 78111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78110,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "1600:6:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 78113,
                  "src": "1569:37:350",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_calldata_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams"
                  },
                  "typeName": {
                    "id": 78109,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78108,
                      "name": "DelayedProtocolParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78076,
                      "src": "1569:21:350"
                    },
                    "referencedDeclaration": 78076,
                    "src": "1569:21:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1568:39:350"
            },
            "returnParameters": {
              "id": 78112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1616:0:350"
            },
            "scope": 78191,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 78117,
            "nodeType": "FunctionDefinition",
            "src": "1760:48:350",
            "nodes": [],
            "documentation": {
              "id": 78114,
              "nodeType": "StructuredDocumentation",
              "src": "1623:132:350",
              "text": "@notice Commit Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
            },
            "functionSelector": "98347a5d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "commitDelayedProtocolParams",
            "nameLocation": "1769:27:350",
            "parameters": {
              "id": 78115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1796:2:350"
            },
            "returnParameters": {
              "id": 78116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1807:0:350"
            },
            "scope": 78191,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 78126,
            "nodeType": "FunctionDefinition",
            "src": "1904:83:350",
            "nodes": [],
            "documentation": {
              "id": 78118,
              "nodeType": "StructuredDocumentation",
              "src": "1814:85:350",
              "text": "@notice Delayed Strategy Params\n @param nft VaultRegistry NFT of the vault"
            },
            "functionSelector": "12466b68",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "strategyParams",
            "nameLocation": "1913:14:350",
            "parameters": {
              "id": 78121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78120,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "1936:3:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 78126,
                  "src": "1928:11:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1928:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1927:13:350"
            },
            "returnParameters": {
              "id": 78125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78124,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78126,
                  "src": "1964:21:350",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$78092_memory_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams"
                  },
                  "typeName": {
                    "id": 78123,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78122,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78092,
                      "src": "1964:14:350"
                    },
                    "referencedDeclaration": 78092,
                    "src": "1964:14:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$78092_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1963:23:350"
            },
            "scope": 78191,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 78135,
            "nodeType": "FunctionDefinition",
            "src": "2114:81:350",
            "nodes": [],
            "documentation": {
              "id": 78127,
              "nodeType": "StructuredDocumentation",
              "src": "1993:116:350",
              "text": "@notice Delayed Strategy Params staged for commit after delay.\n @param nft VaultRegistry NFT of the vault"
            },
            "functionSelector": "b0e6ba34",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategyParams",
            "nameLocation": "2123:17:350",
            "parameters": {
              "id": 78133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78129,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "2149:3:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 78135,
                  "src": "2141:11:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2141:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78132,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "2178:6:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 78135,
                  "src": "2154:30:350",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$78092_calldata_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams"
                  },
                  "typeName": {
                    "id": 78131,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78130,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78092,
                      "src": "2154:14:350"
                    },
                    "referencedDeclaration": 78092,
                    "src": "2154:14:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$78092_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2140:45:350"
            },
            "returnParameters": {
              "id": 78134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2194:0:350"
            },
            "scope": 78191,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 78144,
            "nodeType": "FunctionDefinition",
            "src": "2291:97:350",
            "nodes": [],
            "documentation": {
              "id": 78136,
              "nodeType": "StructuredDocumentation",
              "src": "2201:85:350",
              "text": "@notice Delayed Strategy Params\n @param nft VaultRegistry NFT of the vault"
            },
            "functionSelector": "8860d248",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "delayedStrategyParams",
            "nameLocation": "2300:21:350",
            "parameters": {
              "id": 78139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78138,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "2330:3:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 78144,
                  "src": "2322:11:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2322:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2321:13:350"
            },
            "returnParameters": {
              "id": 78143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78142,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78144,
                  "src": "2358:28:350",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_memory_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams"
                  },
                  "typeName": {
                    "id": 78141,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78140,
                      "name": "DelayedStrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78079,
                      "src": "2358:21:350"
                    },
                    "referencedDeclaration": 78079,
                    "src": "2358:21:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2357:30:350"
            },
            "scope": 78191,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 78153,
            "nodeType": "FunctionDefinition",
            "src": "2515:103:350",
            "nodes": [],
            "documentation": {
              "id": 78145,
              "nodeType": "StructuredDocumentation",
              "src": "2394:116:350",
              "text": "@notice Delayed Strategy Params staged for commit after delay.\n @param nft VaultRegistry NFT of the vault"
            },
            "functionSelector": "59f3dae7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stagedDelayedStrategyParams",
            "nameLocation": "2524:27:350",
            "parameters": {
              "id": 78148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78147,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "2560:3:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 78153,
                  "src": "2552:11:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2551:13:350"
            },
            "returnParameters": {
              "id": 78152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78151,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78153,
                  "src": "2588:28:350",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_memory_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams"
                  },
                  "typeName": {
                    "id": 78150,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78149,
                      "name": "DelayedStrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78079,
                      "src": "2588:21:350"
                    },
                    "referencedDeclaration": 78079,
                    "src": "2588:21:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2587:30:350"
            },
            "scope": 78191,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 78162,
            "nodeType": "FunctionDefinition",
            "src": "2855:97:350",
            "nodes": [],
            "documentation": {
              "id": 78154,
              "nodeType": "StructuredDocumentation",
              "src": "2624:226:350",
              "text": "@notice Stage Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay.\n @param nft VaultRegistry NFT of the vault\n @param params New params"
            },
            "functionSelector": "25281714",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stageDelayedStrategyParams",
            "nameLocation": "2864:26:350",
            "parameters": {
              "id": 78160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78156,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "2899:3:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 78162,
                  "src": "2891:11:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2891:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78159,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "2935:6:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 78162,
                  "src": "2904:37:350",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_calldata_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams"
                  },
                  "typeName": {
                    "id": 78158,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78157,
                      "name": "DelayedStrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78079,
                      "src": "2904:21:350"
                    },
                    "referencedDeclaration": 78079,
                    "src": "2904:21:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2890:52:350"
            },
            "returnParameters": {
              "id": 78161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2951:0:350"
            },
            "scope": 78191,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 78168,
            "nodeType": "FunctionDefinition",
            "src": "3226:59:350",
            "nodes": [],
            "documentation": {
              "id": 78163,
              "nodeType": "StructuredDocumentation",
              "src": "2958:263:350",
              "text": "@notice Commit Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay.\n @dev Can only be called after delayedStrategyParamsTimestamp\n @param nft VaultRegistry NFT of the vault"
            },
            "functionSelector": "0bdedd56",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "commitDelayedStrategyParams",
            "nameLocation": "3235:27:350",
            "parameters": {
              "id": 78166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78165,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "3271:3:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 78168,
                  "src": "3263:11:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3263:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3262:13:350"
            },
            "returnParameters": {
              "id": 78167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3284:0:350"
            },
            "scope": 78191,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 78190,
            "nodeType": "FunctionDefinition",
            "src": "3564:250:350",
            "nodes": [],
            "documentation": {
              "id": 78169,
              "nodeType": "StructuredDocumentation",
              "src": "3291:268:350",
              "text": "@notice Deploys a new vault.\n @param vaultTokens_ ERC20 tokens that will be managed by this Vault\n @param owner_ Owner of the vault NFT\n @param fee_ Fee of the UniV3 pool\n @param helper_ address of helper for UniV3 arithmetic with ticks"
            },
            "functionSelector": "ae12783f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createVault",
            "nameLocation": "3573:11:350",
            "parameters": {
              "id": 78183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78172,
                  "mutability": "mutable",
                  "name": "vaultTokens_",
                  "nameLocation": "3611:12:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 78190,
                  "src": "3594:29:350",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 78170,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3594:7:350",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 78171,
                    "nodeType": "ArrayTypeName",
                    "src": "3594:9:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78174,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "3641:6:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 78190,
                  "src": "3633:14:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3633:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78176,
                  "mutability": "mutable",
                  "name": "fee_",
                  "nameLocation": "3664:4:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 78190,
                  "src": "3657:11:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 78175,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3657:6:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78178,
                  "mutability": "mutable",
                  "name": "helper_",
                  "nameLocation": "3686:7:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 78190,
                  "src": "3678:15:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3678:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78180,
                  "mutability": "mutable",
                  "name": "masterChef_",
                  "nameLocation": "3711:11:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 78190,
                  "src": "3703:19:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3703:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78182,
                  "mutability": "mutable",
                  "name": "erc20Vault_",
                  "nameLocation": "3740:11:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 78190,
                  "src": "3732:19:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3732:7:350",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3584:173:350"
            },
            "returnParameters": {
              "id": 78189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78186,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "3794:5:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 78190,
                  "src": "3776:23:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPancakeSwapVault_$78061",
                    "typeString": "contract IPancakeSwapVault"
                  },
                  "typeName": {
                    "id": 78185,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78184,
                      "name": "IPancakeSwapVault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78061,
                      "src": "3776:17:350"
                    },
                    "referencedDeclaration": 78061,
                    "src": "3776:17:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPancakeSwapVault_$78061",
                      "typeString": "contract IPancakeSwapVault"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78188,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "3809:3:350",
                  "nodeType": "VariableDeclaration",
                  "scope": 78190,
                  "src": "3801:11:350",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3801:7:350",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3775:38:350"
            },
            "scope": 78191,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 78068,
              "name": "IVaultGovernance",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 78668,
              "src": "285:16:350"
            },
            "id": 78069,
            "nodeType": "InheritanceSpecifier",
            "src": "285:16:350"
          }
        ],
        "canonicalName": "IPancakeSwapVaultGovernance",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          78191,
          78668
        ],
        "name": "IPancakeSwapVaultGovernance",
        "nameLocation": "254:27:350",
        "scope": 78192,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 350
}