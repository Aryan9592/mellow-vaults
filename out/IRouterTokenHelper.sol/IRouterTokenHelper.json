{
  "abi": [
    {
      "inputs": [],
      "name": "refundEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "transferAllTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "unwrapWeth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "refundEth()": "1faa4133",
    "transferAllTokens(address,uint256,address)": "bf1316c1",
    "unwrapWeth(uint256,address)": "bac37ef7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferAllTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWeth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundEth()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"transferAllTokens(address,uint256,address)\":{\"details\":\"The minAmount parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"minAmount\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWeth(uint256,address)\":{\"details\":\"The minAmount parameter prevents malicious contracts from stealing WETH from users.\",\"params\":{\"minAmount\":\"The minimum amount of WETH to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundEth()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"transferAllTokens(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWeth(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH balance and sends it to recipient as ETH.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/external/kyber/periphery/IRouterTokenHelper.sol\":\"IRouterTokenHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/interfaces/external/kyber/periphery/IRouterTokenHelper.sol\":{\"keccak256\":\"0x916f611c57de74870fb12c444245c771227b5b79e5464f0f9f9db9d238ea8915\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4d805513ac1a18e27c47b9d9a59d5b2add44b5c18d45b42d016f9f97d555d618\",\"dweb:/ipfs/QmXBEkVC1kMvVHvDrCNz8cb6hXB39dr8L7oYA9ag1tJd79\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "refundEth"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferAllTokens"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "unwrapWeth"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "refundEth()": {
            "details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
          },
          "transferAllTokens(address,uint256,address)": {
            "details": "The minAmount parameter prevents malicious contracts from stealing the token from users",
            "params": {
              "minAmount": "The minimum amount of token required for a transfer",
              "recipient": "The destination address of the token",
              "token": "The contract address of the token which will be transferred to `recipient`"
            }
          },
          "unwrapWeth(uint256,address)": {
            "details": "The minAmount parameter prevents malicious contracts from stealing WETH from users.",
            "params": {
              "minAmount": "The minimum amount of WETH to unwrap",
              "recipient": "The address receiving ETH"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "refundEth()": {
            "notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
          },
          "transferAllTokens(address,uint256,address)": {
            "notice": "Transfers the full amount of a token held by this contract to recipient"
          },
          "unwrapWeth(uint256,address)": {
            "notice": "Unwraps the contract's WETH balance and sends it to recipient as ETH."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/external/kyber/periphery/IRouterTokenHelper.sol": "IRouterTokenHelper"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/external/kyber/periphery/IRouterTokenHelper.sol": {
        "keccak256": "0x916f611c57de74870fb12c444245c771227b5b79e5464f0f9f9db9d238ea8915",
        "urls": [
          "bzz-raw://4d805513ac1a18e27c47b9d9a59d5b2add44b5c18d45b42d016f9f97d555d618",
          "dweb:/ipfs/QmXBEkVC1kMvVHvDrCNz8cb6hXB39dr8L7oYA9ag1tJd79"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/external/kyber/periphery/IRouterTokenHelper.sol",
    "id": 67631,
    "exportedSymbols": {
      "IRouterTokenHelper": [
        67630
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:1265:222",
    "nodes": [
      {
        "id": 67607,
        "nodeType": "PragmaDirective",
        "src": "45:23:222",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 67630,
        "nodeType": "ContractDefinition",
        "src": "70:1239:222",
        "nodes": [
          {
            "id": 67615,
            "nodeType": "FunctionDefinition",
            "src": "401:75:222",
            "nodes": [],
            "documentation": {
              "id": 67608,
              "nodeType": "StructuredDocumentation",
              "src": "105:291:222",
              "text": "@notice Unwraps the contract's WETH balance and sends it to recipient as ETH.\n @dev The minAmount parameter prevents malicious contracts from stealing WETH from users.\n @param minAmount The minimum amount of WETH to unwrap\n @param recipient The address receiving ETH"
            },
            "functionSelector": "bac37ef7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unwrapWeth",
            "nameLocation": "410:10:222",
            "parameters": {
              "id": 67613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67610,
                  "mutability": "mutable",
                  "name": "minAmount",
                  "nameLocation": "429:9:222",
                  "nodeType": "VariableDeclaration",
                  "scope": 67615,
                  "src": "421:17:222",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "421:7:222",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67612,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "448:9:222",
                  "nodeType": "VariableDeclaration",
                  "scope": 67615,
                  "src": "440:17:222",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:7:222",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "420:38:222"
            },
            "returnParameters": {
              "id": 67614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:0:222"
            },
            "scope": 67630,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67619,
            "nodeType": "FunctionDefinition",
            "src": "712:38:222",
            "nodes": [],
            "documentation": {
              "id": 67616,
              "nodeType": "StructuredDocumentation",
              "src": "482:225:222",
              "text": "@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
            },
            "functionSelector": "1faa4133",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "refundEth",
            "nameLocation": "721:9:222",
            "parameters": {
              "id": 67617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "730:2:222"
            },
            "returnParameters": {
              "id": 67618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "749:0:222"
            },
            "scope": 67630,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67629,
            "nodeType": "FunctionDefinition",
            "src": "1180:127:222",
            "nodes": [],
            "documentation": {
              "id": 67620,
              "nodeType": "StructuredDocumentation",
              "src": "756:419:222",
              "text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The minAmount parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param minAmount The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
            },
            "functionSelector": "bf1316c1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferAllTokens",
            "nameLocation": "1189:17:222",
            "parameters": {
              "id": 67627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67622,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1224:5:222",
                  "nodeType": "VariableDeclaration",
                  "scope": 67629,
                  "src": "1216:13:222",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1216:7:222",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67624,
                  "mutability": "mutable",
                  "name": "minAmount",
                  "nameLocation": "1247:9:222",
                  "nodeType": "VariableDeclaration",
                  "scope": 67629,
                  "src": "1239:17:222",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67623,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:7:222",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67626,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1274:9:222",
                  "nodeType": "VariableDeclaration",
                  "scope": 67629,
                  "src": "1266:17:222",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1266:7:222",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1206:83:222"
            },
            "returnParameters": {
              "id": 67628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1306:0:222"
            },
            "scope": 67630,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IRouterTokenHelper",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          67630
        ],
        "name": "IRouterTokenHelper",
        "nameLocation": "80:18:222",
        "scope": 67631,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 222
}