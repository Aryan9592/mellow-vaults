{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "internalParams_",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "CommitedInternalParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "vaultTokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "vaultAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vaultNft",
          "type": "uint256"
        }
      ],
      "name": "DeployedVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "params",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        }
      ],
      "name": "StagedInternalParams",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "commitInternalParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractNameBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersionBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "erc20Vault_",
          "type": "address"
        }
      ],
      "name": "createVault",
      "outputs": [
        {
          "internalType": "contract ICamelotVault",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delayedProtocolParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedProtocolPerVaultParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedStrategyParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "internalParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "internalParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "newParams",
          "type": "tuple"
        }
      ],
      "name": "stageInternalParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stagedInternalParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620011e2380380620011e283398101604081905262000034916200018a565b805160408051808201909152600281526120ad60f11b602082015282916001600160a01b0316620000835760405162461bcd60e51b81526004016200007a919062000211565b60405180910390fd5b5060006001600160a01b031681602001516001600160a01b031614156040518060400160405280600281526020016120ad60f11b81525090620000db5760405162461bcd60e51b81526004016200007a919062000211565b506040808201518151808301909252600282526120ad60f11b60208301526001600160a01b0316620001225760405162461bcd60e51b81526004016200007a919062000211565b508051600080546001600160a01b03199081166001600160a01b039384161790915560208301516001805483169184169190911790556040909201516002805490931691161790555062000269565b6001600160a01b03811681146200018757600080fd5b50565b6000606082840312156200019d57600080fd5b604051606081016001600160401b0381118282101715620001ce57634e487b7160e01b600052604160045260246000fd5b6040528251620001de8162000171565b81526020830151620001f08162000171565b60208201526040830151620002058162000171565b60408201529392505050565b600060208083528351808285015260005b81811015620002405785810183015185820160400152820162000222565b8181111562000253576000604083870101525b50601f01601f1916929092016040019392505050565b610f6980620002796000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806375d0c0dc1161008c578063a0a8e46011610066578063a0a8e46014610273578063d4a07d341461027b578063de2f76a414610283578063e4af6e79146102b557600080fd5b806375d0c0dc146101ab5780637ac46fbb146101c057806386c6be3e1461022057600080fd5b80630e3e80ac116100c85780630e3e80ac146101445780631c7f4c7314610163578063511ce7981461016b5780636707acee1461018b57600080fd5b806301ffc9a7146100ef57806306a4623914610117578063099465381461012f575b600080fd5b6101026100fd366004610b0f565b6102bd565b60405190151581526020015b60405180910390f35b640312e302e360dc1b5b60405190815260200161010e565b61014261013d366004610b9c565b6102ee565b005b7543616d656c6f745661756c74476f7665726e616e636560501b610121565b600654610121565b610121610179366004610c0e565b6000908152600c602052604090205490565b610121610199366004610c0e565b60009081526009602052604090205490565b6101b36104e0565b60405161010e9190610c74565b610213604080516060810182526000808252602082018190529181019190915250604080516060810182526000546001600160a01b03908116825260015481166020830152600254169181019190915290565b60405161010e9190610c87565b610213604080516060810182526000808252602082018190529181019190915250604080516060810182526003546001600160a01b03908116825260045481166020830152600554169181019190915290565b6101b3610504565b610142610517565b610296610291366004610cc7565b610641565b604080516001600160a01b03909316835260208301919091520161010e565b600f54610121565b60006102c882610727565b806102e3575063378bdda960e21b6001600160e01b03198316145b92915050565b905090565b6102f661075d565b805160408051808201909152600281526120ad60f11b6020820152906001600160a01b03166103415760405162461bcd60e51b81526004016103389190610c74565b60405180910390fd5b5060006001600160a01b031681602001516001600160a01b031614156040518060400160405280600281526020016120ad60f11b815250906103965760405162461bcd60e51b81526004016103389190610c74565b506040808201518151808301909252600282526120ad60f11b60208301526001600160a01b03166103da5760405162461bcd60e51b81526004016103389190610c74565b508051600380546001600160a01b03199081166001600160a01b03938416179091556020808401516004805484169185169190911781556040808601516005805490951690861617909355600054835163bba3293960e01b8152935194169363bba3293993808301939290829003018186803b15801561045957600080fd5b505afa15801561046d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104919190610d9b565b61049b9042610dca565b6006819055604051339132917f0887cab3184f7c02b16978ab31f8acee05979f59fc3da6abe5bf71105ec3179d916104d591869190610de2565b60405180910390a350565b60606102e97543616d656c6f745661756c74476f7665726e616e636560501b610815565b60606102e9640312e302e360dc1b610815565b61051f61075d565b6006546040805180820190915260048152631395531360e21b60208201529061055b5760405162461bcd60e51b81526004016103389190610c74565b5060065442101560405180604001604052806002815260200161545360f01b8152509061059b5760405162461bcd60e51b81526004016103389190610c74565b5060038054600080546001600160a01b038084166001600160a01b03199283168117845560048054600180548286169087168117909155600580546002805497821697891688179055600698909855978616909855841690559290911690925560408051918252602082019390935291820152339032907fef3e4bc9725fa684957d7de03c6dcd01078ee86cf78ceef25c5f8346df69cc999060600160405180910390a3565b600080600061064f85610881565b60405163231f1a5f60e11b815291945092508391506001600160a01b0382169063463e34be9061068790859088908b90600401610e63565b600060405180830381600087803b1580156106a157600080fd5b505af11580156106b5573d6000803e3d6000fd5b5050604080516001600160a01b03881660208201523393503292507f8a4513c05d15df8ece912856923273e166e39f5c9c2b43d2b38594023494a0e0918a910160408051601f198184030181529082905261071692918b9088908a90610e96565b60405180910390a350935093915050565b60006301ffc9a760e01b6001600160e01b0319831614806102e357506001600160e01b0319821663effda0f560e01b1492915050565b600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b1580156107a057600080fd5b505afa1580156107b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d89190610ee0565b6040518060400160405280600381526020016223292160e91b815250906108125760405162461bcd60e51b81526004016103389190610c74565b50565b604080516020808252818301909252606091602082018180368337019050509050602060005b60208110156108735783816020811061085657610856610f02565b1a61086357809150610873565b61086c81610f18565b905061083b565b508152602081019190915290565b600080546040516363e85d2d60e01b81523360048201526001602482015282916001600160a01b03169081906363e85d2d9060440160206040518083038186803b1580156108ce57600080fd5b505afa1580156108e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109069190610ee0565b6040518060400160405280600381526020016223292160e91b815250906109405760405162461bcd60e51b81526004016103389190610c74565b5060015460408051631112eee760e31b815290516001600160a01b039092169182916388977738916004808301926020929190829003018186803b15801561098757600080fd5b505afa15801561099b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf9190610d9b565b6109ca906001610dca565b6002549093506109e3906001600160a01b031684610a72565b6040516305c4fdf960e01b81526001600160a01b0380831660048301528781166024830152919550908216906305c4fdf990604401602060405180830381600087803b158015610a3257600080fd5b505af1158015610a46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6a9190610d9b565b505050915091565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166102e35760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610338565b600060208284031215610b2157600080fd5b81356001600160e01b031981168114610b3957600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b7f57610b7f610b40565b604052919050565b6001600160a01b038116811461081257600080fd5b600060608284031215610bae57600080fd5b6040516060810181811067ffffffffffffffff82111715610bd157610bd1610b40565b6040528235610bdf81610b87565b81526020830135610bef81610b87565b60208201526040830135610c0281610b87565b60408201529392505050565b600060208284031215610c2057600080fd5b5035919050565b6000815180845260005b81811015610c4d57602081850181015186830182015201610c31565b81811115610c5f576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610b396020830184610c27565b606081016102e3828480516001600160a01b03908116835260208083015182169084015260409182015116910152565b8035610cc281610b87565b919050565b600080600060608486031215610cdc57600080fd5b833567ffffffffffffffff80821115610cf457600080fd5b818601915086601f830112610d0857600080fd5b8135602082821115610d1c57610d1c610b40565b8160051b9250610d2d818401610b56565b828152928401810192818101908a851115610d4757600080fd5b948201945b84861015610d715785359350610d6184610b87565b8382529482019490820190610d4c565b9750610d809050888201610cb7565b955050505050610d9260408501610cb7565b90509250925092565b600060208284031215610dad57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ddd57610ddd610db4565b500190565b60808101610e12828580516001600160a01b03908116835260208083015182169084015260409182015116910152565b8260608301529392505050565b600081518084526020808501945080840160005b83811015610e585781516001600160a01b031687529582019590820190600101610e33565b509495945050505050565b8381526001600160a01b0383166020820152606060408201819052600090610e8d90830184610e1f565b95945050505050565b60a081526000610ea960a0830188610e1f565b8281036020840152610ebb8188610c27565b6001600160a01b03968716604085015294909516606083015250608001529392505050565b600060208284031215610ef257600080fd5b81518015158114610b3957600080fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415610f2c57610f2c610db4565b506001019056fea264697066735822122084730917f6c5716239856b9ef992f462b262ef93567896d62854bce68bc2153064736f6c63430008090033",
    "sourceMap": "381:1469:455:-:0;;;572:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1762:34:477;;1813:30;;;;;;;;;;;;-1:-1:-1;;;1813:30:477;;;;639:15:455;;-1:-1:-1;;;;;1754:57:477;1746:98;;;;-1:-1:-1;;;1746:98:477;;;;;;;;:::i;:::-;;;;;;;;;;1907:1;-1:-1:-1;;;;;1862:47:477;1870:15;:24;;;-1:-1:-1;;;;;1862:47:477;;;1911:30;;;;;;;;;;;;;-1:-1:-1;;;1911:30:477;;;1854:88;;;;;-1:-1:-1;;;1854:88:477;;;;;;;;:::i;:::-;-1:-1:-1;1968:25:477;;;;;2010:30;;;;;;;;;;;-1:-1:-1;;;2010:30:477;;;;-1:-1:-1;;;;;1960:48:477;1952:89;;;;-1:-1:-1;;;1952:89:477;;;;;;;;:::i;:::-;-1:-1:-1;2051:33:477;;:15;:33;;-1:-1:-1;;;;;;2051:33:477;;;-1:-1:-1;;;;;2051:33:477;;;;;;;;;;;-1:-1:-1;2051:33:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;381:1469:455;;14:152:488;-1:-1:-1;;;;;110:31:488;;100:42;;90:70;;156:1;153;146:12;90:70;14:152;:::o;171:941::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;376:2;370:9;418:2;406:15;;-1:-1:-1;;;;;436:34:488;;472:22;;;433:62;430:185;;;537:10;532:3;528:20;525:1;518:31;572:4;569:1;562:15;600:4;597:1;590:15;430:185;631:2;624:22;668:16;;693:52;668:16;693:52;:::i;:::-;754:21;;820:2;805:18;;799:25;833:54;799:25;833:54;:::i;:::-;915:2;903:15;;896:32;973:2;958:18;;952:25;986:54;952:25;986:54;:::i;:::-;1068:2;1056:15;;1049:32;1060:6;171:941;-1:-1:-1;;;171:941:488:o;1117:597::-;1229:4;1258:2;1287;1276:9;1269:21;1319:6;1313:13;1362:6;1357:2;1346:9;1342:18;1335:34;1387:1;1397:140;1411:6;1408:1;1405:13;1397:140;;;1506:14;;;1502:23;;1496:30;1472:17;;;1491:2;1468:26;1461:66;1426:10;;1397:140;;;1555:6;1552:1;1549:13;1546:91;;;1625:1;1620:2;1611:6;1600:9;1596:22;1592:31;1585:42;1546:91;-1:-1:-1;1698:2:488;1677:15;-1:-1:-1;;1673:29:488;1658:45;;;;1705:2;1654:54;;1117:597;-1:-1:-1;;;1117:597:488:o;:::-;381:1469:455;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806375d0c0dc1161008c578063a0a8e46011610066578063a0a8e46014610273578063d4a07d341461027b578063de2f76a414610283578063e4af6e79146102b557600080fd5b806375d0c0dc146101ab5780637ac46fbb146101c057806386c6be3e1461022057600080fd5b80630e3e80ac116100c85780630e3e80ac146101445780631c7f4c7314610163578063511ce7981461016b5780636707acee1461018b57600080fd5b806301ffc9a7146100ef57806306a4623914610117578063099465381461012f575b600080fd5b6101026100fd366004610b0f565b6102bd565b60405190151581526020015b60405180910390f35b640312e302e360dc1b5b60405190815260200161010e565b61014261013d366004610b9c565b6102ee565b005b7543616d656c6f745661756c74476f7665726e616e636560501b610121565b600654610121565b610121610179366004610c0e565b6000908152600c602052604090205490565b610121610199366004610c0e565b60009081526009602052604090205490565b6101b36104e0565b60405161010e9190610c74565b610213604080516060810182526000808252602082018190529181019190915250604080516060810182526000546001600160a01b03908116825260015481166020830152600254169181019190915290565b60405161010e9190610c87565b610213604080516060810182526000808252602082018190529181019190915250604080516060810182526003546001600160a01b03908116825260045481166020830152600554169181019190915290565b6101b3610504565b610142610517565b610296610291366004610cc7565b610641565b604080516001600160a01b03909316835260208301919091520161010e565b600f54610121565b60006102c882610727565b806102e3575063378bdda960e21b6001600160e01b03198316145b92915050565b905090565b6102f661075d565b805160408051808201909152600281526120ad60f11b6020820152906001600160a01b03166103415760405162461bcd60e51b81526004016103389190610c74565b60405180910390fd5b5060006001600160a01b031681602001516001600160a01b031614156040518060400160405280600281526020016120ad60f11b815250906103965760405162461bcd60e51b81526004016103389190610c74565b506040808201518151808301909252600282526120ad60f11b60208301526001600160a01b03166103da5760405162461bcd60e51b81526004016103389190610c74565b508051600380546001600160a01b03199081166001600160a01b03938416179091556020808401516004805484169185169190911781556040808601516005805490951690861617909355600054835163bba3293960e01b8152935194169363bba3293993808301939290829003018186803b15801561045957600080fd5b505afa15801561046d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104919190610d9b565b61049b9042610dca565b6006819055604051339132917f0887cab3184f7c02b16978ab31f8acee05979f59fc3da6abe5bf71105ec3179d916104d591869190610de2565b60405180910390a350565b60606102e97543616d656c6f745661756c74476f7665726e616e636560501b610815565b60606102e9640312e302e360dc1b610815565b61051f61075d565b6006546040805180820190915260048152631395531360e21b60208201529061055b5760405162461bcd60e51b81526004016103389190610c74565b5060065442101560405180604001604052806002815260200161545360f01b8152509061059b5760405162461bcd60e51b81526004016103389190610c74565b5060038054600080546001600160a01b038084166001600160a01b03199283168117845560048054600180548286169087168117909155600580546002805497821697891688179055600698909855978616909855841690559290911690925560408051918252602082019390935291820152339032907fef3e4bc9725fa684957d7de03c6dcd01078ee86cf78ceef25c5f8346df69cc999060600160405180910390a3565b600080600061064f85610881565b60405163231f1a5f60e11b815291945092508391506001600160a01b0382169063463e34be9061068790859088908b90600401610e63565b600060405180830381600087803b1580156106a157600080fd5b505af11580156106b5573d6000803e3d6000fd5b5050604080516001600160a01b03881660208201523393503292507f8a4513c05d15df8ece912856923273e166e39f5c9c2b43d2b38594023494a0e0918a910160408051601f198184030181529082905261071692918b9088908a90610e96565b60405180910390a350935093915050565b60006301ffc9a760e01b6001600160e01b0319831614806102e357506001600160e01b0319821663effda0f560e01b1492915050565b600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b1580156107a057600080fd5b505afa1580156107b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d89190610ee0565b6040518060400160405280600381526020016223292160e91b815250906108125760405162461bcd60e51b81526004016103389190610c74565b50565b604080516020808252818301909252606091602082018180368337019050509050602060005b60208110156108735783816020811061085657610856610f02565b1a61086357809150610873565b61086c81610f18565b905061083b565b508152602081019190915290565b600080546040516363e85d2d60e01b81523360048201526001602482015282916001600160a01b03169081906363e85d2d9060440160206040518083038186803b1580156108ce57600080fd5b505afa1580156108e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109069190610ee0565b6040518060400160405280600381526020016223292160e91b815250906109405760405162461bcd60e51b81526004016103389190610c74565b5060015460408051631112eee760e31b815290516001600160a01b039092169182916388977738916004808301926020929190829003018186803b15801561098757600080fd5b505afa15801561099b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf9190610d9b565b6109ca906001610dca565b6002549093506109e3906001600160a01b031684610a72565b6040516305c4fdf960e01b81526001600160a01b0380831660048301528781166024830152919550908216906305c4fdf990604401602060405180830381600087803b158015610a3257600080fd5b505af1158015610a46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6a9190610d9b565b505050915091565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166102e35760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610338565b600060208284031215610b2157600080fd5b81356001600160e01b031981168114610b3957600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b7f57610b7f610b40565b604052919050565b6001600160a01b038116811461081257600080fd5b600060608284031215610bae57600080fd5b6040516060810181811067ffffffffffffffff82111715610bd157610bd1610b40565b6040528235610bdf81610b87565b81526020830135610bef81610b87565b60208201526040830135610c0281610b87565b60408201529392505050565b600060208284031215610c2057600080fd5b5035919050565b6000815180845260005b81811015610c4d57602081850181015186830182015201610c31565b81811115610c5f576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610b396020830184610c27565b606081016102e3828480516001600160a01b03908116835260208083015182169084015260409182015116910152565b8035610cc281610b87565b919050565b600080600060608486031215610cdc57600080fd5b833567ffffffffffffffff80821115610cf457600080fd5b818601915086601f830112610d0857600080fd5b8135602082821115610d1c57610d1c610b40565b8160051b9250610d2d818401610b56565b828152928401810192818101908a851115610d4757600080fd5b948201945b84861015610d715785359350610d6184610b87565b8382529482019490820190610d4c565b9750610d809050888201610cb7565b955050505050610d9260408501610cb7565b90509250925092565b600060208284031215610dad57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ddd57610ddd610db4565b500190565b60808101610e12828580516001600160a01b03908116835260208083015182169084015260409182015116910152565b8260608301529392505050565b600081518084526020808501945080840160005b83811015610e585781516001600160a01b031687529582019590820190600101610e33565b509495945050505050565b8381526001600160a01b0383166020820152606060408201819052600090610e8d90830184610e1f565b95945050505050565b60a081526000610ea960a0830188610e1f565b8281036020840152610ebb8188610c27565b6001600160a01b03968716604085015294909516606083015250608001529392505050565b600060208284031215610ef257600080fd5b81518015158114610b3957600080fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415610f2c57610f2c610db4565b506001019056fea264697066735822122084730917f6c5716239856b9ef992f462b262ef93567896d62854bce68bc2153064736f6c63430008090033",
    "sourceMap": "381:1469:455:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;757:211;;;;;;:::i;:::-;;:::i;:::-;;;470:14:488;;463:22;445:41;;433:2;418:18;757:211:455;;;;;;;;592:106:410;-1:-1:-1;;;592:106:410;;;643:25:488;;;631:2;616:18;592:106:410;497:177:488;3528:643:477;;;;;;:::i;:::-;;:::i;:::-;;355:100:410;-1:-1:-1;;;355:100:410;592:106;2763:115:477;2847:24;;2763:115;;2387:161;;;;;;:::i;:::-;2471:7;2497:44;;;:39;:44;;;;;;;2387:161;2199:145;;;;;;:::i;:::-;2275:7;2301:36;;;:31;:36;;;;;;;2199:145;230:119:410;;;:::i;:::-;;;;;;;:::i;2921:111:477:-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;3003:22:477;;;;;;;;3010:15;3003:22;-1:-1:-1;;;;;3003:22:477;;;;;;;;;;;;;;;;;;;;;;;;2921:111;;;;;;;;:::i;3075:123::-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;3163:28:477;;;;;;;;3170:21;3163:28;-1:-1:-1;;;;;3163:28:477;;;;;;;;;;;;;;;;;;;;;;;;3075:123;461:125:410;;;:::i;4214:449:477:-;;;:::i;1087:452:455:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5303:32:488;;;5285:51;;5367:2;5352:18;;5345:34;;;;5258:18;1087:452:455;5088:297:488;2591:129:477;2682:31;;2591:129;;757:211:455;842:4;865:36;889:11;865:23;:36::i;:::-;:96;;;-1:-1:-1;;;;;;;;;;905:56:455;;;865:96;858:103;757:211;-1:-1:-1;;757:211:455:o;673:18:410:-;666:25;;592:106;:::o;3528:643:477:-;3609:23;:21;:23::i;:::-;3658:28;;3703:30;;;;;;;;;;;;-1:-1:-1;;;3703:30:477;;;;;-1:-1:-1;;;;;3650:51:477;3642:92;;;;-1:-1:-1;;;3642:92:477;;;;;;;;:::i;:::-;;;;;;;;;;3791:1;-1:-1:-1;;;;;3752:41:477;3760:9;:18;;;-1:-1:-1;;;;;3752:41:477;;;3795:30;;;;;;;;;;;;;-1:-1:-1;;;3795:30:477;;;3744:82;;;;;-1:-1:-1;;;3744:82:477;;;;;;;;:::i;:::-;-1:-1:-1;3852:19:477;;;;;3888:30;;;;;;;;;;;-1:-1:-1;;;3888:30:477;;;;-1:-1:-1;;;;;3844:42:477;3836:83;;;;-1:-1:-1;;;3836:83:477;;;;;;;;:::i;:::-;-1:-1:-1;3929:33:477;;:21;:33;;-1:-1:-1;;;;;;3929:33:477;;;-1:-1:-1;;;;;3929:33:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4017:34:477;:52;;-1:-1:-1;;;4017:52:477;;;;:34;;;:50;;:52;;;;3929:33;4017:52;;;;;;:34;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3999:70;;:15;:70;:::i;:::-;3972:24;:97;;;4084:80;;4116:10;;4105:9;;4084:80;;;;4128:9;;3972:97;4084:80;:::i;:::-;;;;;;;;3528:643;:::o;230:119:410:-;277:13;309:33;-1:-1:-1;;;309:16:410;:33::i;461:125::-;511:13;543:36;-1:-1:-1;;;309:16:410;:33::i;4214:449:477:-;4265:23;:21;:23::i;:::-;4306:24;;4337:22;;;;;;;;;;;;-1:-1:-1;;;4337:22:477;;;;;4298:62;;;;-1:-1:-1;;;4298:62:477;;;;;;;;:::i;:::-;;4397:24;;4378:15;:43;;4423:27;;;;;;;;;;;;;-1:-1:-1;;;4423:27:477;;;4370:81;;;;;-1:-1:-1;;;4370:81:477;;;;;;;;:::i;:::-;-1:-1:-1;4479:21:477;4461:39;;:15;:39;;-1:-1:-1;;;;;4461:39:477;;;-1:-1:-1;;;;;;4461:39:477;;;;;;;;;;-1:-1:-1;4461:39:477;;;;;;;;;;;;;;;;-1:-1:-1;4461:39:477;;;;;;;;;;;;4517:24;4510:31;;;;4551:28;;;;;;;;;;;;;;;;;4594:62;;;6437:41:488;;;6509:4;6494:20;;6487:63;;;;6566:20;;;6559:63;4628:10:477;;4617:9;;4594:62;;6387:2:488;6372:18;4594:62:477;;;;;;;4214:449::o;1087:452:455:-;1224:19;1245:11;1268:13;1306:20;1319:6;1306:12;:20::i;:::-;1374:48;;-1:-1:-1;;;1374:48:455;;1291:35;;-1:-1:-1;1291:35:455;-1:-1:-1;1291:35:455;;-1:-1:-1;;;;;;1374:16:455;;;;;:48;;1291:35;;1396:11;;1409:12;;1374:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1488:23:455;;;-1:-1:-1;;;;;7697:32:488;;1488:23:455;;;7679:51:488;1462:10:455;;-1:-1:-1;1451:9:455;;-1:-1:-1;1437:95:455;;1474:12;;7652:18:488;1488:23:455;;;-1:-1:-1;;1488:23:455;;;;;;;;;;1437:95;;;1513:6;;1521:5;;1528:3;;1437:95;:::i;:::-;;;;;;;;1258:281;1087:452;;;;;;:::o;3204:212:477:-;3297:4;-1:-1:-1;;;;;;;;;937:40:49;;;3320:89:477;;;-1:-1:-1;;;;;;;3360:49:477;;-1:-1:-1;;;3360:49:477;3313:96;3204:212;-1:-1:-1;;3204:212:477:o;5093:156::-;5158:15;:34;:54;;-1:-1:-1;;;5158:54:477;;5201:10;5158:54;;;7679:51:488;-1:-1:-1;;;;;5158:34:477;;;;:42;;7652:18:488;;5158:54:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5214:27;;;;;;;;;;;;;-1:-1:-1;;;5214:27:477;;;5150:92;;;;;-1:-1:-1;;;5150:92:477;;;;;;;;:::i;:::-;;5093:156::o;914:381:410:-;1005:14;;;1016:2;1005:14;;;;;;;;;974:15;;1005:14;;;;;;;;;;-1:-1:-1;;1001:18:410;-1:-1:-1;1043:2:410;1029:11;1055:142;1079:2;1075:1;:6;1055:142;;;1112:1;1114;1112:4;;;;;;;:::i;:::-;;1102:85;;1148:1;1142:7;;1167:5;;1102:85;1083:3;;;:::i;:::-;;;1055:142;;;-1:-1:-1;1229:14:410;;1270:4;1263:12;;1256:23;;;;1236:1;914:381::o;5578:622:477:-;5633:13;5732:34;;5798:79;;-1:-1:-1;;;5798:79:477;;5831:10;5798:79;;;9164:51:488;5732:34:477;9231:18:488;;;9224:45;5633:13:477;;-1:-1:-1;;;;;5732:34:477;;;;5798:32;;9137:18:488;;5798:79:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5891:27;;;;;;;;;;;;;-1:-1:-1;;;5891:27:477;;;5777:151;;;;;-1:-1:-1;;;5777:151:477;;;;;;;;:::i;:::-;-1:-1:-1;5969:24:477;;6009:27;;;-1:-1:-1;;;6009:27:477;;;;-1:-1:-1;;;;;5969:24:477;;;;;;6009:25;;:27;;;;;;;;;;;;;;5969:24;6009:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;;6039:1;6009:31;:::i;:::-;6092:25;;6003:37;;-1:-1:-1;6058:75:477;;-1:-1:-1;;;;;6092:25:477;6003:37;6058:25;:75::i;:::-;6143:50;;-1:-1:-1;;;6143:50:477;;-1:-1:-1;;;;;9510:15:488;;;6143:50:477;;;9492:34:488;9562:15;;;9542:18;;;9535:43;6050:83:477;;-1:-1:-1;6143:27:477;;;;;;9427:18:488;;6143:50:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5661:539;;5578:622;;;:::o;2107:794:25:-;2191:16;2523:48;2505:14;2499:4;2495:25;2489:4;2485:36;2482:90;2476:4;2469:104;2730:32;2713:14;2707:4;2703:25;2700:63;2694:4;2687:77;2812:4;2806;2800;2797:1;2789:28;2777:40;-1:-1:-1;;;;;;2844:22:25;;2836:58;;;;-1:-1:-1;;;2836:58:25;;9791:2:488;2836:58:25;;;9773:21:488;9830:2;9810:18;;;9803:30;9869:25;9849:18;;;9842:53;9912:18;;2836:58:25;9589:347:488;14:286;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:488;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:488:o;679:127::-;740:10;735:3;731:20;728:1;721:31;771:4;768:1;761:15;795:4;792:1;785:15;811:275;882:2;876:9;947:2;928:13;;-1:-1:-1;;924:27:488;912:40;;982:18;967:34;;1003:22;;;964:62;961:88;;;1029:18;;:::i;:::-;1065:2;1058:22;811:275;;-1:-1:-1;811:275:488:o;1091:152::-;-1:-1:-1;;;;;1187:31:488;;1177:42;;1167:70;;1233:1;1230;1223:12;1248:854;1340:6;1393:2;1381:9;1372:7;1368:23;1364:32;1361:52;;;1409:1;1406;1399:12;1361:52;1442:2;1436:9;1484:2;1476:6;1472:15;1553:6;1541:10;1538:22;1517:18;1505:10;1502:34;1499:62;1496:88;;;1564:18;;:::i;:::-;1600:2;1593:22;1637:23;;1669:52;1637:23;1669:52;:::i;:::-;1730:21;;1803:2;1788:18;;1775:32;1816:54;1775:32;1816:54;:::i;:::-;1898:2;1886:15;;1879:32;1963:2;1948:18;;1935:32;1976:54;1935:32;1976:54;:::i;:::-;2058:2;2046:15;;2039:32;2050:6;1248:854;-1:-1:-1;;;1248:854:488:o;2289:180::-;2348:6;2401:2;2389:9;2380:7;2376:23;2372:32;2369:52;;;2417:1;2414;2407:12;2369:52;-1:-1:-1;2440:23:488;;2289:180;-1:-1:-1;2289:180:488:o;2474:472::-;2516:3;2554:5;2548:12;2581:6;2576:3;2569:19;2606:1;2616:162;2630:6;2627:1;2624:13;2616:162;;;2692:4;2748:13;;;2744:22;;2738:29;2720:11;;;2716:20;;2709:59;2645:12;2616:162;;;2796:6;2793:1;2790:13;2787:87;;;2862:1;2855:4;2846:6;2841:3;2837:16;2833:27;2826:38;2787:87;-1:-1:-1;2928:2:488;2907:15;-1:-1:-1;;2903:29:488;2894:39;;;;2935:4;2890:50;;2474:472;-1:-1:-1;;2474:472:488:o;2951:220::-;3100:2;3089:9;3082:21;3063:4;3120:45;3161:2;3150:9;3146:18;3138:6;3120:45;:::i;3457:269::-;3657:2;3642:18;;3669:51;3646:9;3702:6;3298:12;;-1:-1:-1;;;;;3294:21:488;;;3282:34;;3369:4;3358:16;;;3352:23;3348:32;;3332:14;;;3325:56;3434:4;3423:16;;;3417:23;3413:32;3397:14;;3390:56;3176:276;3731:155;3799:20;;3828:52;3799:20;3828:52;:::i;:::-;3731:155;;;:::o;3891:1192::-;3993:6;4001;4009;4062:2;4050:9;4041:7;4037:23;4033:32;4030:52;;;4078:1;4075;4068:12;4030:52;4118:9;4105:23;4147:18;4188:2;4180:6;4177:14;4174:34;;;4204:1;4201;4194:12;4174:34;4242:6;4231:9;4227:22;4217:32;;4287:7;4280:4;4276:2;4272:13;4268:27;4258:55;;4309:1;4306;4299:12;4258:55;4345:2;4332:16;4367:4;4390:2;4386;4383:10;4380:36;;;4396:18;;:::i;:::-;4442:2;4439:1;4435:10;4425:20;;4465:28;4489:2;4485;4481:11;4465:28;:::i;:::-;4527:15;;;4597:11;;;4593:20;;;4558:12;;;;4625:19;;;4622:39;;;4657:1;4654;4647:12;4622:39;4681:11;;;;4701:238;4717:6;4712:3;4709:15;4701:238;;;4797:3;4784:17;4771:30;;4814:52;4860:5;4814:52;:::i;:::-;4879:18;;;4734:12;;;;4917;;;;4701:238;;;4958:5;-1:-1:-1;4982:38:488;;-1:-1:-1;5001:18:488;;;4982:38;:::i;:::-;4972:48;;;;;;5039:38;5073:2;5062:9;5058:18;5039:38;:::i;:::-;5029:48;;3891:1192;;;;;:::o;5390:184::-;5460:6;5513:2;5501:9;5492:7;5488:23;5484:32;5481:52;;;5529:1;5526;5519:12;5481:52;-1:-1:-1;5552:16:488;;5390:184;-1:-1:-1;5390:184:488:o;5579:127::-;5640:10;5635:3;5631:20;5628:1;5621:31;5671:4;5668:1;5661:15;5695:4;5692:1;5685:15;5711:128;5751:3;5782:1;5778:6;5775:1;5772:13;5769:39;;;5788:18;;:::i;:::-;-1:-1:-1;5824:9:488;;5711:128::o;5844:341::-;6072:3;6057:19;;6085:51;6061:9;6118:6;3298:12;;-1:-1:-1;;;;;3294:21:488;;;3282:34;;3369:4;3358:16;;;3352:23;3348:32;;3332:14;;;3325:56;3434:4;3423:16;;;3417:23;3413:32;3397:14;;3390:56;3176:276;6085:51;6172:6;6167:2;6156:9;6152:18;6145:34;5844:341;;;;;:::o;6633:461::-;6686:3;6724:5;6718:12;6751:6;6746:3;6739:19;6777:4;6806:2;6801:3;6797:12;6790:19;;6843:2;6836:5;6832:14;6864:1;6874:195;6888:6;6885:1;6882:13;6874:195;;;6953:13;;-1:-1:-1;;;;;6949:39:488;6937:52;;7009:12;;;;7044:15;;;;6985:1;6903:9;6874:195;;;-1:-1:-1;7085:3:488;;6633:461;-1:-1:-1;;;;;6633:461:488:o;7099:429::-;7316:25;;;-1:-1:-1;;;;;7377:32:488;;7372:2;7357:18;;7350:60;7446:2;7441;7426:18;;7419:30;;;-1:-1:-1;;7466:56:488;;7503:18;;7495:6;7466:56;:::i;:::-;7458:64;7099:429;-1:-1:-1;;;;;7099:429:488:o;7741:694::-;8050:3;8039:9;8032:22;8013:4;8077:57;8129:3;8118:9;8114:19;8106:6;8077:57;:::i;:::-;8182:9;8174:6;8170:22;8165:2;8154:9;8150:18;8143:50;8210:33;8236:6;8228;8210:33;:::i;:::-;-1:-1:-1;;;;;8317:15:488;;;8312:2;8297:18;;8290:43;8369:15;;;;8364:2;8349:18;;8342:43;-1:-1:-1;8416:3:488;8401:19;8394:35;8202:41;7741:694;-1:-1:-1;;;7741:694:488:o;8440:277::-;8507:6;8560:2;8548:9;8539:7;8535:23;8531:32;8528:52;;;8576:1;8573;8566:12;8528:52;8608:9;8602:16;8661:5;8654:13;8647:21;8640:5;8637:32;8627:60;;8683:1;8680;8673:12;8722:127;8783:10;8778:3;8774:20;8771:1;8764:31;8814:4;8811:1;8804:15;8838:4;8835:1;8828:15;8854:135;8893:3;-1:-1:-1;;8914:17:488;;8911:43;;;8934:18;;:::i;:::-;-1:-1:-1;8981:1:488;8970:13;;8854:135::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "commitInternalParams()": "d4a07d34",
    "contractName()": "75d0c0dc",
    "contractNameBytes()": "0e3e80ac",
    "contractVersion()": "a0a8e460",
    "contractVersionBytes()": "06a46239",
    "createVault(address[],address,address)": "de2f76a4",
    "delayedProtocolParamsTimestamp()": "e4af6e79",
    "delayedProtocolPerVaultParamsTimestamp(uint256)": "511ce798",
    "delayedStrategyParamsTimestamp(uint256)": "6707acee",
    "internalParams()": "7ac46fbb",
    "internalParamsTimestamp()": "1c7f4c73",
    "stageInternalParams((address,address,address))": "09946538",
    "stagedInternalParams()": "86c6be3e",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"internalParams_\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"CommitedInternalParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"vaultTokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultNft\",\"type\":\"uint256\"}],\"name\":\"DeployedVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"StagedInternalParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"commitInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractNameBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersionBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Vault_\",\"type\":\"address\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"contract ICamelotVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedProtocolParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedProtocolPerVaultParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedStrategyParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"newParams\",\"type\":\"tuple\"}],\"name\":\"stageInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedInternalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"internalParams_\":\"Initial Internal Params\"}},\"createVault(address[],address,address)\":{\"params\":{\"erc20Vault_\":\"address of erc20 vault\",\"owner_\":\"Owner of the vault NFT\",\"vaultTokens_\":\"ERC20 tokens that will be managed by this Vault\"}},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"delayedStrategyParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"stageInternalParams((address,address,address))\":{\"params\":{\"newParams\":\"New Internal Params\"}},\"stagedInternalParams()\":{\"details\":\"The Internal Params could be committed after internalParamsTimestamp\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"events\":{\"CommitedInternalParams(address,address,(address,address,address))\":{\"notice\":\"Emitted when InternalParams are staged for commit\"},\"DeployedVault(address,address,address[],bytes,address,address,uint256)\":{\"notice\":\"Emitted when New Vault is deployed\"},\"StagedInternalParams(address,address,(address,address,address),uint256)\":{\"notice\":\"Emitted when InternalParams are staged for commit\"}},\"kind\":\"user\",\"methods\":{\"commitInternalParams()\":{\"notice\":\"Commit staged Internal Params.\"},\"constructor\":{\"notice\":\"Creates a new contract.\"},\"createVault(address[],address,address)\":{\"notice\":\"Deploys a new vault.\"},\"delayedProtocolParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed.\"},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed.\"},\"delayedStrategyParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed.\"},\"internalParams()\":{\"notice\":\"Internal Params of the contract.\"},\"internalParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Internal Params could be committed.\"},\"stageInternalParams((address,address,address))\":{\"notice\":\"Stage new Internal Params.\"},\"stagedInternalParams()\":{\"notice\":\"Staged new Internal Params.\"}},\"notice\":\"Governance that manages all Camelot Vaults params and can deploy a new Camelot Vault.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vaults/CamelotVaultGovernance.sol\":\"CamelotVaultGovernance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281\",\"dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b\"]},\"src/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87\",\"dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk\"]},\"src/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50\",\"dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1\"]},\"src/interfaces/external/algebrav2/IAlgebraFactory.sol\":{\"keccak256\":\"0x3905e3c93663ddfc7738a45817c53e81eb5bb27b5b64b977495f307dc5fbfaf8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1f83f511826f1a374660c1cb0496414d8eb0e15cfc0c6e2e195ca91cc01ef101\",\"dweb:/ipfs/QmbeDDXg5EUqXtwdHtLwJMPGiwyaJpMz8PM8KRfC8KV5ZN\"]},\"src/interfaces/external/algebrav2/IAlgebraNonfungiblePositionManager.sol\":{\"keccak256\":\"0x6401477d9b4a0b4e9adf0673d208fc36f0db43e8496a41e34ecb1b1485bea04a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b1f71352663c8148ed5584dc989be91e139be192a8b2de1d6f469a937f70e884\",\"dweb:/ipfs/QmTuyQG1DGS5oteP8ysZaxUb7ns33omecXstY9RJG9BDm1\"]},\"src/interfaces/external/algebrav2/IAlgebraPool.sol\":{\"keccak256\":\"0x755cd326bb55a296788b31bbe28af7e60c7f109f80db1c9fc04535688166da4c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2446e2a6ed5c8728df7ee1b03a8c5344ec2d28e62640d10ec62b920e56e279d8\",\"dweb:/ipfs/QmUGjYtSFATTh4f2nzfwUthxNvafvkX6is2U8Pmh1SWQiM\"]},\"src/interfaces/external/algebrav2/IERC721Permit.sol\":{\"keccak256\":\"0xce5b1d0ab7779da2de91cc1be2d589c40134b518999cac45fc26cc17439bd649\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6aabdb5b27b1918bd2f460a9c58b381c1407666aee3fac18384bd42867b411c0\",\"dweb:/ipfs/QmSoWDR2f1xJEjBqoLX7GybuWkoE1XAwW9weyoex569Ywa\"]},\"src/interfaces/external/algebrav2/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x0800c4b7adcd9d1cd99b059678da5faa7d93198e44f4785426fd83890066df15\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://22d197e0a671881dfafd8f1ebe4adb81416e1b5a0b55abc80e8b508d44ca1685\",\"dweb:/ipfs/QmfNuzafVCpimS2DhLtgiq3LVyNTFGQRzug2Cw55r31A9u\"]},\"src/interfaces/external/algebrav2/IPeripheryPayments.sol\":{\"keccak256\":\"0x60df21c09ace29541e1a1cb11e77906be06af405bbe866d2cf83386c50b403e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://021ee34d95ca79a60a97c3f36a1d5a3029ed744278e050bc6b38b439b269f707\",\"dweb:/ipfs/Qmb8tgHV6WJQ6hnARAfb6Y7NXbpnEzaRJHrFmLJ62HFzRj\"]},\"src/interfaces/external/algebrav2/IPoolInitializer.sol\":{\"keccak256\":\"0x8c1045e94b56cd6bad3502dd3113670ee2c0a7daee5089dd160097a60a215c26\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://96885785ee5d6f0cfc1cd8609fdde69a74ccf7e44d2ce216e782a3ed862e570e\",\"dweb:/ipfs/QmULkLsxDxDMkUxUqfWoobQqQnGaoBY1JMdogu86UX3bcq\"]},\"src/interfaces/external/algebrav2/base/AlgebraFeeConfiguration.sol\":{\"keccak256\":\"0xab8f96c60154b85a682a629d82b583d92351976695dc771a5ac7efa1567b1c01\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c592afcfc0c3f437d447ad32590fe5bc7aa63ea3d5ad9c7249c7b4efb73d488a\",\"dweb:/ipfs/QmdVPG6YLQjwJ3fzSK1vJ6LttFDLiccr2yWrvBDyzyx8YF\"]},\"src/interfaces/external/algebrav2/libraries/PoolAddress.sol\":{\"keccak256\":\"0x3c6db49cd6dac0674ed7422038d6b0993883cadce5f0aea12f3fd4dbaf461e6d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://33df6a38dc11d2f91838e857425eb80f314b6869b37a0d3e13f732c43d3f1b42\",\"dweb:/ipfs/QmPXhNFeWmfog5nUNZDMYQGSHmbFEh8NBbNe1sg1ZCg4rh\"]},\"src/interfaces/external/algebrav2/pool/IAlgebraPoolActions.sol\":{\"keccak256\":\"0xf8e5d053036d17d1719f1599f11da5b9141d85ac819c4fd8ec3960b76cb8830e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2e84a86f035e84ff02daa9b2c41e0cc35429be7b114baa6f41572572676d30fa\",\"dweb:/ipfs/QmZcnQvCfExUCj7zbvxgqoAd24XYofq7udUESQrR6DZ1Q3\"]},\"src/interfaces/external/algebrav2/pool/IAlgebraPoolDerivedState.sol\":{\"keccak256\":\"0x3068b5e85207a209e841214738a2c79c5eebe1ba81ce5427f2d0598582fe7f32\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://961752a020e3e128bb49496dfac03ab6da8cad8675dc3947d7ed493a278bc9ed\",\"dweb:/ipfs/QmRu23SksgKD7G2TQsJBmhWJz1FJuuD78SAFGebYRPUvTQ\"]},\"src/interfaces/external/algebrav2/pool/IAlgebraPoolEvents.sol\":{\"keccak256\":\"0x38348849e3c1b18334b4897f21b67a500215f9da8e47ed04209767052c2a5b93\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://01d9f8a7d90521f7c27c9ce4907ce4626f1fd6e597f5912da80eb516c7c56f58\",\"dweb:/ipfs/QmbETzZdzpEowRAWsjupb1AdvwZYvdZoHsPpv6vHYem2nQ\"]},\"src/interfaces/external/algebrav2/pool/IAlgebraPoolImmutables.sol\":{\"keccak256\":\"0x527bd2f402e3c6b01107e70bcb6d159937de74663a0d914aefee924672facc1d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://4bccbcf10e3726243f354853cfed495970731a292ff12be715fd75d8f726d48f\",\"dweb:/ipfs/QmQdh7AuAYt8uq72DmEHNgqHmz66AbkEdZXxevkgo13pdc\"]},\"src/interfaces/external/algebrav2/pool/IAlgebraPoolPermissionedActions.sol\":{\"keccak256\":\"0x0c309a0fa5aae5336b8fe6e5987bd1825918717da98eea395183ec4868159ae0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://43eed8d7a7158af94acdec23661242a0aab5879614684b18e8af1e1b1f83d723\",\"dweb:/ipfs/QmeW9eNqAvt22SLtipSNdoUkgfUw53G6e7iUA7XYwQv5qR\"]},\"src/interfaces/external/algebrav2/pool/IAlgebraPoolState.sol\":{\"keccak256\":\"0xcd53e01bcc120d16a15847ba0e805bc5018de1a8d9177ea34c0976db2df3d902\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cf0f48fa035b6558c3b774ed42f1de13a2457fe76aa766c93eaafc3ecb6e7ae3\",\"dweb:/ipfs/QmWpdDMVpFKCE2rLx9PfdD7Npd8Kck7Hfzp1i93k6iqtr3\"]},\"src/interfaces/external/erc/IERC1271.sol\":{\"keccak256\":\"0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779\",\"dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd\"]},\"src/interfaces/utils/ICamelotHelper.sol\":{\"keccak256\":\"0xb45bc1db22753bde63810a872db8398dc1e555c5e8061e9968673ebc69c6a44a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1277064e5685a2b850ec10a632f269b48892446b0ea144467be3cdd67e5d69c6\",\"dweb:/ipfs/Qma3My77Ycmv97tcfRkbrHPzGRhrmoUe7g5CsHfCZm9Uwb\"]},\"src/interfaces/utils/IContractMeta.sol\":{\"keccak256\":\"0x7ce236cea17798c2c9e60a659e727ef188f6579315b8227d0c6ad067a33900fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31c232f85d6565414bdf292adacc3054ab2355878e4d4508fc86fc2787436f24\",\"dweb:/ipfs/QmVhEUkN5Rwqpyufn7qqT88LLdq885igE57Pk4LzgJb9Kp\"]},\"src/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add\",\"dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu\"]},\"src/interfaces/vaults/ICamelotVault.sol\":{\"keccak256\":\"0x8b0420e22fe1a8c59e6ee7ab4517b2a220c42d6e566ea7aee225d84ce30d41f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92e35e66aeb701eae1ca28df4d9f605501091d7fb3fd33e96892af8407a158bd\",\"dweb:/ipfs/QmZKVLmzZYYxEVNetBHH8jjZsAfQYMKqqoDc1uznyz8QxP\"]},\"src/interfaces/vaults/ICamelotVaultGovernance.sol\":{\"keccak256\":\"0x8187f0a77f9db2a2ce6f72800e6e7a71746e59d4b77a7bc55d43376485422860\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://44f8d795f930ab506d9f5b21aaa197a914033d379e68636e14068569d33e63fa\",\"dweb:/ipfs/QmVCrs3tmJDa4x5yz14Q1MVWoeYJjqjLN3SkJe7PhFBaeg\"]},\"src/interfaces/vaults/IIntegrationVault.sol\":{\"keccak256\":\"0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d\",\"dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy\"]},\"src/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1\",\"dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw\"]},\"src/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375\",\"dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu\"]},\"src/libraries/ExceptionsLibrary.sol\":{\"keccak256\":\"0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f\",\"dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX\"]},\"src/libraries/PermissionIdsLibrary.sol\":{\"keccak256\":\"0xc6a4f2515d807b2ad95e9e8f7190c5ea85ab6603d2c1136632a8af9c479ecfcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e16f3d1e595ffa5b20cd1588e839ee783b1ca246d489cbe42040fd3089bb8b1\",\"dweb:/ipfs/QmQdW5ykrjB5yMMxkU5zTR4GJ5kBhyrnAbmt3mvtB55kuC\"]},\"src/utils/ContractMeta.sol\":{\"keccak256\":\"0x6e1fe2b6e0907a5388a5775be53bbfb55883aacc0ccb7597dfc6475fa9834c3f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9f8a2c5073a97b514829bac140bf84391cc5702185c4d6813e47b61ce53515e6\",\"dweb:/ipfs/QmeuMJq2ciSaDZC8qiUGLPfAHBjpCE4v79fZiaWm8egAks\"]},\"src/vaults/CamelotVaultGovernance.sol\":{\"keccak256\":\"0xa31819740e1798d7c1d1475f0f5cff0141d2206f6523504b2afccd9720311cd8\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://89acae7ce2aab63aceb1618b6c95f2d81de8da018fcdfb8f47c7b1d989ce7d1b\",\"dweb:/ipfs/QmfDQE8gMmHMtHFD6Ygvy7xtxUjs7tzX34p96WTjCMxMiX\"]},\"src/vaults/VaultGovernance.sol\":{\"keccak256\":\"0xd484ec7eee06480da27027a0ac81f591440ecdd2ba7bd5bfdee58a3f9e88c22c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8b4f08e9350fadeb03b9561a2fb2798821f7186fe8663207c91402ea62a53cc5\",\"dweb:/ipfs/QmUr73ghYfPzjtFgxE8mPjw5wFwQTQsbcLDGJNQVfT4rEV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "internalParams_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CommitedInternalParams",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address[]",
              "name": "vaultTokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "vaultAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "vaultNft",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DeployedVault",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "when",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StagedInternalParams",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitInternalParams"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractName",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractNameBytes",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersionBytes",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "vaultTokens_",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc20Vault_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createVault",
          "outputs": [
            {
              "internalType": "contract ICamelotVault",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolPerVaultParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedStrategyParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "internalParams",
          "outputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "internalParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "newParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stageInternalParams"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stagedInternalParams",
          "outputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "internalParams_": "Initial Internal Params"
            }
          },
          "createVault(address[],address,address)": {
            "params": {
              "erc20Vault_": "address of erc20 vault",
              "owner_": "Owner of the vault NFT",
              "vaultTokens_": "ERC20 tokens that will be managed by this Vault"
            }
          },
          "delayedProtocolPerVaultParamsTimestamp(uint256)": {
            "params": {
              "nft": "Nft of the vault"
            }
          },
          "delayedStrategyParamsTimestamp(uint256)": {
            "params": {
              "nft": "Nft of the vault"
            }
          },
          "stageInternalParams((address,address,address))": {
            "params": {
              "newParams": "New Internal Params"
            }
          },
          "stagedInternalParams()": {
            "details": "The Internal Params could be committed after internalParamsTimestamp"
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "commitInternalParams()": {
            "notice": "Commit staged Internal Params."
          },
          "constructor": {
            "notice": "Creates a new contract."
          },
          "createVault(address[],address,address)": {
            "notice": "Deploys a new vault."
          },
          "delayedProtocolParamsTimestamp()": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed."
          },
          "delayedProtocolPerVaultParamsTimestamp(uint256)": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed."
          },
          "delayedStrategyParamsTimestamp(uint256)": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed."
          },
          "internalParams()": {
            "notice": "Internal Params of the contract."
          },
          "internalParamsTimestamp()": {
            "notice": "Timestamp in unix time seconds after which staged Internal Params could be committed."
          },
          "stageInternalParams((address,address,address))": {
            "notice": "Stage new Internal Params."
          },
          "stagedInternalParams()": {
            "notice": "Staged new Internal Params."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/vaults/CamelotVaultGovernance.sol": "CamelotVaultGovernance"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999",
        "urls": [
          "bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb",
          "dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolGovernance.sol": {
        "keccak256": "0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e",
        "urls": [
          "bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281",
          "dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b"
        ],
        "license": "MIT"
      },
      "src/interfaces/IUnitPricesGovernance.sol": {
        "keccak256": "0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081",
        "urls": [
          "bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87",
          "dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk"
        ],
        "license": "MIT"
      },
      "src/interfaces/IVaultRegistry.sol": {
        "keccak256": "0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55",
        "urls": [
          "bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50",
          "dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/algebrav2/IAlgebraFactory.sol": {
        "keccak256": "0x3905e3c93663ddfc7738a45817c53e81eb5bb27b5b64b977495f307dc5fbfaf8",
        "urls": [
          "bzz-raw://1f83f511826f1a374660c1cb0496414d8eb0e15cfc0c6e2e195ca91cc01ef101",
          "dweb:/ipfs/QmbeDDXg5EUqXtwdHtLwJMPGiwyaJpMz8PM8KRfC8KV5ZN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/IAlgebraNonfungiblePositionManager.sol": {
        "keccak256": "0x6401477d9b4a0b4e9adf0673d208fc36f0db43e8496a41e34ecb1b1485bea04a",
        "urls": [
          "bzz-raw://b1f71352663c8148ed5584dc989be91e139be192a8b2de1d6f469a937f70e884",
          "dweb:/ipfs/QmTuyQG1DGS5oteP8ysZaxUb7ns33omecXstY9RJG9BDm1"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/IAlgebraPool.sol": {
        "keccak256": "0x755cd326bb55a296788b31bbe28af7e60c7f109f80db1c9fc04535688166da4c",
        "urls": [
          "bzz-raw://2446e2a6ed5c8728df7ee1b03a8c5344ec2d28e62640d10ec62b920e56e279d8",
          "dweb:/ipfs/QmUGjYtSFATTh4f2nzfwUthxNvafvkX6is2U8Pmh1SWQiM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/IERC721Permit.sol": {
        "keccak256": "0xce5b1d0ab7779da2de91cc1be2d589c40134b518999cac45fc26cc17439bd649",
        "urls": [
          "bzz-raw://6aabdb5b27b1918bd2f460a9c58b381c1407666aee3fac18384bd42867b411c0",
          "dweb:/ipfs/QmSoWDR2f1xJEjBqoLX7GybuWkoE1XAwW9weyoex569Ywa"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/IPeripheryImmutableState.sol": {
        "keccak256": "0x0800c4b7adcd9d1cd99b059678da5faa7d93198e44f4785426fd83890066df15",
        "urls": [
          "bzz-raw://22d197e0a671881dfafd8f1ebe4adb81416e1b5a0b55abc80e8b508d44ca1685",
          "dweb:/ipfs/QmfNuzafVCpimS2DhLtgiq3LVyNTFGQRzug2Cw55r31A9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/IPeripheryPayments.sol": {
        "keccak256": "0x60df21c09ace29541e1a1cb11e77906be06af405bbe866d2cf83386c50b403e5",
        "urls": [
          "bzz-raw://021ee34d95ca79a60a97c3f36a1d5a3029ed744278e050bc6b38b439b269f707",
          "dweb:/ipfs/Qmb8tgHV6WJQ6hnARAfb6Y7NXbpnEzaRJHrFmLJ62HFzRj"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/IPoolInitializer.sol": {
        "keccak256": "0x8c1045e94b56cd6bad3502dd3113670ee2c0a7daee5089dd160097a60a215c26",
        "urls": [
          "bzz-raw://96885785ee5d6f0cfc1cd8609fdde69a74ccf7e44d2ce216e782a3ed862e570e",
          "dweb:/ipfs/QmULkLsxDxDMkUxUqfWoobQqQnGaoBY1JMdogu86UX3bcq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/base/AlgebraFeeConfiguration.sol": {
        "keccak256": "0xab8f96c60154b85a682a629d82b583d92351976695dc771a5ac7efa1567b1c01",
        "urls": [
          "bzz-raw://c592afcfc0c3f437d447ad32590fe5bc7aa63ea3d5ad9c7249c7b4efb73d488a",
          "dweb:/ipfs/QmdVPG6YLQjwJ3fzSK1vJ6LttFDLiccr2yWrvBDyzyx8YF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/libraries/PoolAddress.sol": {
        "keccak256": "0x3c6db49cd6dac0674ed7422038d6b0993883cadce5f0aea12f3fd4dbaf461e6d",
        "urls": [
          "bzz-raw://33df6a38dc11d2f91838e857425eb80f314b6869b37a0d3e13f732c43d3f1b42",
          "dweb:/ipfs/QmPXhNFeWmfog5nUNZDMYQGSHmbFEh8NBbNe1sg1ZCg4rh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/pool/IAlgebraPoolActions.sol": {
        "keccak256": "0xf8e5d053036d17d1719f1599f11da5b9141d85ac819c4fd8ec3960b76cb8830e",
        "urls": [
          "bzz-raw://2e84a86f035e84ff02daa9b2c41e0cc35429be7b114baa6f41572572676d30fa",
          "dweb:/ipfs/QmZcnQvCfExUCj7zbvxgqoAd24XYofq7udUESQrR6DZ1Q3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/pool/IAlgebraPoolDerivedState.sol": {
        "keccak256": "0x3068b5e85207a209e841214738a2c79c5eebe1ba81ce5427f2d0598582fe7f32",
        "urls": [
          "bzz-raw://961752a020e3e128bb49496dfac03ab6da8cad8675dc3947d7ed493a278bc9ed",
          "dweb:/ipfs/QmRu23SksgKD7G2TQsJBmhWJz1FJuuD78SAFGebYRPUvTQ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/pool/IAlgebraPoolEvents.sol": {
        "keccak256": "0x38348849e3c1b18334b4897f21b67a500215f9da8e47ed04209767052c2a5b93",
        "urls": [
          "bzz-raw://01d9f8a7d90521f7c27c9ce4907ce4626f1fd6e597f5912da80eb516c7c56f58",
          "dweb:/ipfs/QmbETzZdzpEowRAWsjupb1AdvwZYvdZoHsPpv6vHYem2nQ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/pool/IAlgebraPoolImmutables.sol": {
        "keccak256": "0x527bd2f402e3c6b01107e70bcb6d159937de74663a0d914aefee924672facc1d",
        "urls": [
          "bzz-raw://4bccbcf10e3726243f354853cfed495970731a292ff12be715fd75d8f726d48f",
          "dweb:/ipfs/QmQdh7AuAYt8uq72DmEHNgqHmz66AbkEdZXxevkgo13pdc"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/pool/IAlgebraPoolPermissionedActions.sol": {
        "keccak256": "0x0c309a0fa5aae5336b8fe6e5987bd1825918717da98eea395183ec4868159ae0",
        "urls": [
          "bzz-raw://43eed8d7a7158af94acdec23661242a0aab5879614684b18e8af1e1b1f83d723",
          "dweb:/ipfs/QmeW9eNqAvt22SLtipSNdoUkgfUw53G6e7iUA7XYwQv5qR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/algebrav2/pool/IAlgebraPoolState.sol": {
        "keccak256": "0xcd53e01bcc120d16a15847ba0e805bc5018de1a8d9177ea34c0976db2df3d902",
        "urls": [
          "bzz-raw://cf0f48fa035b6558c3b774ed42f1de13a2457fe76aa766c93eaafc3ecb6e7ae3",
          "dweb:/ipfs/QmWpdDMVpFKCE2rLx9PfdD7Npd8Kck7Hfzp1i93k6iqtr3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/erc/IERC1271.sol": {
        "keccak256": "0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36",
        "urls": [
          "bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779",
          "dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/ICamelotHelper.sol": {
        "keccak256": "0xb45bc1db22753bde63810a872db8398dc1e555c5e8061e9968673ebc69c6a44a",
        "urls": [
          "bzz-raw://1277064e5685a2b850ec10a632f269b48892446b0ea144467be3cdd67e5d69c6",
          "dweb:/ipfs/Qma3My77Ycmv97tcfRkbrHPzGRhrmoUe7g5CsHfCZm9Uwb"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/utils/IContractMeta.sol": {
        "keccak256": "0x7ce236cea17798c2c9e60a659e727ef188f6579315b8227d0c6ad067a33900fb",
        "urls": [
          "bzz-raw://31c232f85d6565414bdf292adacc3054ab2355878e4d4508fc86fc2787436f24",
          "dweb:/ipfs/QmVhEUkN5Rwqpyufn7qqT88LLdq885igE57Pk4LzgJb9Kp"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IDefaultAccessControl.sol": {
        "keccak256": "0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60",
        "urls": [
          "bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add",
          "dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/ICamelotVault.sol": {
        "keccak256": "0x8b0420e22fe1a8c59e6ee7ab4517b2a220c42d6e566ea7aee225d84ce30d41f2",
        "urls": [
          "bzz-raw://92e35e66aeb701eae1ca28df4d9f605501091d7fb3fd33e96892af8407a158bd",
          "dweb:/ipfs/QmZKVLmzZYYxEVNetBHH8jjZsAfQYMKqqoDc1uznyz8QxP"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/ICamelotVaultGovernance.sol": {
        "keccak256": "0x8187f0a77f9db2a2ce6f72800e6e7a71746e59d4b77a7bc55d43376485422860",
        "urls": [
          "bzz-raw://44f8d795f930ab506d9f5b21aaa197a914033d379e68636e14068569d33e63fa",
          "dweb:/ipfs/QmVCrs3tmJDa4x5yz14Q1MVWoeYJjqjLN3SkJe7PhFBaeg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/vaults/IIntegrationVault.sol": {
        "keccak256": "0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e",
        "urls": [
          "bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d",
          "dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVault.sol": {
        "keccak256": "0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43",
        "urls": [
          "bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1",
          "dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultGovernance.sol": {
        "keccak256": "0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813",
        "urls": [
          "bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375",
          "dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu"
        ],
        "license": "MIT"
      },
      "src/libraries/ExceptionsLibrary.sol": {
        "keccak256": "0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff",
        "urls": [
          "bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f",
          "dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX"
        ],
        "license": "MIT"
      },
      "src/libraries/PermissionIdsLibrary.sol": {
        "keccak256": "0xc6a4f2515d807b2ad95e9e8f7190c5ea85ab6603d2c1136632a8af9c479ecfcf",
        "urls": [
          "bzz-raw://4e16f3d1e595ffa5b20cd1588e839ee783b1ca246d489cbe42040fd3089bb8b1",
          "dweb:/ipfs/QmQdW5ykrjB5yMMxkU5zTR4GJ5kBhyrnAbmt3mvtB55kuC"
        ],
        "license": "MIT"
      },
      "src/utils/ContractMeta.sol": {
        "keccak256": "0x6e1fe2b6e0907a5388a5775be53bbfb55883aacc0ccb7597dfc6475fa9834c3f",
        "urls": [
          "bzz-raw://9f8a2c5073a97b514829bac140bf84391cc5702185c4d6813e47b61ce53515e6",
          "dweb:/ipfs/QmeuMJq2ciSaDZC8qiUGLPfAHBjpCE4v79fZiaWm8egAks"
        ],
        "license": "BUSL-1.1"
      },
      "src/vaults/CamelotVaultGovernance.sol": {
        "keccak256": "0xa31819740e1798d7c1d1475f0f5cff0141d2206f6523504b2afccd9720311cd8",
        "urls": [
          "bzz-raw://89acae7ce2aab63aceb1618b6c95f2d81de8da018fcdfb8f47c7b1d989ce7d1b",
          "dweb:/ipfs/QmfDQE8gMmHMtHFD6Ygvy7xtxUjs7tzX34p96WTjCMxMiX"
        ],
        "license": "BSL-1.1"
      },
      "src/vaults/VaultGovernance.sol": {
        "keccak256": "0xd484ec7eee06480da27027a0ac81f591440ecdd2ba7bd5bfdee58a3f9e88c22c",
        "urls": [
          "bzz-raw://8b4f08e9350fadeb03b9561a2fb2798821f7186fe8663207c91402ea62a53cc5",
          "dweb:/ipfs/QmUr73ghYfPzjtFgxE8mPjw5wFwQTQsbcLDGJNQVfT4rEV"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/vaults/CamelotVaultGovernance.sol",
    "id": 139452,
    "exportedSymbols": {
      "AlgebraFeeConfiguration": [
        55613
      ],
      "CamelotVaultGovernance": [
        139451
      ],
      "Clones": [
        43615
      ],
      "ContractMeta": [
        114987
      ],
      "ERC165": [
        48061
      ],
      "ExceptionsLibrary": [
        79454
      ],
      "IAccessControl": [
        43366
      ],
      "IAccessControlEnumerable": [
        43391
      ],
      "IAlgebraFactory": [
        53926
      ],
      "IAlgebraNonfungiblePositionManager": [
        54152
      ],
      "IAlgebraPool": [
        54174
      ],
      "IAlgebraPoolActions": [
        55975
      ],
      "IAlgebraPoolDerivedState": [
        55991
      ],
      "IAlgebraPoolEvents": [
        56106
      ],
      "IAlgebraPoolImmutables": [
        56146
      ],
      "IAlgebraPoolPermissionedActions": [
        56170
      ],
      "IAlgebraPoolState": [
        56320
      ],
      "ICamelotHelper": [
        75741
      ],
      "ICamelotVault": [
        76514
      ],
      "ICamelotVaultGovernance": [
        76537
      ],
      "IContractMeta": [
        75764
      ],
      "IDefaultAccessControl": [
        75786
      ],
      "IERC1271": [
        64026
      ],
      "IERC165": [
        48073
      ],
      "IERC721": [
        46687
      ],
      "IERC721Enumerable": [
        46736
      ],
      "IERC721Metadata": [
        46763
      ],
      "IERC721Permit": [
        54307
      ],
      "IERC721Receiver": [
        46705
      ],
      "IIntegrationVault": [
        77767
      ],
      "IPeripheryImmutableState": [
        54329
      ],
      "IPeripheryPayments": [
        54355
      ],
      "IPoolInitializer": [
        54372
      ],
      "IProtocolGovernance": [
        52868
      ],
      "IUnitPricesGovernance": [
        52921
      ],
      "IVault": [
        78599
      ],
      "IVaultGovernance": [
        78668
      ],
      "IVaultRegistry": [
        53012
      ],
      "PermissionIdsLibrary": [
        79479
      ],
      "PoolAddress": [
        55861
      ],
      "VaultGovernance": [
        158218
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:1815:455",
    "nodes": [
      {
        "id": 139324,
        "nodeType": "PragmaDirective",
        "src": "36:23:455",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 139325,
        "nodeType": "ImportDirective",
        "src": "61:58:455",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/ICamelotVaultGovernance.sol",
        "file": "../interfaces/vaults/ICamelotVaultGovernance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 139452,
        "sourceUnit": 76538,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 139326,
        "nodeType": "ImportDirective",
        "src": "120:48:455",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/ICamelotVault.sol",
        "file": "../interfaces/vaults/ICamelotVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 139452,
        "sourceUnit": 76515,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 139327,
        "nodeType": "ImportDirective",
        "src": "169:44:455",
        "nodes": [],
        "absolutePath": "src/libraries/ExceptionsLibrary.sol",
        "file": "../libraries/ExceptionsLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 139452,
        "sourceUnit": 79455,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 139328,
        "nodeType": "ImportDirective",
        "src": "214:35:455",
        "nodes": [],
        "absolutePath": "src/utils/ContractMeta.sol",
        "file": "../utils/ContractMeta.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 139452,
        "sourceUnit": 114988,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 139329,
        "nodeType": "ImportDirective",
        "src": "250:31:455",
        "nodes": [],
        "absolutePath": "src/vaults/VaultGovernance.sol",
        "file": "./VaultGovernance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 139452,
        "sourceUnit": 158219,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 139451,
        "nodeType": "ContractDefinition",
        "src": "381:1469:455",
        "nodes": [
          {
            "id": 139347,
            "nodeType": "FunctionDefinition",
            "src": "572:86:455",
            "nodes": [],
            "body": {
              "id": 139346,
              "nodeType": "Block",
              "src": "656:2:455",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 139337,
              "nodeType": "StructuredDocumentation",
              "src": "477:90:455",
              "text": "@notice Creates a new contract.\n @param internalParams_ Initial Internal Params"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 139343,
                    "name": "internalParams_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 139340,
                    "src": "639:15:455",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InternalParams_$78614_memory_ptr",
                      "typeString": "struct IVaultGovernance.InternalParams memory"
                    }
                  }
                ],
                "id": 139344,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 139342,
                  "name": "VaultGovernance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 158218,
                  "src": "623:15:455"
                },
                "nodeType": "ModifierInvocation",
                "src": "623:32:455"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 139341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139340,
                  "mutability": "mutable",
                  "name": "internalParams_",
                  "nameLocation": "606:15:455",
                  "nodeType": "VariableDeclaration",
                  "scope": 139347,
                  "src": "584:37:455",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InternalParams_$78614_memory_ptr",
                    "typeString": "struct IVaultGovernance.InternalParams"
                  },
                  "typeName": {
                    "id": 139339,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 139338,
                      "name": "InternalParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78614,
                      "src": "584:14:455"
                    },
                    "referencedDeclaration": 78614,
                    "src": "584:14:455",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InternalParams_$78614_storage_ptr",
                      "typeString": "struct IVaultGovernance.InternalParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "583:39:455"
            },
            "returnParameters": {
              "id": 139345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "656:0:455"
            },
            "scope": 139451,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 139369,
            "nodeType": "FunctionDefinition",
            "src": "757:211:455",
            "nodes": [],
            "body": {
              "id": 139368,
              "nodeType": "Block",
              "src": "848:120:455",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 139366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 139358,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139350,
                          "src": "889:11:455",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 139356,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "865:5:455",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_CamelotVaultGovernance_$139451_$",
                            "typeString": "type(contract super CamelotVaultGovernance)"
                          }
                        },
                        "id": 139357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 157598,
                        "src": "865:23:455",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 139359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "865:36:455",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 139365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 139361,
                              "name": "ICamelotVaultGovernance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76537,
                              "src": "910:23:455",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICamelotVaultGovernance_$76537_$",
                                "typeString": "type(contract ICamelotVaultGovernance)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_ICamelotVaultGovernance_$76537_$",
                                "typeString": "type(contract ICamelotVaultGovernance)"
                              }
                            ],
                            "id": 139360,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "905:4:455",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 139362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "905:29:455",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_ICamelotVaultGovernance_$76537",
                            "typeString": "type(contract ICamelotVaultGovernance)"
                          }
                        },
                        "id": 139363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "905:41:455",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 139364,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139350,
                        "src": "950:11:455",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "905:56:455",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "865:96:455",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 139355,
                  "id": 139367,
                  "nodeType": "Return",
                  "src": "858:103:455"
                }
              ]
            },
            "baseFunctions": [
              157598
            ],
            "documentation": {
              "id": 139348,
              "nodeType": "StructuredDocumentation",
              "src": "729:23:455",
              "text": "@inheritdoc IERC165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "766:17:455",
            "overrides": {
              "id": 139352,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "824:8:455"
            },
            "parameters": {
              "id": 139351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139350,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "791:11:455",
                  "nodeType": "VariableDeclaration",
                  "scope": 139369,
                  "src": "784:18:455",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 139349,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:6:455",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "783:20:455"
            },
            "returnParameters": {
              "id": 139355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139354,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 139369,
                  "src": "842:4:455",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 139353,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:4:455",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "841:6:455"
            },
            "scope": 139451,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 139426,
            "nodeType": "FunctionDefinition",
            "src": "1087:452:455",
            "nodes": [],
            "body": {
              "id": 139425,
              "nodeType": "Block",
              "src": "1258:281:455",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    139386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 139386,
                      "mutability": "mutable",
                      "name": "vaddr",
                      "nameLocation": "1276:5:455",
                      "nodeType": "VariableDeclaration",
                      "scope": 139425,
                      "src": "1268:13:455",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 139385,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1268:7:455",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 139387,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1268:13:455"
                },
                {
                  "expression": {
                    "id": 139394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 139388,
                          "name": "vaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139386,
                          "src": "1292:5:455",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 139389,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139383,
                          "src": "1299:3:455",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 139390,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1291:12:455",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 139392,
                          "name": "owner_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139375,
                          "src": "1319:6:455",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 139391,
                        "name": "_createVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157867,
                        "src": "1306:12:455",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$_t_uint256_$",
                          "typeString": "function (address) returns (address,uint256)"
                        }
                      },
                      "id": 139393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1306:20:455",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "src": "1291:35:455",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139395,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:35:455"
                },
                {
                  "expression": {
                    "id": 139400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 139396,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139381,
                      "src": "1336:5:455",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICamelotVault_$76514",
                        "typeString": "contract ICamelotVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 139398,
                          "name": "vaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139386,
                          "src": "1358:5:455",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 139397,
                        "name": "ICamelotVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76514,
                        "src": "1344:13:455",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ICamelotVault_$76514_$",
                          "typeString": "type(contract ICamelotVault)"
                        }
                      },
                      "id": 139399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1344:20:455",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ICamelotVault_$76514",
                        "typeString": "contract ICamelotVault"
                      }
                    },
                    "src": "1336:28:455",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICamelotVault_$76514",
                      "typeString": "contract ICamelotVault"
                    }
                  },
                  "id": 139401,
                  "nodeType": "ExpressionStatement",
                  "src": "1336:28:455"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 139405,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139383,
                        "src": "1391:3:455",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 139406,
                        "name": "erc20Vault_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139377,
                        "src": "1396:11:455",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 139407,
                        "name": "vaultTokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139373,
                        "src": "1409:12:455",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "id": 139402,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139381,
                        "src": "1374:5:455",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICamelotVault_$76514",
                          "typeString": "contract ICamelotVault"
                        }
                      },
                      "id": 139404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76506,
                      "src": "1374:16:455",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,address[] memory) external"
                      }
                    },
                    "id": 139408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1374:48:455",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139409,
                  "nodeType": "ExpressionStatement",
                  "src": "1374:48:455"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 139411,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1451:2:455",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 139412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1451:9:455",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 139413,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1462:3:455",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 139414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1462:10:455",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 139415,
                        "name": "vaultTokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139373,
                        "src": "1474:12:455",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 139418,
                            "name": "erc20Vault_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139377,
                            "src": "1499:11:455",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 139416,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1488:3:455",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 139417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1488:10:455",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 139419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1488:23:455",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 139420,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139375,
                        "src": "1513:6:455",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 139421,
                        "name": "vaddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139386,
                        "src": "1521:5:455",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 139422,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139383,
                        "src": "1528:3:455",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 139410,
                      "name": "DeployedVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158217,
                      "src": "1437:13:455",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address[] memory,bytes memory,address,address,uint256)"
                      }
                    },
                    "id": 139423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:95:455",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 139424,
                  "nodeType": "EmitStatement",
                  "src": "1432:100:455"
                }
              ]
            },
            "baseFunctions": [
              76536
            ],
            "documentation": {
              "id": 139370,
              "nodeType": "StructuredDocumentation",
              "src": "1043:39:455",
              "text": "@inheritdoc ICamelotVaultGovernance"
            },
            "functionSelector": "de2f76a4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createVault",
            "nameLocation": "1096:11:455",
            "parameters": {
              "id": 139378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139373,
                  "mutability": "mutable",
                  "name": "vaultTokens_",
                  "nameLocation": "1134:12:455",
                  "nodeType": "VariableDeclaration",
                  "scope": 139426,
                  "src": "1117:29:455",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 139371,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1117:7:455",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 139372,
                    "nodeType": "ArrayTypeName",
                    "src": "1117:9:455",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139375,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "1164:6:455",
                  "nodeType": "VariableDeclaration",
                  "scope": 139426,
                  "src": "1156:14:455",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 139374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1156:7:455",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139377,
                  "mutability": "mutable",
                  "name": "erc20Vault_",
                  "nameLocation": "1188:11:455",
                  "nodeType": "VariableDeclaration",
                  "scope": 139426,
                  "src": "1180:19:455",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 139376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:455",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1107:98:455"
            },
            "returnParameters": {
              "id": 139384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139381,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1238:5:455",
                  "nodeType": "VariableDeclaration",
                  "scope": 139426,
                  "src": "1224:19:455",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ICamelotVault_$76514",
                    "typeString": "contract ICamelotVault"
                  },
                  "typeName": {
                    "id": 139380,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 139379,
                      "name": "ICamelotVault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76514,
                      "src": "1224:13:455"
                    },
                    "referencedDeclaration": 76514,
                    "src": "1224:13:455",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ICamelotVault_$76514",
                      "typeString": "contract ICamelotVault"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139383,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "1253:3:455",
                  "nodeType": "VariableDeclaration",
                  "scope": 139426,
                  "src": "1245:11:455",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 139382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1245:7:455",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1223:34:455"
            },
            "scope": 139451,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 139438,
            "nodeType": "FunctionDefinition",
            "src": "1610:123:455",
            "nodes": [],
            "body": {
              "id": 139437,
              "nodeType": "Block",
              "src": "1676:57:455",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "43616d656c6f745661756c74476f7665726e616e6365",
                        "id": 139434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1701:24:455",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2310819652a5c13eba957d1e9f5aa662243b7565febe07fd0c407115b217869",
                          "typeString": "literal_string \"CamelotVaultGovernance\""
                        },
                        "value": "CamelotVaultGovernance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f2310819652a5c13eba957d1e9f5aa662243b7565febe07fd0c407115b217869",
                          "typeString": "literal_string \"CamelotVaultGovernance\""
                        }
                      ],
                      "id": 139433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1693:7:455",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 139432,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1693:7:455",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 139435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1693:33:455",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 139431,
                  "id": 139436,
                  "nodeType": "Return",
                  "src": "1686:40:455"
                }
              ]
            },
            "baseFunctions": [
              114934
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_contractName",
            "nameLocation": "1619:13:455",
            "overrides": {
              "id": 139428,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1649:8:455"
            },
            "parameters": {
              "id": 139427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1632:2:455"
            },
            "returnParameters": {
              "id": 139431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139430,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 139438,
                  "src": "1667:7:455",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 139429,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1667:7:455",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1666:9:455"
            },
            "scope": 139451,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 139450,
            "nodeType": "FunctionDefinition",
            "src": "1739:109:455",
            "nodes": [],
            "body": {
              "id": 139449,
              "nodeType": "Block",
              "src": "1808:40:455",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "312e302e30",
                        "id": 139446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1833:7:455",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                          "typeString": "literal_string \"1.0.0\""
                        },
                        "value": "1.0.0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                          "typeString": "literal_string \"1.0.0\""
                        }
                      ],
                      "id": 139445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1825:7:455",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 139444,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1825:7:455",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 139447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1825:16:455",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 139443,
                  "id": 139448,
                  "nodeType": "Return",
                  "src": "1818:23:455"
                }
              ]
            },
            "baseFunctions": [
              114939
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_contractVersion",
            "nameLocation": "1748:16:455",
            "overrides": {
              "id": 139440,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1781:8:455"
            },
            "parameters": {
              "id": 139439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1764:2:455"
            },
            "returnParameters": {
              "id": 139443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139442,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 139450,
                  "src": "1799:7:455",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 139441,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1799:7:455",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1798:9:455"
            },
            "scope": 139451,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 139331,
              "name": "ContractMeta",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 114987,
              "src": "416:12:455"
            },
            "id": 139332,
            "nodeType": "InheritanceSpecifier",
            "src": "416:12:455"
          },
          {
            "baseName": {
              "id": 139333,
              "name": "ICamelotVaultGovernance",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 76537,
              "src": "430:23:455"
            },
            "id": 139334,
            "nodeType": "InheritanceSpecifier",
            "src": "430:23:455"
          },
          {
            "baseName": {
              "id": 139335,
              "name": "VaultGovernance",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 158218,
              "src": "455:15:455"
            },
            "id": 139336,
            "nodeType": "InheritanceSpecifier",
            "src": "455:15:455"
          }
        ],
        "canonicalName": "CamelotVaultGovernance",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 139330,
          "nodeType": "StructuredDocumentation",
          "src": "283:98:455",
          "text": "@notice Governance that manages all Camelot Vaults params and can deploy a new Camelot Vault."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          139451,
          158218,
          48061,
          48073,
          76537,
          78668,
          114987,
          75764
        ],
        "name": "CamelotVaultGovernance",
        "nameLocation": "390:22:455",
        "scope": 139452,
        "usedErrors": []
      }
    ],
    "license": "BSL-1.1"
  },
  "id": 455
}