{
  "abi": [
    {
      "inputs": [],
      "name": "activeIncentive",
      "outputs": [
        {
          "internalType": "address",
          "name": "incentiveAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "communityFeeLastTimestamp",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCommunityFeePending",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "communityFeePending0",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "communityFeePending1",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReserves",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "reserve0",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "reserve1",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "globalState",
      "outputs": [
        {
          "internalType": "uint160",
          "name": "price",
          "type": "uint160"
        },
        {
          "internalType": "int24",
          "name": "tick",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "prevInitializedTick",
          "type": "int24"
        },
        {
          "internalType": "uint16",
          "name": "fee",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "timepointIndex",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "communityFee",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "unlocked",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "tick",
          "type": "int24"
        }
      ],
      "name": "limitOrders",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "amountToSell",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "soldAmount",
          "type": "uint128"
        },
        {
          "internalType": "uint256",
          "name": "boughtAmount0Cumulative",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "boughtAmount1Cumulative",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "initialized",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidity",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        }
      ],
      "name": "positions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "innerFeeGrowth0Token",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "innerFeeGrowth1Token",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "fees0",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "fees1",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "secondsPerLiquidityCumulative",
      "outputs": [
        {
          "internalType": "uint160",
          "name": "",
          "type": "uint160"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tickSpacing",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tickSpacingLimitOrders",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int16",
          "name": "wordPosition",
          "type": "int16"
        }
      ],
      "name": "tickTable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "tick",
          "type": "int24"
        }
      ],
      "name": "ticks",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "liquidityTotal",
          "type": "uint128"
        },
        {
          "internalType": "int128",
          "name": "liquidityDelta",
          "type": "int128"
        },
        {
          "internalType": "uint256",
          "name": "outerFeeGrowth0Token",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "outerFeeGrowth1Token",
          "type": "uint256"
        },
        {
          "internalType": "int24",
          "name": "prevTick",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "nextTick",
          "type": "int24"
        },
        {
          "internalType": "uint160",
          "name": "outerSecondsPerLiquidity",
          "type": "uint160"
        },
        {
          "internalType": "uint32",
          "name": "outerSecondsSpent",
          "type": "uint32"
        },
        {
          "internalType": "bool",
          "name": "hasLimitOrders",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFeeGrowth0Token",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFeeGrowth1Token",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "activeIncentive()": "facb0eb1",
    "communityFeeLastTimestamp()": "1131b110",
    "getCommunityFeePending()": "7bd78025",
    "getReserves()": "0902f1ac",
    "globalState()": "e76c01e4",
    "limitOrders(int24)": "c8a67f93",
    "liquidity()": "1a686502",
    "positions(bytes32)": "514ea4bf",
    "secondsPerLiquidityCumulative()": "d64c6d71",
    "tickSpacing()": "d0c93a7c",
    "tickSpacingLimitOrders()": "18dd8891",
    "tickTable(int16)": "c677e3e0",
    "ticks(int24)": "f30dba93",
    "totalFeeGrowth0Token()": "6378ae44",
    "totalFeeGrowth1Token()": "ecdecf42"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"activeIncentive\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"incentiveAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityFeeLastTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCommunityFeePending\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"communityFeePending0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"communityFeePending1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"reserve0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"reserve1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalState\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"price\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"prevInitializedTick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"fee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"timepointIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"communityFee\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"limitOrders\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amountToSell\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"soldAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"boughtAmount0Cumulative\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"boughtAmount1Cumulative\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"innerFeeGrowth0Token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"innerFeeGrowth1Token\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"fees0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"fees1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"secondsPerLiquidityCumulative\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacingLimitOrders\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickTable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityTotal\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityDelta\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"outerFeeGrowth0Token\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outerFeeGrowth1Token\",\"type\":\"uint256\"},{\"internalType\":\"int24\",\"name\":\"prevTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"nextTick\",\"type\":\"int24\"},{\"internalType\":\"uint160\",\"name\":\"outerSecondsPerLiquidity\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"outerSecondsSpent\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"hasLimitOrders\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeeGrowth0Token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFeeGrowth1Token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Credit to Uniswap Labs under GPL-2.0-or-later license: https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces\",\"kind\":\"dev\",\"methods\":{\"activeIncentive()\":{\"details\":\"if there is no active incentive at the moment, incentiveAddress would be equal to address(0)\",\"returns\":{\"incentiveAddress\":\"The address associated with the current active incentive\"}},\"getCommunityFeePending()\":{\"details\":\"Will be sent COMMUNITY_FEE_TRANSFER_FREQUENCY after communityFeeLastTimestamp\"},\"getReserves()\":{\"details\":\"If at any time the real balance is larger, the excess will be transferred to liquidity providers as additional fee. If the balance exceeds uint128, the excess will be sent to the communityVault.\"},\"globalState()\":{\"returns\":{\"communityFee\":\"The community fee percentage of the swap fee in thousandths (1e-3)\",\"fee\":\"The last pool fee value in hundredths of a bip, i.e. 1e-6\",\"prevInitializedTick\":\"The previous initialized tick\",\"price\":\"The current price of the pool as a sqrt(dToken1/dToken0) Q64.96 value;\",\"tick\":\"The current tick of the pool, i.e. according to the last tick transition that was run; This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(price) if the price is on a tick boundary;\",\"timepointIndex\":\"The index of the last written timepoint\",\"unlocked\":\"Whether the pool is currently locked to reentrancy\"}},\"limitOrders(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"amountToSell\":\"The amount of tokens to sell. Has only relative meaning\",\"boughtAmount0Cumulative\":\"The accumulator of bought tokens0 per amountToSell. Has only relative meaning\",\"boughtAmount1Cumulative\":\"The accumulator of bought tokens1 per amountToSell. Has only relative meaning\",\"initialized\":\"Will be true if a limit order was created at least once on this tick\",\"soldAmount\":\"The amount of tokens already sold. Has only relative meaning\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks. Returned value cannot exceed type(uint128).max\"},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, bottomTick and topTick\"},\"returns\":{\"fees0\":\"The computed amount of token0 owed to the position as of the last mint/burn/poke\",\"fees1\":\"The computed amount of token1 owed to the position as of the last mint/burn/poke\",\"innerFeeGrowth0Token\":\"Fee growth of token0 inside the tick range as of the last mint/burn/poke\",\"innerFeeGrowth1Token\":\"Fee growth of token1 inside the tick range as of the last mint/burn/poke\",\"liquidity\":\"The amount of liquidity in the position\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value e.g.: a tickSpacing of 60 means ticks can be initialized every 60th tick, i.e., ..., -120, -60, 0, 60, 120, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The current tick spacing\"}},\"tickSpacingLimitOrders()\":{\"details\":\"Ticks can only be used for limit orders at multiples of this value This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The current tick spacing for limit orders\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"hasLimitOrders\":\"Whether there are limit orders on this tick or not In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\",\"liquidityDelta\":\"How much liquidity changes when the pool price crosses the tick\",\"liquidityTotal\":\"The total amount of position liquidity that uses the pool either as tick lower or tick upper\",\"nextTick\":\"The next tick in tick list\",\"outerFeeGrowth0Token\":\"The fee growth on the other side of the tick from the current tick in token0\",\"outerFeeGrowth1Token\":\"The fee growth on the other side of the tick from the current tick in token1\",\"outerSecondsPerLiquidity\":\"The seconds spent per liquidity on the other side of the tick from the current tick\",\"outerSecondsSpent\":\"The seconds spent on the other side of the tick from the current tick\",\"prevTick\":\"The previous tick in tick list\"}},\"totalFeeGrowth0Token()\":{\"details\":\"This value can overflow the uint256\"},\"totalFeeGrowth1Token()\":{\"details\":\"This value can overflow the uint256\"}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"activeIncentive()\":{\"notice\":\"Returns the information about active incentive\"},\"communityFeeLastTimestamp()\":{\"notice\":\"The timestamp of the last sending of tokens to community vault\"},\"getCommunityFeePending()\":{\"notice\":\"The amounts of token0 and token1 that will be sent to the vault\"},\"getReserves()\":{\"notice\":\"The tracked token0 and token1 reserves of pool\"},\"globalState()\":{\"notice\":\"The globalState structure in the pool stores many values but requires only one slot and is exposed as a single method to save gas when accessed externally.\"},\"limitOrders(int24)\":{\"notice\":\"Returns the summary information about a limit orders at tick\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"secondsPerLiquidityCumulative()\":{\"notice\":\"The accumulator of seconds per liquidity since the pool was first initialized\"},\"tickSpacing()\":{\"notice\":\"The current tick spacing\"},\"tickSpacingLimitOrders()\":{\"notice\":\"The current tick spacing for limit orders\"},\"tickTable(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickTree for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"totalFeeGrowth0Token()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"totalFeeGrowth1Token()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/external/algebrav2/pool/IAlgebraPoolState.sol\":\"IAlgebraPoolState\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"src/interfaces/external/algebrav2/pool/IAlgebraPoolState.sol\":{\"keccak256\":\"0xcd53e01bcc120d16a15847ba0e805bc5018de1a8d9177ea34c0976db2df3d902\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cf0f48fa035b6558c3b774ed42f1de13a2457fe76aa766c93eaafc3ecb6e7ae3\",\"dweb:/ipfs/QmWpdDMVpFKCE2rLx9PfdD7Npd8Kck7Hfzp1i93k6iqtr3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "activeIncentive",
          "outputs": [
            {
              "internalType": "address",
              "name": "incentiveAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "communityFeeLastTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCommunityFeePending",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "communityFeePending0",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "communityFeePending1",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReserves",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "reserve0",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "reserve1",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "globalState",
          "outputs": [
            {
              "internalType": "uint160",
              "name": "price",
              "type": "uint160"
            },
            {
              "internalType": "int24",
              "name": "tick",
              "type": "int24"
            },
            {
              "internalType": "int24",
              "name": "prevInitializedTick",
              "type": "int24"
            },
            {
              "internalType": "uint16",
              "name": "fee",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "timepointIndex",
              "type": "uint16"
            },
            {
              "internalType": "uint8",
              "name": "communityFee",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "unlocked",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "int24",
              "name": "tick",
              "type": "int24"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "limitOrders",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "amountToSell",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "soldAmount",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "boughtAmount0Cumulative",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "boughtAmount1Cumulative",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "initialized",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidity",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "positions",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "liquidity",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "innerFeeGrowth0Token",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "innerFeeGrowth1Token",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "fees0",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "fees1",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "secondsPerLiquidityCumulative",
          "outputs": [
            {
              "internalType": "uint160",
              "name": "",
              "type": "uint160"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tickSpacing",
          "outputs": [
            {
              "internalType": "int24",
              "name": "",
              "type": "int24"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tickSpacingLimitOrders",
          "outputs": [
            {
              "internalType": "int24",
              "name": "",
              "type": "int24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "int16",
              "name": "wordPosition",
              "type": "int16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tickTable",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "int24",
              "name": "tick",
              "type": "int24"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ticks",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "liquidityTotal",
              "type": "uint128"
            },
            {
              "internalType": "int128",
              "name": "liquidityDelta",
              "type": "int128"
            },
            {
              "internalType": "uint256",
              "name": "outerFeeGrowth0Token",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "outerFeeGrowth1Token",
              "type": "uint256"
            },
            {
              "internalType": "int24",
              "name": "prevTick",
              "type": "int24"
            },
            {
              "internalType": "int24",
              "name": "nextTick",
              "type": "int24"
            },
            {
              "internalType": "uint160",
              "name": "outerSecondsPerLiquidity",
              "type": "uint160"
            },
            {
              "internalType": "uint32",
              "name": "outerSecondsSpent",
              "type": "uint32"
            },
            {
              "internalType": "bool",
              "name": "hasLimitOrders",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalFeeGrowth0Token",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalFeeGrowth1Token",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "activeIncentive()": {
            "details": "if there is no active incentive at the moment, incentiveAddress would be equal to address(0)",
            "returns": {
              "incentiveAddress": "The address associated with the current active incentive"
            }
          },
          "getCommunityFeePending()": {
            "details": "Will be sent COMMUNITY_FEE_TRANSFER_FREQUENCY after communityFeeLastTimestamp"
          },
          "getReserves()": {
            "details": "If at any time the real balance is larger, the excess will be transferred to liquidity providers as additional fee. If the balance exceeds uint128, the excess will be sent to the communityVault."
          },
          "globalState()": {
            "returns": {
              "communityFee": "The community fee percentage of the swap fee in thousandths (1e-3)",
              "fee": "The last pool fee value in hundredths of a bip, i.e. 1e-6",
              "prevInitializedTick": "The previous initialized tick",
              "price": "The current price of the pool as a sqrt(dToken1/dToken0) Q64.96 value;",
              "tick": "The current tick of the pool, i.e. according to the last tick transition that was run; This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(price) if the price is on a tick boundary;",
              "timepointIndex": "The index of the last written timepoint",
              "unlocked": "Whether the pool is currently locked to reentrancy"
            }
          },
          "limitOrders(int24)": {
            "params": {
              "tick": "The tick to look up"
            },
            "returns": {
              "amountToSell": "The amount of tokens to sell. Has only relative meaning",
              "boughtAmount0Cumulative": "The accumulator of bought tokens0 per amountToSell. Has only relative meaning",
              "boughtAmount1Cumulative": "The accumulator of bought tokens1 per amountToSell. Has only relative meaning",
              "initialized": "Will be true if a limit order was created at least once on this tick",
              "soldAmount": "The amount of tokens already sold. Has only relative meaning"
            }
          },
          "liquidity()": {
            "details": "This value has no relationship to the total liquidity across all ticks. Returned value cannot exceed type(uint128).max"
          },
          "positions(bytes32)": {
            "params": {
              "key": "The position's key is a hash of a preimage composed by the owner, bottomTick and topTick"
            },
            "returns": {
              "fees0": "The computed amount of token0 owed to the position as of the last mint/burn/poke",
              "fees1": "The computed amount of token1 owed to the position as of the last mint/burn/poke",
              "innerFeeGrowth0Token": "Fee growth of token0 inside the tick range as of the last mint/burn/poke",
              "innerFeeGrowth1Token": "Fee growth of token1 inside the tick range as of the last mint/burn/poke",
              "liquidity": "The amount of liquidity in the position"
            }
          },
          "tickSpacing()": {
            "details": "Ticks can only be used at multiples of this value e.g.: a tickSpacing of 60 means ticks can be initialized every 60th tick, i.e., ..., -120, -60, 0, 60, 120, ... This value is an int24 to avoid casting even though it is always positive.",
            "returns": {
              "_0": "The current tick spacing"
            }
          },
          "tickSpacingLimitOrders()": {
            "details": "Ticks can only be used for limit orders at multiples of this value This value is an int24 to avoid casting even though it is always positive.",
            "returns": {
              "_0": "The current tick spacing for limit orders"
            }
          },
          "ticks(int24)": {
            "params": {
              "tick": "The tick to look up"
            },
            "returns": {
              "hasLimitOrders": "Whether there are limit orders on this tick or not In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.",
              "liquidityDelta": "How much liquidity changes when the pool price crosses the tick",
              "liquidityTotal": "The total amount of position liquidity that uses the pool either as tick lower or tick upper",
              "nextTick": "The next tick in tick list",
              "outerFeeGrowth0Token": "The fee growth on the other side of the tick from the current tick in token0",
              "outerFeeGrowth1Token": "The fee growth on the other side of the tick from the current tick in token1",
              "outerSecondsPerLiquidity": "The seconds spent per liquidity on the other side of the tick from the current tick",
              "outerSecondsSpent": "The seconds spent on the other side of the tick from the current tick",
              "prevTick": "The previous tick in tick list"
            }
          },
          "totalFeeGrowth0Token()": {
            "details": "This value can overflow the uint256"
          },
          "totalFeeGrowth1Token()": {
            "details": "This value can overflow the uint256"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "activeIncentive()": {
            "notice": "Returns the information about active incentive"
          },
          "communityFeeLastTimestamp()": {
            "notice": "The timestamp of the last sending of tokens to community vault"
          },
          "getCommunityFeePending()": {
            "notice": "The amounts of token0 and token1 that will be sent to the vault"
          },
          "getReserves()": {
            "notice": "The tracked token0 and token1 reserves of pool"
          },
          "globalState()": {
            "notice": "The globalState structure in the pool stores many values but requires only one slot and is exposed as a single method to save gas when accessed externally."
          },
          "limitOrders(int24)": {
            "notice": "Returns the summary information about a limit orders at tick"
          },
          "liquidity()": {
            "notice": "The currently in range liquidity available to the pool"
          },
          "positions(bytes32)": {
            "notice": "Returns the information about a position by the position's key"
          },
          "secondsPerLiquidityCumulative()": {
            "notice": "The accumulator of seconds per liquidity since the pool was first initialized"
          },
          "tickSpacing()": {
            "notice": "The current tick spacing"
          },
          "tickSpacingLimitOrders()": {
            "notice": "The current tick spacing for limit orders"
          },
          "tickTable(int16)": {
            "notice": "Returns 256 packed tick initialized boolean values. See TickTree for more information"
          },
          "ticks(int24)": {
            "notice": "Look up information about a specific tick in the pool"
          },
          "totalFeeGrowth0Token()": {
            "notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
          },
          "totalFeeGrowth1Token()": {
            "notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/external/algebrav2/pool/IAlgebraPoolState.sol": "IAlgebraPoolState"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/external/algebrav2/pool/IAlgebraPoolState.sol": {
        "keccak256": "0xcd53e01bcc120d16a15847ba0e805bc5018de1a8d9177ea34c0976db2df3d902",
        "urls": [
          "bzz-raw://cf0f48fa035b6558c3b774ed42f1de13a2457fe76aa766c93eaafc3ecb6e7ae3",
          "dweb:/ipfs/QmWpdDMVpFKCE2rLx9PfdD7Npd8Kck7Hfzp1i93k6iqtr3"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/external/algebrav2/pool/IAlgebraPoolState.sol",
    "id": 56321,
    "exportedSymbols": {
      "IAlgebraPoolState": [
        56320
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:7881:90",
    "nodes": [
      {
        "id": 56172,
        "nodeType": "PragmaDirective",
        "src": "45:23:90",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 56320,
        "nodeType": "ContractDefinition",
        "src": "242:7683:90",
        "nodes": [
          {
            "id": 56191,
            "nodeType": "FunctionDefinition",
            "src": "1165:288:90",
            "nodes": [],
            "documentation": {
              "id": 56174,
              "nodeType": "StructuredDocumentation",
              "src": "276:884:90",
              "text": "@notice The globalState structure in the pool stores many values but requires only one slot\n and is exposed as a single method to save gas when accessed externally.\n @return price The current price of the pool as a sqrt(dToken1/dToken0) Q64.96 value;\n @return tick The current tick of the pool, i.e. according to the last tick transition that was run;\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(price) if the price is on a tick boundary;\n @return prevInitializedTick The previous initialized tick\n @return fee The last pool fee value in hundredths of a bip, i.e. 1e-6\n @return timepointIndex The index of the last written timepoint\n @return communityFee The community fee percentage of the swap fee in thousandths (1e-3)\n @return unlocked Whether the pool is currently locked to reentrancy"
            },
            "functionSelector": "e76c01e4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "globalState",
            "nameLocation": "1174:11:90",
            "parameters": {
              "id": 56175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1185:2:90"
            },
            "returnParameters": {
              "id": 56190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56177,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1256:5:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56191,
                  "src": "1248:13:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 56176,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56179,
                  "mutability": "mutable",
                  "name": "tick",
                  "nameLocation": "1281:4:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56191,
                  "src": "1275:10:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 56178,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1275:5:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56181,
                  "mutability": "mutable",
                  "name": "prevInitializedTick",
                  "nameLocation": "1305:19:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56191,
                  "src": "1299:25:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 56180,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:5:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56183,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1345:3:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56191,
                  "src": "1338:10:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 56182,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1338:6:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56185,
                  "mutability": "mutable",
                  "name": "timepointIndex",
                  "nameLocation": "1369:14:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56191,
                  "src": "1362:21:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 56184,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1362:6:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56187,
                  "mutability": "mutable",
                  "name": "communityFee",
                  "nameLocation": "1403:12:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56191,
                  "src": "1397:18:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 56186,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1397:5:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56189,
                  "mutability": "mutable",
                  "name": "unlocked",
                  "nameLocation": "1434:8:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56191,
                  "src": "1429:13:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56188,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1429:4:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1234:218:90"
            },
            "scope": 56320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56197,
            "nodeType": "FunctionDefinition",
            "src": "1632:64:90",
            "nodes": [],
            "documentation": {
              "id": 56192,
              "nodeType": "StructuredDocumentation",
              "src": "1459:168:90",
              "text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
            },
            "functionSelector": "6378ae44",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalFeeGrowth0Token",
            "nameLocation": "1641:20:90",
            "parameters": {
              "id": 56193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1661:2:90"
            },
            "returnParameters": {
              "id": 56196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56195,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56197,
                  "src": "1687:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1687:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1686:9:90"
            },
            "scope": 56320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56203,
            "nodeType": "FunctionDefinition",
            "src": "1875:64:90",
            "nodes": [],
            "documentation": {
              "id": 56198,
              "nodeType": "StructuredDocumentation",
              "src": "1702:168:90",
              "text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
            },
            "functionSelector": "ecdecf42",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalFeeGrowth1Token",
            "nameLocation": "1884:20:90",
            "parameters": {
              "id": 56199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1904:2:90"
            },
            "returnParameters": {
              "id": 56202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56201,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56203,
                  "src": "1930:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1930:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1929:9:90"
            },
            "scope": 56320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56209,
            "nodeType": "FunctionDefinition",
            "src": "2156:53:90",
            "nodes": [],
            "documentation": {
              "id": 56204,
              "nodeType": "StructuredDocumentation",
              "src": "1945:206:90",
              "text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks.\n Returned value cannot exceed type(uint128).max"
            },
            "functionSelector": "1a686502",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "liquidity",
            "nameLocation": "2165:9:90",
            "parameters": {
              "id": 56205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2174:2:90"
            },
            "returnParameters": {
              "id": 56208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56207,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56209,
                  "src": "2200:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 56206,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2200:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2199:9:90"
            },
            "scope": 56320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56215,
            "nodeType": "FunctionDefinition",
            "src": "2563:53:90",
            "nodes": [],
            "documentation": {
              "id": 56210,
              "nodeType": "StructuredDocumentation",
              "src": "2215:343:90",
              "text": "@notice The current tick spacing\n @dev Ticks can only be used at multiples of this value\n e.g.: a tickSpacing of 60 means ticks can be initialized every 60th tick, i.e., ..., -120, -60, 0, 60, 120, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The current tick spacing"
            },
            "functionSelector": "d0c93a7c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tickSpacing",
            "nameLocation": "2572:11:90",
            "parameters": {
              "id": 56211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2583:2:90"
            },
            "returnParameters": {
              "id": 56214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56213,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56215,
                  "src": "2609:5:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 56212,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2609:5:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2608:7:90"
            },
            "scope": 56320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56221,
            "nodeType": "FunctionDefinition",
            "src": "2901:64:90",
            "nodes": [],
            "documentation": {
              "id": 56216,
              "nodeType": "StructuredDocumentation",
              "src": "2622:274:90",
              "text": "@notice The current tick spacing for limit orders\n @dev Ticks can only be used for limit orders at multiples of this value\n This value is an int24 to avoid casting even though it is always positive.\n @return The current tick spacing for limit orders"
            },
            "functionSelector": "18dd8891",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tickSpacingLimitOrders",
            "nameLocation": "2910:22:90",
            "parameters": {
              "id": 56217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2932:2:90"
            },
            "returnParameters": {
              "id": 56220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56219,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56221,
                  "src": "2958:5:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 56218,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2958:5:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2957:7:90"
            },
            "scope": 56320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56227,
            "nodeType": "FunctionDefinition",
            "src": "3050:68:90",
            "nodes": [],
            "documentation": {
              "id": 56222,
              "nodeType": "StructuredDocumentation",
              "src": "2971:74:90",
              "text": "@notice The timestamp of the last sending of tokens to community vault"
            },
            "functionSelector": "1131b110",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "communityFeeLastTimestamp",
            "nameLocation": "3059:25:90",
            "parameters": {
              "id": 56223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3084:2:90"
            },
            "returnParameters": {
              "id": 56226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56225,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56227,
                  "src": "3110:6:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 56224,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3110:6:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3109:8:90"
            },
            "scope": 56320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56235,
            "nodeType": "FunctionDefinition",
            "src": "3295:141:90",
            "nodes": [],
            "documentation": {
              "id": 56228,
              "nodeType": "StructuredDocumentation",
              "src": "3124:166:90",
              "text": "@notice The amounts of token0 and token1 that will be sent to the vault\n @dev Will be sent COMMUNITY_FEE_TRANSFER_FREQUENCY after communityFeeLastTimestamp"
            },
            "functionSelector": "7bd78025",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCommunityFeePending",
            "nameLocation": "3304:22:90",
            "parameters": {
              "id": 56229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3326:2:90"
            },
            "returnParameters": {
              "id": 56234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56231,
                  "mutability": "mutable",
                  "name": "communityFeePending0",
                  "nameLocation": "3384:20:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56235,
                  "src": "3376:28:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 56230,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56233,
                  "mutability": "mutable",
                  "name": "communityFeePending1",
                  "nameLocation": "3414:20:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56235,
                  "src": "3406:28:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 56232,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3406:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3375:60:90"
            },
            "scope": 56320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56243,
            "nodeType": "FunctionDefinition",
            "src": "3721:82:90",
            "nodes": [],
            "documentation": {
              "id": 56236,
              "nodeType": "StructuredDocumentation",
              "src": "3442:274:90",
              "text": "@notice The tracked token0 and token1 reserves of pool\n @dev If at any time the real balance is larger, the excess will be transferred to liquidity providers as additional fee.\n If the balance exceeds uint128, the excess will be sent to the communityVault."
            },
            "functionSelector": "0902f1ac",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getReserves",
            "nameLocation": "3730:11:90",
            "parameters": {
              "id": 56237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3741:2:90"
            },
            "returnParameters": {
              "id": 56242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56239,
                  "mutability": "mutable",
                  "name": "reserve0",
                  "nameLocation": "3775:8:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56243,
                  "src": "3767:16:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 56238,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3767:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56241,
                  "mutability": "mutable",
                  "name": "reserve1",
                  "nameLocation": "3793:8:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56243,
                  "src": "3785:16:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 56240,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3785:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3766:36:90"
            },
            "scope": 56320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56249,
            "nodeType": "FunctionDefinition",
            "src": "3903:73:90",
            "nodes": [],
            "documentation": {
              "id": 56244,
              "nodeType": "StructuredDocumentation",
              "src": "3809:89:90",
              "text": "@notice The accumulator of seconds per liquidity since the pool was first initialized"
            },
            "functionSelector": "d64c6d71",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "secondsPerLiquidityCumulative",
            "nameLocation": "3912:29:90",
            "parameters": {
              "id": 56245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3941:2:90"
            },
            "returnParameters": {
              "id": 56248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56247,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56249,
                  "src": "3967:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 56246,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "3967:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3966:9:90"
            },
            "scope": 56320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56273,
            "nodeType": "FunctionDefinition",
            "src": "5101:426:90",
            "nodes": [],
            "documentation": {
              "id": 56250,
              "nodeType": "StructuredDocumentation",
              "src": "3982:1114:90",
              "text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityTotal The total amount of position liquidity that uses the pool either as tick lower or tick upper\n @return liquidityDelta How much liquidity changes when the pool price crosses the tick\n @return outerFeeGrowth0Token The fee growth on the other side of the tick from the current tick in token0\n @return outerFeeGrowth1Token The fee growth on the other side of the tick from the current tick in token1\n @return prevTick The previous tick in tick list\n @return nextTick The next tick in tick list\n @return outerSecondsPerLiquidity The seconds spent per liquidity on the other side of the tick from the current tick\n @return outerSecondsSpent The seconds spent on the other side of the tick from the current tick\n @return hasLimitOrders Whether there are limit orders on this tick or not\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
            },
            "functionSelector": "f30dba93",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ticks",
            "nameLocation": "5110:5:90",
            "parameters": {
              "id": 56253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56252,
                  "mutability": "mutable",
                  "name": "tick",
                  "nameLocation": "5131:4:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56273,
                  "src": "5125:10:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 56251,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5125:5:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5115:26:90"
            },
            "returnParameters": {
              "id": 56272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56255,
                  "mutability": "mutable",
                  "name": "liquidityTotal",
                  "nameLocation": "5210:14:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56273,
                  "src": "5202:22:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 56254,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5202:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56257,
                  "mutability": "mutable",
                  "name": "liquidityDelta",
                  "nameLocation": "5245:14:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56273,
                  "src": "5238:21:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 56256,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "5238:6:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56259,
                  "mutability": "mutable",
                  "name": "outerFeeGrowth0Token",
                  "nameLocation": "5281:20:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56273,
                  "src": "5273:28:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5273:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56261,
                  "mutability": "mutable",
                  "name": "outerFeeGrowth1Token",
                  "nameLocation": "5323:20:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56273,
                  "src": "5315:28:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5315:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56263,
                  "mutability": "mutable",
                  "name": "prevTick",
                  "nameLocation": "5363:8:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56273,
                  "src": "5357:14:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 56262,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5357:5:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56265,
                  "mutability": "mutable",
                  "name": "nextTick",
                  "nameLocation": "5391:8:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56273,
                  "src": "5385:14:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 56264,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5385:5:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56267,
                  "mutability": "mutable",
                  "name": "outerSecondsPerLiquidity",
                  "nameLocation": "5421:24:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56273,
                  "src": "5413:32:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 56266,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "5413:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56269,
                  "mutability": "mutable",
                  "name": "outerSecondsSpent",
                  "nameLocation": "5466:17:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56273,
                  "src": "5459:24:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 56268,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5459:6:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56271,
                  "mutability": "mutable",
                  "name": "hasLimitOrders",
                  "nameLocation": "5502:14:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56273,
                  "src": "5497:19:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56270,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5497:4:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5188:338:90"
            },
            "scope": 56320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56289,
            "nodeType": "FunctionDefinition",
            "src": "6156:290:90",
            "nodes": [],
            "documentation": {
              "id": 56274,
              "nodeType": "StructuredDocumentation",
              "src": "5533:618:90",
              "text": "@notice Returns the summary information about a limit orders at tick\n @param tick The tick to look up\n @return amountToSell The amount of tokens to sell. Has only relative meaning\n @return soldAmount The amount of tokens already sold. Has only relative meaning\n @return boughtAmount0Cumulative The accumulator of bought tokens0 per amountToSell. Has only relative meaning\n @return boughtAmount1Cumulative The accumulator of bought tokens1 per amountToSell. Has only relative meaning\n @return initialized Will be true if a limit order was created at least once on this tick"
            },
            "functionSelector": "c8a67f93",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "limitOrders",
            "nameLocation": "6165:11:90",
            "parameters": {
              "id": 56277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56276,
                  "mutability": "mutable",
                  "name": "tick",
                  "nameLocation": "6192:4:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56289,
                  "src": "6186:10:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 56275,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "6186:5:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6176:26:90"
            },
            "returnParameters": {
              "id": 56288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56279,
                  "mutability": "mutable",
                  "name": "amountToSell",
                  "nameLocation": "6271:12:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56289,
                  "src": "6263:20:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 56278,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "6263:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56281,
                  "mutability": "mutable",
                  "name": "soldAmount",
                  "nameLocation": "6305:10:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56289,
                  "src": "6297:18:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 56280,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "6297:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56283,
                  "mutability": "mutable",
                  "name": "boughtAmount0Cumulative",
                  "nameLocation": "6337:23:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56289,
                  "src": "6329:31:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6329:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56285,
                  "mutability": "mutable",
                  "name": "boughtAmount1Cumulative",
                  "nameLocation": "6382:23:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56289,
                  "src": "6374:31:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6374:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56287,
                  "mutability": "mutable",
                  "name": "initialized",
                  "nameLocation": "6424:11:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56289,
                  "src": "6419:16:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56286,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6419:4:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6249:196:90"
            },
            "scope": 56320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56297,
            "nodeType": "FunctionDefinition",
            "src": "6554:71:90",
            "nodes": [],
            "documentation": {
              "id": 56290,
              "nodeType": "StructuredDocumentation",
              "src": "6452:97:90",
              "text": "@notice Returns 256 packed tick initialized boolean values. See TickTree for more information"
            },
            "functionSelector": "c677e3e0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tickTable",
            "nameLocation": "6563:9:90",
            "parameters": {
              "id": 56293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56292,
                  "mutability": "mutable",
                  "name": "wordPosition",
                  "nameLocation": "6579:12:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56297,
                  "src": "6573:18:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int16",
                    "typeString": "int16"
                  },
                  "typeName": {
                    "id": 56291,
                    "name": "int16",
                    "nodeType": "ElementaryTypeName",
                    "src": "6573:5:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int16",
                      "typeString": "int16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6572:20:90"
            },
            "returnParameters": {
              "id": 56296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56295,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56297,
                  "src": "6616:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6616:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6615:9:90"
            },
            "scope": 56320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56313,
            "nodeType": "FunctionDefinition",
            "src": "7310:272:90",
            "nodes": [],
            "documentation": {
              "id": 56298,
              "nodeType": "StructuredDocumentation",
              "src": "6631:674:90",
              "text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, bottomTick and topTick\n @return liquidity The amount of liquidity in the position\n @return innerFeeGrowth0Token Fee growth of token0 inside the tick range as of the last mint/burn/poke\n @return innerFeeGrowth1Token Fee growth of token1 inside the tick range as of the last mint/burn/poke\n @return fees0 The computed amount of token0 owed to the position as of the last mint/burn/poke\n @return fees1 The computed amount of token1 owed to the position as of the last mint/burn/poke"
            },
            "functionSelector": "514ea4bf",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "positions",
            "nameLocation": "7319:9:90",
            "parameters": {
              "id": 56301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56300,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "7346:3:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56313,
                  "src": "7338:11:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 56299,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7338:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7328:27:90"
            },
            "returnParameters": {
              "id": 56312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56303,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "7424:9:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56313,
                  "src": "7416:17:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7416:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56305,
                  "mutability": "mutable",
                  "name": "innerFeeGrowth0Token",
                  "nameLocation": "7455:20:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56313,
                  "src": "7447:28:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7447:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56307,
                  "mutability": "mutable",
                  "name": "innerFeeGrowth1Token",
                  "nameLocation": "7497:20:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56313,
                  "src": "7489:28:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7489:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56309,
                  "mutability": "mutable",
                  "name": "fees0",
                  "nameLocation": "7539:5:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56313,
                  "src": "7531:13:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 56308,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7531:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56311,
                  "mutability": "mutable",
                  "name": "fees1",
                  "nameLocation": "7566:5:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56313,
                  "src": "7558:13:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 56310,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7558:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7402:179:90"
            },
            "scope": 56320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56319,
            "nodeType": "FunctionDefinition",
            "src": "7847:76:90",
            "nodes": [],
            "documentation": {
              "id": 56314,
              "nodeType": "StructuredDocumentation",
              "src": "7588:254:90",
              "text": "@notice Returns the information about active incentive\n @dev if there is no active incentive at the moment, incentiveAddress would be equal to address(0)\n @return incentiveAddress The address associated with the current active incentive"
            },
            "functionSelector": "facb0eb1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "activeIncentive",
            "nameLocation": "7856:15:90",
            "parameters": {
              "id": 56315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7871:2:90"
            },
            "returnParameters": {
              "id": 56318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56317,
                  "mutability": "mutable",
                  "name": "incentiveAddress",
                  "nameLocation": "7905:16:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 56319,
                  "src": "7897:24:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7897:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7896:26:90"
            },
            "scope": 56320,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IAlgebraPoolState",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 56173,
          "nodeType": "StructuredDocumentation",
          "src": "70:172:90",
          "text": "@title Pool state that can change\n @dev Credit to Uniswap Labs under GPL-2.0-or-later license:\n https://github.com/Uniswap/v3-core/tree/main/contracts/interfaces"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          56320
        ],
        "name": "IAlgebraPoolState",
        "nameLocation": "252:17:90",
        "scope": 56321,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 90
}