{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "internalParams_",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "contract IPancakeNonfungiblePositionManager",
              "name": "positionManager",
              "type": "address"
            },
            {
              "internalType": "contract IOracle",
              "name": "oracle",
              "type": "address"
            }
          ],
          "internalType": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams",
          "name": "delayedProtocolParams_",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IPancakeNonfungiblePositionManager",
              "name": "positionManager",
              "type": "address"
            },
            {
              "internalType": "contract IOracle",
              "name": "oracle",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "CommitDelayedProtocolParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "safetyIndicesSet",
              "type": "uint32"
            }
          ],
          "indexed": false,
          "internalType": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "CommitDelayedStrategyParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "CommitedInternalParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "vaultTokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "vaultAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vaultNft",
          "type": "uint256"
        }
      ],
      "name": "DeployedVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "swapSlippageD",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "poolForSwap",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "cake",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "underlyingToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "smartRouter",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "averageTickTimespan",
              "type": "uint32"
            }
          ],
          "indexed": false,
          "internalType": "struct IPancakeSwapVaultGovernance.StrategyParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "SetStrategyParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IPancakeNonfungiblePositionManager",
              "name": "positionManager",
              "type": "address"
            },
            {
              "internalType": "contract IOracle",
              "name": "oracle",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams",
          "name": "params",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        }
      ],
      "name": "StageDelayedProtocolParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "safetyIndicesSet",
              "type": "uint32"
            }
          ],
          "indexed": false,
          "internalType": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams",
          "name": "params",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        }
      ],
      "name": "StageDelayedStrategyParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "params",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        }
      ],
      "name": "StagedInternalParams",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "commitDelayedProtocolParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "commitDelayedStrategyParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "commitInternalParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractNameBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersionBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "fee_",
          "type": "uint24"
        },
        {
          "internalType": "address",
          "name": "helper_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "masterChef_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "erc20Vault_",
          "type": "address"
        }
      ],
      "name": "createVault",
      "outputs": [
        {
          "internalType": "contract IPancakeSwapVault",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delayedProtocolParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IPancakeNonfungiblePositionManager",
              "name": "positionManager",
              "type": "address"
            },
            {
              "internalType": "contract IOracle",
              "name": "oracle",
              "type": "address"
            }
          ],
          "internalType": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delayedProtocolParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedProtocolPerVaultParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedStrategyParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "safetyIndicesSet",
              "type": "uint32"
            }
          ],
          "internalType": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedStrategyParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "internalParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "internalParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "swapSlippageD",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "poolForSwap",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "cake",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "underlyingToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "smartRouter",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "averageTickTimespan",
              "type": "uint32"
            }
          ],
          "internalType": "struct IPancakeSwapVaultGovernance.StrategyParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "setStrategyParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IPancakeNonfungiblePositionManager",
              "name": "positionManager",
              "type": "address"
            },
            {
              "internalType": "contract IOracle",
              "name": "oracle",
              "type": "address"
            }
          ],
          "internalType": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "stageDelayedProtocolParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "safetyIndicesSet",
              "type": "uint32"
            }
          ],
          "internalType": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "stageDelayedStrategyParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "newParams",
          "type": "tuple"
        }
      ],
      "name": "stageInternalParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stagedDelayedProtocolParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IPancakeNonfungiblePositionManager",
              "name": "positionManager",
              "type": "address"
            },
            {
              "internalType": "contract IOracle",
              "name": "oracle",
              "type": "address"
            }
          ],
          "internalType": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "stagedDelayedStrategyParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "safetyIndicesSet",
              "type": "uint32"
            }
          ],
          "internalType": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stagedInternalParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "strategyParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "swapSlippageD",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "poolForSwap",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "cake",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "underlyingToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "smartRouter",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "averageTickTimespan",
              "type": "uint32"
            }
          ],
          "internalType": "struct IPancakeSwapVaultGovernance.StrategyParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620029f5380380620029f5833981016040819052620000349162000344565b815160408051808201909152600281526120ad60f11b602082015283916001600160a01b0316620000835760405162461bcd60e51b81526004016200007a91906200042a565b60405180910390fd5b5060006001600160a01b031681602001516001600160a01b031614156040518060400160405280600281526020016120ad60f11b81525090620000db5760405162461bcd60e51b81526004016200007a91906200042a565b506040808201518151808301909252600282526120ad60f11b60208301526001600160a01b0316620001225760405162461bcd60e51b81526004016200007a91906200042a565b508051600080546001600160a01b03199081166001600160a01b039384161790915560208084015160018054841691851691909117905560409384015160028054909316908416178255845184518086019095529184526120ad60f11b9084015216620001a45760405162461bcd60e51b81526004016200007a91906200042a565b5060006001600160a01b031681602001516001600160a01b031614156040518060400160405280600281526020016120ad60f11b81525090620001fc5760405162461bcd60e51b81526004016200007a91906200042a565b506040805182516001600160a01b039081166020808401919091528085015190911682840152825180830384018152606090920190925280516200024592600d9201906200024e565b505050620004bf565b8280546200025c9062000482565b90600052602060002090601f016020900481019282620002805760008555620002cb565b82601f106200029b57805160ff1916838001178555620002cb565b82800160010185558215620002cb579182015b82811115620002cb578251825591602001919060010190620002ae565b50620002d9929150620002dd565b5090565b5b80821115620002d95760008155600101620002de565b604080519081016001600160401b03811182821017156200032557634e487b7160e01b600052604160045260246000fd5b60405290565b6001600160a01b03811681146200034157600080fd5b50565b60008082840360a08112156200035957600080fd5b60608112156200036857600080fd5b604051606081016001600160401b03811182821017156200039957634e487b7160e01b600052604160045260246000fd5b6040528451620003a9816200032b565b81526020850151620003bb816200032b565b60208201526040850151620003d0816200032b565b604082810191909152909350605f1982011215620003ed57600080fd5b50620003f8620002f4565b606084015162000408816200032b565b815260808401516200041a816200032b565b6020820152919491935090915050565b600060208083528351808285015260005b8181101562000459578581018301518582016040015282016200043b565b818111156200046c576000604083870101525b50601f01601f1916929092016040019392505050565b600181811c908216806200049757607f821691505b60208210811415620004b957634e487b7160e01b600052602260045260246000fd5b50919050565b61252680620004cf6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80637ac46fbb116100c3578063b0e6ba341161007c578063b0e6ba3414610400578063b2fe31ad14610413578063c2cbdc6714610426578063d34cc38014610455578063d4a07d341461045d578063e4af6e791461046557600080fd5b80637ac46fbb146102f857806386c6be3e146103585780638860d248146103ab57806398347a5d146103be578063a0a8e460146103c6578063ae12783f146103ce57600080fd5b80631c7f4c73116101155780631c7f4c73146102605780632528171414610268578063511ce7981461027b57806359f3dae71461029b5780636707acee146102c357806375d0c0dc146102e357600080fd5b806301ffc9a71461015d57806306a4623914610185578063099465381461019d5780630bdedd56146101b25780630e3e80ac146101c557806312466b68146101eb575b600080fd5b61017061016b366004611cbf565b61046d565b60405190151581526020015b60405180910390f35b640312e302e360dc1b5b60405190815260200161017c565b6101b06101ab366004611d4c565b61049e565b005b6101b06101c0366004611dbe565b610690565b7f50616e63616b65537761705661756c74476f7665726e616e636500000000000061018f565b6101fe6101f9366004611dbe565b610786565b60405161017c9190815181526020808301516001600160a01b03908116918301919091526040808401518216908301526060808401518216908301526080808401519091169082015260a09182015163ffffffff169181019190915260c00190565b60065461018f565b6101b0610276366004611dd7565b6108ba565b61018f610289366004611dbe565b6000908152600c602052604090205490565b6102ae6102a9366004611dbe565b610987565b604051905163ffffffff16815260200161017c565b61018f6102d1366004611dbe565b60009081526009602052604090205490565b6102eb610a75565b60405161017c9190611e5c565b61034b604080516060810182526000808252602082018190529181019190915250604080516060810182526000546001600160a01b03908116825260015481166020830152600254169181019190915290565b60405161017c9190611e6f565b61034b604080516060810182526000808252602082018190529181019190915250604080516060810182526003546001600160a01b03908116825260045481166020830152600554169181019190915290565b6102ae6103b9366004611dbe565b610aa0565b6101b0610afd565b6102eb610c05565b6103e16103dc366004611ec2565b610c18565b604080516001600160a01b03909316835260208301919091520161017c565b6101b061040e366004611fc7565b610d03565b6101b0610421366004611ff1565b610ecd565b61042e610fd8565b6040805182516001600160a01b03908116825260209384015116928101929092520161017c565b61042e6110b7565b6101b06110d8565b600f5461018f565b6000610478826111fd565b80610493575063c89a3f9960e01b6001600160e01b03198316145b92915050565b905090565b6104a6611233565b805160408051808201909152600281526120ad60f11b6020820152906001600160a01b03166104f15760405162461bcd60e51b81526004016104e89190611e5c565b60405180910390fd5b5060006001600160a01b031681602001516001600160a01b031614156040518060400160405280600281526020016120ad60f11b815250906105465760405162461bcd60e51b81526004016104e89190611e5c565b506040808201518151808301909252600282526120ad60f11b60208301526001600160a01b031661058a5760405162461bcd60e51b81526004016104e89190611e5c565b508051600380546001600160a01b03199081166001600160a01b03938416179091556020808401516004805484169185169190911781556040808601516005805490951690861617909355600054835163bba3293960e01b8152935194169363bba3293993808301939290829003018186803b15801561060957600080fd5b505afa15801561061d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106419190612009565b61064b9042612038565b6006819055604051339132917f0887cab3184f7c02b16978ab31f8acee05979f59fc3da6abe5bf71105ec3179d9161068591869190612050565b60405180910390a350565b610699816112eb565b600081815260076020526040902080548291339132917fa363920f84c4a3e8f1fbb02a2f8b5f0d7438886cb05a7d98882af9bd66d16426916106da9061208d565b80601f01602080910402602001604051908101604052809291908181526020018280546107069061208d565b80156107535780601f1061072857610100808354040283529160200191610753565b820191906000526020600020905b81548152906001019060200180831161073657829003601f168201915b505050505080602001905181019061076b91906120d4565b604051905163ffffffff16815260200160405180910390a450565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152600082815260106020526040902080546107d19061208d565b151590506108105750506040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b600082815260106020526040902080546108299061208d565b80601f01602080910402602001604051908101604052809291908181526020018280546108559061208d565b80156108a25780601f10610877576101008083540402835291602001916108a2565b820191906000526020600020905b81548152906001019060200180831161088557829003601f168201915b50505050508060200190518101906104939190612120565b60016108c960208301836121c2565b63ffffffff1611604051806040016040528060048152602001634c494d5560e01b8152509061090b5760405162461bcd60e51b81526004016104e89190611e5c565b50610935828260405160200161092191906121df565b6040516020818303038152906040526113dc565b600082815260096020526040908190205490518391339132917f4cceb02b6b172e9c19155fccc4d799437a0d50ad922ea9f0f41b1cb3a17b12e89161097b9187916121fc565b60405180910390a45050565b604080516020810190915260008152600082815260086020526040902080546109af9061208d565b151590506109cb57505060408051602081019091526000815290565b600082815260086020526040902080546109e49061208d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a109061208d565b8015610a5d5780601f10610a3257610100808354040283529160200191610a5d565b820191906000526020600020905b815481529060010190602001808311610a4057829003601f168201915b505050505080602001905181019061049391906120d4565b60606104997f50616e63616b65537761705661756c74476f7665726e616e63650000000000006114e8565b60408051602081019091526000815260008281526007602052604090208054610ac89061208d565b15159050610ae45750506040805160208101909152602a815290565b600082815260076020526040902080546109e49061208d565b610b05611554565b336001600160a01b0316326001600160a01b03167fb57a42e9f64dfc9c6b9e412ea001a45c0e4d3f26c8d160381a418ff92269d052600d8054610b479061208d565b80601f0160208091040260200160405190810160405280929190818152602001828054610b739061208d565b8015610bc05780601f10610b9557610100808354040283529160200191610bc0565b820191906000526020600020905b815481529060010190602001808311610ba357829003601f168201915b5050505050806020019051810190610bd89190612221565b6040805182516001600160a01b0390811682526020938401511692810192909252015b60405180910390a3565b6060610499640312e302e360dc1b6114e8565b6000806000610c2688611608565b60405163295c126d60e21b815291945092508391506001600160a01b0382169063a57049b490610c649085908d908c908c908c908c906004016122c4565b600060405180830381600087803b158015610c7e57600080fd5b505af1158015610c92573d6000803e3d6000fd5b50506040805162ffffff8b1660208201523393503292507f8a4513c05d15df8ece912856923273e166e39f5c9c2b43d2b38594023494a0e0918d910160408051601f1981840301815290829052610cef92918e9088908a90612312565b60405180910390a350965096945050505050565b6040805180820190915260048152634c494d4f60e01b6020820152633b9aca0082351115610d445760405162461bcd60e51b81526004016104e89190611e5c565b506000610d5760c0830160a084016121c2565b63ffffffff1611604051806040016040528060048152602001634c494d5560e01b81525090610d995760405162461bcd60e51b81526004016104e89190611e5c565b506000610dac604083016020840161235c565b6001600160a01b031614158015610ddc57506000610dd0606083016040840161235c565b6001600160a01b031614155b8015610e0157506000610df5608083016060840161235c565b6001600160a01b031614155b8015610e2657506000610e1a60a083016080840161235c565b6001600160a01b031614155b6040518060400160405280600281526020016120ad60f11b81525090610e5f5760405162461bcd60e51b81526004016104e89190611e5c565b50610e898282604051602001610e759190612379565b6040516020818303038152906040526117f9565b81336001600160a01b0316326001600160a01b03167f4cf675595c4f2a629af526871adfff6572ed58e36a8bfe28a8452d173a985c338460405161097b9190612379565b6000610edc602083018361235c565b6001600160a01b031614156040518060400160405280600281526020016120ad60f11b81525090610f205760405162461bcd60e51b81526004016104e89190611e5c565b506000610f33604083016020840161235c565b6001600160a01b031614156040518060400160405280600281526020016120ad60f11b81525090610f775760405162461bcd60e51b81526004016104e89190611e5c565b50610fa081604051602001610f8c9190612438565b604051602081830303815290604052611826565b600f54604051339132917f88e619a5dce560314fdd4895b08c256978617047a99ffc847d45400df1f377a79161068591869190612446565b6040805180820190915260008082526020820152600e8054610ff99061208d565b151590506110195750604080518082019091526000808252602082015290565b600e80546110269061208d565b80601f01602080910402602001604051908101604052809291908181526020018280546110529061208d565b801561109f5780601f106110745761010080835404028352916020019161109f565b820191906000526020600020905b81548152906001019060200180831161108257829003601f168201915b50505050508060200190518101906104999190612221565b6040805180820190915260008082526020820152600d80546110269061208d565b6110e0611233565b6006546040805180820190915260048152631395531360e21b60208201529061111c5760405162461bcd60e51b81526004016104e89190611e5c565b5060065442101560405180604001604052806002815260200161545360f01b8152509061115c5760405162461bcd60e51b81526004016104e89190611e5c565b5060038054600080546001600160a01b038084166001600160a01b03199283168117845560048054600180548286169087168117909155600580546002805497821697891688179055600698909855978616909855841690559290911690925560408051918252602082019390935291820152339032907fef3e4bc9725fa684957d7de03c6dcd01078ee86cf78ceef25c5f8346df69cc9990606001610bfb565b60006301ffc9a760e01b6001600160e01b03198316148061049357506001600160e01b0319821663effda0f560e01b1492915050565b600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561127657600080fd5b505afa15801561128a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ae9190612461565b6040518060400160405280600381526020016223292160e91b815250906112e85760405162461bcd60e51b81526004016104e89190611e5c565b50565b6112f481611901565b60008181526009602090815260409182902054825180840190935260048352631395531360e21b9183019190915290816113415760405162461bcd60e51b81526004016104e89190611e5c565b508042101560405180604001604052806002815260200161545360f01b8152509061137f5760405162461bcd60e51b81526004016104e89190611e5c565b506000828152600860209081526040808320600790925290912081549091906113a79061208d565b6113b2929190611b71565b5060008281526008602052604081206113ca91611bfc565b50600090815260096020526040812055565b6113e582611901565b6000828152600860209081526040909120825161140492840190611c36565b506000828152600760205260408120805461141e9061208d565b15905061142c57600161142f565b60005b60ff169050806000800160009054906101000a90046001600160a01b03166001600160a01b031663bba329396040518163ffffffff1660e01b815260040160206040518083038186803b15801561148557600080fd5b505afa158015611499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114bd9190612009565b6114c79190612483565b6114d19042612038565b600093845260096020526040909320929092555050565b604080516020808252818301909252606091602082018180368337019050509050602060005b602081101561154657838160208110611529576115296124a2565b1a61153657809150611546565b61153f816124b8565b905061150e565b508152602081019190915290565b61155c611233565b600f546040805180820190915260048152631395531360e21b6020820152906115985760405162461bcd60e51b81526004016104e89190611e5c565b50600f5442101560405180604001604052806002815260200161545360f01b815250906115d85760405162461bcd60e51b81526004016104e89190611e5c565b50600e600d9080546115e99061208d565b6115f4929190611b71565b50611601600e6000611bfc565b6000600f55565b600080546040516363e85d2d60e01b81523360048201526001602482015282916001600160a01b03169081906363e85d2d9060440160206040518083038186803b15801561165557600080fd5b505afa158015611669573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168d9190612461565b6040518060400160405280600381526020016223292160e91b815250906116c75760405162461bcd60e51b81526004016104e89190611e5c565b5060015460408051631112eee760e31b815290516001600160a01b039092169182916388977738916004808301926020929190829003018186803b15801561170e57600080fd5b505afa158015611722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117469190612009565b611751906001612038565b60025490935061176a906001600160a01b031684611ad4565b6040516305c4fdf960e01b81526001600160a01b0380831660048301528781166024830152919550908216906305c4fdf990604401602060405180830381600087803b1580156117b957600080fd5b505af11580156117cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f19190612009565b505050915091565b61180282611901565b6000828152601060209081526040909120825161182192840190611c36565b505050565b61182e611233565b6000600d805461183d9061208d565b15905061184b57600161184e565b60005b60ff16905081600e9080519060200190611869929190611c36565b506000546040805163bba3293960e01b8152905183926001600160a01b03169163bba32939916004808301926020929190829003018186803b1580156118ae57600080fd5b505afa1580156118c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e69190612009565b6118f09190612483565b6118fa9042612038565b600f555050565b600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561194457600080fd5b505afa158015611958573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197c9190612461565b80611a09575060015460405163020604bf60e21b81526004810183905233916001600160a01b03169063081812fc9060240160206040518083038186803b1580156119c657600080fd5b505afa1580156119da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fe91906124d3565b6001600160a01b0316145b80611a9657506001546040516331a9108f60e11b81526004810183905233916001600160a01b031690636352211e9060240160206040518083038186803b158015611a5357600080fd5b505afa158015611a67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8b91906124d3565b6001600160a01b0316145b6040518060400160405280600381526020016223292160e91b81525090611ad05760405162461bcd60e51b81526004016104e89190611e5c565b5050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166104935760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c656400000000000000000060448201526064016104e8565b828054611b7d9061208d565b90600052602060002090601f016020900481019282611b9f5760008555611bec565b82601f10611bb05780548555611bec565b82800160010185558215611bec57600052602060002091601f016020900482015b82811115611bec578254825591600101919060010190611bd1565b50611bf8929150611caa565b5090565b508054611c089061208d565b6000825580601f10611c18575050565b601f0160209004906000526020600020908101906112e89190611caa565b828054611c429061208d565b90600052602060002090601f016020900481019282611c645760008555611bec565b82601f10611c7d57805160ff1916838001178555611bec565b82800160010185558215611bec579182015b82811115611bec578251825591602001919060010190611c8f565b5b80821115611bf85760008155600101611cab565b600060208284031215611cd157600080fd5b81356001600160e01b031981168114611ce957600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611d2f57611d2f611cf0565b604052919050565b6001600160a01b03811681146112e857600080fd5b600060608284031215611d5e57600080fd5b6040516060810181811067ffffffffffffffff82111715611d8157611d81611cf0565b6040528235611d8f81611d37565b81526020830135611d9f81611d37565b60208201526040830135611db281611d37565b60408201529392505050565b600060208284031215611dd057600080fd5b5035919050565b6000808284036040811215611deb57600080fd5b833592506020601f1982011215611e0157600080fd5b506020830190509250929050565b6000815180845260005b81811015611e3557602081850181015186830182015201611e19565b81811115611e47576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611ce96020830184611e0f565b60608101610493828480516001600160a01b03908116835260208083015182169084015260409182015116910152565b8035611eaa81611d37565b919050565b803562ffffff81168114611eaa57600080fd5b60008060008060008060c08789031215611edb57600080fd5b863567ffffffffffffffff80821115611ef357600080fd5b818901915089601f830112611f0757600080fd5b8135602082821115611f1b57611f1b611cf0565b8160051b9250611f2c818401611d06565b828152928401810192818101908d851115611f4657600080fd5b948201945b84861015611f705785359350611f6084611d37565b8382529482019490820190611f4b565b9a50611f7f90508b8201611e9f565b985050505050611f9160408801611eaf565b9350611f9f60608801611e9f565b9250611fad60808801611e9f565b9150611fbb60a08801611e9f565b90509295509295509295565b60008082840360e0811215611fdb57600080fd5b8335925060c0601f1982011215611e0157600080fd5b60006040828403121561200357600080fd5b50919050565b60006020828403121561201b57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561204b5761204b612022565b500190565b60808101612080828580516001600160a01b03908116835260208083015182169084015260409182015116910152565b8260608301529392505050565b600181811c908216806120a157607f821691505b6020821081141561200357634e487b7160e01b600052602260045260246000fd5b63ffffffff811681146112e857600080fd5b6000602082840312156120e657600080fd5b6040516020810181811067ffffffffffffffff8211171561210957612109611cf0565b6040528251612117816120c2565b81529392505050565b600060c0828403121561213257600080fd5b60405160c0810181811067ffffffffffffffff8211171561215557612155611cf0565b60405282518152602083015161216a81611d37565b6020820152604083015161217d81611d37565b6040820152606083015161219081611d37565b606082015260808301516121a381611d37565b608082015260a08301516121b6816120c2565b60a08201529392505050565b6000602082840312156121d457600080fd5b8135611ce9816120c2565b6020810182356121ee816120c2565b63ffffffff16909152919050565b60408101833561220b816120c2565b63ffffffff168252602090910191909152919050565b60006040828403121561223357600080fd5b6040516040810181811067ffffffffffffffff8211171561225657612256611cf0565b604052825161226481611d37565b8152602083015161227481611d37565b60208201529392505050565b600081518084526020808501945080840160005b838110156122b95781516001600160a01b031687529582019590820190600101612294565b509495945050505050565b86815260c0602082015260006122dd60c0830188612280565b62ffffff969096166040830152506001600160a01b039384166060820152918316608083015290911660a09091015292915050565b60a08152600061232560a0830188612280565b82810360208401526123378188611e0f565b6001600160a01b03968716604085015294909516606083015250608001529392505050565b60006020828403121561236e57600080fd5b8135611ce981611d37565b8135815260c08101602083013561238f81611d37565b6001600160a01b0390811660208401526040840135906123ae82611d37565b90811660408401526060840135906123c582611d37565b90811660608401526080840135906123dc82611d37565b16608083015260a08301356123f0816120c2565b63ffffffff811660a08401525092915050565b803561240e81611d37565b6001600160a01b03908116835260208201359061242a82611d37565b808216602085015250505050565b604081016104938284612403565b606081016124548285612403565b8260408301529392505050565b60006020828403121561247357600080fd5b81518015158114611ce957600080fd5b600081600019048311821515161561249d5761249d612022565b500290565b634e487b7160e01b600052603260045260246000fd5b60006000198214156124cc576124cc612022565b5060010190565b6000602082840312156124e557600080fd5b8151611ce981611d3756fea2646970667358221220b23741d7fe9f1d8ef6ccc30f38803bc335c07d3c083e98e85820c2a251aa7ca664736f6c63430008090033",
    "sourceMap": "406:8743:471:-:0;;;667:440;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1762:34:477;;1813:30;;;;;;;;;;;;-1:-1:-1;;;1813:30:477;;;;795:15:471;;-1:-1:-1;;;;;1754:57:477;1746:98;;;;-1:-1:-1;;;1746:98:477;;;;;;;;:::i;:::-;;;;;;;;;;1907:1;-1:-1:-1;;;;;1862:47:477;1870:15;:24;;;-1:-1:-1;;;;;1862:47:477;;;1911:30;;;;;;;;;;;;;-1:-1:-1;;;1911:30:477;;;1854:88;;;;;-1:-1:-1;;;1854:88:477;;;;;;;;:::i;:::-;-1:-1:-1;1968:25:477;;;;;2010:30;;;;;;;;;;;-1:-1:-1;;;2010:30:477;;;;-1:-1:-1;;;;;1960:48:477;1952:89;;;;-1:-1:-1;;;1952:89:477;;;;;;;;:::i;:::-;-1:-1:-1;2051:33:477;;:15;:33;;-1:-1:-1;;;;;;2051:33:477;;;-1:-1:-1;;;;;2051:33:477;;;;;;;;;;;;-1:-1:-1;2051:33:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;842:38:471;;897:30;;;;::::1;::::0;;;;;;-1:-1:-1;;;897:30:471;;::::1;::::0;834:61:::1;826:102;;;;-1:-1:-1::0;;;826:102:471::1;;;;;;;;:::i;:::-;;996:1;-1:-1:-1::0;;;;;946:52:471::1;954:22;:29;;;-1:-1:-1::0;;;;;946:52:471::1;;;1000:30;;;;;;;;;;;;;-1:-1:-1::0;;;1000:30:471::1;;::::0;938:93:::1;;;;;-1:-1:-1::0;;;938:93:471::1;;;;;;;;:::i;:::-;-1:-1:-1::0;1066:34:471::1;::::0;;2899:13:488;;-1:-1:-1;;;;;2895:22:488;;;1066:34:471::1;::::0;;::::1;2877:41:488::0;;;;2966:17;;;2960:24;2956:33;;;2934:20;;;2927:63;1066:34:471;;;;;;;;;2812:18:488;;;;1066:34:471;;;1041:59;;::::1;::::0;:22:::1;::::0;:59:::1;::::0;::::1;:::i;:::-;;667:440:::0;;406:8743;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;406:8743:471;;;-1:-1:-1;406:8743:471;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:343:488;81:2;75:9;;;111:15;;-1:-1:-1;;;;;141:34:488;;177:22;;;138:62;135:185;;;242:10;237:3;233:20;230:1;223:31;277:4;274:1;267:15;305:4;302:1;295:15;135:185;336:2;329:22;14:343;:::o;362:152::-;-1:-1:-1;;;;;458:31:488;;448:42;;438:70;;504:1;501;494:12;438:70;362:152;:::o;519:1487::-;671:6;679;723:9;714:7;710:23;753:3;749:2;745:12;742:32;;;770:1;767;760:12;742:32;794:4;790:2;786:13;783:33;;;812:1;809;802:12;783:33;845:2;839:9;887:4;875:17;;-1:-1:-1;;;;;907:34:488;;943:22;;;904:62;901:185;;;1008:10;1003:3;999:20;996:1;989:31;1043:4;1040:1;1033:15;1071:4;1068:1;1061:15;901:185;1102:2;1095:22;1139:16;;1164:52;1139:16;1164:52;:::i;:::-;1225:21;;1291:2;1276:18;;1270:25;1304:54;1270:25;1304:54;:::i;:::-;1386:2;1374:15;;1367:32;1444:2;1429:18;;1423:25;1457:54;1423:25;1457:54;:::i;:::-;1539:2;1527:15;;;1520:32;;;;1531:6;;-1:-1:-1;;;1593:16:488;;1589:25;1586:45;;;1627:1;1624;1617:12;1586:45;;1655:17;;:::i;:::-;1717:4;1706:9;1702:20;1696:27;1732:54;1778:7;1732:54;:::i;:::-;1795:24;;1864:3;1849:19;;1843:26;1878:54;1843:26;1878:54;:::i;:::-;1961:2;1948:16;;1941:33;519:1487;;1952:7;;-1:-1:-1;519:1487:488;;-1:-1:-1;;519:1487:488:o;2011:597::-;2123:4;2152:2;2181;2170:9;2163:21;2213:6;2207:13;2256:6;2251:2;2240:9;2236:18;2229:34;2281:1;2291:140;2305:6;2302:1;2299:13;2291:140;;;2400:14;;;2396:23;;2390:30;2366:17;;;2385:2;2362:26;2355:66;2320:10;;2291:140;;;2449:6;2446:1;2443:13;2440:91;;;2519:1;2514:2;2505:6;2494:9;2490:22;2486:31;2479:42;2440:91;-1:-1:-1;2592:2:488;2571:15;-1:-1:-1;;2567:29:488;2552:45;;;;2599:2;2548:54;;2011:597;-1:-1:-1;;;2011:597:488:o;3001:380::-;3080:1;3076:12;;;;3123;;;3144:61;;3198:4;3190:6;3186:17;3176:27;;3144:61;3251:2;3243:6;3240:14;3220:18;3217:38;3214:161;;;3297:10;3292:3;3288:20;3285:1;3278:31;3332:4;3329:1;3322:15;3360:4;3357:1;3350:15;3214:161;;3001:380;;;:::o;:::-;406:8743:471;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c80637ac46fbb116100c3578063b0e6ba341161007c578063b0e6ba3414610400578063b2fe31ad14610413578063c2cbdc6714610426578063d34cc38014610455578063d4a07d341461045d578063e4af6e791461046557600080fd5b80637ac46fbb146102f857806386c6be3e146103585780638860d248146103ab57806398347a5d146103be578063a0a8e460146103c6578063ae12783f146103ce57600080fd5b80631c7f4c73116101155780631c7f4c73146102605780632528171414610268578063511ce7981461027b57806359f3dae71461029b5780636707acee146102c357806375d0c0dc146102e357600080fd5b806301ffc9a71461015d57806306a4623914610185578063099465381461019d5780630bdedd56146101b25780630e3e80ac146101c557806312466b68146101eb575b600080fd5b61017061016b366004611cbf565b61046d565b60405190151581526020015b60405180910390f35b640312e302e360dc1b5b60405190815260200161017c565b6101b06101ab366004611d4c565b61049e565b005b6101b06101c0366004611dbe565b610690565b7f50616e63616b65537761705661756c74476f7665726e616e636500000000000061018f565b6101fe6101f9366004611dbe565b610786565b60405161017c9190815181526020808301516001600160a01b03908116918301919091526040808401518216908301526060808401518216908301526080808401519091169082015260a09182015163ffffffff169181019190915260c00190565b60065461018f565b6101b0610276366004611dd7565b6108ba565b61018f610289366004611dbe565b6000908152600c602052604090205490565b6102ae6102a9366004611dbe565b610987565b604051905163ffffffff16815260200161017c565b61018f6102d1366004611dbe565b60009081526009602052604090205490565b6102eb610a75565b60405161017c9190611e5c565b61034b604080516060810182526000808252602082018190529181019190915250604080516060810182526000546001600160a01b03908116825260015481166020830152600254169181019190915290565b60405161017c9190611e6f565b61034b604080516060810182526000808252602082018190529181019190915250604080516060810182526003546001600160a01b03908116825260045481166020830152600554169181019190915290565b6102ae6103b9366004611dbe565b610aa0565b6101b0610afd565b6102eb610c05565b6103e16103dc366004611ec2565b610c18565b604080516001600160a01b03909316835260208301919091520161017c565b6101b061040e366004611fc7565b610d03565b6101b0610421366004611ff1565b610ecd565b61042e610fd8565b6040805182516001600160a01b03908116825260209384015116928101929092520161017c565b61042e6110b7565b6101b06110d8565b600f5461018f565b6000610478826111fd565b80610493575063c89a3f9960e01b6001600160e01b03198316145b92915050565b905090565b6104a6611233565b805160408051808201909152600281526120ad60f11b6020820152906001600160a01b03166104f15760405162461bcd60e51b81526004016104e89190611e5c565b60405180910390fd5b5060006001600160a01b031681602001516001600160a01b031614156040518060400160405280600281526020016120ad60f11b815250906105465760405162461bcd60e51b81526004016104e89190611e5c565b506040808201518151808301909252600282526120ad60f11b60208301526001600160a01b031661058a5760405162461bcd60e51b81526004016104e89190611e5c565b508051600380546001600160a01b03199081166001600160a01b03938416179091556020808401516004805484169185169190911781556040808601516005805490951690861617909355600054835163bba3293960e01b8152935194169363bba3293993808301939290829003018186803b15801561060957600080fd5b505afa15801561061d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106419190612009565b61064b9042612038565b6006819055604051339132917f0887cab3184f7c02b16978ab31f8acee05979f59fc3da6abe5bf71105ec3179d9161068591869190612050565b60405180910390a350565b610699816112eb565b600081815260076020526040902080548291339132917fa363920f84c4a3e8f1fbb02a2f8b5f0d7438886cb05a7d98882af9bd66d16426916106da9061208d565b80601f01602080910402602001604051908101604052809291908181526020018280546107069061208d565b80156107535780601f1061072857610100808354040283529160200191610753565b820191906000526020600020905b81548152906001019060200180831161073657829003601f168201915b505050505080602001905181019061076b91906120d4565b604051905163ffffffff16815260200160405180910390a450565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810191909152600082815260106020526040902080546107d19061208d565b151590506108105750506040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b600082815260106020526040902080546108299061208d565b80601f01602080910402602001604051908101604052809291908181526020018280546108559061208d565b80156108a25780601f10610877576101008083540402835291602001916108a2565b820191906000526020600020905b81548152906001019060200180831161088557829003601f168201915b50505050508060200190518101906104939190612120565b60016108c960208301836121c2565b63ffffffff1611604051806040016040528060048152602001634c494d5560e01b8152509061090b5760405162461bcd60e51b81526004016104e89190611e5c565b50610935828260405160200161092191906121df565b6040516020818303038152906040526113dc565b600082815260096020526040908190205490518391339132917f4cceb02b6b172e9c19155fccc4d799437a0d50ad922ea9f0f41b1cb3a17b12e89161097b9187916121fc565b60405180910390a45050565b604080516020810190915260008152600082815260086020526040902080546109af9061208d565b151590506109cb57505060408051602081019091526000815290565b600082815260086020526040902080546109e49061208d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a109061208d565b8015610a5d5780601f10610a3257610100808354040283529160200191610a5d565b820191906000526020600020905b815481529060010190602001808311610a4057829003601f168201915b505050505080602001905181019061049391906120d4565b60606104997f50616e63616b65537761705661756c74476f7665726e616e63650000000000006114e8565b60408051602081019091526000815260008281526007602052604090208054610ac89061208d565b15159050610ae45750506040805160208101909152602a815290565b600082815260076020526040902080546109e49061208d565b610b05611554565b336001600160a01b0316326001600160a01b03167fb57a42e9f64dfc9c6b9e412ea001a45c0e4d3f26c8d160381a418ff92269d052600d8054610b479061208d565b80601f0160208091040260200160405190810160405280929190818152602001828054610b739061208d565b8015610bc05780601f10610b9557610100808354040283529160200191610bc0565b820191906000526020600020905b815481529060010190602001808311610ba357829003601f168201915b5050505050806020019051810190610bd89190612221565b6040805182516001600160a01b0390811682526020938401511692810192909252015b60405180910390a3565b6060610499640312e302e360dc1b6114e8565b6000806000610c2688611608565b60405163295c126d60e21b815291945092508391506001600160a01b0382169063a57049b490610c649085908d908c908c908c908c906004016122c4565b600060405180830381600087803b158015610c7e57600080fd5b505af1158015610c92573d6000803e3d6000fd5b50506040805162ffffff8b1660208201523393503292507f8a4513c05d15df8ece912856923273e166e39f5c9c2b43d2b38594023494a0e0918d910160408051601f1981840301815290829052610cef92918e9088908a90612312565b60405180910390a350965096945050505050565b6040805180820190915260048152634c494d4f60e01b6020820152633b9aca0082351115610d445760405162461bcd60e51b81526004016104e89190611e5c565b506000610d5760c0830160a084016121c2565b63ffffffff1611604051806040016040528060048152602001634c494d5560e01b81525090610d995760405162461bcd60e51b81526004016104e89190611e5c565b506000610dac604083016020840161235c565b6001600160a01b031614158015610ddc57506000610dd0606083016040840161235c565b6001600160a01b031614155b8015610e0157506000610df5608083016060840161235c565b6001600160a01b031614155b8015610e2657506000610e1a60a083016080840161235c565b6001600160a01b031614155b6040518060400160405280600281526020016120ad60f11b81525090610e5f5760405162461bcd60e51b81526004016104e89190611e5c565b50610e898282604051602001610e759190612379565b6040516020818303038152906040526117f9565b81336001600160a01b0316326001600160a01b03167f4cf675595c4f2a629af526871adfff6572ed58e36a8bfe28a8452d173a985c338460405161097b9190612379565b6000610edc602083018361235c565b6001600160a01b031614156040518060400160405280600281526020016120ad60f11b81525090610f205760405162461bcd60e51b81526004016104e89190611e5c565b506000610f33604083016020840161235c565b6001600160a01b031614156040518060400160405280600281526020016120ad60f11b81525090610f775760405162461bcd60e51b81526004016104e89190611e5c565b50610fa081604051602001610f8c9190612438565b604051602081830303815290604052611826565b600f54604051339132917f88e619a5dce560314fdd4895b08c256978617047a99ffc847d45400df1f377a79161068591869190612446565b6040805180820190915260008082526020820152600e8054610ff99061208d565b151590506110195750604080518082019091526000808252602082015290565b600e80546110269061208d565b80601f01602080910402602001604051908101604052809291908181526020018280546110529061208d565b801561109f5780601f106110745761010080835404028352916020019161109f565b820191906000526020600020905b81548152906001019060200180831161108257829003601f168201915b50505050508060200190518101906104999190612221565b6040805180820190915260008082526020820152600d80546110269061208d565b6110e0611233565b6006546040805180820190915260048152631395531360e21b60208201529061111c5760405162461bcd60e51b81526004016104e89190611e5c565b5060065442101560405180604001604052806002815260200161545360f01b8152509061115c5760405162461bcd60e51b81526004016104e89190611e5c565b5060038054600080546001600160a01b038084166001600160a01b03199283168117845560048054600180548286169087168117909155600580546002805497821697891688179055600698909855978616909855841690559290911690925560408051918252602082019390935291820152339032907fef3e4bc9725fa684957d7de03c6dcd01078ee86cf78ceef25c5f8346df69cc9990606001610bfb565b60006301ffc9a760e01b6001600160e01b03198316148061049357506001600160e01b0319821663effda0f560e01b1492915050565b600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561127657600080fd5b505afa15801561128a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ae9190612461565b6040518060400160405280600381526020016223292160e91b815250906112e85760405162461bcd60e51b81526004016104e89190611e5c565b50565b6112f481611901565b60008181526009602090815260409182902054825180840190935260048352631395531360e21b9183019190915290816113415760405162461bcd60e51b81526004016104e89190611e5c565b508042101560405180604001604052806002815260200161545360f01b8152509061137f5760405162461bcd60e51b81526004016104e89190611e5c565b506000828152600860209081526040808320600790925290912081549091906113a79061208d565b6113b2929190611b71565b5060008281526008602052604081206113ca91611bfc565b50600090815260096020526040812055565b6113e582611901565b6000828152600860209081526040909120825161140492840190611c36565b506000828152600760205260408120805461141e9061208d565b15905061142c57600161142f565b60005b60ff169050806000800160009054906101000a90046001600160a01b03166001600160a01b031663bba329396040518163ffffffff1660e01b815260040160206040518083038186803b15801561148557600080fd5b505afa158015611499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114bd9190612009565b6114c79190612483565b6114d19042612038565b600093845260096020526040909320929092555050565b604080516020808252818301909252606091602082018180368337019050509050602060005b602081101561154657838160208110611529576115296124a2565b1a61153657809150611546565b61153f816124b8565b905061150e565b508152602081019190915290565b61155c611233565b600f546040805180820190915260048152631395531360e21b6020820152906115985760405162461bcd60e51b81526004016104e89190611e5c565b50600f5442101560405180604001604052806002815260200161545360f01b815250906115d85760405162461bcd60e51b81526004016104e89190611e5c565b50600e600d9080546115e99061208d565b6115f4929190611b71565b50611601600e6000611bfc565b6000600f55565b600080546040516363e85d2d60e01b81523360048201526001602482015282916001600160a01b03169081906363e85d2d9060440160206040518083038186803b15801561165557600080fd5b505afa158015611669573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168d9190612461565b6040518060400160405280600381526020016223292160e91b815250906116c75760405162461bcd60e51b81526004016104e89190611e5c565b5060015460408051631112eee760e31b815290516001600160a01b039092169182916388977738916004808301926020929190829003018186803b15801561170e57600080fd5b505afa158015611722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117469190612009565b611751906001612038565b60025490935061176a906001600160a01b031684611ad4565b6040516305c4fdf960e01b81526001600160a01b0380831660048301528781166024830152919550908216906305c4fdf990604401602060405180830381600087803b1580156117b957600080fd5b505af11580156117cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f19190612009565b505050915091565b61180282611901565b6000828152601060209081526040909120825161182192840190611c36565b505050565b61182e611233565b6000600d805461183d9061208d565b15905061184b57600161184e565b60005b60ff16905081600e9080519060200190611869929190611c36565b506000546040805163bba3293960e01b8152905183926001600160a01b03169163bba32939916004808301926020929190829003018186803b1580156118ae57600080fd5b505afa1580156118c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e69190612009565b6118f09190612483565b6118fa9042612038565b600f555050565b600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561194457600080fd5b505afa158015611958573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061197c9190612461565b80611a09575060015460405163020604bf60e21b81526004810183905233916001600160a01b03169063081812fc9060240160206040518083038186803b1580156119c657600080fd5b505afa1580156119da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fe91906124d3565b6001600160a01b0316145b80611a9657506001546040516331a9108f60e11b81526004810183905233916001600160a01b031690636352211e9060240160206040518083038186803b158015611a5357600080fd5b505afa158015611a67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8b91906124d3565b6001600160a01b0316145b6040518060400160405280600381526020016223292160e91b81525090611ad05760405162461bcd60e51b81526004016104e89190611e5c565b5050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166104935760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c656400000000000000000060448201526064016104e8565b828054611b7d9061208d565b90600052602060002090601f016020900481019282611b9f5760008555611bec565b82601f10611bb05780548555611bec565b82800160010185558215611bec57600052602060002091601f016020900482015b82811115611bec578254825591600101919060010190611bd1565b50611bf8929150611caa565b5090565b508054611c089061208d565b6000825580601f10611c18575050565b601f0160209004906000526020600020908101906112e89190611caa565b828054611c429061208d565b90600052602060002090601f016020900481019282611c645760008555611bec565b82601f10611c7d57805160ff1916838001178555611bec565b82800160010185558215611bec579182015b82811115611bec578251825591602001919060010190611c8f565b5b80821115611bf85760008155600101611cab565b600060208284031215611cd157600080fd5b81356001600160e01b031981168114611ce957600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611d2f57611d2f611cf0565b604052919050565b6001600160a01b03811681146112e857600080fd5b600060608284031215611d5e57600080fd5b6040516060810181811067ffffffffffffffff82111715611d8157611d81611cf0565b6040528235611d8f81611d37565b81526020830135611d9f81611d37565b60208201526040830135611db281611d37565b60408201529392505050565b600060208284031215611dd057600080fd5b5035919050565b6000808284036040811215611deb57600080fd5b833592506020601f1982011215611e0157600080fd5b506020830190509250929050565b6000815180845260005b81811015611e3557602081850181015186830182015201611e19565b81811115611e47576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611ce96020830184611e0f565b60608101610493828480516001600160a01b03908116835260208083015182169084015260409182015116910152565b8035611eaa81611d37565b919050565b803562ffffff81168114611eaa57600080fd5b60008060008060008060c08789031215611edb57600080fd5b863567ffffffffffffffff80821115611ef357600080fd5b818901915089601f830112611f0757600080fd5b8135602082821115611f1b57611f1b611cf0565b8160051b9250611f2c818401611d06565b828152928401810192818101908d851115611f4657600080fd5b948201945b84861015611f705785359350611f6084611d37565b8382529482019490820190611f4b565b9a50611f7f90508b8201611e9f565b985050505050611f9160408801611eaf565b9350611f9f60608801611e9f565b9250611fad60808801611e9f565b9150611fbb60a08801611e9f565b90509295509295509295565b60008082840360e0811215611fdb57600080fd5b8335925060c0601f1982011215611e0157600080fd5b60006040828403121561200357600080fd5b50919050565b60006020828403121561201b57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561204b5761204b612022565b500190565b60808101612080828580516001600160a01b03908116835260208083015182169084015260409182015116910152565b8260608301529392505050565b600181811c908216806120a157607f821691505b6020821081141561200357634e487b7160e01b600052602260045260246000fd5b63ffffffff811681146112e857600080fd5b6000602082840312156120e657600080fd5b6040516020810181811067ffffffffffffffff8211171561210957612109611cf0565b6040528251612117816120c2565b81529392505050565b600060c0828403121561213257600080fd5b60405160c0810181811067ffffffffffffffff8211171561215557612155611cf0565b60405282518152602083015161216a81611d37565b6020820152604083015161217d81611d37565b6040820152606083015161219081611d37565b606082015260808301516121a381611d37565b608082015260a08301516121b6816120c2565b60a08201529392505050565b6000602082840312156121d457600080fd5b8135611ce9816120c2565b6020810182356121ee816120c2565b63ffffffff16909152919050565b60408101833561220b816120c2565b63ffffffff168252602090910191909152919050565b60006040828403121561223357600080fd5b6040516040810181811067ffffffffffffffff8211171561225657612256611cf0565b604052825161226481611d37565b8152602083015161227481611d37565b60208201529392505050565b600081518084526020808501945080840160005b838110156122b95781516001600160a01b031687529582019590820190600101612294565b509495945050505050565b86815260c0602082015260006122dd60c0830188612280565b62ffffff969096166040830152506001600160a01b039384166060820152918316608083015290911660a09091015292915050565b60a08152600061232560a0830188612280565b82810360208401526123378188611e0f565b6001600160a01b03968716604085015294909516606083015250608001529392505050565b60006020828403121561236e57600080fd5b8135611ce981611d37565b8135815260c08101602083013561238f81611d37565b6001600160a01b0390811660208401526040840135906123ae82611d37565b90811660408401526060840135906123c582611d37565b90811660608401526080840135906123dc82611d37565b16608083015260a08301356123f0816120c2565b63ffffffff811660a08401525092915050565b803561240e81611d37565b6001600160a01b03908116835260208201359061242a82611d37565b808216602085015250505050565b604081016104938284612403565b606081016124548285612403565b8260408301529392505050565b60006020828403121561247357600080fd5b81518015158114611ce957600080fd5b600081600019048311821515161561249d5761249d612022565b500290565b634e487b7160e01b600052603260045260246000fd5b60006000198214156124cc576124cc612022565b5060010190565b6000602082840312156124e557600080fd5b8151611ce981611d3756fea2646970667358221220b23741d7fe9f1d8ef6ccc30f38803bc335c07d3c083e98e85820c2a251aa7ca664736f6c63430008090033",
    "sourceMap": "406:8743:471:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3363:215;;;;;;:::i;:::-;;:::i;:::-;;;470:14:488;;463:22;445:41;;433:2;418:18;3363:215:471;;;;;;;;592:106:410;-1:-1:-1;;;592:106:410;;;643:25:488;;;631:2;616:18;592:106:410;497:177:488;3528:643:477;;;;;;:::i;:::-;;:::i;:::-;;5626:303:471;;;;;;:::i;:::-;;:::i;355:100:410:-;6693:37:471;355:100:410;592:106;2025:545:471;;;;;;:::i;:::-;;:::i;:::-;;;;;;2523:13:488;;2505:32;;2584:4;2572:17;;;2566:24;-1:-1:-1;;;;;2666:21:488;;;2644:20;;;2637:51;;;;2748:4;2736:17;;;2730:24;2726:33;;2704:20;;;2697:63;2820:4;2808:17;;;2802:24;2798:33;;2776:20;;;2769:63;2892:4;2880:17;;;2874:24;2870:33;;;2848:20;;;2841:63;2617:3;2952:17;;;2946:24;2972:10;2942:41;2920:20;;;2913:71;;;;2492:3;2477:19;;2292:698;2763:115:477;2847:24;;2763:115;;5210:362:471;;;;;;:::i;:::-;;:::i;2387:161:477:-;;;;;;:::i;:::-;2471:7;2497:44;;;:39;:44;;;;;;;2387:161;2624:333:471;;;;;;:::i;:::-;;:::i;:::-;;;3781:13:488;;3796:10;3777:30;3759:49;;3747:2;3732:18;2624:333:471;3533:281:488;2199:145:477;;;;;;:::i;:::-;2275:7;2301:36;;;:31;:36;;;;;;;2199:145;230:119:410;;;:::i;:::-;;;;;;;:::i;2921:111:477:-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;3003:22:477;;;;;;;;3010:15;3003:22;-1:-1:-1;;;;;3003:22:477;;;;;;;;;;;;;;;;;;;;;;;;2921:111;;;;;;;;:::i;3075:123::-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;3163:28:477;;;;;;;;3170:21;3163:28;-1:-1:-1;;;;;3163:28:477;;;;;;;;;;;;;;;;;;;;;;;;3075:123;3011:318:471;;;;;;:::i;:::-;;:::i;4889:267::-;;;:::i;461:125:410:-;;;:::i;5983:556:471:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;7041:32:488;;;7023:51;;7105:2;7090:18;;7083:34;;;;6996:18;5983:556:471;6822:301:488;3701:644:471;;;;;;:::i;:::-;;:::i;4399:436::-;;;;;;:::i;:::-;;:::i;1512:459::-;;;:::i;:::-;;;;7978:13:488;;-1:-1:-1;;;;;7974:22:488;;;7956:41;;8057:4;8045:17;;;8039:24;8035:33;8013:20;;;8006:63;;;;7891:18;1512:459:471;7692:383:488;1226:232:471;;;:::i;4214:449:477:-;;;:::i;2591:129::-;2682:31;;2591:129;;3363:215:471;3448:4;3471:36;3495:11;3471:23;:36::i;:::-;:100;;;-1:-1:-1;;;;;;;;;;3511:60:471;;;3471:100;3464:107;3363:215;-1:-1:-1;;3363:215:471:o;673:18:410:-;666:25;;592:106;:::o;3528:643:477:-;3609:23;:21;:23::i;:::-;3658:28;;3703:30;;;;;;;;;;;;-1:-1:-1;;;3703:30:477;;;;;-1:-1:-1;;;;;3650:51:477;3642:92;;;;-1:-1:-1;;;3642:92:477;;;;;;;;:::i;:::-;;;;;;;;;;3791:1;-1:-1:-1;;;;;3752:41:477;3760:9;:18;;;-1:-1:-1;;;;;3752:41:477;;;3795:30;;;;;;;;;;;;;-1:-1:-1;;;3795:30:477;;;3744:82;;;;;-1:-1:-1;;;3744:82:477;;;;;;;;:::i;:::-;-1:-1:-1;3852:19:477;;;;;3888:30;;;;;;;;;;;-1:-1:-1;;;3888:30:477;;;;-1:-1:-1;;;;;3844:42:477;3836:83;;;;-1:-1:-1;;;3836:83:477;;;;;;;;:::i;:::-;-1:-1:-1;3929:33:477;;:21;:33;;-1:-1:-1;;;;;;3929:33:477;;;-1:-1:-1;;;;;3929:33:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4017:34:477;:52;;-1:-1:-1;;;4017:52:477;;;;:34;;;:50;;:52;;;;3929:33;4017:52;;;;;;:34;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3999:70;;:15;:70;:::i;:::-;3972:24;:97;;;4084:80;;4116:10;;4105:9;;4084:80;;;;4128:9;;3972:97;4084:80;:::i;:::-;;;;;;;;3528:643;:::o;5626:303:471:-;5695:33;5724:3;5695:28;:33::i;:::-;5859:27;;;;:22;:27;;;;;5848:64;;5831:3;;5807:10;;5784:9;;5743:179;;5848:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5743:179;;3781:13:488;;3796:10;3777:30;3759:49;;3747:2;3732:18;5743:179:471;;;;;;;5626:303;:::o;2025:545::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2122:20:471;;;;:15;:20;;;;;:27;;;;;:::i;:::-;:32;2118:379;;-1:-1:-1;2118:379:471;;-1:-1:-1;;2193:293:471;;;;;;;;-1:-1:-1;2193:293:471;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2025:545::o;2118:379::-;2524:20;;;;:15;:20;;;;;2513:50;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5210:362::-;5351:1;5325:23;;;;:6;:23;:::i;:::-;:27;;;5354:33;;;;;;;;;;;;;-1:-1:-1;;;5354:33:471;;;5317:71;;;;;-1:-1:-1;;;5317:71:471;;;;;;;;:::i;:::-;;5398:52;5426:3;5442:6;5431:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;5398:27;:52::i;:::-;5528:36;;;;:31;:36;;;;;;;;5465:100;;5515:3;;5503:10;;5492:9;;5465:100;;;;5520:6;;5465:100;:::i;:::-;;;;;;;;5210:362;;:::o;2624:333::-;-1:-1:-1;;;;;;;;;;;;2741:33:471;;;;:28;:33;;;;;:40;;;;;:::i;:::-;:45;2737:127;;-1:-1:-1;2737:127:471;;-1:-1:-1;;2809:44:471;;;;;;;;;-1:-1:-1;2809:44:471;;;2624:333::o;2737:127::-;2891:33;;;;:28;:33;;;;;2880:70;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;230:119:410:-;277:13;309:33;6693:37:471;309:16:410;:33::i;3011:318:471:-;-1:-1:-1;;;;;;;;;;;;3122:27:471;;;;:22;:27;;;;;:34;;;;;:::i;:::-;:39;3118:124;;-1:-1:-1;3118:124:471;;-1:-1:-1;;3184:47:471;;;;;;;;;3225:4;3184:47;;;3011:318::o;3118:124::-;3269:27;;;;:22;:27;;;;;3258:64;;;;;:::i;4889:267::-;4947:30;:28;:30::i;:::-;5056:10;-1:-1:-1;;;;;4992:157:471;5033:9;-1:-1:-1;;;;;4992:157:471;;5091:22;5080:59;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4992:157;;;7978:13:488;;-1:-1:-1;;;;;7974:22:488;;;7956:41;;8057:4;8045:17;;;8039:24;8035:33;8013:20;;;8006:63;;;;7891:18;4992:157:471;;;;;;;;4889:267::o;461:125:410:-;511:13;543:36;-1:-1:-1;;;309:16:410;:33::i;5983:556:471:-;6195:23;6220:11;6243:13;6281:20;6294:6;6281:12;:20::i;:::-;6353:76;;-1:-1:-1;;;6353:76:471;;6266:35;;-1:-1:-1;6266:35:471;-1:-1:-1;6266:35:471;;-1:-1:-1;;;;;;6353:16:471;;;;;:76;;6266:35;;6375:12;;6389:4;;6395:7;;6404:11;;6417;;6353:76;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6495:16:471;;;14206:8:488;14194:21;;6495:16:471;;;14176:40:488;6469:10:471;;-1:-1:-1;6458:9:471;;-1:-1:-1;6444:88:471;;6481:12;;14149:18:488;6495:16:471;;;-1:-1:-1;;6495:16:471;;;;;;;;;;6444:88;;;6513:6;;6521:5;;6528:3;;6444:88;:::i;:::-;;;;;;;;6233:306;5983:556;;;;;;;;;:::o;3701:644::-;3829:32;;;;;;;;;;;;-1:-1:-1;;;3829:32:471;;;;3824:3;3800:20;;:27;;3792:70;;;;-1:-1:-1;;;3792:70:471;;;;;;;;:::i;:::-;-1:-1:-1;3909:1:471;3880:26;;;;;;;;:::i;:::-;:30;;;3912:33;;;;;;;;;;;;;-1:-1:-1;;;3912:33:471;;;3872:74;;;;;-1:-1:-1;;;3872:74:471;;;;;;;;:::i;:::-;-1:-1:-1;4007:1:471;3977:18;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3977:32:471;;;:77;;;;-1:-1:-1;4052:1:471;4029:11;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4029:25:471;;;3977:77;:133;;;;-1:-1:-1;4108:1:471;4074:22;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4074:36:471;;;3977:133;:185;;;;-1:-1:-1;4160:1:471;4130:18;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4130:32:471;;;3977:185;4176:30;;;;;;;;;;;;;-1:-1:-1;;;4176:30:471;;;3956:260;;;;;-1:-1:-1;;;3956:260:471;;;;;;;;:::i;:::-;;4227:43;4246:3;4262:6;4251:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;4227;:43::i;:::-;4326:3;4314:10;-1:-1:-1;;;;;4285:53:471;4303:9;-1:-1:-1;;;;;4285:53:471;;4331:6;4285:53;;;;;;:::i;4399:436::-;4544:1;4509:22;;;;:6;:22;:::i;:::-;-1:-1:-1;;;;;4501:45:471;;;4548:30;;;;;;;;;;;;;-1:-1:-1;;;4548:30:471;;;4493:86;;;;;-1:-1:-1;;;4493:86:471;;;;;;;;:::i;:::-;-1:-1:-1;4631:1:471;4605:13;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4597:36:471;;;4635:30;;;;;;;;;;;;;-1:-1:-1;;;4635:30:471;;;4589:77;;;;;-1:-1:-1;;;4589:77:471;;;;;;;;:::i;:::-;;4676:47;4715:6;4704:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;4676:27;:47::i;:::-;4796:31;;4738:90;;4776:10;;4765:9;;4738:90;;;;4788:6;;4796:31;4738:90;:::i;1512:459::-;-1:-1:-1;;;;;;;;;;;;;;;;;1618:28:471;:35;;;;;:::i;:::-;:40;1614:269;;-1:-1:-1;1614:269:471;;-1:-1:-1;1697:175:471;;;;;;;;;-1:-1:-1;1697:175:471;;;;;;;;1512:459::o;1614:269::-;1910:28;1899:65;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1226:232::-;-1:-1:-1;;;;;;;;;;;;;;;;;1403:22:471;1392:59;;;;;:::i;4214:449:477:-;4265:23;:21;:23::i;:::-;4306:24;;4337:22;;;;;;;;;;;;-1:-1:-1;;;4337:22:477;;;;;4298:62;;;;-1:-1:-1;;;4298:62:477;;;;;;;;:::i;:::-;;4397:24;;4378:15;:43;;4423:27;;;;;;;;;;;;;-1:-1:-1;;;4423:27:477;;;4370:81;;;;;-1:-1:-1;;;4370:81:477;;;;;;;;:::i;:::-;-1:-1:-1;4479:21:477;4461:39;;:15;:39;;-1:-1:-1;;;;;4461:39:477;;;-1:-1:-1;;;;;;4461:39:477;;;;;;;;;;-1:-1:-1;4461:39:477;;;;;;;;;;;;;;;;-1:-1:-1;4461:39:477;;;;;;;;;;;;4517:24;4510:31;;;;4551:28;;;;;;;;;;;;;;;;;4594:62;;;18318:41:488;;;18390:4;18375:20;;18368:63;;;;18447:20;;;18440:63;4628:10:477;;4617:9;;4594:62;;18268:2:488;18253:18;4594:62:477;18071:438:488;3204:212:477;3297:4;-1:-1:-1;;;;;;;;;937:40:49;;;3320:89:477;;;-1:-1:-1;;;;;;;3360:49:477;;-1:-1:-1;;;3360:49:477;3313:96;3204:212;-1:-1:-1;;3204:212:477:o;5093:156::-;5158:15;:34;:54;;-1:-1:-1;;;5158:54:477;;5201:10;5158:54;;;18660:51:488;-1:-1:-1;;;;;5158:34:477;;;;:42;;18633:18:488;;5158:54:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5214:27;;;;;;;;;;;;;-1:-1:-1;;;5214:27:477;;;5150:92;;;;;-1:-1:-1;;;5150:92:477;;;;;;;;:::i;:::-;;5093:156::o;6797:555::-;6867:28;6891:3;6867:23;:28::i;:::-;6905:42;6950:36;;;:31;:36;;;;;;;;;;7045:22;;;;;;;;;;;-1:-1:-1;;;7045:22:477;;;;;;;6950:36;7004:39;6996:72;;;;-1:-1:-1;;;6996:72:477;;;;;;;;:::i;:::-;;7105:34;7086:15;:53;;7141:27;;;;;;;;;;;;;-1:-1:-1;;;7141:27:477;;;7078:91;;;;;-1:-1:-1;;;7078:91:477;;;;;;;;:::i;:::-;-1:-1:-1;7209:33:477;;;;:28;:33;;;;;;;;7179:22;:27;;;;;;:63;;:27;;7209:33;7179:63;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;7259:33:477;;;;:28;:33;;;;;7252:40;;;:::i;:::-;-1:-1:-1;7309:36:477;;;;:31;:36;;;;;7302:43;6797:555::o;6319:425::-;6409:28;6433:3;6409:23;:28::i;:::-;6447:33;;;;:28;:33;;;;;;;;:42;;;;;;;;:::i;:::-;-1:-1:-1;6499:19:477;6521:27;;;:22;:27;;;;;:34;;;;;:::i;:::-;:39;;-1:-1:-1;6521:47:477;;6567:1;6521:47;;;6563:1;6521:47;6499:69;;;;6726:11;6659:15;:34;;;;;;;;;;-1:-1:-1;;;;;6659:34:477;-1:-1:-1;;;;;6659:50:477;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:78;;;;:::i;:::-;6629:108;;:15;:108;:::i;:::-;6578:36;;;;:31;:36;;;;;;:159;;;;-1:-1:-1;;6319:425:477:o;914:381:410:-;1005:14;;;1016:2;1005:14;;;;;;;;;974:15;;1005:14;;;;;;;;;;-1:-1:-1;;1001:18:410;-1:-1:-1;1043:2:410;1029:11;1055:142;1079:2;1075:1;:6;1055:142;;;1112:1;1114;1112:4;;;;;;;:::i;:::-;;1102:85;;1148:1;1142:7;;1167:5;;1102:85;1083:3;;;:::i;:::-;;;1055:142;;;-1:-1:-1;1229:14:410;;1270:4;1263:12;;1256:23;;;;1236:1;914:381::o;9146:422:477:-;9205:23;:21;:23::i;:::-;9246:31;;9284:22;;;;;;;;;;;;-1:-1:-1;;;9284:22:477;;;;;9238:69;;;;-1:-1:-1;;;9238:69:477;;;;;;;;:::i;:::-;;9344:31;;9325:15;:50;;9377:27;;;;;;;;;;;;;-1:-1:-1;;;9377:27:477;;;9317:88;;;;;-1:-1:-1;;;9317:88:477;;;;;;;;:::i;:::-;;9440:28;9415:22;:53;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;9478:35:477;9485:28;;9478:35;:::i;:::-;9523:38;9530:31;9523:38;9146:422::o;5578:622::-;5633:13;5732:34;;5798:79;;-1:-1:-1;;;5798:79:477;;5831:10;5798:79;;;19619:51:488;5732:34:477;19686:18:488;;;19679:45;5633:13:477;;-1:-1:-1;;;;;5732:34:477;;;;5798:32;;19592:18:488;;5798:79:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5891:27;;;;;;;;;;;;;-1:-1:-1;;;5891:27:477;;;5777:151;;;;;-1:-1:-1;;;5777:151:477;;;;;;;;:::i;:::-;-1:-1:-1;5969:24:477;;6009:27;;;-1:-1:-1;;;6009:27:477;;;;-1:-1:-1;;;;;5969:24:477;;;;;;6009:25;;:27;;;;;;;;;;;;;;5969:24;6009:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;;6039:1;6009:31;:::i;:::-;6092:25;;6003:37;;-1:-1:-1;6058:75:477;;-1:-1:-1;;;;;6092:25:477;6003:37;6058:25;:75::i;:::-;6143:50;;-1:-1:-1;;;6143:50:477;;-1:-1:-1;;;;;19965:15:488;;;6143:50:477;;;19947:34:488;20017:15;;;19997:18;;;19990:43;6050:83:477;;-1:-1:-1;6143:27:477;;;;;;19882:18:488;;6143:50:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5661:539;;5578:622;;;:::o;9725:155::-;9806:28;9830:3;9806:23;:28::i;:::-;9844:20;;;;:15;:20;;;;;;;;:29;;;;;;;;:::i;:::-;;9725:155;;:::o;8701:392::-;8778:23;:21;:23::i;:::-;8811:19;8833:22;:29;;;;;:::i;:::-;:34;;-1:-1:-1;8833:42:477;;8874:1;8833:42;;;8870:1;8833:42;8811:64;;;;8916:6;8885:28;:37;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9008:15:477;:34;:52;;;-1:-1:-1;;;9008:52:477;;;;9075:11;;-1:-1:-1;;;;;9008:34:477;;:50;;:52;;;;;;;;;;;;;;:34;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:78;;;;:::i;:::-;8978:108;;:15;:108;:::i;:::-;8932:31;:154;-1:-1:-1;;8701:392:477:o;4734:353::-;4826:15;:34;:54;;-1:-1:-1;;;4826:54:477;;4869:10;4826:54;;;18660:51:488;-1:-1:-1;;;;;4826:34:477;;;;:42;;18633:18:488;;4826:54:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:129;;;-1:-1:-1;4900:24:477;;:41;;-1:-1:-1;;;4900:41:477;;;;;643:25:488;;;4945:10:477;;-1:-1:-1;;;;;4900:24:477;;:36;;616:18:488;;4900:41:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4900:55:477;;4826:129;:202;;;-1:-1:-1;4976:24:477;;:37;;-1:-1:-1;;;4976:37:477;;;;;643:25:488;;;5017:10:477;;-1:-1:-1;;;;;4976:24:477;;:32;;616:18:488;;4976:37:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4976:51:477;;4826:202;5043:27;;;;;;;;;;;;;-1:-1:-1;;;5043:27:477;;;4804:276;;;;;-1:-1:-1;;;4804:276:477;;;;;;;;:::i;:::-;;4734:353;:::o;2107:794:25:-;2191:16;2523:48;2505:14;2499:4;2495:25;2489:4;2485:36;2482:90;2476:4;2469:104;2730:32;2713:14;2707:4;2703:25;2700:63;2694:4;2687:77;2812:4;2806;2800;2797:1;2789:28;2777:40;-1:-1:-1;;;;;;2844:22:25;;2836:58;;;;-1:-1:-1;;;2836:58:25;;20523:2:488;2836:58:25;;;20505:21:488;20562:2;20542:18;;;20535:30;20601:25;20581:18;;;20574:53;20644:18;;2836:58:25;20321:347:488;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:286:488;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:488;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:488:o;679:127::-;740:10;735:3;731:20;728:1;721:31;771:4;768:1;761:15;795:4;792:1;785:15;811:275;882:2;876:9;947:2;928:13;;-1:-1:-1;;924:27:488;912:40;;982:18;967:34;;1003:22;;;964:62;961:88;;;1029:18;;:::i;:::-;1065:2;1058:22;811:275;;-1:-1:-1;811:275:488:o;1091:152::-;-1:-1:-1;;;;;1187:31:488;;1177:42;;1167:70;;1233:1;1230;1223:12;1248:854;1340:6;1393:2;1381:9;1372:7;1368:23;1364:32;1361:52;;;1409:1;1406;1399:12;1361:52;1442:2;1436:9;1484:2;1476:6;1472:15;1553:6;1541:10;1538:22;1517:18;1505:10;1502:34;1499:62;1496:88;;;1564:18;;:::i;:::-;1600:2;1593:22;1637:23;;1669:52;1637:23;1669:52;:::i;:::-;1730:21;;1803:2;1788:18;;1775:32;1816:54;1775:32;1816:54;:::i;:::-;1898:2;1886:15;;1879:32;1963:2;1948:18;;1935:32;1976:54;1935:32;1976:54;:::i;:::-;2058:2;2046:15;;2039:32;2050:6;1248:854;-1:-1:-1;;;1248:854:488:o;2107:180::-;2166:6;2219:2;2207:9;2198:7;2194:23;2190:32;2187:52;;;2235:1;2232;2225:12;2187:52;-1:-1:-1;2258:23:488;;2107:180;-1:-1:-1;2107:180:488:o;3177:351::-;3287:6;3295;3339:9;3330:7;3326:23;3369:2;3365;3361:11;3358:31;;;3385:1;3382;3375:12;3358:31;3408:23;;;-1:-1:-1;3465:2:488;-1:-1:-1;;3447:16:488;;3443:25;3440:45;;;3481:1;3478;3471:12;3440:45;;3519:2;3508:9;3504:18;3494:28;;3177:351;;;;;:::o;3819:472::-;3861:3;3899:5;3893:12;3926:6;3921:3;3914:19;3951:1;3961:162;3975:6;3972:1;3969:13;3961:162;;;4037:4;4093:13;;;4089:22;;4083:29;4065:11;;;4061:20;;4054:59;3990:12;3961:162;;;4141:6;4138:1;4135:13;4132:87;;;4207:1;4200:4;4191:6;4186:3;4182:16;4178:27;4171:38;4132:87;-1:-1:-1;4273:2:488;4252:15;-1:-1:-1;;4248:29:488;4239:39;;;;4280:4;4235:50;;3819:472;-1:-1:-1;;3819:472:488:o;4296:220::-;4445:2;4434:9;4427:21;4408:4;4465:45;4506:2;4495:9;4491:18;4483:6;4465:45;:::i;4802:269::-;5002:2;4987:18;;5014:51;4991:9;5047:6;4643:12;;-1:-1:-1;;;;;4639:21:488;;;4627:34;;4714:4;4703:16;;;4697:23;4693:32;;4677:14;;;4670:56;4779:4;4768:16;;;4762:23;4758:32;4742:14;;4735:56;4521:276;5076:155;5144:20;;5173:52;5144:20;5173:52;:::i;:::-;5076:155;;;:::o;5236:161::-;5303:20;;5363:8;5352:20;;5342:31;;5332:59;;5387:1;5384;5377:12;5402:1415;5530:6;5538;5546;5554;5562;5570;5623:3;5611:9;5602:7;5598:23;5594:33;5591:53;;;5640:1;5637;5630:12;5591:53;5680:9;5667:23;5709:18;5750:2;5742:6;5739:14;5736:34;;;5766:1;5763;5756:12;5736:34;5804:6;5793:9;5789:22;5779:32;;5849:7;5842:4;5838:2;5834:13;5830:27;5820:55;;5871:1;5868;5861:12;5820:55;5907:2;5894:16;5929:4;5952:2;5948;5945:10;5942:36;;;5958:18;;:::i;:::-;6004:2;6001:1;5997:10;5987:20;;6027:28;6051:2;6047;6043:11;6027:28;:::i;:::-;6089:15;;;6159:11;;;6155:20;;;6120:12;;;;6187:19;;;6184:39;;;6219:1;6216;6209:12;6184:39;6243:11;;;;6263:238;6279:6;6274:3;6271:15;6263:238;;;6359:3;6346:17;6333:30;;6376:52;6422:5;6376:52;:::i;:::-;6441:18;;;6296:12;;;;6479;;;;6263:238;;;6520:5;-1:-1:-1;6544:38:488;;-1:-1:-1;6563:18:488;;;6544:38;:::i;:::-;6534:48;;;;;;6601:37;6634:2;6623:9;6619:18;6601:37;:::i;:::-;6591:47;;6657:38;6691:2;6680:9;6676:18;6657:38;:::i;:::-;6647:48;;6714:39;6748:3;6737:9;6733:19;6714:39;:::i;:::-;6704:49;;6772:39;6806:3;6795:9;6791:19;6772:39;:::i;:::-;6762:49;;5402:1415;;;;;;;;:::o;7128:346::-;7231:6;7239;7283:9;7274:7;7270:23;7313:3;7309:2;7305:12;7302:32;;;7330:1;7327;7320:12;7302:32;7353:23;;;-1:-1:-1;7410:3:488;-1:-1:-1;;7392:16:488;;7388:26;7385:46;;;7427:1;7424;7417:12;7479:208;7580:6;7633:2;7621:9;7612:7;7608:23;7604:32;7601:52;;;7649:1;7646;7639:12;7601:52;-1:-1:-1;7672:9:488;7479:208;-1:-1:-1;7479:208:488:o;8080:184::-;8150:6;8203:2;8191:9;8182:7;8178:23;8174:32;8171:52;;;8219:1;8216;8209:12;8171:52;-1:-1:-1;8242:16:488;;8080:184;-1:-1:-1;8080:184:488:o;8269:127::-;8330:10;8325:3;8321:20;8318:1;8311:31;8361:4;8358:1;8351:15;8385:4;8382:1;8375:15;8401:128;8441:3;8472:1;8468:6;8465:1;8462:13;8459:39;;;8478:18;;:::i;:::-;-1:-1:-1;8514:9:488;;8401:128::o;8534:341::-;8762:3;8747:19;;8775:51;8751:9;8808:6;4643:12;;-1:-1:-1;;;;;4639:21:488;;;4627:34;;4714:4;4703:16;;;4697:23;4693:32;;4677:14;;;4670:56;4779:4;4768:16;;;4762:23;4758:32;4742:14;;4735:56;4521:276;8775:51;8862:6;8857:2;8846:9;8842:18;8835:34;8534:341;;;;;:::o;8880:380::-;8959:1;8955:12;;;;9002;;;9023:61;;9077:4;9069:6;9065:17;9055:27;;9023:61;9130:2;9122:6;9119:14;9099:18;9096:38;9093:161;;;9176:10;9171:3;9167:20;9164:1;9157:31;9211:4;9208:1;9201:15;9239:4;9236:1;9229:15;9265:121;9350:10;9343:5;9339:22;9332:5;9329:33;9319:61;;9376:1;9373;9366:12;9391:523;9501:6;9554:2;9542:9;9533:7;9529:23;9525:32;9522:52;;;9570:1;9567;9560:12;9522:52;9603:2;9597:9;9645:2;9637:6;9633:15;9714:6;9702:10;9699:22;9678:18;9666:10;9663:34;9660:62;9657:88;;;9725:18;;:::i;:::-;9761:2;9754:22;9798:16;;9823:30;9798:16;9823:30;:::i;:::-;9862:21;;9869:6;9391:523;-1:-1:-1;;;9391:523:488:o;9919:1193::-;10022:6;10075:3;10063:9;10054:7;10050:23;10046:33;10043:53;;;10092:1;10089;10082:12;10043:53;10125:2;10119:9;10167:3;10159:6;10155:16;10237:6;10225:10;10222:22;10201:18;10189:10;10186:34;10183:62;10180:88;;;10248:18;;:::i;:::-;10284:2;10277:22;10323:16;;10308:32;;10383:2;10368:18;;10362:25;10396:52;10362:25;10396:52;:::i;:::-;10476:2;10464:15;;10457:30;10532:2;10517:18;;10511:25;10545:54;10511:25;10545:54;:::i;:::-;10627:2;10615:15;;10608:32;10685:2;10670:18;;10664:25;10698:54;10664:25;10698:54;:::i;:::-;10780:2;10768:15;;10761:32;10838:3;10823:19;;10817:26;10852:54;10817:26;10852:54;:::i;:::-;10934:3;10922:16;;10915:33;10993:3;10978:19;;10972:26;11007:32;10972:26;11007:32;:::i;:::-;11067:3;11055:16;;11048:33;11059:6;9919:1193;-1:-1:-1;;;9919:1193:488:o;11117:245::-;11175:6;11228:2;11216:9;11207:7;11203:23;11199:32;11196:52;;;11244:1;11241;11234:12;11196:52;11283:9;11270:23;11302:30;11326:5;11302:30;:::i;11367:356::-;11583:2;11568:18;;11608:20;;11637:30;11608:20;11637:30;:::i;:::-;11705:10;11694:22;11676:41;;;11367:356;;-1:-1:-1;11367:356:488:o;11728:427::-;11972:2;11957:18;;11997:20;;12026:30;11997:20;12026:30;:::i;:::-;12094:10;12083:22;12065:41;;12137:2;12122:18;;;12115:34;;;;11728:427;;-1:-1:-1;11728:427:488:o;12160:698::-;12270:6;12323:2;12311:9;12302:7;12298:23;12294:32;12291:52;;;12339:1;12336;12329:12;12291:52;12372:2;12366:9;12414:2;12406:6;12402:15;12483:6;12471:10;12468:22;12447:18;12435:10;12432:34;12429:62;12426:88;;;12494:18;;:::i;:::-;12530:2;12523:22;12567:16;;12592:52;12567:16;12592:52;:::i;:::-;12653:21;;12719:2;12704:18;;12698:25;12732:54;12698:25;12732:54;:::i;:::-;12814:2;12802:15;;12795:32;12806:6;12160:698;-1:-1:-1;;;12160:698:488:o;12863:461::-;12916:3;12954:5;12948:12;12981:6;12976:3;12969:19;13007:4;13036:2;13031:3;13027:12;13020:19;;13073:2;13066:5;13062:14;13094:1;13104:195;13118:6;13115:1;13112:13;13104:195;;;13183:13;;-1:-1:-1;;;;;13179:39:488;13167:52;;13239:12;;;;13274:15;;;;13215:1;13133:9;13104:195;;;-1:-1:-1;13315:3:488;;12863:461;-1:-1:-1;;;;;12863:461:488:o;13329:698::-;13646:6;13635:9;13628:25;13689:3;13684:2;13673:9;13669:18;13662:31;13609:4;13710:57;13762:3;13751:9;13747:19;13739:6;13710:57;:::i;:::-;13815:8;13803:21;;;;13798:2;13783:18;;13776:49;-1:-1:-1;;;;;;13899:15:488;;;13894:2;13879:18;;13872:43;13952:15;;;13946:3;13931:19;;13924:44;14005:15;;;13852:3;13984:19;;;13977:44;13702:65;13329:698;-1:-1:-1;;13329:698:488:o;14227:694::-;14536:3;14525:9;14518:22;14499:4;14563:57;14615:3;14604:9;14600:19;14592:6;14563:57;:::i;:::-;14668:9;14660:6;14656:22;14651:2;14640:9;14636:18;14629:50;14696:33;14722:6;14714;14696:33;:::i;:::-;-1:-1:-1;;;;;14803:15:488;;;14798:2;14783:18;;14776:43;14855:15;;;;14850:2;14835:18;;14828:43;-1:-1:-1;14902:3:488;14887:19;14880:35;14688:41;14227:694;-1:-1:-1;;;14227:694:488:o;14926:268::-;14985:6;15038:2;15026:9;15017:7;15013:23;15009:32;15006:52;;;15054:1;15051;15044:12;15006:52;15093:9;15080:23;15112:52;15158:5;15112:52;:::i;15199:1143::-;15432:20;;15414:39;;15401:3;15386:19;;15500:4;15488:17;;15475:31;15515:52;15475:31;15515:52;:::i;:::-;-1:-1:-1;;;;;15643:14:488;;;15636:4;15621:20;;15614:44;15707:4;15695:17;;15682:31;;15722:54;15682:31;15722:54;:::i;:::-;15814:16;;;15807:4;15792:20;;15785:46;15880:4;15868:17;;15855:31;;15895:54;15855:31;15895:54;:::i;:::-;15987:16;;;15980:4;15965:20;;15958:46;16053:4;16041:17;;16028:31;;16068:54;16028:31;16068:54;:::i;:::-;16160:16;16153:4;16138:20;;16131:46;16226:4;16214:17;;16201:31;16241:32;16201:31;16241:32;:::i;:::-;16324:10;16315:7;16311:24;16304:4;16293:9;16289:20;16282:54;;15199:1143;;;;:::o;16954:429::-;17066:5;17053:19;17081:54;17127:7;17081:54;:::i;:::-;-1:-1:-1;;;;;17194:16:488;;;17182:29;;17259:4;17248:16;;17235:30;;17274:54;17235:30;17274:54;:::i;:::-;17373:2;17364:7;17360:16;17353:4;17348:3;17344:14;17337:40;;;16954:429;;:::o;17388:301::-;17604:2;17589:18;;17616:67;17593:9;17665:6;17616:67;:::i;17694:372::-;17938:2;17923:18;;17950:67;17927:9;17999:6;17950:67;:::i;:::-;18053:6;18048:2;18037:9;18033:18;18026:34;17694:372;;;;;:::o;18722:277::-;18789:6;18842:2;18830:9;18821:7;18817:23;18813:32;18810:52;;;18858:1;18855;18848:12;18810:52;18890:9;18884:16;18943:5;18936:13;18929:21;18922:5;18919:32;18909:60;;18965:1;18962;18955:12;19004:168;19044:7;19110:1;19106;19102:6;19098:14;19095:1;19092:21;19087:1;19080:9;19073:17;19069:45;19066:71;;;19117:18;;:::i;:::-;-1:-1:-1;19157:9:488;;19004:168::o;19177:127::-;19238:10;19233:3;19229:20;19226:1;19219:31;19269:4;19266:1;19259:15;19293:4;19290:1;19283:15;19309:135;19348:3;-1:-1:-1;;19369:17:488;;19366:43;;;19389:18;;:::i;:::-;-1:-1:-1;19436:1:488;19425:13;;19309:135::o;20044:272::-;20114:6;20167:2;20155:9;20146:7;20142:23;20138:32;20135:52;;;20183:1;20180;20173:12;20135:52;20215:9;20209:16;20234:52;20280:5;20234:52;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "commitDelayedProtocolParams()": "98347a5d",
    "commitDelayedStrategyParams(uint256)": "0bdedd56",
    "commitInternalParams()": "d4a07d34",
    "contractName()": "75d0c0dc",
    "contractNameBytes()": "0e3e80ac",
    "contractVersion()": "a0a8e460",
    "contractVersionBytes()": "06a46239",
    "createVault(address[],address,uint24,address,address,address)": "ae12783f",
    "delayedProtocolParams()": "d34cc380",
    "delayedProtocolParamsTimestamp()": "e4af6e79",
    "delayedProtocolPerVaultParamsTimestamp(uint256)": "511ce798",
    "delayedStrategyParams(uint256)": "8860d248",
    "delayedStrategyParamsTimestamp(uint256)": "6707acee",
    "internalParams()": "7ac46fbb",
    "internalParamsTimestamp()": "1c7f4c73",
    "setStrategyParams(uint256,(uint256,address,address,address,address,uint32))": "b0e6ba34",
    "stageDelayedProtocolParams((address,address))": "b2fe31ad",
    "stageDelayedStrategyParams(uint256,(uint32))": "25281714",
    "stageInternalParams((address,address,address))": "09946538",
    "stagedDelayedProtocolParams()": "c2cbdc67",
    "stagedDelayedStrategyParams(uint256)": "59f3dae7",
    "stagedInternalParams()": "86c6be3e",
    "strategyParams(uint256)": "12466b68",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"internalParams_\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IPancakeNonfungiblePositionManager\",\"name\":\"positionManager\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"internalType\":\"struct IPancakeSwapVaultGovernance.DelayedProtocolParams\",\"name\":\"delayedProtocolParams_\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IPancakeNonfungiblePositionManager\",\"name\":\"positionManager\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IPancakeSwapVaultGovernance.DelayedProtocolParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"CommitDelayedProtocolParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"safetyIndicesSet\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IPancakeSwapVaultGovernance.DelayedStrategyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"CommitDelayedStrategyParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"CommitedInternalParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"vaultTokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultNft\",\"type\":\"uint256\"}],\"name\":\"DeployedVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"swapSlippageD\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poolForSwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"smartRouter\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"averageTickTimespan\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IPancakeSwapVaultGovernance.StrategyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"SetStrategyParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IPancakeNonfungiblePositionManager\",\"name\":\"positionManager\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IPancakeSwapVaultGovernance.DelayedProtocolParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"StageDelayedProtocolParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"safetyIndicesSet\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IPancakeSwapVaultGovernance.DelayedStrategyParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"StageDelayedStrategyParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"StagedInternalParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"commitDelayedProtocolParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"commitDelayedStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractNameBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersionBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee_\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"helper_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"masterChef_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Vault_\",\"type\":\"address\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"contract IPancakeSwapVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedProtocolParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IPancakeNonfungiblePositionManager\",\"name\":\"positionManager\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"internalType\":\"struct IPancakeSwapVaultGovernance.DelayedProtocolParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedProtocolParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedProtocolPerVaultParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedStrategyParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"safetyIndicesSet\",\"type\":\"uint32\"}],\"internalType\":\"struct IPancakeSwapVaultGovernance.DelayedStrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedStrategyParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"swapSlippageD\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poolForSwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"smartRouter\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"averageTickTimespan\",\"type\":\"uint32\"}],\"internalType\":\"struct IPancakeSwapVaultGovernance.StrategyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"setStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IPancakeNonfungiblePositionManager\",\"name\":\"positionManager\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"internalType\":\"struct IPancakeSwapVaultGovernance.DelayedProtocolParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"stageDelayedProtocolParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"safetyIndicesSet\",\"type\":\"uint32\"}],\"internalType\":\"struct IPancakeSwapVaultGovernance.DelayedStrategyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"stageDelayedStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"newParams\",\"type\":\"tuple\"}],\"name\":\"stageInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedDelayedProtocolParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IPancakeNonfungiblePositionManager\",\"name\":\"positionManager\",\"type\":\"address\"},{\"internalType\":\"contract IOracle\",\"name\":\"oracle\",\"type\":\"address\"}],\"internalType\":\"struct IPancakeSwapVaultGovernance.DelayedProtocolParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"stagedDelayedStrategyParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"safetyIndicesSet\",\"type\":\"uint32\"}],\"internalType\":\"struct IPancakeSwapVaultGovernance.DelayedStrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedInternalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"strategyParams\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"swapSlippageD\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poolForSwap\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"smartRouter\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"averageTickTimespan\",\"type\":\"uint32\"}],\"internalType\":\"struct IPancakeSwapVaultGovernance.StrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"CommitDelayedProtocolParams(address,address,(address,address))\":{\"params\":{\"origin\":\"Origin of the transaction (tx.origin)\",\"params\":\"New params that are committed\",\"sender\":\"Sender of the call (msg.sender)\"}},\"CommitDelayedStrategyParams(address,address,uint256,(uint32))\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\",\"origin\":\"Origin of the transaction (tx.origin)\",\"params\":\"New params that are committed\",\"sender\":\"Sender of the call (msg.sender)\"}},\"SetStrategyParams(address,address,uint256,(uint256,address,address,address,address,uint32))\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\",\"origin\":\"Origin of the transaction (tx.origin)\",\"params\":\"New set params\",\"sender\":\"Sender of the call (msg.sender)\"}},\"StageDelayedProtocolParams(address,address,(address,address),uint256)\":{\"params\":{\"origin\":\"Origin of the transaction (tx.origin)\",\"params\":\"New params that were staged for commit\",\"sender\":\"Sender of the call (msg.sender)\",\"when\":\"When the params could be committed\"}},\"StageDelayedStrategyParams(address,address,uint256,(uint32),uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\",\"origin\":\"Origin of the transaction (tx.origin)\",\"params\":\"New params that were staged for commit\",\"sender\":\"Sender of the call (msg.sender)\",\"when\":\"When the params could be committed\"}}},\"kind\":\"dev\",\"methods\":{\"commitDelayedStrategyParams(uint256)\":{\"details\":\"Can only be called after delayedStrategyParamsTimestamp\",\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"constructor\":{\"params\":{\"delayedProtocolParams_\":\"Initial Protocol Params\",\"internalParams_\":\"Initial Internal Params\"}},\"createVault(address[],address,uint24,address,address,address)\":{\"params\":{\"fee_\":\"Fee of the UniV3 pool\",\"helper_\":\"address of helper for UniV3 arithmetic with ticks\",\"owner_\":\"Owner of the vault NFT\",\"vaultTokens_\":\"ERC20 tokens that will be managed by this Vault\"}},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"delayedStrategyParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"delayedStrategyParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"setStrategyParams(uint256,(uint256,address,address,address,address,uint32))\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"stageDelayedProtocolParams((address,address))\":{\"params\":{\"params\":\"New params\"}},\"stageDelayedStrategyParams(uint256,(uint32))\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\",\"params\":\"New params\"}},\"stageInternalParams((address,address,address))\":{\"params\":{\"newParams\":\"New Internal Params\"}},\"stagedDelayedStrategyParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"stagedInternalParams()\":{\"details\":\"The Internal Params could be committed after internalParamsTimestamp\"},\"strategyParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"events\":{\"CommitDelayedProtocolParams(address,address,(address,address))\":{\"notice\":\"Emitted when new DelayedProtocolParams are committed\"},\"CommitDelayedStrategyParams(address,address,uint256,(uint32))\":{\"notice\":\"Emitted when new DelayedStrategyParams are committed\"},\"CommitedInternalParams(address,address,(address,address,address))\":{\"notice\":\"Emitted when InternalParams are staged for commit\"},\"DeployedVault(address,address,address[],bytes,address,address,uint256)\":{\"notice\":\"Emitted when New Vault is deployed\"},\"SetStrategyParams(address,address,uint256,(uint256,address,address,address,address,uint32))\":{\"notice\":\"Emitted when new StrategyParams are set\"},\"StageDelayedProtocolParams(address,address,(address,address),uint256)\":{\"notice\":\"Emitted when new DelayedProtocolParams are staged for commit\"},\"StageDelayedStrategyParams(address,address,uint256,(uint32),uint256)\":{\"notice\":\"Emitted when new DelayedStrategyParams are staged for commit\"},\"StagedInternalParams(address,address,(address,address,address),uint256)\":{\"notice\":\"Emitted when InternalParams are staged for commit\"}},\"kind\":\"user\",\"methods\":{\"commitDelayedProtocolParams()\":{\"notice\":\"Commit Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\"},\"commitDelayedStrategyParams(uint256)\":{\"notice\":\"Commit Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay.\"},\"commitInternalParams()\":{\"notice\":\"Commit staged Internal Params.\"},\"constructor\":{\"notice\":\"Creates a new contract.\"},\"createVault(address[],address,uint24,address,address,address)\":{\"notice\":\"Deploys a new vault.\"},\"delayedProtocolParams()\":{\"notice\":\"Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\"},\"delayedProtocolParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed.\"},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed.\"},\"delayedStrategyParams(uint256)\":{\"notice\":\"Delayed Strategy Params\"},\"delayedStrategyParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed.\"},\"internalParams()\":{\"notice\":\"Internal Params of the contract.\"},\"internalParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Internal Params could be committed.\"},\"setStrategyParams(uint256,(uint256,address,address,address,address,uint32))\":{\"notice\":\"Delayed Strategy Params staged for commit after delay.\"},\"stageDelayedProtocolParams((address,address))\":{\"notice\":\"Stage Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay.\"},\"stageDelayedStrategyParams(uint256,(uint32))\":{\"notice\":\"Stage Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay.\"},\"stageInternalParams((address,address,address))\":{\"notice\":\"Stage new Internal Params.\"},\"stagedDelayedProtocolParams()\":{\"notice\":\"Delayed Protocol Params staged for commit after delay.\"},\"stagedDelayedStrategyParams(uint256)\":{\"notice\":\"Delayed Strategy Params staged for commit after delay.\"},\"stagedInternalParams()\":{\"notice\":\"Staged new Internal Params.\"},\"strategyParams(uint256)\":{\"notice\":\"Delayed Strategy Params\"}},\"notice\":\"Governance that manages all PancakeSwap Vaults params and can deploy a new PancakeSwap Vault.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vaults/PancakeSwapVaultGovernance.sol\":\"PancakeSwapVaultGovernance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281\",\"dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b\"]},\"src/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87\",\"dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk\"]},\"src/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50\",\"dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1\"]},\"src/interfaces/external/erc/IERC1271.sol\":{\"keccak256\":\"0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779\",\"dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd\"]},\"src/interfaces/external/pancakeswap/IPancakeNonfungiblePositionManager.sol\":{\"keccak256\":\"0x2c4e79aefc42335fba80144f0d067699807e24c7f3199054ed34729629cd129f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6a7447e742fa1bf468ae1aec5f2b93ac870b4f21ef35bf926574cca3a4a639e3\",\"dweb:/ipfs/QmYiJUU6mV7nTMYat64UNav1Hsq7TSxfT2WaaQErMq3dEW\"]},\"src/interfaces/external/pancakeswap/IPancakeV3Pool.sol\":{\"keccak256\":\"0x03255a87abde262839ddcbb0ad3b1b045ec710cec2f64b997f087ed4c33a0106\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6849d0e311fe5eacc3c86935c0a7099292b41cddd7f2df2782ce5482c260a17b\",\"dweb:/ipfs/QmexQgWXNxhZae6XsBcm2NvxoN8SDeQooDQBvJ7PbLxFLD\"]},\"src/interfaces/external/pancakeswap/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x13cc0099846b5329a0808ba52498087129a628ca69f838a626e8e19c928320cc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3369b299016ef5fc0364f699a4c85ac87f267629a1add8090536a0cd52e9e946\",\"dweb:/ipfs/QmTz7FP8fyPGdQsPbMyZRv34eNcuNw8QwAVSph38tyxpYa\"]},\"src/interfaces/external/pancakeswap/IPeripheryPayments.sol\":{\"keccak256\":\"0xd99977991fa825ec46f13a44ca137bdb801f53d77e141ac066732c49714bdfab\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://154fbf2d218157d3ce46b4a96683b3f26f8bce43e48804dcb5ad8b2dc72552cb\",\"dweb:/ipfs/QmahLuEAzkqAbNp2hi6qJCPnv4QZmDBubXX3F8f5SYoJNy\"]},\"src/interfaces/external/pancakeswap/IPoolInitializer.sol\":{\"keccak256\":\"0x89682f8b38a8c900cf705cd7f2a6fe1ff0d17d940d1e2d02d01ba82664236b6d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ad59f253f9afb1ef514b7fb2efae2f62e86a3d513e6be267951b9b6044125bba\",\"dweb:/ipfs/QmdequarSBA7HBbnvnJrtXY6TjVyu67WFuCEwXTgNkxEuK\"]},\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolActions.sol\":{\"keccak256\":\"0x59ee2c617abe65adac032507772e8c11d23f1ebe3c34c54cd954712b5a417f1c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6db7f40df0dc6c1125e6cb13a8b91eff425b128e269f4df830f57fa36288b3bc\",\"dweb:/ipfs/QmT35pt82WzqFzTuBzRAaCjVrcgtqmTk4x5eLvgeQJEnzE\"]},\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolDerivedState.sol\":{\"keccak256\":\"0xbb8590d870d29ae248f7e50b1fb3d07ac0faf6077aa959e52e875643cff8f575\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5129eac8fe38d2e3ba8a30db0b5fa389efa1119edbbf4b7a058b1a78691417f1\",\"dweb:/ipfs/QmNnRQfGWwxV3VmnBhh5aAjVYUD5K3sPMiw1zn3k2njsbL\"]},\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolEvents.sol\":{\"keccak256\":\"0x3f5f268cabea4583ab138b8408bf876831becb2eda3c3399142539cad4c1b7f8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5ecdb61c88c2372fa3782bd52e624b991aa2fff89beae98b831c963dd9bf7144\",\"dweb:/ipfs/QmVH8gFMqWcTj6Fd6MtYXme5GfRYnmAJsmxXErVx37ha4a\"]},\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolImmutables.sol\":{\"keccak256\":\"0x9166871e1f206ff9002fe1864fcc4c7ecde3e745f3a7740485569c9edd2960f2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://56bb208edd594b774bb95b51fbcbcd4dc7fc3e8615499a9306b05539bb31028d\",\"dweb:/ipfs/QmdytBtwQKD44rc5oVPv7SiRdNS4js9JimH2AaFkUvWWJq\"]},\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolOwnerActions.sol\":{\"keccak256\":\"0xb28a50116de98147bb91e35eaeb51b29a7899c16d3d1a99941cd4f13b565550b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5e493a4c2938834d44283af81fb258c1ac320556f382aeeafe00bd7205efeba0\",\"dweb:/ipfs/QmbWYfzDnwWD2vfL69iKVpy9zEHCvJ32kpC4MEAfexkw4X\"]},\"src/interfaces/external/pancakeswap/pool/IPancakeV3PoolState.sol\":{\"keccak256\":\"0xf727a5c34395306548e55f765e7fc47c2f485b2f9f068e9a96fee27ddea3a535\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54c278a5906df814f8cc5bf1dc5cd330db0d7383fcc86c5e6a7fb57c16c58432\",\"dweb:/ipfs/QmSDmQTuAwXdhBANEvYpsrEpTEVJbzPYM7f5fXEDxwvkPJ\"]},\"src/interfaces/oracles/IOracle.sol\":{\"keccak256\":\"0x2d89a1f771e68129d47ae26eccf76f969cd2877e9b7190687056f912c3524b53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f378b9f29c18878e73e251ca97abeca819f0789834281ee1399db878f6baedf5\",\"dweb:/ipfs/QmSrFYZWmGdVkgACwwZEfbkPt3kQCSkr6czBi9HVtzNSJg\"]},\"src/interfaces/utils/IContractMeta.sol\":{\"keccak256\":\"0x7ce236cea17798c2c9e60a659e727ef188f6579315b8227d0c6ad067a33900fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31c232f85d6565414bdf292adacc3054ab2355878e4d4508fc86fc2787436f24\",\"dweb:/ipfs/QmVhEUkN5Rwqpyufn7qqT88LLdq885igE57Pk4LzgJb9Kp\"]},\"src/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add\",\"dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu\"]},\"src/interfaces/vaults/IIntegrationVault.sol\":{\"keccak256\":\"0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d\",\"dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy\"]},\"src/interfaces/vaults/IPancakeSwapVault.sol\":{\"keccak256\":\"0x43d100383c27c207cae8f1badae9ae54a8f7eb1ed0489077c367d53bd751aca6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7bb043ea24f220fb28f33a143e79fe7afba4f47f9cc7b2854a5fbb99873286ca\",\"dweb:/ipfs/QmSUDqkxw9EDEvb8P3gMUxHyeHtqWxr8tK1LNKKU6SefHC\"]},\"src/interfaces/vaults/IPancakeSwapVaultGovernance.sol\":{\"keccak256\":\"0xd2d1c9a831459441cd545743dfa361486bd25423a1987fca10287a05dc901958\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e15c86f1bf09a8114e650bdd7cd1426a313b34fc012fe1e18d2800cb5ef5873f\",\"dweb:/ipfs/QmYqiNcpv8dcExDaQar7a14EyztQVjxzvpJeGB3FJ3v6DJ\"]},\"src/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1\",\"dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw\"]},\"src/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375\",\"dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu\"]},\"src/libraries/ExceptionsLibrary.sol\":{\"keccak256\":\"0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f\",\"dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX\"]},\"src/libraries/PermissionIdsLibrary.sol\":{\"keccak256\":\"0xc6a4f2515d807b2ad95e9e8f7190c5ea85ab6603d2c1136632a8af9c479ecfcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e16f3d1e595ffa5b20cd1588e839ee783b1ca246d489cbe42040fd3089bb8b1\",\"dweb:/ipfs/QmQdW5ykrjB5yMMxkU5zTR4GJ5kBhyrnAbmt3mvtB55kuC\"]},\"src/utils/ContractMeta.sol\":{\"keccak256\":\"0x6e1fe2b6e0907a5388a5775be53bbfb55883aacc0ccb7597dfc6475fa9834c3f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9f8a2c5073a97b514829bac140bf84391cc5702185c4d6813e47b61ce53515e6\",\"dweb:/ipfs/QmeuMJq2ciSaDZC8qiUGLPfAHBjpCE4v79fZiaWm8egAks\"]},\"src/vaults/PancakeSwapVaultGovernance.sol\":{\"keccak256\":\"0xa2adc97791214ef299d1c324b672a7b220256381f60c622f65bd043ed7bc5ec8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://693a37f721a9c6fef16d9ca41f03111fe87aea8e67c2fc254e49069ce5a370f8\",\"dweb:/ipfs/QmXr7XcdRDwY6WyJFeTakuA4vyHTKzQ8jZ3WFobDjFDhUL\"]},\"src/vaults/VaultGovernance.sol\":{\"keccak256\":\"0xd484ec7eee06480da27027a0ac81f591440ecdd2ba7bd5bfdee58a3f9e88c22c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8b4f08e9350fadeb03b9561a2fb2798821f7186fe8663207c91402ea62a53cc5\",\"dweb:/ipfs/QmUr73ghYfPzjtFgxE8mPjw5wFwQTQsbcLDGJNQVfT4rEV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "internalParams_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams",
              "name": "delayedProtocolParams_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IPancakeNonfungiblePositionManager",
                  "name": "positionManager",
                  "type": "address"
                },
                {
                  "internalType": "contract IOracle",
                  "name": "oracle",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IPancakeNonfungiblePositionManager",
                  "name": "positionManager",
                  "type": "address"
                },
                {
                  "internalType": "contract IOracle",
                  "name": "oracle",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CommitDelayedProtocolParams",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "safetyIndicesSet",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CommitDelayedStrategyParams",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CommitedInternalParams",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address[]",
              "name": "vaultTokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "vaultAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "vaultNft",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DeployedVault",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct IPancakeSwapVaultGovernance.StrategyParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "swapSlippageD",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "poolForSwap",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "cake",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "smartRouter",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "averageTickTimespan",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetStrategyParams",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IPancakeNonfungiblePositionManager",
                  "name": "positionManager",
                  "type": "address"
                },
                {
                  "internalType": "contract IOracle",
                  "name": "oracle",
                  "type": "address"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "when",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StageDelayedProtocolParams",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "safetyIndicesSet",
                  "type": "uint32"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "when",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StageDelayedStrategyParams",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "when",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StagedInternalParams",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitDelayedProtocolParams"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitDelayedStrategyParams"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitInternalParams"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractName",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractNameBytes",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersionBytes",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "vaultTokens_",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee_",
              "type": "uint24"
            },
            {
              "internalType": "address",
              "name": "helper_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "masterChef_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "erc20Vault_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createVault",
          "outputs": [
            {
              "internalType": "contract IPancakeSwapVault",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolParams",
          "outputs": [
            {
              "internalType": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IPancakeNonfungiblePositionManager",
                  "name": "positionManager",
                  "type": "address"
                },
                {
                  "internalType": "contract IOracle",
                  "name": "oracle",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolPerVaultParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedStrategyParams",
          "outputs": [
            {
              "internalType": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "safetyIndicesSet",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedStrategyParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "internalParams",
          "outputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "internalParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            },
            {
              "internalType": "struct IPancakeSwapVaultGovernance.StrategyParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "swapSlippageD",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "poolForSwap",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "cake",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "smartRouter",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "averageTickTimespan",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategyParams"
        },
        {
          "inputs": [
            {
              "internalType": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IPancakeNonfungiblePositionManager",
                  "name": "positionManager",
                  "type": "address"
                },
                {
                  "internalType": "contract IOracle",
                  "name": "oracle",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stageDelayedProtocolParams"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            },
            {
              "internalType": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "safetyIndicesSet",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stageDelayedStrategyParams"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "newParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stageInternalParams"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stagedDelayedProtocolParams",
          "outputs": [
            {
              "internalType": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IPancakeNonfungiblePositionManager",
                  "name": "positionManager",
                  "type": "address"
                },
                {
                  "internalType": "contract IOracle",
                  "name": "oracle",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stagedDelayedStrategyParams",
          "outputs": [
            {
              "internalType": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "safetyIndicesSet",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stagedInternalParams",
          "outputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyParams",
          "outputs": [
            {
              "internalType": "struct IPancakeSwapVaultGovernance.StrategyParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "swapSlippageD",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "poolForSwap",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "cake",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "underlyingToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "smartRouter",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "averageTickTimespan",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "commitDelayedStrategyParams(uint256)": {
            "details": "Can only be called after delayedStrategyParamsTimestamp",
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "constructor": {
            "params": {
              "delayedProtocolParams_": "Initial Protocol Params",
              "internalParams_": "Initial Internal Params"
            }
          },
          "createVault(address[],address,uint24,address,address,address)": {
            "params": {
              "fee_": "Fee of the UniV3 pool",
              "helper_": "address of helper for UniV3 arithmetic with ticks",
              "owner_": "Owner of the vault NFT",
              "vaultTokens_": "ERC20 tokens that will be managed by this Vault"
            }
          },
          "delayedProtocolPerVaultParamsTimestamp(uint256)": {
            "params": {
              "nft": "Nft of the vault"
            }
          },
          "delayedStrategyParams(uint256)": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "delayedStrategyParamsTimestamp(uint256)": {
            "params": {
              "nft": "Nft of the vault"
            }
          },
          "setStrategyParams(uint256,(uint256,address,address,address,address,uint32))": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "stageDelayedProtocolParams((address,address))": {
            "params": {
              "params": "New params"
            }
          },
          "stageDelayedStrategyParams(uint256,(uint32))": {
            "params": {
              "nft": "VaultRegistry NFT of the vault",
              "params": "New params"
            }
          },
          "stageInternalParams((address,address,address))": {
            "params": {
              "newParams": "New Internal Params"
            }
          },
          "stagedDelayedStrategyParams(uint256)": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "stagedInternalParams()": {
            "details": "The Internal Params could be committed after internalParamsTimestamp"
          },
          "strategyParams(uint256)": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "commitDelayedProtocolParams()": {
            "notice": "Commit Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
          },
          "commitDelayedStrategyParams(uint256)": {
            "notice": "Commit Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay."
          },
          "commitInternalParams()": {
            "notice": "Commit staged Internal Params."
          },
          "constructor": {
            "notice": "Creates a new contract."
          },
          "createVault(address[],address,uint24,address,address,address)": {
            "notice": "Deploys a new vault."
          },
          "delayedProtocolParams()": {
            "notice": "Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
          },
          "delayedProtocolParamsTimestamp()": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed."
          },
          "delayedProtocolPerVaultParamsTimestamp(uint256)": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed."
          },
          "delayedStrategyParams(uint256)": {
            "notice": "Delayed Strategy Params"
          },
          "delayedStrategyParamsTimestamp(uint256)": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed."
          },
          "internalParams()": {
            "notice": "Internal Params of the contract."
          },
          "internalParamsTimestamp()": {
            "notice": "Timestamp in unix time seconds after which staged Internal Params could be committed."
          },
          "setStrategyParams(uint256,(uint256,address,address,address,address,uint32))": {
            "notice": "Delayed Strategy Params staged for commit after delay."
          },
          "stageDelayedProtocolParams((address,address))": {
            "notice": "Stage Delayed Protocol Params, i.e. Params that could be changed by Protocol Governance with Protocol Governance delay."
          },
          "stageDelayedStrategyParams(uint256,(uint32))": {
            "notice": "Stage Delayed Strategy Params, i.e. Params that could be changed by Strategy or Protocol Governance with Protocol Governance delay."
          },
          "stageInternalParams((address,address,address))": {
            "notice": "Stage new Internal Params."
          },
          "stagedDelayedProtocolParams()": {
            "notice": "Delayed Protocol Params staged for commit after delay."
          },
          "stagedDelayedStrategyParams(uint256)": {
            "notice": "Delayed Strategy Params staged for commit after delay."
          },
          "stagedInternalParams()": {
            "notice": "Staged new Internal Params."
          },
          "strategyParams(uint256)": {
            "notice": "Delayed Strategy Params"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/vaults/PancakeSwapVaultGovernance.sol": "PancakeSwapVaultGovernance"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999",
        "urls": [
          "bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb",
          "dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolGovernance.sol": {
        "keccak256": "0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e",
        "urls": [
          "bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281",
          "dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b"
        ],
        "license": "MIT"
      },
      "src/interfaces/IUnitPricesGovernance.sol": {
        "keccak256": "0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081",
        "urls": [
          "bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87",
          "dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk"
        ],
        "license": "MIT"
      },
      "src/interfaces/IVaultRegistry.sol": {
        "keccak256": "0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55",
        "urls": [
          "bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50",
          "dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/erc/IERC1271.sol": {
        "keccak256": "0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36",
        "urls": [
          "bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779",
          "dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/pancakeswap/IPancakeNonfungiblePositionManager.sol": {
        "keccak256": "0x2c4e79aefc42335fba80144f0d067699807e24c7f3199054ed34729629cd129f",
        "urls": [
          "bzz-raw://6a7447e742fa1bf468ae1aec5f2b93ac870b4f21ef35bf926574cca3a4a639e3",
          "dweb:/ipfs/QmYiJUU6mV7nTMYat64UNav1Hsq7TSxfT2WaaQErMq3dEW"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/IPancakeV3Pool.sol": {
        "keccak256": "0x03255a87abde262839ddcbb0ad3b1b045ec710cec2f64b997f087ed4c33a0106",
        "urls": [
          "bzz-raw://6849d0e311fe5eacc3c86935c0a7099292b41cddd7f2df2782ce5482c260a17b",
          "dweb:/ipfs/QmexQgWXNxhZae6XsBcm2NvxoN8SDeQooDQBvJ7PbLxFLD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/IPeripheryImmutableState.sol": {
        "keccak256": "0x13cc0099846b5329a0808ba52498087129a628ca69f838a626e8e19c928320cc",
        "urls": [
          "bzz-raw://3369b299016ef5fc0364f699a4c85ac87f267629a1add8090536a0cd52e9e946",
          "dweb:/ipfs/QmTz7FP8fyPGdQsPbMyZRv34eNcuNw8QwAVSph38tyxpYa"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/IPeripheryPayments.sol": {
        "keccak256": "0xd99977991fa825ec46f13a44ca137bdb801f53d77e141ac066732c49714bdfab",
        "urls": [
          "bzz-raw://154fbf2d218157d3ce46b4a96683b3f26f8bce43e48804dcb5ad8b2dc72552cb",
          "dweb:/ipfs/QmahLuEAzkqAbNp2hi6qJCPnv4QZmDBubXX3F8f5SYoJNy"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/IPoolInitializer.sol": {
        "keccak256": "0x89682f8b38a8c900cf705cd7f2a6fe1ff0d17d940d1e2d02d01ba82664236b6d",
        "urls": [
          "bzz-raw://ad59f253f9afb1ef514b7fb2efae2f62e86a3d513e6be267951b9b6044125bba",
          "dweb:/ipfs/QmdequarSBA7HBbnvnJrtXY6TjVyu67WFuCEwXTgNkxEuK"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolActions.sol": {
        "keccak256": "0x59ee2c617abe65adac032507772e8c11d23f1ebe3c34c54cd954712b5a417f1c",
        "urls": [
          "bzz-raw://6db7f40df0dc6c1125e6cb13a8b91eff425b128e269f4df830f57fa36288b3bc",
          "dweb:/ipfs/QmT35pt82WzqFzTuBzRAaCjVrcgtqmTk4x5eLvgeQJEnzE"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolDerivedState.sol": {
        "keccak256": "0xbb8590d870d29ae248f7e50b1fb3d07ac0faf6077aa959e52e875643cff8f575",
        "urls": [
          "bzz-raw://5129eac8fe38d2e3ba8a30db0b5fa389efa1119edbbf4b7a058b1a78691417f1",
          "dweb:/ipfs/QmNnRQfGWwxV3VmnBhh5aAjVYUD5K3sPMiw1zn3k2njsbL"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolEvents.sol": {
        "keccak256": "0x3f5f268cabea4583ab138b8408bf876831becb2eda3c3399142539cad4c1b7f8",
        "urls": [
          "bzz-raw://5ecdb61c88c2372fa3782bd52e624b991aa2fff89beae98b831c963dd9bf7144",
          "dweb:/ipfs/QmVH8gFMqWcTj6Fd6MtYXme5GfRYnmAJsmxXErVx37ha4a"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolImmutables.sol": {
        "keccak256": "0x9166871e1f206ff9002fe1864fcc4c7ecde3e745f3a7740485569c9edd2960f2",
        "urls": [
          "bzz-raw://56bb208edd594b774bb95b51fbcbcd4dc7fc3e8615499a9306b05539bb31028d",
          "dweb:/ipfs/QmdytBtwQKD44rc5oVPv7SiRdNS4js9JimH2AaFkUvWWJq"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolOwnerActions.sol": {
        "keccak256": "0xb28a50116de98147bb91e35eaeb51b29a7899c16d3d1a99941cd4f13b565550b",
        "urls": [
          "bzz-raw://5e493a4c2938834d44283af81fb258c1ac320556f382aeeafe00bd7205efeba0",
          "dweb:/ipfs/QmbWYfzDnwWD2vfL69iKVpy9zEHCvJ32kpC4MEAfexkw4X"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/pancakeswap/pool/IPancakeV3PoolState.sol": {
        "keccak256": "0xf727a5c34395306548e55f765e7fc47c2f485b2f9f068e9a96fee27ddea3a535",
        "urls": [
          "bzz-raw://54c278a5906df814f8cc5bf1dc5cd330db0d7383fcc86c5e6a7fb57c16c58432",
          "dweb:/ipfs/QmSDmQTuAwXdhBANEvYpsrEpTEVJbzPYM7f5fXEDxwvkPJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/oracles/IOracle.sol": {
        "keccak256": "0x2d89a1f771e68129d47ae26eccf76f969cd2877e9b7190687056f912c3524b53",
        "urls": [
          "bzz-raw://f378b9f29c18878e73e251ca97abeca819f0789834281ee1399db878f6baedf5",
          "dweb:/ipfs/QmSrFYZWmGdVkgACwwZEfbkPt3kQCSkr6czBi9HVtzNSJg"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IContractMeta.sol": {
        "keccak256": "0x7ce236cea17798c2c9e60a659e727ef188f6579315b8227d0c6ad067a33900fb",
        "urls": [
          "bzz-raw://31c232f85d6565414bdf292adacc3054ab2355878e4d4508fc86fc2787436f24",
          "dweb:/ipfs/QmVhEUkN5Rwqpyufn7qqT88LLdq885igE57Pk4LzgJb9Kp"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IDefaultAccessControl.sol": {
        "keccak256": "0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60",
        "urls": [
          "bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add",
          "dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IIntegrationVault.sol": {
        "keccak256": "0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e",
        "urls": [
          "bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d",
          "dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IPancakeSwapVault.sol": {
        "keccak256": "0x43d100383c27c207cae8f1badae9ae54a8f7eb1ed0489077c367d53bd751aca6",
        "urls": [
          "bzz-raw://7bb043ea24f220fb28f33a143e79fe7afba4f47f9cc7b2854a5fbb99873286ca",
          "dweb:/ipfs/QmSUDqkxw9EDEvb8P3gMUxHyeHtqWxr8tK1LNKKU6SefHC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/vaults/IPancakeSwapVaultGovernance.sol": {
        "keccak256": "0xd2d1c9a831459441cd545743dfa361486bd25423a1987fca10287a05dc901958",
        "urls": [
          "bzz-raw://e15c86f1bf09a8114e650bdd7cd1426a313b34fc012fe1e18d2800cb5ef5873f",
          "dweb:/ipfs/QmYqiNcpv8dcExDaQar7a14EyztQVjxzvpJeGB3FJ3v6DJ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/vaults/IVault.sol": {
        "keccak256": "0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43",
        "urls": [
          "bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1",
          "dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultGovernance.sol": {
        "keccak256": "0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813",
        "urls": [
          "bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375",
          "dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu"
        ],
        "license": "MIT"
      },
      "src/libraries/ExceptionsLibrary.sol": {
        "keccak256": "0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff",
        "urls": [
          "bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f",
          "dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX"
        ],
        "license": "MIT"
      },
      "src/libraries/PermissionIdsLibrary.sol": {
        "keccak256": "0xc6a4f2515d807b2ad95e9e8f7190c5ea85ab6603d2c1136632a8af9c479ecfcf",
        "urls": [
          "bzz-raw://4e16f3d1e595ffa5b20cd1588e839ee783b1ca246d489cbe42040fd3089bb8b1",
          "dweb:/ipfs/QmQdW5ykrjB5yMMxkU5zTR4GJ5kBhyrnAbmt3mvtB55kuC"
        ],
        "license": "MIT"
      },
      "src/utils/ContractMeta.sol": {
        "keccak256": "0x6e1fe2b6e0907a5388a5775be53bbfb55883aacc0ccb7597dfc6475fa9834c3f",
        "urls": [
          "bzz-raw://9f8a2c5073a97b514829bac140bf84391cc5702185c4d6813e47b61ce53515e6",
          "dweb:/ipfs/QmeuMJq2ciSaDZC8qiUGLPfAHBjpCE4v79fZiaWm8egAks"
        ],
        "license": "BUSL-1.1"
      },
      "src/vaults/PancakeSwapVaultGovernance.sol": {
        "keccak256": "0xa2adc97791214ef299d1c324b672a7b220256381f60c622f65bd043ed7bc5ec8",
        "urls": [
          "bzz-raw://693a37f721a9c6fef16d9ca41f03111fe87aea8e67c2fc254e49069ce5a370f8",
          "dweb:/ipfs/QmXr7XcdRDwY6WyJFeTakuA4vyHTKzQ8jZ3WFobDjFDhUL"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/vaults/VaultGovernance.sol": {
        "keccak256": "0xd484ec7eee06480da27027a0ac81f591440ecdd2ba7bd5bfdee58a3f9e88c22c",
        "urls": [
          "bzz-raw://8b4f08e9350fadeb03b9561a2fb2798821f7186fe8663207c91402ea62a53cc5",
          "dweb:/ipfs/QmUr73ghYfPzjtFgxE8mPjw5wFwQTQsbcLDGJNQVfT4rEV"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/vaults/PancakeSwapVaultGovernance.sol",
    "id": 153900,
    "exportedSymbols": {
      "Clones": [
        43615
      ],
      "ContractMeta": [
        114987
      ],
      "ERC165": [
        48061
      ],
      "ExceptionsLibrary": [
        79454
      ],
      "IAccessControl": [
        43366
      ],
      "IAccessControlEnumerable": [
        43391
      ],
      "IContractMeta": [
        75764
      ],
      "IDefaultAccessControl": [
        75786
      ],
      "IERC1271": [
        64026
      ],
      "IERC165": [
        48073
      ],
      "IERC721": [
        46687
      ],
      "IERC721Receiver": [
        46705
      ],
      "IIntegrationVault": [
        77767
      ],
      "IOracle": [
        75605
      ],
      "IPancakeNonfungiblePositionManager": [
        69260
      ],
      "IPancakeSwapVault": [
        78061
      ],
      "IPancakeSwapVaultGovernance": [
        78191
      ],
      "IPancakeV3Pool": [
        69556
      ],
      "IPancakeV3PoolActions": [
        70887
      ],
      "IPancakeV3PoolDerivedState": [
        70918
      ],
      "IPancakeV3PoolEvents": [
        71041
      ],
      "IPancakeV3PoolImmutables": [
        71081
      ],
      "IPancakeV3PoolOwnerActions": [
        71113
      ],
      "IPancakeV3PoolState": [
        71221
      ],
      "IPeripheryImmutableState": [
        69611
      ],
      "IPeripheryPayments": [
        69637
      ],
      "IPoolInitializer": [
        69689
      ],
      "IProtocolGovernance": [
        52868
      ],
      "IUnitPricesGovernance": [
        52921
      ],
      "IVault": [
        78599
      ],
      "IVaultGovernance": [
        78668
      ],
      "IVaultRegistry": [
        53012
      ],
      "PancakeSwapVaultGovernance": [
        153899
      ],
      "PermissionIdsLibrary": [
        79479
      ],
      "VaultGovernance": [
        158218
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:9105:471",
    "nodes": [
      {
        "id": 153280,
        "nodeType": "PragmaDirective",
        "src": "45:23:471",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 153281,
        "nodeType": "ImportDirective",
        "src": "70:62:471",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/IPancakeSwapVaultGovernance.sol",
        "file": "../interfaces/vaults/IPancakeSwapVaultGovernance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 153900,
        "sourceUnit": 78192,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 153282,
        "nodeType": "ImportDirective",
        "src": "133:52:471",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/IPancakeSwapVault.sol",
        "file": "../interfaces/vaults/IPancakeSwapVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 153900,
        "sourceUnit": 78062,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 153283,
        "nodeType": "ImportDirective",
        "src": "186:44:471",
        "nodes": [],
        "absolutePath": "src/libraries/ExceptionsLibrary.sol",
        "file": "../libraries/ExceptionsLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 153900,
        "sourceUnit": 79455,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 153284,
        "nodeType": "ImportDirective",
        "src": "231:35:471",
        "nodes": [],
        "absolutePath": "src/utils/ContractMeta.sol",
        "file": "../utils/ContractMeta.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 153900,
        "sourceUnit": 114988,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 153285,
        "nodeType": "ImportDirective",
        "src": "267:31:471",
        "nodes": [],
        "absolutePath": "src/vaults/VaultGovernance.sol",
        "file": "./VaultGovernance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 153900,
        "sourceUnit": 158219,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 153899,
        "nodeType": "ContractDefinition",
        "src": "406:8743:471",
        "nodes": [
          {
            "id": 153343,
            "nodeType": "FunctionDefinition",
            "src": "667:440:471",
            "nodes": [],
            "body": {
              "id": 153342,
              "nodeType": "Block",
              "src": "816:291:471",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 153315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 153308,
                                "name": "delayedProtocolParams_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153299,
                                "src": "842:22:471",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_memory_ptr",
                                  "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams memory"
                                }
                              },
                              "id": 153309,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "positionManager",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 78072,
                              "src": "842:38:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPancakeNonfungiblePositionManager_$69260",
                                "typeString": "contract IPancakeNonfungiblePositionManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IPancakeNonfungiblePositionManager_$69260",
                                "typeString": "contract IPancakeNonfungiblePositionManager"
                              }
                            ],
                            "id": 153307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "834:7:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 153306,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "834:7:471",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 153310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "834:47:471",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 153313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "893:1:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 153312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "885:7:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 153311,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "885:7:471",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 153314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "885:10:471",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "834:61:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 153316,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "897:17:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 153317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ADDRESS_ZERO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79390,
                        "src": "897:30:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 153305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "826:7:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 153318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "826:102:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153319,
                  "nodeType": "ExpressionStatement",
                  "src": "826:102:471"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 153330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 153323,
                                "name": "delayedProtocolParams_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153299,
                                "src": "954:22:471",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_memory_ptr",
                                  "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams memory"
                                }
                              },
                              "id": 153324,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oracle",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 78075,
                              "src": "954:29:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IOracle_$75605",
                                "typeString": "contract IOracle"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IOracle_$75605",
                                "typeString": "contract IOracle"
                              }
                            ],
                            "id": 153322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "946:7:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 153321,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "946:7:471",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 153325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "946:38:471",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 153328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "996:1:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 153327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "988:7:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 153326,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "988:7:471",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 153329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "988:10:471",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "946:52:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 153331,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "1000:17:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 153332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ADDRESS_ZERO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79390,
                        "src": "1000:30:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 153320,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "938:7:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 153333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "938:93:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153334,
                  "nodeType": "ExpressionStatement",
                  "src": "938:93:471"
                },
                {
                  "expression": {
                    "id": 153340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 153335,
                      "name": "_delayedProtocolParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157443,
                      "src": "1041:22:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 153338,
                          "name": "delayedProtocolParams_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153299,
                          "src": "1077:22:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_memory_ptr",
                            "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_memory_ptr",
                            "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams memory"
                          }
                        ],
                        "expression": {
                          "id": 153336,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "1066:3:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 153337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "encode",
                        "nodeType": "MemberAccess",
                        "src": "1066:10:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function () pure returns (bytes memory)"
                        }
                      },
                      "id": 153339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1066:34:471",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "1041:59:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 153341,
                  "nodeType": "ExpressionStatement",
                  "src": "1041:59:471"
                }
              ]
            },
            "documentation": {
              "id": 153293,
              "nodeType": "StructuredDocumentation",
              "src": "510:152:471",
              "text": "@notice Creates a new contract.\n @param internalParams_ Initial Internal Params\n @param delayedProtocolParams_ Initial Protocol Params"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 153302,
                    "name": "internalParams_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 153296,
                    "src": "795:15:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InternalParams_$78614_memory_ptr",
                      "typeString": "struct IVaultGovernance.InternalParams memory"
                    }
                  }
                ],
                "id": 153303,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 153301,
                  "name": "VaultGovernance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 158218,
                  "src": "779:15:471"
                },
                "nodeType": "ModifierInvocation",
                "src": "779:32:471"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 153300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153296,
                  "mutability": "mutable",
                  "name": "internalParams_",
                  "nameLocation": "701:15:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153343,
                  "src": "679:37:471",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InternalParams_$78614_memory_ptr",
                    "typeString": "struct IVaultGovernance.InternalParams"
                  },
                  "typeName": {
                    "id": 153295,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 153294,
                      "name": "InternalParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78614,
                      "src": "679:14:471"
                    },
                    "referencedDeclaration": 78614,
                    "src": "679:14:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InternalParams_$78614_storage_ptr",
                      "typeString": "struct IVaultGovernance.InternalParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153299,
                  "mutability": "mutable",
                  "name": "delayedProtocolParams_",
                  "nameLocation": "747:22:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153343,
                  "src": "718:51:471",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_memory_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams"
                  },
                  "typeName": {
                    "id": 153298,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 153297,
                      "name": "DelayedProtocolParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78076,
                      "src": "718:21:471"
                    },
                    "referencedDeclaration": 78076,
                    "src": "718:21:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "678:92:471"
            },
            "returnParameters": {
              "id": 153304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "816:0:471"
            },
            "scope": 153899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 153358,
            "nodeType": "FunctionDefinition",
            "src": "1226:232:471",
            "nodes": [],
            "body": {
              "id": 153357,
              "nodeType": "Block",
              "src": "1310:148:471",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 153352,
                        "name": "_delayedProtocolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157443,
                        "src": "1403:22:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 153353,
                            "name": "DelayedProtocolParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78076,
                            "src": "1428:21:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$78076_storage_ptr_$",
                              "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedProtocolParams storage pointer)"
                            }
                          }
                        ],
                        "id": 153354,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1427:23:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$78076_storage_ptr_$",
                          "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedProtocolParams storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$78076_storage_ptr_$",
                          "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedProtocolParams storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 153350,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1392:3:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 153351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1392:10:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 153355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1392:59:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_memory_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams memory"
                    }
                  },
                  "functionReturnParameters": 153349,
                  "id": 153356,
                  "nodeType": "Return",
                  "src": "1385:66:471"
                }
              ]
            },
            "baseFunctions": [
              78099
            ],
            "documentation": {
              "id": 153344,
              "nodeType": "StructuredDocumentation",
              "src": "1178:43:471",
              "text": "@inheritdoc IPancakeSwapVaultGovernance"
            },
            "functionSelector": "d34cc380",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delayedProtocolParams",
            "nameLocation": "1235:21:471",
            "parameters": {
              "id": 153345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1256:2:471"
            },
            "returnParameters": {
              "id": 153349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153348,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 153358,
                  "src": "1280:28:471",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_memory_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams"
                  },
                  "typeName": {
                    "id": 153347,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 153346,
                      "name": "DelayedProtocolParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78076,
                      "src": "1280:21:471"
                    },
                    "referencedDeclaration": 78076,
                    "src": "1280:21:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1279:30:471"
            },
            "scope": 153899,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 153394,
            "nodeType": "FunctionDefinition",
            "src": "1512:459:471",
            "nodes": [],
            "body": {
              "id": 153393,
              "nodeType": "Block",
              "src": "1604:367:471",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 153368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 153365,
                        "name": "_stagedDelayedProtocolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157445,
                        "src": "1618:28:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 153366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1618:35:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 153367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1657:1:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1618:40:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 153385,
                  "nodeType": "IfStatement",
                  "src": "1614:269:471",
                  "trueBody": {
                    "id": 153384,
                    "nodeType": "Block",
                    "src": "1660:223:471",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 153373,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1801:1:471",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 153372,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1793:7:471",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 153371,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1793:7:471",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 153374,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1793:10:471",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 153370,
                                "name": "IPancakeNonfungiblePositionManager",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69260,
                                "src": "1758:34:471",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPancakeNonfungiblePositionManager_$69260_$",
                                  "typeString": "type(contract IPancakeNonfungiblePositionManager)"
                                }
                              },
                              "id": 153375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1758:46:471",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPancakeNonfungiblePositionManager_$69260",
                                "typeString": "contract IPancakeNonfungiblePositionManager"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 153379,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1850:1:471",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 153378,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1842:7:471",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 153377,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1842:7:471",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 153380,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1842:10:471",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 153376,
                                "name": "IOracle",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75605,
                                "src": "1834:7:471",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IOracle_$75605_$",
                                  "typeString": "type(contract IOracle)"
                                }
                              },
                              "id": 153381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1834:19:471",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IOracle_$75605",
                                "typeString": "contract IOracle"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IPancakeNonfungiblePositionManager_$69260",
                                "typeString": "contract IPancakeNonfungiblePositionManager"
                              },
                              {
                                "typeIdentifier": "t_contract$_IOracle_$75605",
                                "typeString": "contract IOracle"
                              }
                            ],
                            "id": 153369,
                            "name": "DelayedProtocolParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78076,
                            "src": "1697:21:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$78076_storage_ptr_$",
                              "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedProtocolParams storage pointer)"
                            }
                          },
                          "id": 153382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "positionManager",
                            "oracle"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "1697:175:471",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_memory_ptr",
                            "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams memory"
                          }
                        },
                        "functionReturnParameters": 153364,
                        "id": 153383,
                        "nodeType": "Return",
                        "src": "1674:198:471"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 153388,
                        "name": "_stagedDelayedProtocolParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157445,
                        "src": "1910:28:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 153389,
                            "name": "DelayedProtocolParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78076,
                            "src": "1941:21:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$78076_storage_ptr_$",
                              "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedProtocolParams storage pointer)"
                            }
                          }
                        ],
                        "id": 153390,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1940:23:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$78076_storage_ptr_$",
                          "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedProtocolParams storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$78076_storage_ptr_$",
                          "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedProtocolParams storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 153386,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1899:3:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 153387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1899:10:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 153391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1899:65:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_memory_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams memory"
                    }
                  },
                  "functionReturnParameters": 153364,
                  "id": 153392,
                  "nodeType": "Return",
                  "src": "1892:72:471"
                }
              ]
            },
            "baseFunctions": [
              78106
            ],
            "documentation": {
              "id": 153359,
              "nodeType": "StructuredDocumentation",
              "src": "1464:43:471",
              "text": "@inheritdoc IPancakeSwapVaultGovernance"
            },
            "functionSelector": "c2cbdc67",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stagedDelayedProtocolParams",
            "nameLocation": "1521:27:471",
            "parameters": {
              "id": 153360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1548:2:471"
            },
            "returnParameters": {
              "id": 153364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153363,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 153394,
                  "src": "1574:28:471",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_memory_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams"
                  },
                  "typeName": {
                    "id": 153362,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 153361,
                      "name": "DelayedProtocolParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78076,
                      "src": "1574:21:471"
                    },
                    "referencedDeclaration": 78076,
                    "src": "1574:21:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1573:30:471"
            },
            "scope": 153899,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 153442,
            "nodeType": "FunctionDefinition",
            "src": "2025:545:471",
            "nodes": [],
            "body": {
              "id": 153441,
              "nodeType": "Block",
              "src": "2108:462:471",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 153408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 153403,
                          "name": "_strategyParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157451,
                          "src": "2122:15:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                            "typeString": "mapping(uint256 => bytes storage ref)"
                          }
                        },
                        "id": 153405,
                        "indexExpression": {
                          "id": 153404,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153397,
                          "src": "2138:3:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2122:20:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 153406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2122:27:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 153407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2153:1:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2122:32:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 153431,
                  "nodeType": "IfStatement",
                  "src": "2118:379:471",
                  "trueBody": {
                    "id": 153430,
                    "nodeType": "Block",
                    "src": "2156:341:471",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 153410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2245:1:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 153413,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2289:1:471",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 153412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2281:7:471",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 153411,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2281:7:471",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 153414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2281:10:471",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 153417,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2327:1:471",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 153416,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2319:7:471",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 153415,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2319:7:471",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 153418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2319:10:471",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 153421,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2376:1:471",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 153420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2368:7:471",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 153419,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2368:7:471",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 153422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2368:10:471",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 153425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2421:1:471",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 153424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2413:7:471",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 153423,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2413:7:471",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 153426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2413:10:471",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 153427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2466:1:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 153409,
                            "name": "StrategyParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78092,
                            "src": "2193:14:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_StrategyParams_$78092_storage_ptr_$",
                              "typeString": "type(struct IPancakeSwapVaultGovernance.StrategyParams storage pointer)"
                            }
                          },
                          "id": 153428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "swapSlippageD",
                            "poolForSwap",
                            "cake",
                            "underlyingToken",
                            "smartRouter",
                            "averageTickTimespan"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "2193:293:471",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StrategyParams_$78092_memory_ptr",
                            "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams memory"
                          }
                        },
                        "functionReturnParameters": 153402,
                        "id": 153429,
                        "nodeType": "Return",
                        "src": "2170:316:471"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 153434,
                          "name": "_strategyParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157451,
                          "src": "2524:15:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                            "typeString": "mapping(uint256 => bytes storage ref)"
                          }
                        },
                        "id": 153436,
                        "indexExpression": {
                          "id": 153435,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153397,
                          "src": "2540:3:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2524:20:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 153437,
                            "name": "StrategyParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78092,
                            "src": "2547:14:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_StrategyParams_$78092_storage_ptr_$",
                              "typeString": "type(struct IPancakeSwapVaultGovernance.StrategyParams storage pointer)"
                            }
                          }
                        ],
                        "id": 153438,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2546:16:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_StrategyParams_$78092_storage_ptr_$",
                          "typeString": "type(struct IPancakeSwapVaultGovernance.StrategyParams storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_StrategyParams_$78092_storage_ptr_$",
                          "typeString": "type(struct IPancakeSwapVaultGovernance.StrategyParams storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 153432,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2513:3:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 153433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2513:10:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 153439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2513:50:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$78092_memory_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams memory"
                    }
                  },
                  "functionReturnParameters": 153402,
                  "id": 153440,
                  "nodeType": "Return",
                  "src": "2506:57:471"
                }
              ]
            },
            "baseFunctions": [
              78126
            ],
            "documentation": {
              "id": 153395,
              "nodeType": "StructuredDocumentation",
              "src": "1977:43:471",
              "text": "@inheritdoc IPancakeSwapVaultGovernance"
            },
            "functionSelector": "12466b68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "strategyParams",
            "nameLocation": "2034:14:471",
            "parameters": {
              "id": 153398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153397,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "2057:3:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153442,
                  "src": "2049:11:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2049:7:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2048:13:471"
            },
            "returnParameters": {
              "id": 153402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153401,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 153442,
                  "src": "2085:21:471",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$78092_memory_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams"
                  },
                  "typeName": {
                    "id": 153400,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 153399,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78092,
                      "src": "2085:14:471"
                    },
                    "referencedDeclaration": 78092,
                    "src": "2085:14:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$78092_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2084:23:471"
            },
            "scope": 153899,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 153473,
            "nodeType": "FunctionDefinition",
            "src": "2624:333:471",
            "nodes": [],
            "body": {
              "id": 153472,
              "nodeType": "Block",
              "src": "2727:230:471",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 153456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 153451,
                          "name": "_stagedDelayedStrategyParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157425,
                          "src": "2741:28:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                            "typeString": "mapping(uint256 => bytes storage ref)"
                          }
                        },
                        "id": 153453,
                        "indexExpression": {
                          "id": 153452,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153445,
                          "src": "2770:3:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2741:33:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 153454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2741:40:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 153455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2785:1:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2741:45:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 153462,
                  "nodeType": "IfStatement",
                  "src": "2737:127:471",
                  "trueBody": {
                    "id": 153461,
                    "nodeType": "Block",
                    "src": "2788:76:471",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 153458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2850:1:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 153457,
                            "name": "DelayedStrategyParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78079,
                            "src": "2809:21:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$78079_storage_ptr_$",
                              "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedStrategyParams storage pointer)"
                            }
                          },
                          "id": 153459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "safetyIndicesSet"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "2809:44:471",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_memory_ptr",
                            "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams memory"
                          }
                        },
                        "functionReturnParameters": 153450,
                        "id": 153460,
                        "nodeType": "Return",
                        "src": "2802:51:471"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 153465,
                          "name": "_stagedDelayedStrategyParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157425,
                          "src": "2891:28:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                            "typeString": "mapping(uint256 => bytes storage ref)"
                          }
                        },
                        "id": 153467,
                        "indexExpression": {
                          "id": 153466,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153445,
                          "src": "2920:3:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2891:33:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 153468,
                            "name": "DelayedStrategyParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78079,
                            "src": "2927:21:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$78079_storage_ptr_$",
                              "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedStrategyParams storage pointer)"
                            }
                          }
                        ],
                        "id": 153469,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2926:23:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$78079_storage_ptr_$",
                          "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedStrategyParams storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$78079_storage_ptr_$",
                          "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedStrategyParams storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 153463,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2880:3:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 153464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2880:10:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 153470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2880:70:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_memory_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams memory"
                    }
                  },
                  "functionReturnParameters": 153450,
                  "id": 153471,
                  "nodeType": "Return",
                  "src": "2873:77:471"
                }
              ]
            },
            "baseFunctions": [
              78153
            ],
            "documentation": {
              "id": 153443,
              "nodeType": "StructuredDocumentation",
              "src": "2576:43:471",
              "text": "@inheritdoc IPancakeSwapVaultGovernance"
            },
            "functionSelector": "59f3dae7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stagedDelayedStrategyParams",
            "nameLocation": "2633:27:471",
            "parameters": {
              "id": 153446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153445,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "2669:3:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153473,
                  "src": "2661:11:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2661:7:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2660:13:471"
            },
            "returnParameters": {
              "id": 153450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153449,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 153473,
                  "src": "2697:28:471",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_memory_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams"
                  },
                  "typeName": {
                    "id": 153448,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 153447,
                      "name": "DelayedStrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78079,
                      "src": "2697:21:471"
                    },
                    "referencedDeclaration": 78079,
                    "src": "2697:21:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2696:30:471"
            },
            "scope": 153899,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 153504,
            "nodeType": "FunctionDefinition",
            "src": "3011:318:471",
            "nodes": [],
            "body": {
              "id": 153503,
              "nodeType": "Block",
              "src": "3108:221:471",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 153487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 153482,
                          "name": "_delayedStrategyParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157421,
                          "src": "3122:22:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                            "typeString": "mapping(uint256 => bytes storage ref)"
                          }
                        },
                        "id": 153484,
                        "indexExpression": {
                          "id": 153483,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153476,
                          "src": "3145:3:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3122:27:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 153485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3122:34:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 153486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3160:1:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3122:39:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 153493,
                  "nodeType": "IfStatement",
                  "src": "3118:124:471",
                  "trueBody": {
                    "id": 153492,
                    "nodeType": "Block",
                    "src": "3163:79:471",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30783241",
                              "id": 153489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3225:4:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_42_by_1",
                                "typeString": "int_const 42"
                              },
                              "value": "0x2A"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_42_by_1",
                                "typeString": "int_const 42"
                              }
                            ],
                            "id": 153488,
                            "name": "DelayedStrategyParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78079,
                            "src": "3184:21:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$78079_storage_ptr_$",
                              "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedStrategyParams storage pointer)"
                            }
                          },
                          "id": 153490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "safetyIndicesSet"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "3184:47:471",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_memory_ptr",
                            "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams memory"
                          }
                        },
                        "functionReturnParameters": 153481,
                        "id": 153491,
                        "nodeType": "Return",
                        "src": "3177:54:471"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 153496,
                          "name": "_delayedStrategyParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157421,
                          "src": "3269:22:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                            "typeString": "mapping(uint256 => bytes storage ref)"
                          }
                        },
                        "id": 153498,
                        "indexExpression": {
                          "id": 153497,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153476,
                          "src": "3292:3:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3269:27:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 153499,
                            "name": "DelayedStrategyParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78079,
                            "src": "3299:21:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$78079_storage_ptr_$",
                              "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedStrategyParams storage pointer)"
                            }
                          }
                        ],
                        "id": 153500,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3298:23:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$78079_storage_ptr_$",
                          "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedStrategyParams storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$78079_storage_ptr_$",
                          "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedStrategyParams storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 153494,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3258:3:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 153495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3258:10:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 153501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3258:64:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_memory_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams memory"
                    }
                  },
                  "functionReturnParameters": 153481,
                  "id": 153502,
                  "nodeType": "Return",
                  "src": "3251:71:471"
                }
              ]
            },
            "baseFunctions": [
              78144
            ],
            "documentation": {
              "id": 153474,
              "nodeType": "StructuredDocumentation",
              "src": "2963:43:471",
              "text": "@inheritdoc IPancakeSwapVaultGovernance"
            },
            "functionSelector": "8860d248",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delayedStrategyParams",
            "nameLocation": "3020:21:471",
            "parameters": {
              "id": 153477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153476,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "3050:3:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153504,
                  "src": "3042:11:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153475,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3042:7:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3041:13:471"
            },
            "returnParameters": {
              "id": 153481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153480,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 153504,
                  "src": "3078:28:471",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_memory_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams"
                  },
                  "typeName": {
                    "id": 153479,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 153478,
                      "name": "DelayedStrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78079,
                      "src": "3078:21:471"
                    },
                    "referencedDeclaration": 78079,
                    "src": "3078:21:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3077:30:471"
            },
            "scope": 153899,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 153526,
            "nodeType": "FunctionDefinition",
            "src": "3363:215:471",
            "nodes": [],
            "body": {
              "id": 153525,
              "nodeType": "Block",
              "src": "3454:124:471",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 153523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 153515,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153507,
                          "src": "3495:11:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 153513,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "3471:5:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_PancakeSwapVaultGovernance_$153899_$",
                            "typeString": "type(contract super PancakeSwapVaultGovernance)"
                          }
                        },
                        "id": 153514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 157598,
                        "src": "3471:23:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 153516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3471:36:471",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 153522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 153518,
                              "name": "IPancakeSwapVaultGovernance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78191,
                              "src": "3516:27:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPancakeSwapVaultGovernance_$78191_$",
                                "typeString": "type(contract IPancakeSwapVaultGovernance)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IPancakeSwapVaultGovernance_$78191_$",
                                "typeString": "type(contract IPancakeSwapVaultGovernance)"
                              }
                            ],
                            "id": 153517,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "3511:4:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 153519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3511:33:471",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IPancakeSwapVaultGovernance_$78191",
                            "typeString": "type(contract IPancakeSwapVaultGovernance)"
                          }
                        },
                        "id": 153520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "3511:45:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 153521,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153507,
                        "src": "3560:11:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "3511:60:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3471:100:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 153512,
                  "id": 153524,
                  "nodeType": "Return",
                  "src": "3464:107:471"
                }
              ]
            },
            "baseFunctions": [
              157598
            ],
            "documentation": {
              "id": 153505,
              "nodeType": "StructuredDocumentation",
              "src": "3335:23:471",
              "text": "@inheritdoc IERC165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3372:17:471",
            "overrides": {
              "id": 153509,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3430:8:471"
            },
            "parameters": {
              "id": 153508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153507,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3397:11:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153526,
                  "src": "3390:18:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 153506,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3390:6:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3389:20:471"
            },
            "returnParameters": {
              "id": 153512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153511,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 153526,
                  "src": "3448:4:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 153510,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3448:4:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3447:6:471"
            },
            "scope": 153899,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 153607,
            "nodeType": "FunctionDefinition",
            "src": "3701:644:471",
            "nodes": [],
            "body": {
              "id": 153606,
              "nodeType": "Block",
              "src": "3782:563:471",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 153539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 153536,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153532,
                            "src": "3800:6:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyParams_$78092_calldata_ptr",
                              "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams calldata"
                            }
                          },
                          "id": 153537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "swapSlippageD",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78081,
                          "src": "3800:20:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "316539",
                          "id": 153538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3824:3:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000_by_1",
                            "typeString": "int_const 1000000000"
                          },
                          "value": "1e9"
                        },
                        "src": "3800:27:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 153540,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "3829:17:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 153541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LIMIT_OVERFLOW",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79420,
                        "src": "3829:32:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 153535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3792:7:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 153542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3792:70:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153543,
                  "nodeType": "ExpressionStatement",
                  "src": "3792:70:471"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 153548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 153545,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153532,
                            "src": "3880:6:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyParams_$78092_calldata_ptr",
                              "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams calldata"
                            }
                          },
                          "id": 153546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "averageTickTimespan",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78091,
                          "src": "3880:26:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 153547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3909:1:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3880:30:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 153549,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "3912:17:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 153550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LIMIT_UNDERFLOW",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79423,
                        "src": "3912:33:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 153544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3872:7:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 153551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3872:74:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153552,
                  "nodeType": "ExpressionStatement",
                  "src": "3872:74:471"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 153584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 153576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 153568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 153560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 153554,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 153532,
                                  "src": "3977:6:471",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StrategyParams_$78092_calldata_ptr",
                                    "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams calldata"
                                  }
                                },
                                "id": 153555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "poolForSwap",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 78083,
                                "src": "3977:18:471",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 153558,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4007:1:471",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 153557,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3999:7:471",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 153556,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3999:7:471",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 153559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3999:10:471",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3977:32:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 153567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 153561,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 153532,
                                  "src": "4029:6:471",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StrategyParams_$78092_calldata_ptr",
                                    "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams calldata"
                                  }
                                },
                                "id": 153562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "cake",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 78085,
                                "src": "4029:11:471",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 153565,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4052:1:471",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 153564,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4044:7:471",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 153563,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4044:7:471",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 153566,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4044:10:471",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4029:25:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3977:77:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 153575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 153569,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153532,
                                "src": "4074:6:471",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StrategyParams_$78092_calldata_ptr",
                                  "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams calldata"
                                }
                              },
                              "id": 153570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "underlyingToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 78087,
                              "src": "4074:22:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 153573,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4108:1:471",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 153572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4100:7:471",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 153571,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4100:7:471",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 153574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4100:10:471",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4074:36:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3977:133:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 153583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 153577,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153532,
                              "src": "4130:6:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StrategyParams_$78092_calldata_ptr",
                                "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams calldata"
                              }
                            },
                            "id": 153578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "smartRouter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78089,
                            "src": "4130:18:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 153581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4160:1:471",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 153580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4152:7:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 153579,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4152:7:471",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 153582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4152:10:471",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4130:32:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3977:185:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 153585,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "4176:17:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 153586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ADDRESS_ZERO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79390,
                        "src": "4176:30:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 153553,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3956:7:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 153587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3956:260:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153588,
                  "nodeType": "ExpressionStatement",
                  "src": "3956:260:471"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 153590,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153529,
                        "src": "4246:3:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 153593,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153532,
                            "src": "4262:6:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyParams_$78092_calldata_ptr",
                              "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_StrategyParams_$78092_calldata_ptr",
                              "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams calldata"
                            }
                          ],
                          "expression": {
                            "id": 153591,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4251:3:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 153592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "4251:10:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 153594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4251:18:471",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 153589,
                      "name": "_setStrategyParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158149,
                      "src": "4227:18:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 153595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4227:43:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153596,
                  "nodeType": "ExpressionStatement",
                  "src": "4227:43:471"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 153598,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "4303:2:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 153599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "4303:9:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 153600,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4314:3:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 153601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4314:10:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 153602,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153529,
                        "src": "4326:3:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 153603,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153532,
                        "src": "4331:6:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StrategyParams_$78092_calldata_ptr",
                          "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_StrategyParams_$78092_calldata_ptr",
                          "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams calldata"
                        }
                      ],
                      "id": 153597,
                      "name": "SetStrategyParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153898,
                      "src": "4285:17:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_StrategyParams_$78092_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct IPancakeSwapVaultGovernance.StrategyParams memory)"
                      }
                    },
                    "id": 153604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4285:53:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153605,
                  "nodeType": "EmitStatement",
                  "src": "4280:58:471"
                }
              ]
            },
            "baseFunctions": [
              78135
            ],
            "documentation": {
              "id": 153527,
              "nodeType": "StructuredDocumentation",
              "src": "3653:43:471",
              "text": "@inheritdoc IPancakeSwapVaultGovernance"
            },
            "functionSelector": "b0e6ba34",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategyParams",
            "nameLocation": "3710:17:471",
            "parameters": {
              "id": 153533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153529,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "3736:3:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153607,
                  "src": "3728:11:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153528,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3728:7:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153532,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "3765:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153607,
                  "src": "3741:30:471",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$78092_calldata_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams"
                  },
                  "typeName": {
                    "id": 153531,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 153530,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78092,
                      "src": "3741:14:471"
                    },
                    "referencedDeclaration": 78092,
                    "src": "3741:14:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$78092_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3727:45:471"
            },
            "returnParameters": {
              "id": 153534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3782:0:471"
            },
            "scope": 153899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 153661,
            "nodeType": "FunctionDefinition",
            "src": "4399:436:471",
            "nodes": [],
            "body": {
              "id": 153660,
              "nodeType": "Block",
              "src": "4483:352:471",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 153624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 153617,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153611,
                                "src": "4509:6:471",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_calldata_ptr",
                                  "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams calldata"
                                }
                              },
                              "id": 153618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "positionManager",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 78072,
                              "src": "4509:22:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPancakeNonfungiblePositionManager_$69260",
                                "typeString": "contract IPancakeNonfungiblePositionManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IPancakeNonfungiblePositionManager_$69260",
                                "typeString": "contract IPancakeNonfungiblePositionManager"
                              }
                            ],
                            "id": 153616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4501:7:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 153615,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4501:7:471",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 153619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4501:31:471",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 153622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4544:1:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 153621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4536:7:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 153620,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4536:7:471",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 153623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4536:10:471",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4501:45:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 153625,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "4548:17:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 153626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ADDRESS_ZERO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79390,
                        "src": "4548:30:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 153614,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4493:7:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 153627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4493:86:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153628,
                  "nodeType": "ExpressionStatement",
                  "src": "4493:86:471"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 153639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 153632,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 153611,
                                "src": "4605:6:471",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_calldata_ptr",
                                  "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams calldata"
                                }
                              },
                              "id": 153633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oracle",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 78075,
                              "src": "4605:13:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IOracle_$75605",
                                "typeString": "contract IOracle"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IOracle_$75605",
                                "typeString": "contract IOracle"
                              }
                            ],
                            "id": 153631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4597:7:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 153630,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4597:7:471",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 153634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4597:22:471",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 153637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4631:1:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 153636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4623:7:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 153635,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4623:7:471",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 153638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4623:10:471",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4597:36:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 153640,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "4635:17:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 153641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ADDRESS_ZERO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79390,
                        "src": "4635:30:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 153629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4589:7:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 153642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4589:77:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153643,
                  "nodeType": "ExpressionStatement",
                  "src": "4589:77:471"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 153647,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153611,
                            "src": "4715:6:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_calldata_ptr",
                              "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_calldata_ptr",
                              "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams calldata"
                            }
                          ],
                          "expression": {
                            "id": 153645,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4704:3:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 153646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "4704:10:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 153648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4704:18:471",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 153644,
                      "name": "_stageDelayedProtocolParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158095,
                      "src": "4676:27:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 153649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4676:47:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153650,
                  "nodeType": "ExpressionStatement",
                  "src": "4676:47:471"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 153652,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "4765:2:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 153653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "4765:9:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 153654,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4776:3:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 153655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4776:10:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 153656,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153611,
                        "src": "4788:6:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_calldata_ptr",
                          "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams calldata"
                        }
                      },
                      {
                        "id": 153657,
                        "name": "_delayedProtocolParamsTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157447,
                        "src": "4796:31:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_calldata_ptr",
                          "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 153651,
                      "name": "StageDelayedProtocolParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153850,
                      "src": "4738:26:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_struct$_DelayedProtocolParams_$78076_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,struct IPancakeSwapVaultGovernance.DelayedProtocolParams memory,uint256)"
                      }
                    },
                    "id": 153658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4738:90:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153659,
                  "nodeType": "EmitStatement",
                  "src": "4733:95:471"
                }
              ]
            },
            "baseFunctions": [
              78113
            ],
            "documentation": {
              "id": 153608,
              "nodeType": "StructuredDocumentation",
              "src": "4351:43:471",
              "text": "@inheritdoc IPancakeSwapVaultGovernance"
            },
            "functionSelector": "b2fe31ad",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stageDelayedProtocolParams",
            "nameLocation": "4408:26:471",
            "parameters": {
              "id": 153612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153611,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "4466:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153661,
                  "src": "4435:37:471",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_calldata_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams"
                  },
                  "typeName": {
                    "id": 153610,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 153609,
                      "name": "DelayedProtocolParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78076,
                      "src": "4435:21:471"
                    },
                    "referencedDeclaration": 78076,
                    "src": "4435:21:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4434:39:471"
            },
            "returnParameters": {
              "id": 153613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4483:0:471"
            },
            "scope": 153899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 153682,
            "nodeType": "FunctionDefinition",
            "src": "4889:267:471",
            "nodes": [],
            "body": {
              "id": 153681,
              "nodeType": "Block",
              "src": "4937:219:471",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 153665,
                      "name": "_commitDelayedProtocolParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158130,
                      "src": "4947:28:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 153666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4947:30:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153667,
                  "nodeType": "ExpressionStatement",
                  "src": "4947:30:471"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 153669,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "5033:2:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 153670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "5033:9:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 153671,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5056:3:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 153672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5056:10:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 153675,
                            "name": "_delayedProtocolParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157443,
                            "src": "5091:22:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 153676,
                                "name": "DelayedProtocolParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78076,
                                "src": "5116:21:471",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$78076_storage_ptr_$",
                                  "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedProtocolParams storage pointer)"
                                }
                              }
                            ],
                            "id": 153677,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5115:23:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$78076_storage_ptr_$",
                              "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedProtocolParams storage pointer)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            },
                            {
                              "typeIdentifier": "t_type$_t_struct$_DelayedProtocolParams_$78076_storage_ptr_$",
                              "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedProtocolParams storage pointer)"
                            }
                          ],
                          "expression": {
                            "id": 153673,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5080:3:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 153674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "5080:10:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 153678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5080:59:471",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_memory_ptr",
                          "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_memory_ptr",
                          "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams memory"
                        }
                      ],
                      "id": 153668,
                      "name": "CommitDelayedProtocolParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153860,
                      "src": "4992:27:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_struct$_DelayedProtocolParams_$78076_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,struct IPancakeSwapVaultGovernance.DelayedProtocolParams memory)"
                      }
                    },
                    "id": 153679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4992:157:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153680,
                  "nodeType": "EmitStatement",
                  "src": "4987:162:471"
                }
              ]
            },
            "baseFunctions": [
              78117
            ],
            "documentation": {
              "id": 153662,
              "nodeType": "StructuredDocumentation",
              "src": "4841:43:471",
              "text": "@inheritdoc IPancakeSwapVaultGovernance"
            },
            "functionSelector": "98347a5d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "commitDelayedProtocolParams",
            "nameLocation": "4898:27:471",
            "parameters": {
              "id": 153663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4925:2:471"
            },
            "returnParameters": {
              "id": 153664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4937:0:471"
            },
            "scope": 153899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 153721,
            "nodeType": "FunctionDefinition",
            "src": "5210:362:471",
            "nodes": [],
            "body": {
              "id": 153720,
              "nodeType": "Block",
              "src": "5307:265:471",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 153695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 153692,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153688,
                            "src": "5325:6:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_calldata_ptr",
                              "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams calldata"
                            }
                          },
                          "id": 153693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "safetyIndicesSet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78078,
                          "src": "5325:23:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 153694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5351:1:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5325:27:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 153696,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "5354:17:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 153697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LIMIT_UNDERFLOW",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79423,
                        "src": "5354:33:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 153691,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5317:7:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 153698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5317:71:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153699,
                  "nodeType": "ExpressionStatement",
                  "src": "5317:71:471"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 153701,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153685,
                        "src": "5426:3:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 153704,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153688,
                            "src": "5442:6:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_calldata_ptr",
                              "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_calldata_ptr",
                              "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams calldata"
                            }
                          ],
                          "expression": {
                            "id": 153702,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5431:3:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 153703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5431:10:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 153705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5431:18:471",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 153700,
                      "name": "_stageDelayedStrategyParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157912,
                      "src": "5398:27:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 153706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5398:52:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153707,
                  "nodeType": "ExpressionStatement",
                  "src": "5398:52:471"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 153709,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "5492:2:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 153710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "5492:9:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 153711,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5503:3:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 153712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5503:10:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 153713,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153685,
                        "src": "5515:3:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 153714,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153688,
                        "src": "5520:6:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_calldata_ptr",
                          "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams calldata"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 153715,
                          "name": "_delayedStrategyParamsTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157429,
                          "src": "5528:31:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 153717,
                        "indexExpression": {
                          "id": 153716,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153685,
                          "src": "5560:3:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5528:36:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_calldata_ptr",
                          "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 153708,
                      "name": "StageDelayedStrategyParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153874,
                      "src": "5465:26:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_DelayedStrategyParams_$78079_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,struct IPancakeSwapVaultGovernance.DelayedStrategyParams memory,uint256)"
                      }
                    },
                    "id": 153718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5465:100:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153719,
                  "nodeType": "EmitStatement",
                  "src": "5460:105:471"
                }
              ]
            },
            "baseFunctions": [
              78162
            ],
            "documentation": {
              "id": 153683,
              "nodeType": "StructuredDocumentation",
              "src": "5162:43:471",
              "text": "@inheritdoc IPancakeSwapVaultGovernance"
            },
            "functionSelector": "25281714",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stageDelayedStrategyParams",
            "nameLocation": "5219:26:471",
            "parameters": {
              "id": 153689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153685,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "5254:3:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153721,
                  "src": "5246:11:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5246:7:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153688,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "5290:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153721,
                  "src": "5259:37:471",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_calldata_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams"
                  },
                  "typeName": {
                    "id": 153687,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 153686,
                      "name": "DelayedStrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78079,
                      "src": "5259:21:471"
                    },
                    "referencedDeclaration": 78079,
                    "src": "5259:21:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5245:52:471"
            },
            "returnParameters": {
              "id": 153690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5307:0:471"
            },
            "scope": 153899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 153748,
            "nodeType": "FunctionDefinition",
            "src": "5626:303:471",
            "nodes": [],
            "body": {
              "id": 153747,
              "nodeType": "Block",
              "src": "5685:244:471",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 153728,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153724,
                        "src": "5724:3:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 153727,
                      "name": "_commitDelayedStrategyParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157964,
                      "src": "5695:28:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 153729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5695:33:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153730,
                  "nodeType": "ExpressionStatement",
                  "src": "5695:33:471"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 153732,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "5784:2:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 153733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "5784:9:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 153734,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5807:3:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 153735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5807:10:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 153736,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153724,
                        "src": "5831:3:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 153739,
                              "name": "_delayedStrategyParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 157421,
                              "src": "5859:22:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                                "typeString": "mapping(uint256 => bytes storage ref)"
                              }
                            },
                            "id": 153741,
                            "indexExpression": {
                              "id": 153740,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153724,
                              "src": "5882:3:471",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5859:27:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 153742,
                                "name": "DelayedStrategyParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78079,
                                "src": "5889:21:471",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$78079_storage_ptr_$",
                                  "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedStrategyParams storage pointer)"
                                }
                              }
                            ],
                            "id": 153743,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5888:23:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$78079_storage_ptr_$",
                              "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedStrategyParams storage pointer)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            },
                            {
                              "typeIdentifier": "t_type$_t_struct$_DelayedStrategyParams_$78079_storage_ptr_$",
                              "typeString": "type(struct IPancakeSwapVaultGovernance.DelayedStrategyParams storage pointer)"
                            }
                          ],
                          "expression": {
                            "id": 153737,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5848:3:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 153738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "5848:10:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 153744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5848:64:471",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_memory_ptr",
                          "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_memory_ptr",
                          "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams memory"
                        }
                      ],
                      "id": 153731,
                      "name": "CommitDelayedStrategyParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153886,
                      "src": "5743:27:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_DelayedStrategyParams_$78079_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct IPancakeSwapVaultGovernance.DelayedStrategyParams memory)"
                      }
                    },
                    "id": 153745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5743:179:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153746,
                  "nodeType": "EmitStatement",
                  "src": "5738:184:471"
                }
              ]
            },
            "baseFunctions": [
              78168
            ],
            "documentation": {
              "id": 153722,
              "nodeType": "StructuredDocumentation",
              "src": "5578:43:471",
              "text": "@inheritdoc IPancakeSwapVaultGovernance"
            },
            "functionSelector": "0bdedd56",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "commitDelayedStrategyParams",
            "nameLocation": "5635:27:471",
            "parameters": {
              "id": 153725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153724,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "5671:3:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153748,
                  "src": "5663:11:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5663:7:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5662:13:471"
            },
            "returnParameters": {
              "id": 153726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5685:0:471"
            },
            "scope": 153899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 153814,
            "nodeType": "FunctionDefinition",
            "src": "5983:556:471",
            "nodes": [],
            "body": {
              "id": 153813,
              "nodeType": "Block",
              "src": "6233:306:471",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    153771
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 153771,
                      "mutability": "mutable",
                      "name": "vaddr",
                      "nameLocation": "6251:5:471",
                      "nodeType": "VariableDeclaration",
                      "scope": 153813,
                      "src": "6243:13:471",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 153770,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6243:7:471",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 153772,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6243:13:471"
                },
                {
                  "expression": {
                    "id": 153779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 153773,
                          "name": "vaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153771,
                          "src": "6267:5:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 153774,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153768,
                          "src": "6274:3:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 153775,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "6266:12:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 153777,
                          "name": "owner_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153754,
                          "src": "6294:6:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 153776,
                        "name": "_createVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157867,
                        "src": "6281:12:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$_t_uint256_$",
                          "typeString": "function (address) returns (address,uint256)"
                        }
                      },
                      "id": 153778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6281:20:471",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "src": "6266:35:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153780,
                  "nodeType": "ExpressionStatement",
                  "src": "6266:35:471"
                },
                {
                  "expression": {
                    "id": 153785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 153781,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153766,
                      "src": "6311:5:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPancakeSwapVault_$78061",
                        "typeString": "contract IPancakeSwapVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 153783,
                          "name": "vaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 153771,
                          "src": "6337:5:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 153782,
                        "name": "IPancakeSwapVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78061,
                        "src": "6319:17:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPancakeSwapVault_$78061_$",
                          "typeString": "type(contract IPancakeSwapVault)"
                        }
                      },
                      "id": 153784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6319:24:471",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPancakeSwapVault_$78061",
                        "typeString": "contract IPancakeSwapVault"
                      }
                    },
                    "src": "6311:32:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPancakeSwapVault_$78061",
                      "typeString": "contract IPancakeSwapVault"
                    }
                  },
                  "id": 153786,
                  "nodeType": "ExpressionStatement",
                  "src": "6311:32:471"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 153790,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153768,
                        "src": "6370:3:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 153791,
                        "name": "vaultTokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153752,
                        "src": "6375:12:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 153792,
                        "name": "fee_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153756,
                        "src": "6389:4:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 153793,
                        "name": "helper_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153758,
                        "src": "6395:7:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 153794,
                        "name": "masterChef_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153760,
                        "src": "6404:11:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 153795,
                        "name": "erc20Vault_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153762,
                        "src": "6417:11:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 153787,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153766,
                        "src": "6353:5:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPancakeSwapVault_$78061",
                          "typeString": "contract IPancakeSwapVault"
                        }
                      },
                      "id": 153789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78048,
                      "src": "6353:16:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint24_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address[] memory,uint24,address,address,address) external"
                      }
                    },
                    "id": 153796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6353:76:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153797,
                  "nodeType": "ExpressionStatement",
                  "src": "6353:76:471"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 153799,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "6458:2:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 153800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "6458:9:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 153801,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6469:3:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 153802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6469:10:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 153803,
                        "name": "vaultTokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153752,
                        "src": "6481:12:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 153806,
                            "name": "fee_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 153756,
                            "src": "6506:4:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          ],
                          "expression": {
                            "id": 153804,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6495:3:471",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 153805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6495:10:471",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 153807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6495:16:471",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 153808,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153754,
                        "src": "6513:6:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 153809,
                        "name": "vaddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153771,
                        "src": "6521:5:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 153810,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153768,
                        "src": "6528:3:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 153798,
                      "name": "DeployedVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158217,
                      "src": "6444:13:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address[] memory,bytes memory,address,address,uint256)"
                      }
                    },
                    "id": 153811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6444:88:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 153812,
                  "nodeType": "EmitStatement",
                  "src": "6439:93:471"
                }
              ]
            },
            "baseFunctions": [
              78190
            ],
            "documentation": {
              "id": 153749,
              "nodeType": "StructuredDocumentation",
              "src": "5935:43:471",
              "text": "@inheritdoc IPancakeSwapVaultGovernance"
            },
            "functionSelector": "ae12783f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createVault",
            "nameLocation": "5992:11:471",
            "parameters": {
              "id": 153763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153752,
                  "mutability": "mutable",
                  "name": "vaultTokens_",
                  "nameLocation": "6030:12:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153814,
                  "src": "6013:29:471",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 153750,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6013:7:471",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 153751,
                    "nodeType": "ArrayTypeName",
                    "src": "6013:9:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153754,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "6060:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153814,
                  "src": "6052:14:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6052:7:471",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153756,
                  "mutability": "mutable",
                  "name": "fee_",
                  "nameLocation": "6083:4:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153814,
                  "src": "6076:11:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 153755,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "6076:6:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153758,
                  "mutability": "mutable",
                  "name": "helper_",
                  "nameLocation": "6105:7:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153814,
                  "src": "6097:15:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6097:7:471",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153760,
                  "mutability": "mutable",
                  "name": "masterChef_",
                  "nameLocation": "6130:11:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153814,
                  "src": "6122:19:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6122:7:471",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153762,
                  "mutability": "mutable",
                  "name": "erc20Vault_",
                  "nameLocation": "6159:11:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153814,
                  "src": "6151:19:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6151:7:471",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6003:173:471"
            },
            "returnParameters": {
              "id": 153769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153766,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "6213:5:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153814,
                  "src": "6195:23:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPancakeSwapVault_$78061",
                    "typeString": "contract IPancakeSwapVault"
                  },
                  "typeName": {
                    "id": 153765,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 153764,
                      "name": "IPancakeSwapVault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78061,
                      "src": "6195:17:471"
                    },
                    "referencedDeclaration": 78061,
                    "src": "6195:17:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPancakeSwapVault_$78061",
                      "typeString": "contract IPancakeSwapVault"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153768,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "6228:3:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153814,
                  "src": "6220:11:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6220:7:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6194:38:471"
            },
            "scope": 153899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 153826,
            "nodeType": "FunctionDefinition",
            "src": "6610:127:471",
            "nodes": [],
            "body": {
              "id": 153825,
              "nodeType": "Block",
              "src": "6676:61:471",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "50616e63616b65537761705661756c74476f7665726e616e6365",
                        "id": 153822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6701:28:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e110c1a5a8ad4131e189da0ecd73ded9c4479cd261d3c47106c360d6548be22",
                          "typeString": "literal_string \"PancakeSwapVaultGovernance\""
                        },
                        "value": "PancakeSwapVaultGovernance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8e110c1a5a8ad4131e189da0ecd73ded9c4479cd261d3c47106c360d6548be22",
                          "typeString": "literal_string \"PancakeSwapVaultGovernance\""
                        }
                      ],
                      "id": 153821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6693:7:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 153820,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6693:7:471",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 153823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6693:37:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 153819,
                  "id": 153824,
                  "nodeType": "Return",
                  "src": "6686:44:471"
                }
              ]
            },
            "baseFunctions": [
              114934
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_contractName",
            "nameLocation": "6619:13:471",
            "overrides": {
              "id": 153816,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6649:8:471"
            },
            "parameters": {
              "id": 153815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6632:2:471"
            },
            "returnParameters": {
              "id": 153819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153818,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 153826,
                  "src": "6667:7:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 153817,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6667:7:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6666:9:471"
            },
            "scope": 153899,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 153838,
            "nodeType": "FunctionDefinition",
            "src": "6743:109:471",
            "nodes": [],
            "body": {
              "id": 153837,
              "nodeType": "Block",
              "src": "6812:40:471",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "312e302e30",
                        "id": 153834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6837:7:471",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                          "typeString": "literal_string \"1.0.0\""
                        },
                        "value": "1.0.0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                          "typeString": "literal_string \"1.0.0\""
                        }
                      ],
                      "id": 153833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6829:7:471",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 153832,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6829:7:471",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 153835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6829:16:471",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 153831,
                  "id": 153836,
                  "nodeType": "Return",
                  "src": "6822:23:471"
                }
              ]
            },
            "baseFunctions": [
              114939
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_contractVersion",
            "nameLocation": "6752:16:471",
            "overrides": {
              "id": 153828,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6785:8:471"
            },
            "parameters": {
              "id": 153827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6768:2:471"
            },
            "returnParameters": {
              "id": 153831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153830,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 153838,
                  "src": "6803:7:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 153829,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6803:7:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6802:9:471"
            },
            "scope": 153899,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 153850,
            "nodeType": "EventDefinition",
            "src": "7236:163:471",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 153839,
              "nodeType": "StructuredDocumentation",
              "src": "6929:302:471",
              "text": "@notice Emitted when new DelayedProtocolParams are staged for commit\n @param origin Origin of the transaction (tx.origin)\n @param sender Sender of the call (msg.sender)\n @param params New params that were staged for commit\n @param when When the params could be committed"
            },
            "name": "StageDelayedProtocolParams",
            "nameLocation": "7242:26:471",
            "parameters": {
              "id": 153849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153841,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "origin",
                  "nameLocation": "7294:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153850,
                  "src": "7278:22:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7278:7:471",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153843,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7326:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153850,
                  "src": "7310:22:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7310:7:471",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153846,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "7364:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153850,
                  "src": "7342:28:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_memory_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams"
                  },
                  "typeName": {
                    "id": 153845,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 153844,
                      "name": "DelayedProtocolParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78076,
                      "src": "7342:21:471"
                    },
                    "referencedDeclaration": 78076,
                    "src": "7342:21:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153848,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "when",
                  "nameLocation": "7388:4:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153850,
                  "src": "7380:12:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7380:7:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7268:130:471"
            }
          },
          {
            "id": 153860,
            "nodeType": "EventDefinition",
            "src": "7639:112:471",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 153851,
              "nodeType": "StructuredDocumentation",
              "src": "7404:230:471",
              "text": "@notice Emitted when new DelayedProtocolParams are committed\n @param origin Origin of the transaction (tx.origin)\n @param sender Sender of the call (msg.sender)\n @param params New params that are committed"
            },
            "name": "CommitDelayedProtocolParams",
            "nameLocation": "7645:27:471",
            "parameters": {
              "id": 153859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153853,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "origin",
                  "nameLocation": "7689:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153860,
                  "src": "7673:22:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7673:7:471",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153855,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7713:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153860,
                  "src": "7697:22:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7697:7:471",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153858,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "7743:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153860,
                  "src": "7721:28:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_memory_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams"
                  },
                  "typeName": {
                    "id": 153857,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 153856,
                      "name": "DelayedProtocolParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78076,
                      "src": "7721:21:471"
                    },
                    "referencedDeclaration": 78076,
                    "src": "7721:21:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedProtocolParams_$78076_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedProtocolParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7672:78:471"
            }
          },
          {
            "id": 153874,
            "nodeType": "EventDefinition",
            "src": "8114:192:471",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 153861,
              "nodeType": "StructuredDocumentation",
              "src": "7757:352:471",
              "text": "@notice Emitted when new DelayedStrategyParams are staged for commit\n @param origin Origin of the transaction (tx.origin)\n @param sender Sender of the call (msg.sender)\n @param nft VaultRegistry NFT of the vault\n @param params New params that were staged for commit\n @param when When the params could be committed"
            },
            "name": "StageDelayedStrategyParams",
            "nameLocation": "8120:26:471",
            "parameters": {
              "id": 153873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153863,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "origin",
                  "nameLocation": "8172:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153874,
                  "src": "8156:22:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8156:7:471",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153865,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "8204:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153874,
                  "src": "8188:22:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8188:7:471",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153867,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "8236:3:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153874,
                  "src": "8220:19:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8220:7:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153870,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "8271:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153874,
                  "src": "8249:28:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_memory_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams"
                  },
                  "typeName": {
                    "id": 153869,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 153868,
                      "name": "DelayedStrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78079,
                      "src": "8249:21:471"
                    },
                    "referencedDeclaration": 78079,
                    "src": "8249:21:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153872,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "when",
                  "nameLocation": "8295:4:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153874,
                  "src": "8287:12:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8287:7:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8146:159:471"
            }
          },
          {
            "id": 153886,
            "nodeType": "EventDefinition",
            "src": "8597:171:471",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 153875,
              "nodeType": "StructuredDocumentation",
              "src": "8312:280:471",
              "text": "@notice Emitted when new DelayedStrategyParams are committed\n @param origin Origin of the transaction (tx.origin)\n @param sender Sender of the call (msg.sender)\n @param nft VaultRegistry NFT of the vault\n @param params New params that are committed"
            },
            "name": "CommitDelayedStrategyParams",
            "nameLocation": "8603:27:471",
            "parameters": {
              "id": 153885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153877,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "origin",
                  "nameLocation": "8656:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153886,
                  "src": "8640:22:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153876,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8640:7:471",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153879,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "8688:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153886,
                  "src": "8672:22:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8672:7:471",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153881,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "8720:3:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153886,
                  "src": "8704:19:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153880,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8704:7:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153884,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "8755:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153886,
                  "src": "8733:28:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_memory_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams"
                  },
                  "typeName": {
                    "id": 153883,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 153882,
                      "name": "DelayedStrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78079,
                      "src": "8733:21:471"
                    },
                    "referencedDeclaration": 78079,
                    "src": "8733:21:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DelayedStrategyParams_$78079_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.DelayedStrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8630:137:471"
            }
          },
          {
            "id": 153898,
            "nodeType": "EventDefinition",
            "src": "9031:116:471",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 153887,
              "nodeType": "StructuredDocumentation",
              "src": "8774:252:471",
              "text": "@notice Emitted when new StrategyParams are set\n @param origin Origin of the transaction (tx.origin)\n @param sender Sender of the call (msg.sender)\n @param nft VaultRegistry NFT of the vault\n @param params New set params"
            },
            "name": "SetStrategyParams",
            "nameLocation": "9037:17:471",
            "parameters": {
              "id": 153897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 153889,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "origin",
                  "nameLocation": "9071:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153898,
                  "src": "9055:22:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9055:7:471",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153891,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "9095:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153898,
                  "src": "9079:22:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9079:7:471",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153893,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "9119:3:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153898,
                  "src": "9103:19:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9103:7:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153896,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "9139:6:471",
                  "nodeType": "VariableDeclaration",
                  "scope": 153898,
                  "src": "9124:21:471",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$78092_memory_ptr",
                    "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams"
                  },
                  "typeName": {
                    "id": 153895,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 153894,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78092,
                      "src": "9124:14:471"
                    },
                    "referencedDeclaration": 78092,
                    "src": "9124:14:471",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$78092_storage_ptr",
                      "typeString": "struct IPancakeSwapVaultGovernance.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9054:92:471"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 153287,
              "name": "ContractMeta",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 114987,
              "src": "445:12:471"
            },
            "id": 153288,
            "nodeType": "InheritanceSpecifier",
            "src": "445:12:471"
          },
          {
            "baseName": {
              "id": 153289,
              "name": "IPancakeSwapVaultGovernance",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 78191,
              "src": "459:27:471"
            },
            "id": 153290,
            "nodeType": "InheritanceSpecifier",
            "src": "459:27:471"
          },
          {
            "baseName": {
              "id": 153291,
              "name": "VaultGovernance",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 158218,
              "src": "488:15:471"
            },
            "id": 153292,
            "nodeType": "InheritanceSpecifier",
            "src": "488:15:471"
          }
        ],
        "canonicalName": "PancakeSwapVaultGovernance",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 153286,
          "nodeType": "StructuredDocumentation",
          "src": "300:106:471",
          "text": "@notice Governance that manages all PancakeSwap Vaults params and can deploy a new PancakeSwap Vault."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          153899,
          158218,
          48061,
          48073,
          78191,
          78668,
          114987,
          75764
        ],
        "name": "PancakeSwapVaultGovernance",
        "nameLocation": "415:26:471",
        "scope": 153900,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 471
}