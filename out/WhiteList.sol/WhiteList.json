{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lpTokenMinted",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_DELEGATE_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OPERATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20RootVault",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "minLpTokens",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "vaultOptions",
          "type": "bytes"
        },
        {
          "internalType": "bytes32[]",
          "name": "proof",
          "type": "bytes32[]"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "isOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "root",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "root_",
          "type": "bytes32"
        }
      ],
      "name": "updateRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162001f0f38038062001f0f833981016040819052620000349162000302565b60408051808201909152600281526120ad60f11b602082015281906001600160a01b038216620000825760405162461bcd60e51b815260040162000079919062000334565b60405180910390fd5b506200009e60008051602062001eef8339815191528262000152565b620000b960008051602062001ecf8339815191528262000152565b620000d460008051602062001ecf8339815191528062000162565b6200010f7fc171260023d22a25a00a2789664c9334017843b831138c8ef03cc8897e5873d760008051602062001ecf83398151915262000162565b6200014a60008051602062001eef8339815191527fc171260023d22a25a00a2789664c9334017843b831138c8ef03cc8897e5873d762000162565b50506200038c565b6200015e8282620001ad565b5050565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b620001c48282620001f060201b620009941760201c565b6000828152600160209081526040909120620001eb91839062000a1862000290821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166200015e576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200024c3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620002a7836001600160a01b038416620002b0565b90505b92915050565b6000818152600183016020526040812054620002f957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620002aa565b506000620002aa565b6000602082840312156200031557600080fd5b81516001600160a01b03811681146200032d57600080fd5b9392505050565b600060208083528351808285015260005b81811015620003635785810183015185820160400152820162000345565b8181111562000376576000604083870101525b50601f01601f1916929092016040019392505050565b611b33806200039c6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80636d70f7ae116100a2578063983d273711610071578063983d273714610276578063a217fddf1461029d578063ca15c873146102a5578063d547741f146102b8578063ebf0c717146102cb57600080fd5b80636d70f7ae146101fe57806375b238fc146102115780639010d07c1461023857806391d148541461026357600080fd5b806324d7806c116100de57806324d7806c146101a55780632f2ff15d146101b857806336568abe146101cb5780636c5d6eea146101de57600080fd5b806301ffc9a7146101105780630952ff541461013857806321ff99701461016d578063248a9ca314610182575b600080fd5b61012361011e36600461146e565b6102d4565b60405190151581526020015b60405180910390f35b61015f7fc171260023d22a25a00a2789664c9334017843b831138c8ef03cc8897e5873d781565b60405190815260200161012f565b61018061017b366004611498565b6102ff565b005b61015f610190366004611498565b60009081526020819052604090206001015490565b6101236101b33660046114c6565b61030c565b6101806101c63660046114e3565b610368565b6101806101d93660046114e3565b610392565b6101f16101ec36600461155f565b610415565b60405161012f919061167e565b61012361020c3660046114c6565b6108e4565b61015f7ff23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d881565b61024b610246366004611691565b610910565b6040516001600160a01b03909116815260200161012f565b6101236102713660046114e3565b61092f565b61015f7f46a52cf33029de9f84853745a87af28464c80bf0346df1b32e205fc73319f62281565b61015f600081565b61015f6102b3366004611498565b610958565b6101806102c63660046114e3565b61096f565b61015f60025481565b60006001600160e01b03198216635a05180f60e01b14806102f957506102f982610a2d565b92915050565b610307610a62565b600255565b60006103387ff23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d88361092f565b806102f957506102f97fc171260023d22a25a00a2789664c9334017843b831138c8ef03cc8897e5873d78361092f565b60008281526020819052604090206001015461038381610aa8565b61038d8383610ab2565b505050565b6001600160a01b03811633146104075760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6104118282610ad4565b5050565b6060600033604051602001610442919060609190911b6bffffffffffffffffffffffff1916815260140190565b60405160208183030381529060405280519060200120905061049b848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506002549150849050610af6565b6040518060400160405280600381526020016223292160e91b815250906104d55760405162461bcd60e51b81526004016103fe91906116df565b5060008a6001600160a01b031663697222336040518163ffffffff1660e01b815260040160006040518083038186803b15801561051157600080fd5b505afa158015610525573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261054d919081019061177d565b80516040805180820190915260048152631253959360e21b60208201529192508a1461058c5760405162461bcd60e51b81526004016103fe91906116df565b5060005b8151811015610649576105ea33308d8d858181106105b0576105b0611811565b905060200201358585815181106105c9576105c9611811565b60200260200101516001600160a01b0316610b0c909392919063ffffffff16565b6106398c8c8c8481811061060057610600611811565b9050602002013584848151811061061957610619611811565b60200260200101516001600160a01b0316610b7d9092919063ffffffff16565b6106428161183d565b9050610590565b50604051631528fd1d60e21b81526001600160a01b038c16906354a3f4749061067e908d908d908d908d908d90600401611858565b600060405180830381600087803b15801561069857600080fd5b505af11580156106ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106d491908101906118c8565b925060005b81518110156107f55761071a8c60008484815181106106fa576106fa611811565b60200260200101516001600160a01b0316610c399092919063ffffffff16565b6107e53383838151811061073057610730611811565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561077b57600080fd5b505afa15801561078f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b3919061194e565b8484815181106107c5576107c5611811565b60200260200101516001600160a01b0316610d5d9092919063ffffffff16565b6107ee8161183d565b90506106d9565b506040516370a0823160e01b81523060048201526000906001600160a01b038d16906370a082319060240160206040518083038186803b15801561083857600080fd5b505afa15801561084c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610870919061194e565b90506108866001600160a01b038d163383610d5d565b8b6001600160a01b0316336001600160a01b03167fcca721777a6ecfefca61eb6abe93dd4f6bc3798df0cf7aacedffc26fbd7521c08487856040516108cd93929190611967565b60405180910390a350505098975050505050505050565b60006102f97f46a52cf33029de9f84853745a87af28464c80bf0346df1b32e205fc73319f6228361092f565b60008281526001602052604081206109289083610d8d565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008181526001602052604081206102f990610d99565b60008281526020819052604090206001015461098a81610aa8565b61038d8383610ad4565b61099e828261092f565b610411576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556109d43390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610928836001600160a01b038416610da3565b60006001600160e01b03198216637965db0b60e01b14806102f957506301ffc9a760e01b6001600160e01b03198316146102f9565b610a6b3361030c565b6040518060400160405280600381526020016223292160e91b81525090610aa55760405162461bcd60e51b81526004016103fe91906116df565b50565b610aa58133610df2565b610abc8282610994565b600082815260016020526040902061038d9082610a18565b610ade8282610e4b565b600082815260016020526040902061038d9082610eb0565b600082610b038584610ec5565b14949350505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610b779085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f12565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b158015610bc857600080fd5b505afa158015610bdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c00919061194e565b9050610b778463095ea7b360e01b85610c1986866119cf565b6040516001600160a01b0390921660248301526044820152606401610b40565b801580610cc25750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610c8857600080fd5b505afa158015610c9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc0919061194e565b155b610d2d5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016103fe565b6040516001600160a01b03831660248201526044810182905261038d90849063095ea7b360e01b90606401610b40565b6040516001600160a01b03831660248201526044810182905261038d90849063a9059cbb60e01b90606401610b40565b60006109288383610fe7565b60006102f9825490565b6000818152600183016020526040812054610dea575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556102f9565b5060006102f9565b610dfc828261092f565b61041157610e0981611011565b610e14836020611023565b604051602001610e259291906119e7565b60408051601f198184030181529082905262461bcd60e51b82526103fe916004016116df565b610e55828261092f565b15610411576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610928836001600160a01b0384166111bf565b600081815b8451811015610f0a57610ef682868381518110610ee957610ee9611811565b60200260200101516112b2565b915080610f028161183d565b915050610eca565b509392505050565b6000610f67826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112e19092919063ffffffff16565b9050805160001480610f88575080806020019051810190610f889190611a5c565b61038d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103fe565b6000826000018281548110610ffe57610ffe611811565b9060005260206000200154905092915050565b60606102f96001600160a01b03831660145b60606000611032836002611a7e565b61103d9060026119cf565b67ffffffffffffffff81111561105557611055611712565b6040519080825280601f01601f19166020018201604052801561107f576020820181803683370190505b509050600360fc1b8160008151811061109a5761109a611811565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106110c9576110c9611811565b60200101906001600160f81b031916908160001a90535060006110ed846002611a7e565b6110f89060016119cf565b90505b6001811115611170576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061112c5761112c611811565b1a60f81b82828151811061114257611142611811565b60200101906001600160f81b031916908160001a90535060049490941c9361116981611a9d565b90506110fb565b5083156109285760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103fe565b600081815260018301602052604081205480156112a85760006111e3600183611ab4565b85549091506000906111f790600190611ab4565b905081811461125c57600086600001828154811061121757611217611811565b906000526020600020015490508087600001848154811061123a5761123a611811565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061126d5761126d611acb565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506102f9565b60009150506102f9565b60008183106112ce576000828152602084905260409020610928565b6000838152602083905260409020610928565b60606112f084846000856112f8565b949350505050565b6060824710156113595760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103fe565b600080866001600160a01b031685876040516113759190611ae1565b60006040518083038185875af1925050503d80600081146113b2576040519150601f19603f3d011682016040523d82523d6000602084013e6113b7565b606091505b50915091506113c8878383876113d3565b979650505050505050565b6060831561143f578251611438576001600160a01b0385163b6114385760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103fe565b50816112f0565b6112f083838151156114545781518083602001fd5b8060405162461bcd60e51b81526004016103fe91906116df565b60006020828403121561148057600080fd5b81356001600160e01b03198116811461092857600080fd5b6000602082840312156114aa57600080fd5b5035919050565b6001600160a01b0381168114610aa557600080fd5b6000602082840312156114d857600080fd5b8135610928816114b1565b600080604083850312156114f657600080fd5b823591506020830135611508816114b1565b809150509250929050565b60008083601f84011261152557600080fd5b50813567ffffffffffffffff81111561153d57600080fd5b6020830191508360208260051b850101111561155857600080fd5b9250929050565b60008060008060008060008060a0898b03121561157b57600080fd5b8835611586816114b1565b9750602089013567ffffffffffffffff808211156115a357600080fd5b6115af8c838d01611513565b909950975060408b0135965060608b01359150808211156115cf57600080fd5b818b0191508b601f8301126115e357600080fd5b8135818111156115f257600080fd5b8c602082850101111561160457600080fd5b6020830196508095505060808b013591508082111561162257600080fd5b5061162f8b828c01611513565b999c989b5096995094979396929594505050565b600081518084526020808501945080840160005b8381101561167357815187529582019590820190600101611657565b509495945050505050565b6020815260006109286020830184611643565b600080604083850312156116a457600080fd5b50508035926020909101359150565b60005b838110156116ce5781810151838201526020016116b6565b83811115610b775750506000910152565b60208152600082518060208401526116fe8160408501602087016116b3565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561175157611751611712565b604052919050565b600067ffffffffffffffff82111561177357611773611712565b5060051b60200190565b6000602080838503121561179057600080fd5b825167ffffffffffffffff8111156117a757600080fd5b8301601f810185136117b857600080fd5b80516117cb6117c682611759565b611728565b81815260059190911b820183019083810190878311156117ea57600080fd5b928401925b828410156113c8578351611802816114b1565b825292840192908401906117ef565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561185157611851611827565b5060010190565b6060808252810185905260006001600160fb1b0386111561187857600080fd5b8560051b80886080850137602083018690528201828103608090810160408501528101849052838560a0830137600060a0858301015260a0601f19601f8601168201019150509695505050505050565b600060208083850312156118db57600080fd5b825167ffffffffffffffff8111156118f257600080fd5b8301601f8101851361190357600080fd5b80516119116117c682611759565b81815260059190911b8201830190838101908783111561193057600080fd5b928401925b828410156113c857835182529284019290840190611935565b60006020828403121561196057600080fd5b5051919050565b606080825284519082018190526000906020906080840190828801845b828110156119a95781516001600160a01b031684529284019290840190600101611984565b505050838103828501526119bd8187611643565b92505050826040830152949350505050565b600082198211156119e2576119e2611827565b500190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611a1f8160178501602088016116b3565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611a508160288401602088016116b3565b01602801949350505050565b600060208284031215611a6e57600080fd5b8151801515811461092857600080fd5b6000816000190483118215151615611a9857611a98611827565b500290565b600081611aac57611aac611827565b506000190190565b600082821015611ac657611ac6611827565b500390565b634e487b7160e01b600052603160045260246000fd5b60008251611af38184602087016116b3565b919091019291505056fea2646970667358221220c5769bc0c94f466f1a1f1c5fa4190577448532daa344c7122b0a51541738054064736f6c63430008090033f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d846a52cf33029de9f84853745a87af28464c80bf0346df1b32e205fc73319f622",
    "sourceMap": "331:2171:435:-:0;;;480:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;935:30:412;;;;;;;;;;;;-1:-1:-1;;;935:30:412;;;;528:5:435;;-1:-1:-1;;;;;914:19:412;;906:60;;;;-1:-1:-1;;;906:60:412;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;977:27:412;-1:-1:-1;;;;;;;;;;;998:5:412;977:10;:27::i;:::-;1014:29;-1:-1:-1;;;;;;;;;;;1037:5:412;1014:10;:29::i;:::-;1054:37;-1:-1:-1;;;;;;;;;;;682:18:412;1054:13;:37::i;:::-;1101:46;752:27;-1:-1:-1;;;;;;;;;;;1101:13:412;:46::i;:::-;1157:44;-1:-1:-1;;;;;;;;;;;752:27:412;1157:13;:44::i;:::-;869:339;480:57:435;331:2171;;6937:110:18;7015:25;7026:4;7032:7;7015:10;:25::i;:::-;6937:110;;:::o;7172:247::-;7255:25;4604:12;;;;;;;;;;;:22;;;;7311:34;;;;7360:52;;4604:22;;7311:34;;4604:22;;:12;;7360:52;;7255:25;7360:52;7245:174;7172:247;;:::o;1978:166:19:-;2065:31;2082:4;2088:7;2065:16;;;;;:31;;:::i;:::-;2106:18;;;;:12;:18;;;;;;;;:31;;2129:7;;2106:22;;;;;:31;;:::i;:::-;;1978:166;;:::o;7587:233:18:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:18;;;;;;;;;;;;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:18;;;;;;;;;:36;;-1:-1:-1;;7708:36:18;7740:4;7708:36;;;7790:12;719:10:44;;640:96;7790:12:18;-1:-1:-1;;;;;7763:40:18;7781:7;-1:-1:-1;;;;;7763:40:18;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;8305:150:53:-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:53;;8398:4;:50::i;:::-;8391:57;;8305:150;;;;;:::o;2214:404::-;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:53;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:53;2589:12;;14:290:488;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:488;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:488:o;309:597::-;421:4;450:2;479;468:9;461:21;511:6;505:13;554:6;549:2;538:9;534:18;527:34;579:1;589:140;603:6;600:1;597:13;589:140;;;698:14;;;694:23;;688:30;664:17;;;683:2;660:26;653:66;618:10;;589:140;;;747:6;744:1;741:13;738:91;;;817:1;812:2;803:6;792:9;788:22;784:31;777:42;738:91;-1:-1:-1;890:2:488;869:15;-1:-1:-1;;865:29:488;850:45;;;;897:2;846:54;;309:597;-1:-1:-1;;;309:597:488:o;:::-;331:2171:435;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c80636d70f7ae116100a2578063983d273711610071578063983d273714610276578063a217fddf1461029d578063ca15c873146102a5578063d547741f146102b8578063ebf0c717146102cb57600080fd5b80636d70f7ae146101fe57806375b238fc146102115780639010d07c1461023857806391d148541461026357600080fd5b806324d7806c116100de57806324d7806c146101a55780632f2ff15d146101b857806336568abe146101cb5780636c5d6eea146101de57600080fd5b806301ffc9a7146101105780630952ff541461013857806321ff99701461016d578063248a9ca314610182575b600080fd5b61012361011e36600461146e565b6102d4565b60405190151581526020015b60405180910390f35b61015f7fc171260023d22a25a00a2789664c9334017843b831138c8ef03cc8897e5873d781565b60405190815260200161012f565b61018061017b366004611498565b6102ff565b005b61015f610190366004611498565b60009081526020819052604090206001015490565b6101236101b33660046114c6565b61030c565b6101806101c63660046114e3565b610368565b6101806101d93660046114e3565b610392565b6101f16101ec36600461155f565b610415565b60405161012f919061167e565b61012361020c3660046114c6565b6108e4565b61015f7ff23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d881565b61024b610246366004611691565b610910565b6040516001600160a01b03909116815260200161012f565b6101236102713660046114e3565b61092f565b61015f7f46a52cf33029de9f84853745a87af28464c80bf0346df1b32e205fc73319f62281565b61015f600081565b61015f6102b3366004611498565b610958565b6101806102c63660046114e3565b61096f565b61015f60025481565b60006001600160e01b03198216635a05180f60e01b14806102f957506102f982610a2d565b92915050565b610307610a62565b600255565b60006103387ff23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d88361092f565b806102f957506102f97fc171260023d22a25a00a2789664c9334017843b831138c8ef03cc8897e5873d78361092f565b60008281526020819052604090206001015461038381610aa8565b61038d8383610ab2565b505050565b6001600160a01b03811633146104075760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6104118282610ad4565b5050565b6060600033604051602001610442919060609190911b6bffffffffffffffffffffffff1916815260140190565b60405160208183030381529060405280519060200120905061049b848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506002549150849050610af6565b6040518060400160405280600381526020016223292160e91b815250906104d55760405162461bcd60e51b81526004016103fe91906116df565b5060008a6001600160a01b031663697222336040518163ffffffff1660e01b815260040160006040518083038186803b15801561051157600080fd5b505afa158015610525573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261054d919081019061177d565b80516040805180820190915260048152631253959360e21b60208201529192508a1461058c5760405162461bcd60e51b81526004016103fe91906116df565b5060005b8151811015610649576105ea33308d8d858181106105b0576105b0611811565b905060200201358585815181106105c9576105c9611811565b60200260200101516001600160a01b0316610b0c909392919063ffffffff16565b6106398c8c8c8481811061060057610600611811565b9050602002013584848151811061061957610619611811565b60200260200101516001600160a01b0316610b7d9092919063ffffffff16565b6106428161183d565b9050610590565b50604051631528fd1d60e21b81526001600160a01b038c16906354a3f4749061067e908d908d908d908d908d90600401611858565b600060405180830381600087803b15801561069857600080fd5b505af11580156106ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106d491908101906118c8565b925060005b81518110156107f55761071a8c60008484815181106106fa576106fa611811565b60200260200101516001600160a01b0316610c399092919063ffffffff16565b6107e53383838151811061073057610730611811565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561077b57600080fd5b505afa15801561078f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b3919061194e565b8484815181106107c5576107c5611811565b60200260200101516001600160a01b0316610d5d9092919063ffffffff16565b6107ee8161183d565b90506106d9565b506040516370a0823160e01b81523060048201526000906001600160a01b038d16906370a082319060240160206040518083038186803b15801561083857600080fd5b505afa15801561084c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610870919061194e565b90506108866001600160a01b038d163383610d5d565b8b6001600160a01b0316336001600160a01b03167fcca721777a6ecfefca61eb6abe93dd4f6bc3798df0cf7aacedffc26fbd7521c08487856040516108cd93929190611967565b60405180910390a350505098975050505050505050565b60006102f97f46a52cf33029de9f84853745a87af28464c80bf0346df1b32e205fc73319f6228361092f565b60008281526001602052604081206109289083610d8d565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b60008181526001602052604081206102f990610d99565b60008281526020819052604090206001015461098a81610aa8565b61038d8383610ad4565b61099e828261092f565b610411576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556109d43390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610928836001600160a01b038416610da3565b60006001600160e01b03198216637965db0b60e01b14806102f957506301ffc9a760e01b6001600160e01b03198316146102f9565b610a6b3361030c565b6040518060400160405280600381526020016223292160e91b81525090610aa55760405162461bcd60e51b81526004016103fe91906116df565b50565b610aa58133610df2565b610abc8282610994565b600082815260016020526040902061038d9082610a18565b610ade8282610e4b565b600082815260016020526040902061038d9082610eb0565b600082610b038584610ec5565b14949350505050565b6040516001600160a01b0380851660248301528316604482015260648101829052610b779085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f12565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b158015610bc857600080fd5b505afa158015610bdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c00919061194e565b9050610b778463095ea7b360e01b85610c1986866119cf565b6040516001600160a01b0390921660248301526044820152606401610b40565b801580610cc25750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015610c8857600080fd5b505afa158015610c9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc0919061194e565b155b610d2d5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016103fe565b6040516001600160a01b03831660248201526044810182905261038d90849063095ea7b360e01b90606401610b40565b6040516001600160a01b03831660248201526044810182905261038d90849063a9059cbb60e01b90606401610b40565b60006109288383610fe7565b60006102f9825490565b6000818152600183016020526040812054610dea575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556102f9565b5060006102f9565b610dfc828261092f565b61041157610e0981611011565b610e14836020611023565b604051602001610e259291906119e7565b60408051601f198184030181529082905262461bcd60e51b82526103fe916004016116df565b610e55828261092f565b15610411576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610928836001600160a01b0384166111bf565b600081815b8451811015610f0a57610ef682868381518110610ee957610ee9611811565b60200260200101516112b2565b915080610f028161183d565b915050610eca565b509392505050565b6000610f67826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112e19092919063ffffffff16565b9050805160001480610f88575080806020019051810190610f889190611a5c565b61038d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103fe565b6000826000018281548110610ffe57610ffe611811565b9060005260206000200154905092915050565b60606102f96001600160a01b03831660145b60606000611032836002611a7e565b61103d9060026119cf565b67ffffffffffffffff81111561105557611055611712565b6040519080825280601f01601f19166020018201604052801561107f576020820181803683370190505b509050600360fc1b8160008151811061109a5761109a611811565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106110c9576110c9611811565b60200101906001600160f81b031916908160001a90535060006110ed846002611a7e565b6110f89060016119cf565b90505b6001811115611170576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061112c5761112c611811565b1a60f81b82828151811061114257611142611811565b60200101906001600160f81b031916908160001a90535060049490941c9361116981611a9d565b90506110fb565b5083156109285760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103fe565b600081815260018301602052604081205480156112a85760006111e3600183611ab4565b85549091506000906111f790600190611ab4565b905081811461125c57600086600001828154811061121757611217611811565b906000526020600020015490508087600001848154811061123a5761123a611811565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061126d5761126d611acb565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506102f9565b60009150506102f9565b60008183106112ce576000828152602084905260409020610928565b6000838152602083905260409020610928565b60606112f084846000856112f8565b949350505050565b6060824710156113595760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103fe565b600080866001600160a01b031685876040516113759190611ae1565b60006040518083038185875af1925050503d80600081146113b2576040519150601f19603f3d011682016040523d82523d6000602084013e6113b7565b606091505b50915091506113c8878383876113d3565b979650505050505050565b6060831561143f578251611438576001600160a01b0385163b6114385760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103fe565b50816112f0565b6112f083838151156114545781518083602001fd5b8060405162461bcd60e51b81526004016103fe91906116df565b60006020828403121561148057600080fd5b81356001600160e01b03198116811461092857600080fd5b6000602082840312156114aa57600080fd5b5035919050565b6001600160a01b0381168114610aa557600080fd5b6000602082840312156114d857600080fd5b8135610928816114b1565b600080604083850312156114f657600080fd5b823591506020830135611508816114b1565b809150509250929050565b60008083601f84011261152557600080fd5b50813567ffffffffffffffff81111561153d57600080fd5b6020830191508360208260051b850101111561155857600080fd5b9250929050565b60008060008060008060008060a0898b03121561157b57600080fd5b8835611586816114b1565b9750602089013567ffffffffffffffff808211156115a357600080fd5b6115af8c838d01611513565b909950975060408b0135965060608b01359150808211156115cf57600080fd5b818b0191508b601f8301126115e357600080fd5b8135818111156115f257600080fd5b8c602082850101111561160457600080fd5b6020830196508095505060808b013591508082111561162257600080fd5b5061162f8b828c01611513565b999c989b5096995094979396929594505050565b600081518084526020808501945080840160005b8381101561167357815187529582019590820190600101611657565b509495945050505050565b6020815260006109286020830184611643565b600080604083850312156116a457600080fd5b50508035926020909101359150565b60005b838110156116ce5781810151838201526020016116b6565b83811115610b775750506000910152565b60208152600082518060208401526116fe8160408501602087016116b3565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561175157611751611712565b604052919050565b600067ffffffffffffffff82111561177357611773611712565b5060051b60200190565b6000602080838503121561179057600080fd5b825167ffffffffffffffff8111156117a757600080fd5b8301601f810185136117b857600080fd5b80516117cb6117c682611759565b611728565b81815260059190911b820183019083810190878311156117ea57600080fd5b928401925b828410156113c8578351611802816114b1565b825292840192908401906117ef565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561185157611851611827565b5060010190565b6060808252810185905260006001600160fb1b0386111561187857600080fd5b8560051b80886080850137602083018690528201828103608090810160408501528101849052838560a0830137600060a0858301015260a0601f19601f8601168201019150509695505050505050565b600060208083850312156118db57600080fd5b825167ffffffffffffffff8111156118f257600080fd5b8301601f8101851361190357600080fd5b80516119116117c682611759565b81815260059190911b8201830190838101908783111561193057600080fd5b928401925b828410156113c857835182529284019290840190611935565b60006020828403121561196057600080fd5b5051919050565b606080825284519082018190526000906020906080840190828801845b828110156119a95781516001600160a01b031684529284019290840190600101611984565b505050838103828501526119bd8187611643565b92505050826040830152949350505050565b600082198211156119e2576119e2611827565b500190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611a1f8160178501602088016116b3565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611a508160288401602088016116b3565b01602801949350505050565b600060208284031215611a6e57600080fd5b8151801515811461092857600080fd5b6000816000190483118215151615611a9857611a98611827565b500290565b600081611aac57611aac611827565b506000190190565b600082821015611ac657611ac6611827565b500390565b634e487b7160e01b600052603160045260246000fd5b60008251611af38184602087016116b3565b919091019291505056fea2646970667358221220c5769bc0c94f466f1a1f1c5fa4190577448532daa344c7122b0a51541738054064736f6c63430008090033",
    "sourceMap": "331:2171:435:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:212:19;;;;;;:::i;:::-;;:::i;:::-;;;470:14:488;;463:22;445:41;;433:2;418:18;634:212:19;;;;;;;;706:73:412;;752:27;706:73;;;;;643:25:488;;;631:2;616:18;706:73:412;497:177:488;1937:98:435;;;;;;:::i;:::-;;:::i;:::-;;4504:129:18;;;;;;:::i;:::-;4578:7;4604:12;;;;;;;;;;:22;;;;4504:129;1466:151:412;;;;;;:::i;:::-;;:::i;4929:145:18:-;;;;;;:::i;:::-;;:::i;6038:214::-;;;;;;:::i;:::-;;:::i;612:1319:435:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1778:112:412:-;;;;;;:::i;:::-;;:::i;645:55::-;;682:18;645:55;;1431:151:19;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4523:32:488;;;4505:51;;4493:2;4478:18;1431:151:19;4359:203:488;3021:145:18;;;;;;:::i;:::-;;:::i;583:56:412:-;;618:21;583:56;;2153:49:18;;2198:4;2153:49;;1750:140:19;;;;;;:::i;:::-;;:::i;5354:147:18:-;;;;;;:::i;:::-;;:::i;454:19:435:-;;;;;;634:212:19;719:4;-1:-1:-1;;;;;;742:57:19;;-1:-1:-1;;;742:57:19;;:97;;;803:36;827:11;803:23;:36::i;:::-;735:104;634:212;-1:-1:-1;;634:212:19:o;1937:98:435:-;1991:15;:13;:15::i;:::-;2016:4;:12;1937:98::o;1466:151:412:-;1520:4;1543:27;682:18;1563:6;1543:7;:27::i;:::-;:67;;;;1574:36;752:27;1603:6;1574:7;:36::i;4929:145:18:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;-1:-1:-1;;;;;6133:23:18;;719:10:44;6133:23:18;6125:83;;;;-1:-1:-1;;;6125:83:18;;4951:2:488;6125:83:18;;;4933:21:488;4990:2;4970:18;;;4963:30;5029:34;5009:18;;;5002:62;-1:-1:-1;;;5080:18:488;;;5073:45;5135:19;;6125:83:18;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;612:1319:435:-;825:35;872:12;914:10;897:28;;;;;;;5314:2:488;5310:15;;;;-1:-1:-1;;5306:53:488;5294:66;;5385:2;5376:12;;5165:229;897:28:435;;;;;;;;;;;;;887:39;;;;;;872:54;;944:37;963:5;;944:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;970:4:435;;;-1:-1:-1;976:4:435;;-1:-1:-1;944:18:435;:37::i;:::-;983:27;;;;;;;;;;;;;-1:-1:-1;;;983:27:435;;;936:75;;;;;-1:-1:-1;;;936:75:435;;;;;;;;:::i;:::-;;1022:23;1048:5;-1:-1:-1;;;;;1048:17:435;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1048:19:435;;;;;;;;;;;;:::i;:::-;1085:13;;1123:32;;;;;;;;;;;;-1:-1:-1;;;1123:32:435;;;;1022:45;;-1:-1:-1;1085:36:435;;1077:79;;;;-1:-1:-1;;;1077:79:435;;;;;;;;:::i;:::-;;1171:9;1166:233;1190:6;:13;1186:1;:17;1166:233;;;1224:78;1259:10;1279:4;1286:12;;1299:1;1286:15;;;;;;;:::i;:::-;;;;;;;1231:6;1238:1;1231:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1224:34:435;;;:78;;;;;;:::i;:::-;1316:72;1364:5;1372:12;;1385:1;1372:15;;;;;;;:::i;:::-;;;;;;;1323:6;1330:1;1323:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1316:39:435;;;:72;;;;;:::i;:::-;1205:3;;;:::i;:::-;;;1166:233;;;-1:-1:-1;1430:54:435;;-1:-1:-1;;;1430:54:435;;-1:-1:-1;;;;;1430:13:435;;;;;:54;;1444:12;;;;1458:11;;1471:12;;;;1430:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1430:54:435;;;;;;;;;;;;:::i;:::-;1409:75;;1499:9;1494:217;1518:6;:13;1514:1;:17;1494:217;;;1552:48;1590:5;1598:1;1559:6;1566:1;1559:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1552:29:435;;;:48;;;;;:::i;:::-;1614:86;1645:10;1664:6;1671:1;1664:9;;;;;;;;:::i;:::-;;;;;;;;;;;1657:42;;-1:-1:-1;;;1657:42:435;;1693:4;1657:42;;;4505:51:488;-1:-1:-1;;;;;1657:27:435;;;;;;4478:18:488;;1657:42:435;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1621:6;1628:1;1621:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1614:30:435;;;:86;;;;;:::i;:::-;1533:3;;;:::i;:::-;;;1494:217;;;-1:-1:-1;1745:30:435;;-1:-1:-1;;;1745:30:435;;1769:4;1745:30;;;4505:51:488;1721:21:435;;-1:-1:-1;;;;;1745:15:435;;;;;4478:18:488;;1745:30:435;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1721:54;-1:-1:-1;1785:45:435;-1:-1:-1;;;;;1785:18:435;;1804:10;1721:54;1785:18;:45::i;:::-;1874:5;-1:-1:-1;;;;;1846:78:435;1854:10;-1:-1:-1;;;;;1846:78:435;;1882:6;1890:18;1910:13;1846:78;;;;;;;;:::i;:::-;;;;;;;;862:1069;;;612:1319;;;;;;;;;;:::o;1778:112:412:-;1835:4;1858:25;618:21;1876:6;1858:7;:25::i;1431:151:19:-;1521:7;1547:18;;;:12;:18;;;;;:28;;1569:5;1547:21;:28::i;:::-;1540:35;1431:151;-1:-1:-1;;;1431:151:19:o;3021:145:18:-;3107:4;3130:12;;;;;;;;;;;-1:-1:-1;;;;;3130:29:18;;;;;;;;;;;;;;;3021:145::o;1750:140:19:-;1830:7;1856:18;;;:12;:18;;;;;:27;;:25;:27::i;5354:147:18:-;4578:7;4604:12;;;;;;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;7587:233::-:0;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:6;:12;;;;;;;;;;;-1:-1:-1;;;;;7708:29:18;;;;;;;;;:36;;-1:-1:-1;;7708:36:18;7740:4;7708:36;;;7790:12;719:10:44;;640:96;7790:12:18;-1:-1:-1;;;;;7763:40:18;7781:7;-1:-1:-1;;;;;7763:40:18;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;8305:150:53:-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:53;;8398:4;:50::i;2732:202:18:-;2817:4;-1:-1:-1;;;;;;2840:47:18;;-1:-1:-1;;;2840:47:18;;:87;;-1:-1:-1;;;;;;;;;;937:40:49;;;2891:36:18;829:155:49;1978:113:412;2035:19;2043:10;2035:7;:19::i;:::-;2056:27;;;;;;;;;;;;;-1:-1:-1;;;2056:27:412;;;2027:57;;;;;-1:-1:-1;;;2027:57:412;;;;;;;;:::i;:::-;;1978:113::o;3460:103:18:-;3526:30;3537:4;719:10:44;3526::18;:30::i;1978:166:19:-;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106:18;;;;:12;:18;;;;;:31;;2129:7;2106:22;:31::i;2233:171::-;2321:32;2339:4;2345:7;2321:17;:32::i;:::-;2363:18;;;;:12;:18;;;;;:34;;2389:7;2363:25;:34::i;1156:154:48:-;1247:4;1299;1270:25;1283:5;1290:4;1270:12;:25::i;:::-;:33;;1156:154;-1:-1:-1;;;;1156:154:48:o;1355:203:37:-;1482:68;;-1:-1:-1;;;;;11134:15:488;;;1482:68:37;;;11116:34:488;11186:15;;11166:18;;;11159:43;11218:18;;;11211:34;;;1455:96:37;;1475:5;;-1:-1:-1;;;1505:27:37;11051:18:488;;1482:68:37;;;;-1:-1:-1;;1482:68:37;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:68:37;-1:-1:-1;;;;;;1482:68:37;;;;;;;;;;1455:19;:96::i;:::-;1355:203;;;;:::o;2582:280::-;2701:39;;-1:-1:-1;;;2701:39:37;;2725:4;2701:39;;;11468:34:488;-1:-1:-1;;;;;11538:15:488;;;11518:18;;;11511:43;2678:20:37;;2701:15;;;;;;11403:18:488;;2701:39:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2678:62;-1:-1:-1;2750:105:37;2770:5;-1:-1:-1;;;2824:7:37;2833:20;2848:5;2678:62;2833:20;:::i;:::-;2777:77;;-1:-1:-1;;;;;11890:32:488;;;2777:77:37;;;11872:51:488;11939:18;;;11932:34;11845:18;;2777:77:37;11698:274:488;1818:573:37;2143:10;;;2142:62;;-1:-1:-1;2159:39:37;;-1:-1:-1;;;2159:39:37;;2183:4;2159:39;;;11468:34:488;-1:-1:-1;;;;;11538:15:488;;;11518:18;;;11511:43;2159:15:37;;;;;11403:18:488;;2159:39:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;2142:62;2121:163;;;;-1:-1:-1;;;2121:163:37;;12179:2:488;2121:163:37;;;12161:21:488;12218:2;12198:18;;;12191:30;12257:34;12237:18;;;12230:62;-1:-1:-1;;;12308:18:488;;;12301:52;12370:19;;2121:163:37;11977:418:488;2121:163:37;2321:62;;-1:-1:-1;;;;;11890:32:488;;2321:62:37;;;11872:51:488;11939:18;;;11932:34;;;2294:90:37;;2314:5;;-1:-1:-1;;;2344:22:37;11845:18:488;;2321:62:37;11698:274:488;941:175:37;1050:58;;-1:-1:-1;;;;;11890:32:488;;1050:58:37;;;11872:51:488;11939:18;;;11932:34;;;1023:86:37;;1043:5;;-1:-1:-1;;;1073:23:37;11845:18:488;;1050:58:37;11698:274:488;9563:156:53;9637:7;9687:22;9691:3;9703:5;9687:3;:22::i;9106:115::-;9169:7;9195:19;9203:3;4545:18;;4463:107;2214:404;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:53;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:53;2589:12;;3844:479:18;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:18;;;;;;;;;;-1:-1:-1;;;3970:336:18;;;;;;;:::i;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;;;;;;;;;-1:-1:-1;;;;;8112:29:18;;;;;;;;;;:37;;-1:-1:-1;;8112:37:18;;;8168:40;719:10:44;;8112:12:18;;8168:40;;8144:5;8168:40;7991:234;;:::o;8623:156:53:-;8696:4;8719:53;8727:3;-1:-1:-1;;;;;8747:23:53;;8719:7;:53::i;1934:290:48:-;2017:7;2059:4;2017:7;2073:116;2097:5;:12;2093:1;:16;2073:116;;;2145:33;2155:12;2169:5;2175:1;2169:8;;;;;;;;:::i;:::-;;;;;;;2145:9;:33::i;:::-;2130:48;-1:-1:-1;2111:3:48;;;;:::i;:::-;;;;2073:116;;;-1:-1:-1;2205:12:48;1934:290;-1:-1:-1;;;1934:290:48:o;5196:642:37:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:37;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:37;;13675:2:488;5720:111:37;;;13657:21:488;13714:2;13694:18;;;13687:30;13753:34;13733:18;;;13726:62;-1:-1:-1;;;13804:18:488;;;13797:40;13854:19;;5720:111:37;13473:406:488;4912:118:53;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;;;:::i;:::-;;;;;;;;;4998:25;;4912:118;;;;:::o;2407:149:47:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:47;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:47;;1918:47;;-1:-1:-1;;;1975:6:47;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:47;;;;;;;;;-1:-1:-1;;;2000:6:47;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:47;;;;;;;;-1:-1:-1;2030:9:47;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:47;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:47;;;;;;;;-1:-1:-1;2141:1:47;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:47;;2162:55;;;;-1:-1:-1;;;2162:55:47;;14400:2:488;2162:55:47;;;14382:21:488;;;14419:18;;;14412:30;14478:34;14458:18;;;14451:62;14530:18;;2162:55:47;14198:356:488;2786:1388:53;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:53;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;9205:147:48;9268:7;9298:1;9294;:5;:51;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9294:51;;;9426:13;9517:15;;;9552:4;9545:15;;;9598:4;9582:21;;9302:20;9358:261;4108:223:43;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:43:o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:43;;15023:2:488;5354:81:43;;;15005:21:488;15062:2;15042:18;;;15035:30;15101:34;15081:18;;;15074:62;-1:-1:-1;;;15152:18:488;;;15145:36;15198:19;;5354:81:43;14821:402:488;5354:81:43;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:43;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:43:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:17;;7902:286;;-1:-1:-1;;;;;1702:19:43;;;8113:60;;;;-1:-1:-1;;;8113:60:43;;15709:2:488;8113:60:43;;;15691:21:488;15748:2;15728:18;;;15721:30;15787:31;15767:18;;;15760:59;15836:18;;8113:60:43;15507:353:488;8113:60:43;-1:-1:-1;8208:10:43;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:43;;;;;;;;:::i;14:286:488:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:488;;209:43;;199:71;;266:1;263;256:12;679:180;738:6;791:2;779:9;770:7;766:23;762:32;759:52;;;807:1;804;797:12;759:52;-1:-1:-1;830:23:488;;679:180;-1:-1:-1;679:180:488:o;864:131::-;-1:-1:-1;;;;;939:31:488;;929:42;;919:70;;985:1;982;975:12;1000:247;1059:6;1112:2;1100:9;1091:7;1087:23;1083:32;1080:52;;;1128:1;1125;1118:12;1080:52;1167:9;1154:23;1186:31;1211:5;1186:31;:::i;1252:315::-;1320:6;1328;1381:2;1369:9;1360:7;1356:23;1352:32;1349:52;;;1397:1;1394;1387:12;1349:52;1433:9;1420:23;1410:33;;1493:2;1482:9;1478:18;1465:32;1506:31;1531:5;1506:31;:::i;:::-;1556:5;1546:15;;;1252:315;;;;;:::o;1572:367::-;1635:8;1645:6;1699:3;1692:4;1684:6;1680:17;1676:27;1666:55;;1717:1;1714;1707:12;1666:55;-1:-1:-1;1740:20:488;;1783:18;1772:30;;1769:50;;;1815:1;1812;1805:12;1769:50;1852:4;1844:6;1840:17;1828:29;;1912:3;1905:4;1895:6;1892:1;1888:14;1880:6;1876:27;1872:38;1869:47;1866:67;;;1929:1;1926;1919:12;1866:67;1572:367;;;;;:::o;1944:1451::-;2129:6;2137;2145;2153;2161;2169;2177;2185;2238:3;2226:9;2217:7;2213:23;2209:33;2206:53;;;2255:1;2252;2245:12;2206:53;2294:9;2281:23;2313:31;2338:5;2313:31;:::i;:::-;2363:5;-1:-1:-1;2419:2:488;2404:18;;2391:32;2442:18;2472:14;;;2469:34;;;2499:1;2496;2489:12;2469:34;2538:70;2600:7;2591:6;2580:9;2576:22;2538:70;:::i;:::-;2627:8;;-1:-1:-1;2512:96:488;-1:-1:-1;2709:2:488;2694:18;;2681:32;;-1:-1:-1;2766:2:488;2751:18;;2738:32;;-1:-1:-1;2782:16:488;;;2779:36;;;2811:1;2808;2801:12;2779:36;2849:8;2838:9;2834:24;2824:34;;2896:7;2889:4;2885:2;2881:13;2877:27;2867:55;;2918:1;2915;2908:12;2867:55;2958:2;2945:16;2984:2;2976:6;2973:14;2970:34;;;3000:1;2997;2990:12;2970:34;3045:7;3040:2;3031:6;3027:2;3023:15;3019:24;3016:37;3013:57;;;3066:1;3063;3056:12;3013:57;3097:2;3093;3089:11;3079:21;;3119:6;3109:16;;;3178:3;3167:9;3163:19;3150:33;3134:49;;3208:2;3198:8;3195:16;3192:36;;;3224:1;3221;3214:12;3192:36;;3263:72;3327:7;3316:8;3305:9;3301:24;3263:72;:::i;:::-;1944:1451;;;;-1:-1:-1;1944:1451:488;;-1:-1:-1;1944:1451:488;;;;;;3354:8;-1:-1:-1;;;1944:1451:488:o;3400:435::-;3453:3;3491:5;3485:12;3518:6;3513:3;3506:19;3544:4;3573:2;3568:3;3564:12;3557:19;;3610:2;3603:5;3599:14;3631:1;3641:169;3655:6;3652:1;3649:13;3641:169;;;3716:13;;3704:26;;3750:12;;;;3785:15;;;;3677:1;3670:9;3641:169;;;-1:-1:-1;3826:3:488;;3400:435;-1:-1:-1;;;;;3400:435:488:o;3840:261::-;4019:2;4008:9;4001:21;3982:4;4039:56;4091:2;4080:9;4076:18;4068:6;4039:56;:::i;4106:248::-;4174:6;4182;4235:2;4223:9;4214:7;4210:23;4206:32;4203:52;;;4251:1;4248;4241:12;4203:52;-1:-1:-1;;4274:23:488;;;4344:2;4329:18;;;4316:32;;-1:-1:-1;4106:248:488:o;5399:258::-;5471:1;5481:113;5495:6;5492:1;5489:13;5481:113;;;5571:11;;;5565:18;5552:11;;;5545:39;5517:2;5510:10;5481:113;;;5612:6;5609:1;5606:13;5603:48;;;-1:-1:-1;;5647:1:488;5629:16;;5622:27;5399:258::o;5662:383::-;5811:2;5800:9;5793:21;5774:4;5843:6;5837:13;5886:6;5881:2;5870:9;5866:18;5859:34;5902:66;5961:6;5956:2;5945:9;5941:18;5936:2;5928:6;5924:15;5902:66;:::i;:::-;6029:2;6008:15;-1:-1:-1;;6004:29:488;5989:45;;;;6036:2;5985:54;;5662:383;-1:-1:-1;;5662:383:488:o;6050:127::-;6111:10;6106:3;6102:20;6099:1;6092:31;6142:4;6139:1;6132:15;6166:4;6163:1;6156:15;6182:275;6253:2;6247:9;6318:2;6299:13;;-1:-1:-1;;6295:27:488;6283:40;;6353:18;6338:34;;6374:22;;;6335:62;6332:88;;;6400:18;;:::i;:::-;6436:2;6429:22;6182:275;;-1:-1:-1;6182:275:488:o;6462:183::-;6522:4;6555:18;6547:6;6544:30;6541:56;;;6577:18;;:::i;:::-;-1:-1:-1;6622:1:488;6618:14;6634:4;6614:25;;6462:183::o;6650:956::-;6745:6;6776:2;6819;6807:9;6798:7;6794:23;6790:32;6787:52;;;6835:1;6832;6825:12;6787:52;6868:9;6862:16;6901:18;6893:6;6890:30;6887:50;;;6933:1;6930;6923:12;6887:50;6956:22;;7009:4;7001:13;;6997:27;-1:-1:-1;6987:55:488;;7038:1;7035;7028:12;6987:55;7067:2;7061:9;7090:60;7106:43;7146:2;7106:43;:::i;:::-;7090:60;:::i;:::-;7184:15;;;7266:1;7262:10;;;;7254:19;;7250:28;;;7215:12;;;;7290:19;;;7287:39;;;7322:1;7319;7312:12;7287:39;7346:11;;;;7366:210;7382:6;7377:3;7374:15;7366:210;;;7455:3;7449:10;7472:31;7497:5;7472:31;:::i;:::-;7516:18;;7399:12;;;;7554;;;;7366:210;;7611:127;7672:10;7667:3;7663:20;7660:1;7653:31;7703:4;7700:1;7693:15;7727:4;7724:1;7717:15;7743:127;7804:10;7799:3;7795:20;7792:1;7785:31;7835:4;7832:1;7825:15;7859:4;7856:1;7849:15;7875:135;7914:3;-1:-1:-1;;7935:17:488;;7932:43;;;7955:18;;:::i;:::-;-1:-1:-1;8002:1:488;7991:13;;7875:135::o;8015:872::-;8288:2;8270:21;;;8307:18;;8300:34;;;-1:-1:-1;;;;;;8346:31:488;;8343:51;;;8390:1;8387;8380:12;8343:51;8424:6;8421:1;8417:14;8482:6;8474;8468:3;8457:9;8453:19;8440:49;8614:4;8599:20;;8592:36;;;8508:22;;-1:-1:-1;;;8557:3:488;8664:28;;;8659:2;8644:18;;8637:56;8549:12;;8702:18;;;8713:6;8756;8750:3;8742:12;;8729:42;8814:1;8808:3;8799:6;8795:2;8791:15;8787:25;8780:36;8877:3;8870:2;8866:7;8861:2;8853:6;8849:15;8845:29;8841:2;8837:38;8833:48;8825:56;;;8015:872;;;;;;;;:::o;8892:881::-;8987:6;9018:2;9061;9049:9;9040:7;9036:23;9032:32;9029:52;;;9077:1;9074;9067:12;9029:52;9110:9;9104:16;9143:18;9135:6;9132:30;9129:50;;;9175:1;9172;9165:12;9129:50;9198:22;;9251:4;9243:13;;9239:27;-1:-1:-1;9229:55:488;;9280:1;9277;9270:12;9229:55;9309:2;9303:9;9332:60;9348:43;9388:2;9348:43;:::i;9332:60::-;9426:15;;;9508:1;9504:10;;;;9496:19;;9492:28;;;9457:12;;;;9532:19;;;9529:39;;;9564:1;9561;9554:12;9529:39;9588:11;;;;9608:135;9624:6;9619:3;9616:15;9608:135;;;9690:10;;9678:23;;9641:12;;;;9721;;;;9608:135;;9778:184;9848:6;9901:2;9889:9;9880:7;9876:23;9872:32;9869:52;;;9917:1;9914;9907:12;9869:52;-1:-1:-1;9940:16:488;;9778:184;-1:-1:-1;9778:184:488:o;9967:904::-;10263:2;10275:21;;;10345:13;;10248:18;;;10367:22;;;10215:4;;10443;;10420:3;10405:19;;;10470:15;;;10215:4;10513:195;10527:6;10524:1;10521:13;10513:195;;;10592:13;;-1:-1:-1;;;;;10588:39:488;10576:52;;10648:12;;;;10683:15;;;;10624:1;10542:9;10513:195;;;10517:3;;;10753:9;10748:3;10744:19;10739:2;10728:9;10724:18;10717:47;10781:41;10818:3;10810:6;10781:41;:::i;:::-;10773:49;;;;10858:6;10853:2;10842:9;10838:18;10831:34;9967:904;;;;;;:::o;11565:128::-;11605:3;11636:1;11632:6;11629:1;11626:13;11623:39;;;11642:18;;:::i;:::-;-1:-1:-1;11678:9:488;;11565:128::o;12400:786::-;12811:25;12806:3;12799:38;12781:3;12866:6;12860:13;12882:62;12937:6;12932:2;12927:3;12923:12;12916:4;12908:6;12904:17;12882:62;:::i;:::-;-1:-1:-1;;;13003:2:488;12963:16;;;12995:11;;;12988:40;13053:13;;13075:63;13053:13;13124:2;13116:11;;13109:4;13097:17;;13075:63;:::i;:::-;13158:17;13177:2;13154:26;;12400:786;-1:-1:-1;;;;12400:786:488:o;13191:277::-;13258:6;13311:2;13299:9;13290:7;13286:23;13282:32;13279:52;;;13327:1;13324;13317:12;13279:52;13359:9;13353:16;13412:5;13405:13;13398:21;13391:5;13388:32;13378:60;;13434:1;13431;13424:12;13884:168;13924:7;13990:1;13986;13982:6;13978:14;13975:1;13972:21;13967:1;13960:9;13953:17;13949:45;13946:71;;;13997:18;;:::i;:::-;-1:-1:-1;14037:9:488;;13884:168::o;14057:136::-;14096:3;14124:5;14114:39;;14133:18;;:::i;:::-;-1:-1:-1;;;14169:18:488;;14057:136::o;14559:125::-;14599:4;14627:1;14624;14621:8;14618:34;;;14632:18;;:::i;:::-;-1:-1:-1;14669:9:488;;14559:125::o;14689:127::-;14750:10;14745:3;14741:20;14738:1;14731:31;14781:4;14778:1;14771:15;14805:4;14802:1;14795:15;15228:274;15357:3;15395:6;15389:13;15411:53;15457:6;15452:3;15445:4;15437:6;15433:17;15411:53;:::i;:::-;15480:16;;;;;15228:274;-1:-1:-1;;15228:274:488:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ADMIN_DELEGATE_ROLE()": "0952ff54",
    "ADMIN_ROLE()": "75b238fc",
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "OPERATOR()": "983d2737",
    "deposit(address,uint256[],uint256,bytes,bytes32[])": "6c5d6eea",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "isAdmin(address)": "24d7806c",
    "isOperator(address)": "6d70f7ae",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "root()": "ebf0c717",
    "supportsInterface(bytes4)": "01ffc9a7",
    "updateRoot(bytes32)": "21ff9970"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpTokenMinted\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_DELEGATE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPERATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20RootVault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minLpTokens\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"vaultOptions\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"root\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root_\",\"type\":\"bytes32\"}],\"name\":\"updateRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Deposit(address,address,address[],uint256[],uint256)\":{\"params\":{\"actualTokenAmounts\":\"Token amounts deposited\",\"from\":\"The source address for the liquidity\",\"lpTokenMinted\":\"LP tokens received by the liquidity provider\",\"tokens\":\"ERC20 tokens deposited\"}}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isAdmin(address)\":{\"params\":{\"sender\":\"Adddress to check\"},\"returns\":{\"_0\":\"`true` if sender is an admin, `false` otherwise\"}},\"isOperator(address)\":{\"params\":{\"sender\":\"Adddress to check\"},\"returns\":{\"_0\":\"`true` if sender is an admin, `false` otherwise\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,address,address[],uint256[],uint256)\":{\"notice\":\"Emitted when liquidity is deposited\"}},\"kind\":\"user\",\"methods\":{\"isAdmin(address)\":{\"notice\":\"Checks if the address is ADMIN or ADMIN_DELEGATE.\"},\"isOperator(address)\":{\"notice\":\"Checks if the address is OPERATOR.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/WhiteList.sol\":\"WhiteList\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"src/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281\",\"dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b\"]},\"src/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87\",\"dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk\"]},\"src/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50\",\"dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1\"]},\"src/interfaces/oracles/IOracle.sol\":{\"keccak256\":\"0x2d89a1f771e68129d47ae26eccf76f969cd2877e9b7190687056f912c3524b53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f378b9f29c18878e73e251ca97abeca819f0789834281ee1399db878f6baedf5\",\"dweb:/ipfs/QmSrFYZWmGdVkgACwwZEfbkPt3kQCSkr6czBi9HVtzNSJg\"]},\"src/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add\",\"dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu\"]},\"src/interfaces/utils/IERC20RootVaultHelper.sol\":{\"keccak256\":\"0x58a7fcc0db33c498d00b2ece9876a5fc272f362fb5f96d1b666fc10b5683a38f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ebd1b47e1dee02800bbf211f45a13dc6accfb2e91c645711486bb9e3f5559cd\",\"dweb:/ipfs/QmYFVKRWs73onqQxiUw8AJHfHbhib6nshmAzvCr3T5pqpW\"]},\"src/interfaces/vaults/IAggregateVault.sol\":{\"keccak256\":\"0x22c60a8c3758f52aeeabf448cff491582357bed969cf9328cd93623ed12df3f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34fc54a3c550f28f0d77bdecad9e2b1083a79f37b6d783277c06741b1ecae35a\",\"dweb:/ipfs/QmdAXG1NpbzNPH6o8NxsVSVmnoUdtQeP9cNxmQ44Dm6qCT\"]},\"src/interfaces/vaults/IERC20RootVault.sol\":{\"keccak256\":\"0x81fae667b46299223c56ed34d77aa64d7d2a2b19d80167c23f0ba0dcbdd97cf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69b4669c0267163c52c78904f8a090b60b171e76dacc2468c1b8e82e20df8b2a\",\"dweb:/ipfs/QmUwAJcY157nBGxdGEpBTYLmRNW5WbsF74qF7WT8hQVj3k\"]},\"src/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1\",\"dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw\"]},\"src/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375\",\"dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu\"]},\"src/interfaces/vaults/IVaultRoot.sol\":{\"keccak256\":\"0xfc566a9133afe6942e196bcfde5b5e1920094d6f1656885b25b72b91f48c10ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79470664780741869fe81ad1eed10b2afd7d9432ee70be1599f242f102a4deaa\",\"dweb:/ipfs/QmUUPv5juGLrdngD5ZQNcsHxvQzWPG1c8aLjA2nsUC6uJz\"]},\"src/libraries/ExceptionsLibrary.sol\":{\"keccak256\":\"0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f\",\"dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX\"]},\"src/utils/DefaultAccessControl.sol\":{\"keccak256\":\"0x6c19d12f1a8b71b707e0079e27803bedf44135c9a5559f6e1d3449e2d809dbad\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d5580cfd64085975398af3fa140068e9b0c9590eb1210c7219bb0a4735453fa3\",\"dweb:/ipfs/QmemTrz6wVSpagGgz4hADCTaBV3RNQbD1ma7jCfxEXXyQQ\"]},\"src/utils/WhiteList.sol\":{\"keccak256\":\"0xa1aaf784df92b69a4739abd8ed04ff239c8196b11f679a45e0c133793231bde8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://521cb3c7738390b8d7fe55083be1aa6dd30652958e1fc490a7cfc5e7bdc6a1ae\",\"dweb:/ipfs/QmP4fizyQfePUJdeMzbXPMtABqwxuzdyRxeafiuUMgAUGp\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "lpTokenMinted",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ADMIN_DELEGATE_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPERATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20RootVault",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "minLpTokens",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "vaultOptions",
              "type": "bytes"
            },
            {
              "internalType": "bytes32[]",
              "name": "proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAdmin",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "root",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "root_",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateRoot"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "isAdmin(address)": {
            "params": {
              "sender": "Adddress to check"
            },
            "returns": {
              "_0": "`true` if sender is an admin, `false` otherwise"
            }
          },
          "isOperator(address)": {
            "params": {
              "sender": "Adddress to check"
            },
            "returns": {
              "_0": "`true` if sender is an admin, `false` otherwise"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "isAdmin(address)": {
            "notice": "Checks if the address is ADMIN or ADMIN_DELEGATE."
          },
          "isOperator(address)": {
            "notice": "Checks if the address is OPERATOR."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/utils/WhiteList.sol": "WhiteList"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol": {
        "keccak256": "0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247",
        "urls": [
          "bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b",
          "dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac",
        "urls": [
          "bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04",
          "dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
        "urls": [
          "bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
          "dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolGovernance.sol": {
        "keccak256": "0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e",
        "urls": [
          "bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281",
          "dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b"
        ],
        "license": "MIT"
      },
      "src/interfaces/IUnitPricesGovernance.sol": {
        "keccak256": "0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081",
        "urls": [
          "bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87",
          "dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk"
        ],
        "license": "MIT"
      },
      "src/interfaces/IVaultRegistry.sol": {
        "keccak256": "0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55",
        "urls": [
          "bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50",
          "dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1"
        ],
        "license": "MIT"
      },
      "src/interfaces/oracles/IOracle.sol": {
        "keccak256": "0x2d89a1f771e68129d47ae26eccf76f969cd2877e9b7190687056f912c3524b53",
        "urls": [
          "bzz-raw://f378b9f29c18878e73e251ca97abeca819f0789834281ee1399db878f6baedf5",
          "dweb:/ipfs/QmSrFYZWmGdVkgACwwZEfbkPt3kQCSkr6czBi9HVtzNSJg"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IDefaultAccessControl.sol": {
        "keccak256": "0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60",
        "urls": [
          "bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add",
          "dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IERC20RootVaultHelper.sol": {
        "keccak256": "0x58a7fcc0db33c498d00b2ece9876a5fc272f362fb5f96d1b666fc10b5683a38f",
        "urls": [
          "bzz-raw://8ebd1b47e1dee02800bbf211f45a13dc6accfb2e91c645711486bb9e3f5559cd",
          "dweb:/ipfs/QmYFVKRWs73onqQxiUw8AJHfHbhib6nshmAzvCr3T5pqpW"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IAggregateVault.sol": {
        "keccak256": "0x22c60a8c3758f52aeeabf448cff491582357bed969cf9328cd93623ed12df3f9",
        "urls": [
          "bzz-raw://34fc54a3c550f28f0d77bdecad9e2b1083a79f37b6d783277c06741b1ecae35a",
          "dweb:/ipfs/QmdAXG1NpbzNPH6o8NxsVSVmnoUdtQeP9cNxmQ44Dm6qCT"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IERC20RootVault.sol": {
        "keccak256": "0x81fae667b46299223c56ed34d77aa64d7d2a2b19d80167c23f0ba0dcbdd97cf1",
        "urls": [
          "bzz-raw://69b4669c0267163c52c78904f8a090b60b171e76dacc2468c1b8e82e20df8b2a",
          "dweb:/ipfs/QmUwAJcY157nBGxdGEpBTYLmRNW5WbsF74qF7WT8hQVj3k"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVault.sol": {
        "keccak256": "0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43",
        "urls": [
          "bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1",
          "dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultGovernance.sol": {
        "keccak256": "0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813",
        "urls": [
          "bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375",
          "dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultRoot.sol": {
        "keccak256": "0xfc566a9133afe6942e196bcfde5b5e1920094d6f1656885b25b72b91f48c10ef",
        "urls": [
          "bzz-raw://79470664780741869fe81ad1eed10b2afd7d9432ee70be1599f242f102a4deaa",
          "dweb:/ipfs/QmUUPv5juGLrdngD5ZQNcsHxvQzWPG1c8aLjA2nsUC6uJz"
        ],
        "license": "MIT"
      },
      "src/libraries/ExceptionsLibrary.sol": {
        "keccak256": "0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff",
        "urls": [
          "bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f",
          "dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX"
        ],
        "license": "MIT"
      },
      "src/utils/DefaultAccessControl.sol": {
        "keccak256": "0x6c19d12f1a8b71b707e0079e27803bedf44135c9a5559f6e1d3449e2d809dbad",
        "urls": [
          "bzz-raw://d5580cfd64085975398af3fa140068e9b0c9590eb1210c7219bb0a4735453fa3",
          "dweb:/ipfs/QmemTrz6wVSpagGgz4hADCTaBV3RNQbD1ma7jCfxEXXyQQ"
        ],
        "license": "BUSL-1.1"
      },
      "src/utils/WhiteList.sol": {
        "keccak256": "0xa1aaf784df92b69a4739abd8ed04ff239c8196b11f679a45e0c133793231bde8",
        "urls": [
          "bzz-raw://521cb3c7738390b8d7fe55083be1aa6dd30652958e1fc490a7cfc5e7bdc6a1ae",
          "dweb:/ipfs/QmP4fizyQfePUJdeMzbXPMtABqwxuzdyRxeafiuUMgAUGp"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/utils/WhiteList.sol",
    "id": 131000,
    "exportedSymbols": {
      "AccessControl": [
        43168
      ],
      "AccessControlEnumerable": [
        43293
      ],
      "Address": [
        47093
      ],
      "Context": [
        47115
      ],
      "DefaultAccessControl": [
        116053
      ],
      "ERC165": [
        48061
      ],
      "EnumerableSet": [
        49657
      ],
      "ExceptionsLibrary": [
        79454
      ],
      "IAccessControl": [
        43366
      ],
      "IAccessControlEnumerable": [
        43391
      ],
      "IAggregateVault": [
        76190
      ],
      "IDefaultAccessControl": [
        75786
      ],
      "IERC165": [
        48073
      ],
      "IERC20": [
        45207
      ],
      "IERC20Permit": [
        45268
      ],
      "IERC20RootVault": [
        76955
      ],
      "IERC20RootVaultHelper": [
        75804
      ],
      "IERC721": [
        46687
      ],
      "IOracle": [
        75605
      ],
      "IProtocolGovernance": [
        52868
      ],
      "IUnitPricesGovernance": [
        52921
      ],
      "IVault": [
        78599
      ],
      "IVaultGovernance": [
        78668
      ],
      "IVaultRegistry": [
        53012
      ],
      "IVaultRoot": [
        78702
      ],
      "Math": [
        48939
      ],
      "MerkleProof": [
        48037
      ],
      "SafeERC20": [
        45644
      ],
      "SignedMath": [
        49044
      ],
      "Strings": [
        47509
      ],
      "WhiteList": [
        130999
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:2466:435",
    "nodes": [
      {
        "id": 130753,
        "nodeType": "PragmaDirective",
        "src": "37:23:435",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 130754,
        "nodeType": "ImportDirective",
        "src": "62:68:435",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 131000,
        "sourceUnit": 48038,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 130755,
        "nodeType": "ImportDirective",
        "src": "131:65:435",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 131000,
        "sourceUnit": 45645,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 130756,
        "nodeType": "ImportDirective",
        "src": "197:44:435",
        "nodes": [],
        "absolutePath": "src/libraries/ExceptionsLibrary.sol",
        "file": "../libraries/ExceptionsLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 131000,
        "sourceUnit": 79455,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 130757,
        "nodeType": "ImportDirective",
        "src": "242:50:435",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/IERC20RootVault.sol",
        "file": "../interfaces/vaults/IERC20RootVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 131000,
        "sourceUnit": 76956,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 130758,
        "nodeType": "ImportDirective",
        "src": "293:36:435",
        "nodes": [],
        "absolutePath": "src/utils/DefaultAccessControl.sol",
        "file": "./DefaultAccessControl.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 131000,
        "sourceUnit": 116054,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 130999,
        "nodeType": "ContractDefinition",
        "src": "331:2171:435",
        "nodes": [
          {
            "id": 130764,
            "nodeType": "UsingForDirective",
            "src": "380:27:435",
            "nodes": [],
            "libraryName": {
              "id": 130761,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45644,
              "src": "386:9:435"
            },
            "typeName": {
              "id": 130763,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 130762,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45207,
                "src": "400:6:435"
              },
              "referencedDeclaration": 45207,
              "src": "400:6:435",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$45207",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 130768,
            "nodeType": "UsingForDirective",
            "src": "412:36:435",
            "nodes": [],
            "libraryName": {
              "id": 130765,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45644,
              "src": "418:9:435"
            },
            "typeName": {
              "id": 130767,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 130766,
                "name": "IERC20RootVault",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 76955,
                "src": "432:15:435"
              },
              "referencedDeclaration": 76955,
              "src": "432:15:435",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                "typeString": "contract IERC20RootVault"
              }
            }
          },
          {
            "id": 130770,
            "nodeType": "VariableDeclaration",
            "src": "454:19:435",
            "nodes": [],
            "constant": false,
            "functionSelector": "ebf0c717",
            "mutability": "mutable",
            "name": "root",
            "nameLocation": "469:4:435",
            "scope": 130999,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 130769,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "454:7:435",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 130779,
            "nodeType": "FunctionDefinition",
            "src": "480:57:435",
            "nodes": [],
            "body": {
              "id": 130778,
              "nodeType": "Block",
              "src": "535:2:435",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 130775,
                    "name": "admin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 130772,
                    "src": "528:5:435",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 130776,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 130774,
                  "name": "DefaultAccessControl",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116053,
                  "src": "507:20:435"
                },
                "nodeType": "ModifierInvocation",
                "src": "507:27:435"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 130773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130772,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "500:5:435",
                  "nodeType": "VariableDeclaration",
                  "scope": 130779,
                  "src": "492:13:435",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "492:7:435",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "491:15:435"
            },
            "returnParameters": {
              "id": 130777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:0:435"
            },
            "scope": 130999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 130970,
            "nodeType": "FunctionDefinition",
            "src": "612:1319:435",
            "nodes": [],
            "body": {
              "id": 130969,
              "nodeType": "Block",
              "src": "862:1069:435",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    130799
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 130799,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "880:4:435",
                      "nodeType": "VariableDeclaration",
                      "scope": 130969,
                      "src": "872:12:435",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 130798,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "872:7:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 130807,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 130803,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "914:3:435",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 130804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "914:10:435",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 130801,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "897:3:435",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 130802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "897:16:435",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 130805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "897:28:435",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 130800,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "887:9:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 130806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "887:39:435",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "872:54:435"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 130811,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130792,
                            "src": "963:5:435",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "id": 130812,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130770,
                            "src": "970:4:435",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 130813,
                            "name": "leaf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130799,
                            "src": "976:4:435",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 130809,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48037,
                            "src": "944:11:435",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$48037_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 130810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47533,
                          "src": "944:18:435",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 130814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "944:37:435",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 130815,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "983:17:435",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 130816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "FORBIDDEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79414,
                        "src": "983:27:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 130808,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "936:7:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 130817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "936:75:435",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130818,
                  "nodeType": "ExpressionStatement",
                  "src": "936:75:435"
                },
                {
                  "assignments": [
                    130823
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 130823,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "1039:6:435",
                      "nodeType": "VariableDeclaration",
                      "scope": 130969,
                      "src": "1022:23:435",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 130821,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1022:7:435",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 130822,
                        "nodeType": "ArrayTypeName",
                        "src": "1022:9:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 130827,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 130824,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130782,
                        "src": "1048:5:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                          "typeString": "contract IERC20RootVault"
                        }
                      },
                      "id": 130825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "vaultTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78573,
                      "src": "1048:17:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 130826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1048:19:435",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1022:45:435"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 130833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 130829,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130823,
                            "src": "1085:6:435",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 130830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1085:13:435",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 130831,
                            "name": "tokenAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130785,
                            "src": "1102:12:435",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 130832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1102:19:435",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1085:36:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 130834,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "1123:17:435",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 130835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "INVALID_LENGTH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79447,
                        "src": "1123:32:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 130828,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1077:7:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 130836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1077:79:435",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130837,
                  "nodeType": "ExpressionStatement",
                  "src": "1077:79:435"
                },
                {
                  "body": {
                    "id": 130881,
                    "nodeType": "Block",
                    "src": "1210:189:435",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 130855,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1259:3:435",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 130856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1259:10:435",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 130859,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1279:4:435",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_WhiteList_$130999",
                                    "typeString": "contract WhiteList"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_WhiteList_$130999",
                                    "typeString": "contract WhiteList"
                                  }
                                ],
                                "id": 130858,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1271:7:435",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 130857,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1271:7:435",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 130860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1271:13:435",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 130861,
                                "name": "tokenAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 130785,
                                "src": "1286:12:435",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 130863,
                              "indexExpression": {
                                "id": 130862,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 130839,
                                "src": "1299:1:435",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1286:15:435",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 130850,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 130823,
                                    "src": "1231:6:435",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 130852,
                                  "indexExpression": {
                                    "id": 130851,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 130839,
                                    "src": "1238:1:435",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1231:9:435",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 130849,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45207,
                                "src": "1224:6:435",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$45207_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 130853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1224:17:435",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 130854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45328,
                            "src": "1224:34:435",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45207_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45207_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 130864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1224:78:435",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 130865,
                        "nodeType": "ExpressionStatement",
                        "src": "1224:78:435"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 130874,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 130782,
                                  "src": "1364:5:435",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                                    "typeString": "contract IERC20RootVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                                    "typeString": "contract IERC20RootVault"
                                  }
                                ],
                                "id": 130873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1356:7:435",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 130872,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1356:7:435",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 130875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1356:14:435",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 130876,
                                "name": "tokenAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 130785,
                                "src": "1372:12:435",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 130878,
                              "indexExpression": {
                                "id": 130877,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 130839,
                                "src": "1385:1:435",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1372:15:435",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 130867,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 130823,
                                    "src": "1323:6:435",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 130869,
                                  "indexExpression": {
                                    "id": 130868,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 130839,
                                    "src": "1330:1:435",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1323:9:435",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 130866,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45207,
                                "src": "1316:6:435",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$45207_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 130870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1316:17:435",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 130871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeIncreaseAllowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45409,
                            "src": "1316:39:435",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45207_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45207_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 130879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1316:72:435",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 130880,
                        "nodeType": "ExpressionStatement",
                        "src": "1316:72:435"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 130845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 130842,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130839,
                      "src": "1186:1:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 130843,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130823,
                        "src": "1190:6:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 130844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1190:13:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1186:17:435",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 130882,
                  "initializationExpression": {
                    "assignments": [
                      130839
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 130839,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1179:1:435",
                        "nodeType": "VariableDeclaration",
                        "scope": 130882,
                        "src": "1171:9:435",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 130838,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1171:7:435",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 130841,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 130840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1183:1:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1171:13:435"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 130847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1205:3:435",
                      "subExpression": {
                        "id": 130846,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130839,
                        "src": "1207:1:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 130848,
                    "nodeType": "ExpressionStatement",
                    "src": "1205:3:435"
                  },
                  "nodeType": "ForStatement",
                  "src": "1166:233:435"
                },
                {
                  "expression": {
                    "id": 130890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 130883,
                      "name": "actualTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130796,
                      "src": "1409:18:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 130886,
                          "name": "tokenAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130785,
                          "src": "1444:12:435",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        },
                        {
                          "id": 130887,
                          "name": "minLpTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130787,
                          "src": "1458:11:435",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 130888,
                          "name": "vaultOptions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130789,
                          "src": "1471:12:435",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        ],
                        "expression": {
                          "id": 130884,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 130782,
                          "src": "1430:5:435",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                            "typeString": "contract IERC20RootVault"
                          }
                        },
                        "id": 130885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 76937,
                        "src": "1430:13:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256[] memory,uint256,bytes memory) external returns (uint256[] memory)"
                        }
                      },
                      "id": 130889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1430:54:435",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "1409:75:435",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 130891,
                  "nodeType": "ExpressionStatement",
                  "src": "1409:75:435"
                },
                {
                  "body": {
                    "id": 130937,
                    "nodeType": "Block",
                    "src": "1538:173:435",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 130911,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 130782,
                                  "src": "1590:5:435",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                                    "typeString": "contract IERC20RootVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                                    "typeString": "contract IERC20RootVault"
                                  }
                                ],
                                "id": 130910,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1582:7:435",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 130909,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1582:7:435",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 130912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1582:14:435",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 130913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1598:1:435",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 130904,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 130823,
                                    "src": "1559:6:435",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 130906,
                                  "indexExpression": {
                                    "id": 130905,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 130893,
                                    "src": "1566:1:435",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1559:9:435",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 130903,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45207,
                                "src": "1552:6:435",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$45207_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 130907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1552:17:435",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 130908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45372,
                            "src": "1552:29:435",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45207_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45207_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 130914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1552:48:435",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 130915,
                        "nodeType": "ExpressionStatement",
                        "src": "1552:48:435"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 130922,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1645:3:435",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 130923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1645:10:435",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 130932,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "1693:4:435",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_WhiteList_$130999",
                                        "typeString": "contract WhiteList"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_WhiteList_$130999",
                                        "typeString": "contract WhiteList"
                                      }
                                    ],
                                    "id": 130931,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1685:7:435",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 130930,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1685:7:435",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 130933,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1685:13:435",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 130925,
                                        "name": "tokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 130823,
                                        "src": "1664:6:435",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 130927,
                                      "indexExpression": {
                                        "id": 130926,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 130893,
                                        "src": "1671:1:435",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1664:9:435",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 130924,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45207,
                                    "src": "1657:6:435",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$45207_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 130928,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1657:17:435",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$45207",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 130929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45164,
                                "src": "1657:27:435",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 130934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1657:42:435",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 130917,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 130823,
                                    "src": "1621:6:435",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 130919,
                                  "indexExpression": {
                                    "id": 130918,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 130893,
                                    "src": "1628:1:435",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1621:9:435",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 130916,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45207,
                                "src": "1614:6:435",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$45207_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 130920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1614:17:435",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$45207",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 130921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45301,
                            "src": "1614:30:435",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45207_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45207_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 130935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1614:86:435",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 130936,
                        "nodeType": "ExpressionStatement",
                        "src": "1614:86:435"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 130899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 130896,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130893,
                      "src": "1514:1:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 130897,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130823,
                        "src": "1518:6:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 130898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1518:13:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1514:17:435",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 130938,
                  "initializationExpression": {
                    "assignments": [
                      130893
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 130893,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1507:1:435",
                        "nodeType": "VariableDeclaration",
                        "scope": 130938,
                        "src": "1499:9:435",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 130892,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1499:7:435",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 130895,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 130894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1511:1:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1499:13:435"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 130901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1533:3:435",
                      "subExpression": {
                        "id": 130900,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130893,
                        "src": "1535:1:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 130902,
                    "nodeType": "ExpressionStatement",
                    "src": "1533:3:435"
                  },
                  "nodeType": "ForStatement",
                  "src": "1494:217:435"
                },
                {
                  "assignments": [
                    130940
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 130940,
                      "mutability": "mutable",
                      "name": "lpTokenMinted",
                      "nameLocation": "1729:13:435",
                      "nodeType": "VariableDeclaration",
                      "scope": 130969,
                      "src": "1721:21:435",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 130939,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1721:7:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 130948,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 130945,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1769:4:435",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WhiteList_$130999",
                              "typeString": "contract WhiteList"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WhiteList_$130999",
                              "typeString": "contract WhiteList"
                            }
                          ],
                          "id": 130944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1761:7:435",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 130943,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1761:7:435",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 130946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1761:13:435",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 130941,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130782,
                        "src": "1745:5:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                          "typeString": "contract IERC20RootVault"
                        }
                      },
                      "id": 130942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45164,
                      "src": "1745:15:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 130947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1745:30:435",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1721:54:435"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 130952,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1804:3:435",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 130953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1804:10:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 130954,
                        "name": "lpTokenMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130940,
                        "src": "1816:13:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 130949,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130782,
                        "src": "1785:5:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                          "typeString": "contract IERC20RootVault"
                        }
                      },
                      "id": 130951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45301,
                      "src": "1785:18:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$45207_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$45207_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 130955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1785:45:435",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130956,
                  "nodeType": "ExpressionStatement",
                  "src": "1785:45:435"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 130958,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1854:3:435",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 130959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1854:10:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 130962,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 130782,
                            "src": "1874:5:435",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                              "typeString": "contract IERC20RootVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                              "typeString": "contract IERC20RootVault"
                            }
                          ],
                          "id": 130961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1866:7:435",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 130960,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1866:7:435",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 130963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1866:14:435",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 130964,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130823,
                        "src": "1882:6:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 130965,
                        "name": "actualTokenAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130796,
                        "src": "1890:18:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 130966,
                        "name": "lpTokenMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 130940,
                        "src": "1910:13:435",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 130957,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130998,
                      "src": "1846:7:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address[] memory,uint256[] memory,uint256)"
                      }
                    },
                    "id": 130967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1846:78:435",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130968,
                  "nodeType": "EmitStatement",
                  "src": "1841:83:435"
                }
              ]
            },
            "functionSelector": "6c5d6eea",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "621:7:435",
            "parameters": {
              "id": 130793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130782,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "654:5:435",
                  "nodeType": "VariableDeclaration",
                  "scope": 130970,
                  "src": "638:21:435",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                    "typeString": "contract IERC20RootVault"
                  },
                  "typeName": {
                    "id": 130781,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 130780,
                      "name": "IERC20RootVault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76955,
                      "src": "638:15:435"
                    },
                    "referencedDeclaration": 76955,
                    "src": "638:15:435",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20RootVault_$76955",
                      "typeString": "contract IERC20RootVault"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130785,
                  "mutability": "mutable",
                  "name": "tokenAmounts",
                  "nameLocation": "688:12:435",
                  "nodeType": "VariableDeclaration",
                  "scope": 130970,
                  "src": "669:31:435",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 130783,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "669:7:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 130784,
                    "nodeType": "ArrayTypeName",
                    "src": "669:9:435",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130787,
                  "mutability": "mutable",
                  "name": "minLpTokens",
                  "nameLocation": "718:11:435",
                  "nodeType": "VariableDeclaration",
                  "scope": 130970,
                  "src": "710:19:435",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 130786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:435",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130789,
                  "mutability": "mutable",
                  "name": "vaultOptions",
                  "nameLocation": "754:12:435",
                  "nodeType": "VariableDeclaration",
                  "scope": 130970,
                  "src": "739:27:435",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 130788,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "739:5:435",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130792,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "795:5:435",
                  "nodeType": "VariableDeclaration",
                  "scope": 130970,
                  "src": "776:24:435",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 130790,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "776:7:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 130791,
                    "nodeType": "ArrayTypeName",
                    "src": "776:9:435",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "628:178:435"
            },
            "returnParameters": {
              "id": 130797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130796,
                  "mutability": "mutable",
                  "name": "actualTokenAmounts",
                  "nameLocation": "842:18:435",
                  "nodeType": "VariableDeclaration",
                  "scope": 130970,
                  "src": "825:35:435",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 130794,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "825:7:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 130795,
                    "nodeType": "ArrayTypeName",
                    "src": "825:9:435",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "824:37:435"
            },
            "scope": 130999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 130983,
            "nodeType": "FunctionDefinition",
            "src": "1937:98:435",
            "nodes": [],
            "body": {
              "id": 130982,
              "nodeType": "Block",
              "src": "1981:54:435",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 130975,
                      "name": "_requireAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116034,
                      "src": "1991:13:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 130976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1991:15:435",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130977,
                  "nodeType": "ExpressionStatement",
                  "src": "1991:15:435"
                },
                {
                  "expression": {
                    "id": 130980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 130978,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130770,
                      "src": "2016:4:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 130979,
                      "name": "root_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130972,
                      "src": "2023:5:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2016:12:435",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 130981,
                  "nodeType": "ExpressionStatement",
                  "src": "2016:12:435"
                }
              ]
            },
            "functionSelector": "21ff9970",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateRoot",
            "nameLocation": "1946:10:435",
            "parameters": {
              "id": 130973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130972,
                  "mutability": "mutable",
                  "name": "root_",
                  "nameLocation": "1965:5:435",
                  "nodeType": "VariableDeclaration",
                  "scope": 130983,
                  "src": "1957:13:435",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 130971,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1957:7:435",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1956:15:435"
            },
            "returnParameters": {
              "id": 130974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1981:0:435"
            },
            "scope": 130999,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 130998,
            "nodeType": "EventDefinition",
            "src": "2327:173:435",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 130984,
              "nodeType": "StructuredDocumentation",
              "src": "2041:281:435",
              "text": "@notice Emitted when liquidity is deposited\n @param from The source address for the liquidity\n @param tokens ERC20 tokens deposited\n @param actualTokenAmounts Token amounts deposited\n @param lpTokenMinted LP tokens received by the liquidity provider"
            },
            "name": "Deposit",
            "nameLocation": "2333:7:435",
            "parameters": {
              "id": 130997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 130986,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2366:4:435",
                  "nodeType": "VariableDeclaration",
                  "scope": 130998,
                  "src": "2350:20:435",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2350:7:435",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130988,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2396:2:435",
                  "nodeType": "VariableDeclaration",
                  "scope": 130998,
                  "src": "2380:18:435",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2380:7:435",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130991,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "2418:6:435",
                  "nodeType": "VariableDeclaration",
                  "scope": 130998,
                  "src": "2408:16:435",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 130989,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2408:7:435",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 130990,
                    "nodeType": "ArrayTypeName",
                    "src": "2408:9:435",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130994,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "actualTokenAmounts",
                  "nameLocation": "2444:18:435",
                  "nodeType": "VariableDeclaration",
                  "scope": 130998,
                  "src": "2434:28:435",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 130992,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2434:7:435",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 130993,
                    "nodeType": "ArrayTypeName",
                    "src": "2434:9:435",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 130996,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lpTokenMinted",
                  "nameLocation": "2480:13:435",
                  "nodeType": "VariableDeclaration",
                  "scope": 130998,
                  "src": "2472:21:435",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 130995,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2472:7:435",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2340:159:435"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 130759,
              "name": "DefaultAccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 116053,
              "src": "353:20:435"
            },
            "id": 130760,
            "nodeType": "InheritanceSpecifier",
            "src": "353:20:435"
          }
        ],
        "canonicalName": "WhiteList",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          130999,
          116053,
          43293,
          43168,
          48061,
          48073,
          75786,
          43391,
          43366,
          47115
        ],
        "name": "WhiteList",
        "nameLocation": "340:9:435",
        "scope": 131000,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 435
}