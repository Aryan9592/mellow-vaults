{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "internalParams_",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "CommitedInternalParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "vaultTokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "vaultAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vaultNft",
          "type": "uint256"
        }
      ],
      "name": "DeployedVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "assetInIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assetOutIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct IVault.BatchSwapStep[]",
              "name": "swaps",
              "type": "tuple[]"
            },
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ],
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple"
            },
            {
              "internalType": "contract IAggregatorV3",
              "name": "rewardOracle",
              "type": "address"
            },
            {
              "internalType": "contract IAggregatorV3",
              "name": "underlyingOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slippageD",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IBalancerV2VaultGovernance.StrategyParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "SetStrategyParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "params",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        }
      ],
      "name": "StagedInternalParams",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "commitInternalParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractNameBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersionBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pool_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "balancerVault_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "stakingLiquidityGauge_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "balancerMinter_",
          "type": "address"
        }
      ],
      "name": "createVault",
      "outputs": [
        {
          "internalType": "contract IBalancerV2Vault",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delayedProtocolParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedProtocolPerVaultParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedStrategyParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "internalParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "internalParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "assetInIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assetOutIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct IVault.BatchSwapStep[]",
              "name": "swaps",
              "type": "tuple[]"
            },
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ],
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple"
            },
            {
              "internalType": "contract IAggregatorV3",
              "name": "rewardOracle",
              "type": "address"
            },
            {
              "internalType": "contract IAggregatorV3",
              "name": "underlyingOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slippageD",
              "type": "uint256"
            }
          ],
          "internalType": "struct IBalancerV2VaultGovernance.StrategyParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "setStrategyParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "newParams",
          "type": "tuple"
        }
      ],
      "name": "stageInternalParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stagedInternalParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "strategyParams",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "poolId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "assetInIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "assetOutIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "userData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct IVault.BatchSwapStep[]",
              "name": "swaps",
              "type": "tuple[]"
            },
            {
              "internalType": "contract IAsset[]",
              "name": "assets",
              "type": "address[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "fromInternalBalance",
                  "type": "bool"
                },
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "toInternalBalance",
                  "type": "bool"
                }
              ],
              "internalType": "struct IVault.FundManagement",
              "name": "funds",
              "type": "tuple"
            },
            {
              "internalType": "contract IAggregatorV3",
              "name": "rewardOracle",
              "type": "address"
            },
            {
              "internalType": "contract IAggregatorV3",
              "name": "underlyingOracle",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slippageD",
              "type": "uint256"
            }
          ],
          "internalType": "struct IBalancerV2VaultGovernance.StrategyParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "350:3673:453:-:0;;;547:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1762:34:477;;1813:30;;;;;;;;;;;;-1:-1:-1;;;1813:30:477;;;;614:15:453;;-1:-1:-1;;;;;1754:57:477;1746:98;;;;-1:-1:-1;;;1746:98:477;;;;;;;;:::i;:::-;;;;;;;;;;1907:1;-1:-1:-1;;;;;1862:47:477;1870:15;:24;;;-1:-1:-1;;;;;1862:47:477;;;1911:30;;;;;;;;;;;;;-1:-1:-1;;;1911:30:477;;;1854:88;;;;;-1:-1:-1;;;1854:88:477;;;;;;;;:::i;:::-;-1:-1:-1;1968:25:477;;;;;2010:30;;;;;;;;;;;-1:-1:-1;;;2010:30:477;;;;-1:-1:-1;;;;;1960:48:477;1952:89;;;;-1:-1:-1;;;1952:89:477;;;;;;;;:::i;:::-;-1:-1:-1;2051:33:477;;:15;:33;;-1:-1:-1;;;;;;2051:33:477;;;-1:-1:-1;;;;;2051:33:477;;;;;;;;;;;-1:-1:-1;2051:33:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;350:3673:453;;14:152:488;-1:-1:-1;;;;;110:31:488;;100:42;;90:70;;156:1;153;146:12;90:70;14:152;:::o;171:941::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;376:2;370:9;418:2;406:15;;-1:-1:-1;;;;;436:34:488;;472:22;;;433:62;430:185;;;537:10;532:3;528:20;525:1;518:31;572:4;569:1;562:15;600:4;597:1;590:15;430:185;631:2;624:22;668:16;;693:52;668:16;693:52;:::i;:::-;754:21;;820:2;805:18;;799:25;833:54;799:25;833:54;:::i;:::-;915:2;903:15;;896:32;973:2;958:18;;952:25;986:54;952:25;986:54;:::i;:::-;1068:2;1056:15;;1049:32;1060:6;171:941;-1:-1:-1;;;171:941:488:o;1117:597::-;1229:4;1258:2;1287;1276:9;1269:21;1319:6;1313:13;1362:6;1357:2;1346:9;1342:18;1335:34;1387:1;1397:140;1411:6;1408:1;1405:13;1397:140;;;1506:14;;;1502:23;;1496:30;1472:17;;;1491:2;1468:26;1461:66;1426:10;;1397:140;;;1555:6;1552:1;1549:13;1546:91;;;1625:1;1620:2;1611:6;1600:9;1596:22;1592:31;1585:42;1546:91;-1:-1:-1;1698:2:488;1677:15;-1:-1:-1;;1673:29:488;1658:45;;;;1705:2;1654:54;;1117:597;-1:-1:-1;;;1117:597:488:o;:::-;350:3673:453;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80636707acee11610097578063a0a8e46011610066578063a0a8e460146102bf578063c6be9b22146102c7578063d4a07d34146102f9578063e4af6e791461030157600080fd5b80636707acee146101d757806375d0c0dc146101f75780637ac46fbb1461020c57806386c6be3e1461026c57600080fd5b806312466b68116100d357806312466b681461017c5780631c7f4c731461019c578063511ce798146101a45780635c7017cc146101c457600080fd5b806301ffc9a71461010557806306a462391461012d57806309946538146101455780630e3e80ac1461015a575b600080fd5b610118610113366004611143565b610309565b60405190151581526020015b60405180910390f35b640312e302e360dc1b5b604051908152602001610124565b610158610153366004611219565b61033a565b005b7842616c616e63657256325661756c74476f7665726e616e636560381b610137565b61018f61018a36600461128a565b61052c565b6040516101249190611343565b600654610137565b6101376101b236600461128a565b6000908152600c602052604090205490565b6101586101d2366004611475565b61072a565b6101376101e536600461128a565b60009081526009602052604090205490565b6101ff610852565b60405161012491906114c3565b61025f604080516060810182526000808252602082018190529181019190915250604080516060810182526000546001600160a01b03908116825260015481166020830152600254169181019190915290565b60405161012491906114d6565b61025f604080516060810182526000808252602082018190529181019190915250604080516060810182526003546001600160a01b03908116825260045481166020830152600554169181019190915290565b6101ff610879565b6102da6102d5366004611539565b61088c565b604080516001600160a01b039093168352602083019190915201610124565b610158610998565b600f54610137565b600061031482610ac2565b8061032f575063444473c360e11b6001600160e01b03198316145b92915050565b905090565b610342610af8565b805160408051808201909152600281526120ad60f11b6020820152906001600160a01b031661038d5760405162461bcd60e51b815260040161038491906114c3565b60405180910390fd5b5060006001600160a01b031681602001516001600160a01b031614156040518060400160405280600281526020016120ad60f11b815250906103e25760405162461bcd60e51b815260040161038491906114c3565b506040808201518151808301909252600282526120ad60f11b60208301526001600160a01b03166104265760405162461bcd60e51b815260040161038491906114c3565b508051600380546001600160a01b03199081166001600160a01b03938416179091556020808401516004805484169185169190911781556040808601516005805490951690861617909355600054835163bba3293960e01b8152935194169363bba3293993808301939290829003018186803b1580156104a557600080fd5b505afa1580156104b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dd919061162a565b6104e79042611659565b6006819055604051339132917f0887cab3184f7c02b16978ab31f8acee05979f59fc3da6abe5bf71105ec3179d9161052191869190611671565b60405180910390a350565b6105836040805160c081018252606080825260208083018290528351608081018552600080825291810182905280850182905291820152909182019081526000602082018190526040820181905260609091015290565b6000828152601060205260409020805461059c906116ae565b151590506106805760408051600060c0820181815260e0830190935290918291610609565b6105f66040518060a0016040528060008019168152602001600081526020016000815260200160008152602001606081525090565b8152602001906001900390816105c15790505b508152602001600060405190808252806020026020018201604052801561063a578160200160208202803683370190505b5081526040805160808082018352600080835260208381018290528385018290526060808501839052908601939093529284018390529083018290529091015292915050565b60008281526010602052604090208054610699906116ae565b80601f01602080910402602001604051908101604052809291908181526020018280546106c5906116ae565b80156107125780601f106106e757610100808354040283529160200191610712565b820191906000526020600020905b8154815290600101906020018083116106f557829003601f168201915b505050505080602001905181019061032f9190611938565b60006107368280611a09565b90501180156107535750600161074f6020830183611a09565b9050115b80156107785750600061076c60e0830160c08401611a59565b6001600160a01b031614155b801561079e57506000610792610100830160e08401611a59565b6001600160a01b031614155b6040518060400160405280600381526020016224a72b60e91b815250906107d85760405162461bcd60e51b815260040161038491906114c3565b5061080282826040516020016107ee9190611b84565b604051602081830303815290604052610bb0565b81336001600160a01b0316326001600160a01b03167f1fdaade9ffbe7e868e23f5165c1cda9a14042befdaf756413e8a1b48115d27e9846040516108469190611b84565b60405180910390a45050565b60606103357842616c616e63657256325661756c74476f7665726e616e636560381b610bdd565b6060610335640312e302e360dc1b610bdd565b600080600061089a88610c49565b6040516369e99c5760e11b815291945092508391506001600160a01b0382169063d3d338ae906108d89085908d908c908c908c908c90600401611d03565b600060405180830381600087803b1580156108f257600080fd5b505af1158015610906573d6000803e3d6000fd5b5050604080516001600160a01b038b811660208301528a811692820192909252888216606082015290871660808201523392503291507f8a4513c05d15df8ece912856923273e166e39f5c9c2b43d2b38594023494a0e0908c9060a00160408051601f198184030181529082905261098492918e9088908a90611d4f565b60405180910390a350965096945050505050565b6109a0610af8565b6006546040805180820190915260048152631395531360e21b6020820152906109dc5760405162461bcd60e51b815260040161038491906114c3565b5060065442101560405180604001604052806002815260200161545360f01b81525090610a1c5760405162461bcd60e51b815260040161038491906114c3565b5060038054600080546001600160a01b038084166001600160a01b03199283168117845560048054600180548286169087168117909155600580546002805497821697891688179055600698909855978616909855841690559290911690925560408051918252602082019390935291820152339032907fef3e4bc9725fa684957d7de03c6dcd01078ee86cf78ceef25c5f8346df69cc999060600160405180910390a3565b60006301ffc9a760e01b6001600160e01b03198316148061032f57506001600160e01b0319821663effda0f560e01b1492915050565b600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610b3b57600080fd5b505afa158015610b4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b739190611d99565b6040518060400160405280600381526020016223292160e91b81525090610bad5760405162461bcd60e51b815260040161038491906114c3565b50565b610bb982610e3a565b60008281526010602090815260409091208251610bd8928401906110aa565b505050565b604080516020808252818301909252606091602082018180368337019050509050602060005b6020811015610c3b57838160208110610c1e57610c1e611db6565b1a610c2b57809150610c3b565b610c3481611dcc565b9050610c03565b508152602081019190915290565b600080546040516363e85d2d60e01b81523360048201526001602482015282916001600160a01b03169081906363e85d2d9060440160206040518083038186803b158015610c9657600080fd5b505afa158015610caa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cce9190611d99565b6040518060400160405280600381526020016223292160e91b81525090610d085760405162461bcd60e51b815260040161038491906114c3565b5060015460408051631112eee760e31b815290516001600160a01b039092169182916388977738916004808301926020929190829003018186803b158015610d4f57600080fd5b505afa158015610d63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d87919061162a565b610d92906001611659565b600254909350610dab906001600160a01b03168461100d565b6040516305c4fdf960e01b81526001600160a01b0380831660048301528781166024830152919550908216906305c4fdf990604401602060405180830381600087803b158015610dfa57600080fd5b505af1158015610e0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e32919061162a565b505050915091565b600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b158015610e7d57600080fd5b505afa158015610e91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb59190611d99565b80610f42575060015460405163020604bf60e21b81526004810183905233916001600160a01b03169063081812fc9060240160206040518083038186803b158015610eff57600080fd5b505afa158015610f13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f379190611de7565b6001600160a01b0316145b80610fcf57506001546040516331a9108f60e11b81526004810183905233916001600160a01b031690636352211e9060240160206040518083038186803b158015610f8c57600080fd5b505afa158015610fa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc49190611de7565b6001600160a01b0316145b6040518060400160405280600381526020016223292160e91b815250906110095760405162461bcd60e51b815260040161038491906114c3565b5050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b03811661032f5760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610384565b8280546110b6906116ae565b90600052602060002090601f0160209004810192826110d8576000855561111e565b82601f106110f157805160ff191683800117855561111e565b8280016001018555821561111e579182015b8281111561111e578251825591602001919060010190611103565b5061112a92915061112e565b5090565b5b8082111561112a576000815560010161112f565b60006020828403121561115557600080fd5b81356001600160e01b03198116811461116d57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156111ac576111ac611174565b60405290565b60405160c081016001600160401b03811182821017156111ac576111ac611174565b604051601f8201601f191681016001600160401b03811182821017156111fc576111fc611174565b604052919050565b6001600160a01b0381168114610bad57600080fd5b60006060828403121561122b57600080fd5b604051606081018181106001600160401b038211171561124d5761124d611174565b604052823561125b81611204565b8152602083013561126b81611204565b6020820152604083013561127e81611204565b60408201529392505050565b60006020828403121561129c57600080fd5b5035919050565b60005b838110156112be5781810151838201526020016112a6565b838111156112cd576000848401525b50505050565b600081518084526112eb8160208601602086016112a3565b601f01601f19169290920160200192915050565b600081518084526020808501945080840160005b838110156113385781516001600160a01b031687529582019590820190600101611313565b509495945050505050565b602080825282516101208383018190528151610140850181905260009392610160600583901b87018101939185019290870190865b818110156113db5788860361015f190183528451805187528781015188880152604080820151908801526060808201519088015260809081015160a0918801829052906113c7818901836112d3565b975050509386019391860191600101611378565b50505092860151858303601f19016040870152926113f983856112ff565b93506040870151925061143f606087018480516001600160a01b039081168352602080830151151590840152604080830151909116908301526060908101511515910152565b60608701516001600160a01b0390811660e088015260808801511661010087015260a09096015195909401949094529392505050565b6000806040838503121561148857600080fd5b8235915060208301356001600160401b038111156114a557600080fd5b830161012081860312156114b857600080fd5b809150509250929050565b60208152600061116d60208301846112d3565b6060810161032f828480516001600160a01b03908116835260208083015182169084015260409182015116910152565b60006001600160401b0382111561151f5761151f611174565b5060051b60200190565b803561153481611204565b919050565b60008060008060008060c0878903121561155257600080fd5b86356001600160401b0381111561156857600080fd5b8701601f8101891361157957600080fd5b8035602061158e61158983611506565b6111d4565b82815260059290921b8301810191818101908c8411156115ad57600080fd5b938201935b838510156115d45784356115c581611204565b825293820193908201906115b2565b99506115e390508a8201611529565b97505050506115f460408801611529565b935061160260608801611529565b925061161060808801611529565b915061161e60a08801611529565b90509295509295509295565b60006020828403121561163c57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561166c5761166c611643565b500190565b608081016116a1828580516001600160a01b03908116835260208083015182169084015260409182015116910152565b8260608301529392505050565b600181811c908216806116c257607f821691505b602082108114156116e357634e487b7160e01b600052602260045260246000fd5b50919050565b600082601f8301126116fa57600080fd5b8151602061170a61158983611506565b82815260059290921b8401810191818101908684111561172957600080fd5b8286015b848110156118265780516001600160401b038082111561174d5760008081fd5b9088019060a0601f19838c0381018213156117685760008081fd5b61177061118a565b848901518152604080860151828b015260608087015182840152608080880151828501529487015194868611156117a957600091508182fd5b85880197508f603f8901126117c057600095508586fd5b8b8801519550868611156117d6576117d6611174565b6117e68c86601f890116016111d4565b96508587528f83878a010111156117ff57600094508485fd5b61180e868d8901858b016112a3565b8301959095525087525050509284019250830161172d565b509695505050505050565b600082601f83011261184257600080fd5b8151602061185261158983611506565b82815260059290921b8401810191818101908684111561187157600080fd5b8286015b8481101561182657805161188881611204565b8352918301918301611875565b8015158114610bad57600080fd5b6000608082840312156118b557600080fd5b604051608081018181106001600160401b03821117156118d7576118d7611174565b806040525080915082516118ea81611204565b815260208301516118fa81611895565b6020820152604083015161190d81611204565b6040820152606083015161192081611895565b6060919091015292915050565b805161153481611204565b60006020828403121561194a57600080fd5b81516001600160401b038082111561196157600080fd5b90830190610120828603121561197657600080fd5b61197e6111b2565b82518281111561198d57600080fd5b611999878286016116e9565b8252506020830151828111156119ae57600080fd5b6119ba87828601611831565b6020830152506119cd86604085016118a3565b60408201526119de60c0840161192d565b60608201526119ef60e0840161192d565b6080820152610100929092015160a0830152509392505050565b6000808335601e19843603018112611a2057600080fd5b8301803591506001600160401b03821115611a3a57600080fd5b6020019150600581901b3603821315611a5257600080fd5b9250929050565b600060208284031215611a6b57600080fd5b813561116d81611204565b6000808335601e19843603018112611a8d57600080fd5b83016020810192503590506001600160401b03811115611aac57600080fd5b8060051b3603831315611a5257600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8183526000602080850194508260005b85811015611338578135611b0a81611204565b6001600160a01b031687529582019590820190600101611af7565b8035611b3081611204565b6001600160a01b039081168352602082013590611b4c82611895565b9015156020840152604082013590611b6382611204565b1660408301526060810135611b7781611895565b8015156060840152505050565b600060208083526101408301611b9a8586611a76565b61012084870181905292819052610160600582901b87018101939087018360005b84811015611c715789870361015f19018352813536879003609e19018112611be257600080fd5b8601803588528881013589890152604080820135908901526060808201359089015260a060808083013536849003601e19018112611c1f57600080fd5b830180356001600160401b03811115611c3757600080fd5b803603851315611c4657600080fd5b83838d0152611c5a848d01828f8501611abe565b9b505050948a019450505090870190600101611bbb565b505050611c8085890189611a76565b888603601f190160408a015295509250611c9b848685611ae7565b9450611cad6060880160408a01611b25565b611cb960c08901611529565b6001600160a01b03811660e08901529350611cd660e08901611529565b93506101009250611cf1838801856001600160a01b03169052565b91909601359401939093529392505050565b86815260c060208201526000611d1c60c08301886112ff565b6001600160a01b039687166040840152948616606083015250918416608083015290921660a09092019190915292915050565b60a081526000611d6260a08301886112ff565b8281036020840152611d7481886112d3565b6001600160a01b03968716604085015294909516606083015250608001529392505050565b600060208284031215611dab57600080fd5b815161116d81611895565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611de057611de0611643565b5060010190565b600060208284031215611df957600080fd5b815161116d8161120456fea2646970667358221220d33e28f2b726bee954ce068d410f8feefc0986e891def0db8072461062d90db364736f6c63430008090033",
    "sourceMap": "350:3673:453:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1626:214;;;;;;:::i;:::-;;:::i;:::-;;;470:14:488;;463:22;445:41;;433:2;418:18;1626:214:453;;;;;;;;592:106:410;-1:-1:-1;;;592:106:410;;;643:25:488;;;631:2;616:18;592:106:410;497:177:488;3528:643:477;;;;;;:::i;:::-;;:::i;:::-;;355:100:410;-1:-1:-1;;;355:100:410;592:106;751:841:453;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2763:115:477:-;2847:24;;2763:115;;2387:161;;;;;;:::i;:::-;2471:7;2497:44;;;:39;:44;;;;;;;2387:161;1962:490:453;;;;;;:::i;:::-;;:::i;2199:145:477:-;;;;;;:::i;:::-;2275:7;2301:36;;;:31;:36;;;;;;;2199:145;230:119:410;;;:::i;:::-;;;;;;;:::i;2921:111:477:-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;3003:22:477;;;;;;;;3010:15;3003:22;-1:-1:-1;;;;;3003:22:477;;;;;;;;;;;;;;;;;;;;;;;;2921:111;;;;;;;;:::i;3075:123::-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;3163:28:477;;;;;;;;3170:21;3163:28;-1:-1:-1;;;;;3163:28:477;;;;;;;;;;;;;;;;;;;;;;;;3075:123;461:125:410;;;:::i;2505:754:453:-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;9704:32:488;;;9686:51;;9768:2;9753:18;;9746:34;;;;9659:18;2505:754:453;9486:300:488;4214:449:477;;;:::i;2591:129::-;2682:31;;2591:129;;1626:214:453;1711:4;1734:36;1758:11;1734:23;:36::i;:::-;:99;;;-1:-1:-1;;;;;;;;;;1774:59:453;;;1734:99;1727:106;1626:214;-1:-1:-1;;1626:214:453:o;673:18:410:-;666:25;;592:106;:::o;3528:643:477:-;3609:23;:21;:23::i;:::-;3658:28;;3703:30;;;;;;;;;;;;-1:-1:-1;;;3703:30:477;;;;;-1:-1:-1;;;;;3650:51:477;3642:92;;;;-1:-1:-1;;;3642:92:477;;;;;;;;:::i;:::-;;;;;;;;;;3791:1;-1:-1:-1;;;;;3752:41:477;3760:9;:18;;;-1:-1:-1;;;;;3752:41:477;;;3795:30;;;;;;;;;;;;;-1:-1:-1;;;3795:30:477;;;3744:82;;;;;-1:-1:-1;;;3744:82:477;;;;;;;;:::i;:::-;-1:-1:-1;3852:19:477;;;;;3888:30;;;;;;;;;;;-1:-1:-1;;;3888:30:477;;;;-1:-1:-1;;;;;3844:42:477;3836:83;;;;-1:-1:-1;;;3836:83:477;;;;;;;;:::i;:::-;-1:-1:-1;3929:33:477;;:21;:33;;-1:-1:-1;;;;;;3929:33:477;;;-1:-1:-1;;;;;3929:33:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4017:34:477;:52;;-1:-1:-1;;;4017:52:477;;;;:34;;;:50;;:52;;;;3929:33;4017:52;;;;;;:34;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3999:70;;:15;:70;:::i;:::-;3972:24;:97;;;4084:80;;4116:10;;4105:9;;4084:80;;;;4128:9;;3972:97;4084:80;:::i;:::-;;;;;;;;3528:643;:::o;751:841:453:-;811:21;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;811:21:453;848:20;;;;:15;:20;;;;;:27;;;;;:::i;:::-;:32;844:675;;-1:-1:-1;844:675:453;;919:589;;;-1:-1:-1;919:589:453;;;963:37;;;;;;;;;919:589;;;;963:37;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;963:37:453;;;;;;;;;;;;;;;;-1:-1:-1;919:589:453;;;;1043:1;1030:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1030:15:453;-1:-1:-1;919:589:453;;1074:255;;;;;;;;;-1:-1:-1;1074:255:453;;;919:589;1074:255;;;;;;;;;;;;;;;;;;;919:589;;;;;;;;;;;;;;;;;;;;;;;896:612;751:841;-1:-1:-1;;751:841:453:o;844:675::-;1546:20;;;;:15;:20;;;;;1535:50;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1962:490::-;2096:1;2074:12;:6;;:12;:::i;:::-;:19;;:23;:67;;;;-1:-1:-1;2140:1:453;2117:13;;;;:6;:13;:::i;:::-;:20;;:24;2074:67;:129;;;;-1:-1:-1;2201:1:453;2169:19;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2161:42:453;;;2074:129;:195;;;;-1:-1:-1;2267:1:453;2231:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2223:46:453;;;2074:195;2283:31;;;;;;;;;;;;;-1:-1:-1;;;2283:31:453;;;2053:271;;;;;-1:-1:-1;;;2053:271:453;;;;;;;;:::i;:::-;;2334:43;2353:3;2369:6;2358:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;2334;:43::i;:::-;2433:3;2421:10;-1:-1:-1;;;;;2392:53:453;2410:9;-1:-1:-1;;;;;2392:53:453;;2438:6;2392:53;;;;;;:::i;:::-;;;;;;;;1962:490;;:::o;230:119:410:-;277:13;309:33;-1:-1:-1;;;309:16:410;:33::i;461:125::-;511:13;543:36;-1:-1:-1;;;309:16:410;:33::i;2505:754:453:-;2741:22;2765:11;2788:13;2826:20;2839:6;2826:12;:20::i;:::-;2898:99;;-1:-1:-1;;;2898:99:453;;2811:35;;-1:-1:-1;2811:35:453;-1:-1:-1;2811:35:453;;-1:-1:-1;;;;;;2898:16:453;;;;;:99;;2811:35;;2920:12;;2934:5;;2941:14;;2957:22;;2981:15;;2898:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3112:74:453;;;-1:-1:-1;;;;;23812:15:488;;;3112:74:453;;;23794:34:488;23864:15;;;23844:18;;;23837:43;;;;23916:15;;;23896:18;;;23889:43;23968:15;;;23948:18;;;23941:43;3062:10:453;;-1:-1:-1;3039:9:453;;-1:-1:-1;3012:240:453;;3086:12;;23728:19:488;;3112:74:453;;;-1:-1:-1;;3112:74:453;;;;;;;;;;3012:240;;;3200:6;;3220:5;;3239:3;;3012:240;:::i;:::-;;;;;;;;2778:481;2505:754;;;;;;;;;:::o;4214:449:477:-;4265:23;:21;:23::i;:::-;4306:24;;4337:22;;;;;;;;;;;;-1:-1:-1;;;4337:22:477;;;;;4298:62;;;;-1:-1:-1;;;4298:62:477;;;;;;;;:::i;:::-;;4397:24;;4378:15;:43;;4423:27;;;;;;;;;;;;;-1:-1:-1;;;4423:27:477;;;4370:81;;;;;-1:-1:-1;;;4370:81:477;;;;;;;;:::i;:::-;-1:-1:-1;4479:21:477;4461:39;;:15;:39;;-1:-1:-1;;;;;4461:39:477;;;-1:-1:-1;;;;;;4461:39:477;;;;;;;;;;-1:-1:-1;4461:39:477;;;;;;;;;;;;;;;;-1:-1:-1;4461:39:477;;;;;;;;;;;;4517:24;4510:31;;;;4551:28;;;;;;;;;;;;;;;;;4594:62;;;24948:41:488;;;25020:4;25005:20;;24998:63;;;;25077:20;;;25070:63;4628:10:477;;4617:9;;4594:62;;24898:2:488;24883:18;4594:62:477;;;;;;;4214:449::o;3204:212::-;3297:4;-1:-1:-1;;;;;;;;;937:40:49;;;3320:89:477;;;-1:-1:-1;;;;;;;3360:49:477;;-1:-1:-1;;;3360:49:477;3313:96;3204:212;-1:-1:-1;;3204:212:477:o;5093:156::-;5158:15;:34;:54;;-1:-1:-1;;;5158:54:477;;5201:10;5158:54;;;25290:51:488;-1:-1:-1;;;;;5158:34:477;;;;:42;;25263:18:488;;5158:54:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5214:27;;;;;;;;;;;;;-1:-1:-1;;;5214:27:477;;;5150:92;;;;;-1:-1:-1;;;5150:92:477;;;;;;;;:::i;:::-;;5093:156::o;9725:155::-;9806:28;9830:3;9806:23;:28::i;:::-;9844:20;;;;:15;:20;;;;;;;;:29;;;;;;;;:::i;:::-;;9725:155;;:::o;914:381:410:-;1005:14;;;1016:2;1005:14;;;;;;;;;974:15;;1005:14;;;;;;;;;;-1:-1:-1;;1001:18:410;-1:-1:-1;1043:2:410;1029:11;1055:142;1079:2;1075:1;:6;1055:142;;;1112:1;1114;1112:4;;;;;;;:::i;:::-;;1102:85;;1148:1;1142:7;;1167:5;;1102:85;1083:3;;;:::i;:::-;;;1055:142;;;-1:-1:-1;1229:14:410;;1270:4;1263:12;;1256:23;;;;1236:1;914:381::o;5578:622:477:-;5633:13;5732:34;;5798:79;;-1:-1:-1;;;5798:79:477;;5831:10;5798:79;;;26044:51:488;5732:34:477;26111:18:488;;;26104:45;5633:13:477;;-1:-1:-1;;;;;5732:34:477;;;;5798:32;;26017:18:488;;5798:79:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5891:27;;;;;;;;;;;;;-1:-1:-1;;;5891:27:477;;;5777:151;;;;;-1:-1:-1;;;5777:151:477;;;;;;;;:::i;:::-;-1:-1:-1;5969:24:477;;6009:27;;;-1:-1:-1;;;6009:27:477;;;;-1:-1:-1;;;;;5969:24:477;;;;;;6009:25;;:27;;;;;;;;;;;;;;5969:24;6009:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;;6039:1;6009:31;:::i;:::-;6092:25;;6003:37;;-1:-1:-1;6058:75:477;;-1:-1:-1;;;;;6092:25:477;6003:37;6058:25;:75::i;:::-;6143:50;;-1:-1:-1;;;6143:50:477;;-1:-1:-1;;;;;26390:15:488;;;6143:50:477;;;26372:34:488;26442:15;;;26422:18;;;26415:43;6050:83:477;;-1:-1:-1;6143:27:477;;;;;;26307:18:488;;6143:50:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5661:539;;5578:622;;;:::o;4734:353::-;4826:15;:34;:54;;-1:-1:-1;;;4826:54:477;;4869:10;4826:54;;;25290:51:488;-1:-1:-1;;;;;4826:34:477;;;;:42;;25263:18:488;;4826:54:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:129;;;-1:-1:-1;4900:24:477;;:41;;-1:-1:-1;;;4900:41:477;;;;;643:25:488;;;4945:10:477;;-1:-1:-1;;;;;4900:24:477;;:36;;616:18:488;;4900:41:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4900:55:477;;4826:129;:202;;;-1:-1:-1;4976:24:477;;:37;;-1:-1:-1;;;4976:37:477;;;;;643:25:488;;;5017:10:477;;-1:-1:-1;;;;;4976:24:477;;:32;;616:18:488;;4976:37:477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4976:51:477;;4826:202;5043:27;;;;;;;;;;;;;-1:-1:-1;;;5043:27:477;;;4804:276;;;;;-1:-1:-1;;;4804:276:477;;;;;;;;:::i;:::-;;4734:353;:::o;2107:794:25:-;2191:16;2523:48;2505:14;2499:4;2495:25;2489:4;2485:36;2482:90;2476:4;2469:104;2730:32;2713:14;2707:4;2703:25;2700:63;2694:4;2687:77;2812:4;2806;2800;2797:1;2789:28;2777:40;-1:-1:-1;;;;;;2844:22:25;;2836:58;;;;-1:-1:-1;;;2836:58:25;;26948:2:488;2836:58:25;;;26930:21:488;26987:2;26967:18;;;26960:30;27026:25;27006:18;;;26999:53;27069:18;;2836:58:25;26746:347:488;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:286:488;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:488;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:488:o;679:127::-;740:10;735:3;731:20;728:1;721:31;771:4;768:1;761:15;795:4;792:1;785:15;811:253;883:2;877:9;925:4;913:17;;-1:-1:-1;;;;;945:34:488;;981:22;;;942:62;939:88;;;1007:18;;:::i;:::-;1043:2;1036:22;811:253;:::o;1069:::-;1141:2;1135:9;1183:4;1171:17;;-1:-1:-1;;;;;1203:34:488;;1239:22;;;1200:62;1197:88;;;1265:18;;:::i;1327:275::-;1398:2;1392:9;1463:2;1444:13;;-1:-1:-1;;1440:27:488;1428:40;;-1:-1:-1;;;;;1483:34:488;;1519:22;;;1480:62;1477:88;;;1545:18;;:::i;:::-;1581:2;1574:22;1327:275;;-1:-1:-1;1327:275:488:o;1607:152::-;-1:-1:-1;;;;;1703:31:488;;1693:42;;1683:70;;1749:1;1746;1739:12;1764:854;1856:6;1909:2;1897:9;1888:7;1884:23;1880:32;1877:52;;;1925:1;1922;1915:12;1877:52;1958:2;1952:9;2000:2;1992:6;1988:15;2069:6;2057:10;2054:22;-1:-1:-1;;;;;2021:10:488;2018:34;2015:62;2012:88;;;2080:18;;:::i;:::-;2116:2;2109:22;2153:23;;2185:52;2153:23;2185:52;:::i;:::-;2246:21;;2319:2;2304:18;;2291:32;2332:54;2291:32;2332:54;:::i;:::-;2414:2;2402:15;;2395:32;2479:2;2464:18;;2451:32;2492:54;2451:32;2492:54;:::i;:::-;2574:2;2562:15;;2555:32;2566:6;1764:854;-1:-1:-1;;;1764:854:488:o;2623:180::-;2682:6;2735:2;2723:9;2714:7;2710:23;2706:32;2703:52;;;2751:1;2748;2741:12;2703:52;-1:-1:-1;2774:23:488;;2623:180;-1:-1:-1;2623:180:488:o;2808:258::-;2880:1;2890:113;2904:6;2901:1;2898:13;2890:113;;;2980:11;;;2974:18;2961:11;;;2954:39;2926:2;2919:10;2890:113;;;3021:6;3018:1;3015:13;3012:48;;;3056:1;3047:6;3042:3;3038:16;3031:27;3012:48;;2808:258;;;:::o;3071:257::-;3112:3;3150:5;3144:12;3177:6;3172:3;3165:19;3193:63;3249:6;3242:4;3237:3;3233:14;3226:4;3219:5;3215:16;3193:63;:::i;:::-;3310:2;3289:15;-1:-1:-1;;3285:29:488;3276:39;;;;3317:4;3272:50;;3071:257;-1:-1:-1;;3071:257:488:o;3450:469::-;3511:3;3549:5;3543:12;3576:6;3571:3;3564:19;3602:4;3631:2;3626:3;3622:12;3615:19;;3668:2;3661:5;3657:14;3689:1;3699:195;3713:6;3710:1;3707:13;3699:195;;;3778:13;;-1:-1:-1;;;;;3774:39:488;3762:52;;3834:12;;;;3869:15;;;;3810:1;3728:9;3699:195;;;-1:-1:-1;3910:3:488;;3450:469;-1:-1:-1;;;;;3450:469:488:o;4284:2053::-;4471:2;4482:21;;;4574:13;;4606:6;4628:18;;;4621:30;;;4700:19;;4541:3;4526:19;;4728:22;;;-1:-1:-1;;4471:2:488;4769:3;4852:1;4848:14;;;4833:30;;4829:39;;;4891:21;;;;4788:18;;;;-1:-1:-1;4940:708:488;4954:6;4951:1;4948:13;4940:708;;;5019:22;;;-1:-1:-1;;5015:37:488;5003:50;;5076:13;;5144:9;;5129:25;;5197:11;;;5191:18;5174:15;;;5167:43;5233:4;5280:11;;;5274:18;5257:15;;;5250:43;5316:4;5363:11;;;5357:18;5340:15;;;5333:43;5399:4;5444:11;;;5438:18;5112:4;5476:15;;;5469:27;;;5438:18;5519:49;5552:15;;;5438:18;5519:49;:::i;:::-;5509:59;-1:-1:-1;;;5591:15:488;;;;5626:12;;;;4976:1;4969:9;4940:708;;;-1:-1:-1;;;5685:15:488;;;5679:22;5743;;;-1:-1:-1;;5739:36:488;5732:4;5717:20;;5710:66;5679:22;5799:60;5747:6;5679:22;5799:60;:::i;:::-;5785:74;;5908:4;5900:6;5896:17;5890:24;5868:46;;5923:70;5987:4;5976:9;5972:20;5956:14;4046:12;;-1:-1:-1;;;;;4042:21:488;;;4030:34;;4127:4;4116:16;;;4110:23;4103:31;4096:39;4080:14;;;4073:63;4189:4;4178:16;;;4172:23;4168:32;;;4152:14;;;4145:56;4264:4;4253:16;;;4247:23;4240:31;4233:39;4217:14;;4210:63;3924:355;5923:70;6042:4;6030:17;;6024:24;-1:-1:-1;;;;;3407:31:488;;;6115:3;6100:19;;3395:44;6169:4;6157:17;;6151:24;3407:31;6242:3;6227:19;;3395:44;6301:4;6289:17;;;6283:24;6263:18;;;;6256:52;;;;6325:6;4284:2053;-1:-1:-1;;;4284:2053:488:o;6524:463::-;6627:6;6635;6688:2;6676:9;6667:7;6663:23;6659:32;6656:52;;;6704:1;6701;6694:12;6656:52;6740:9;6727:23;6717:33;;6801:2;6790:9;6786:18;6773:32;-1:-1:-1;;;;;6820:6:488;6817:30;6814:50;;;6860:1;6857;6850:12;6814:50;6883:22;;6939:3;6921:16;;;6917:26;6914:46;;;6956:1;6953;6946:12;6914:46;6979:2;6969:12;;;6524:463;;;;;:::o;6992:219::-;7141:2;7130:9;7123:21;7104:4;7161:44;7201:2;7190:9;7186:18;7178:6;7161:44;:::i;7497:269::-;7697:2;7682:18;;7709:51;7686:9;7742:6;7338:12;;-1:-1:-1;;;;;7334:21:488;;;7322:34;;7409:4;7398:16;;;7392:23;7388:32;;7372:14;;;7365:56;7474:4;7463:16;;;7457:23;7453:32;7437:14;;7430:56;7216:276;7771:183;7831:4;-1:-1:-1;;;;;7856:6:488;7853:30;7850:56;;;7886:18;;:::i;:::-;-1:-1:-1;7931:1:488;7927:14;7943:4;7923:25;;7771:183::o;7959:155::-;8027:20;;8056:52;8027:20;8056:52;:::i;:::-;7959:155;;;:::o;8119:1362::-;8248:6;8256;8264;8272;8280;8288;8341:3;8329:9;8320:7;8316:23;8312:33;8309:53;;;8358:1;8355;8348:12;8309:53;8398:9;8385:23;-1:-1:-1;;;;;8423:6:488;8420:30;8417:50;;;8463:1;8460;8453:12;8417:50;8486:22;;8539:4;8531:13;;8527:27;-1:-1:-1;8517:55:488;;8568:1;8565;8558:12;8517:55;8604:2;8591:16;8626:4;8650:60;8666:43;8706:2;8666:43;:::i;:::-;8650:60;:::i;:::-;8744:15;;;8826:1;8822:10;;;;8814:19;;8810:28;;;8775:12;;;;8850:19;;;8847:39;;;8882:1;8879;8872:12;8847:39;8906:11;;;;8926:238;8942:6;8937:3;8934:15;8926:238;;;9022:3;9009:17;9039:52;9085:5;9039:52;:::i;:::-;9104:18;;8959:12;;;;9142;;;;8926:238;;;9183:5;-1:-1:-1;9207:38:488;;-1:-1:-1;9226:18:488;;;9207:38;:::i;:::-;9197:48;;;;;9264:38;9298:2;9287:9;9283:18;9264:38;:::i;:::-;9254:48;;9321:38;9355:2;9344:9;9340:18;9321:38;:::i;:::-;9311:48;;9378:39;9412:3;9401:9;9397:19;9378:39;:::i;:::-;9368:49;;9436:39;9470:3;9459:9;9455:19;9436:39;:::i;:::-;9426:49;;8119:1362;;;;;;;;:::o;9791:184::-;9861:6;9914:2;9902:9;9893:7;9889:23;9885:32;9882:52;;;9930:1;9927;9920:12;9882:52;-1:-1:-1;9953:16:488;;9791:184;-1:-1:-1;9791:184:488:o;9980:127::-;10041:10;10036:3;10032:20;10029:1;10022:31;10072:4;10069:1;10062:15;10096:4;10093:1;10086:15;10112:128;10152:3;10183:1;10179:6;10176:1;10173:13;10170:39;;;10189:18;;:::i;:::-;-1:-1:-1;10225:9:488;;10112:128::o;10245:341::-;10473:3;10458:19;;10486:51;10462:9;10519:6;7338:12;;-1:-1:-1;;;;;7334:21:488;;;7322:34;;7409:4;7398:16;;;7392:23;7388:32;;7372:14;;;7365:56;7474:4;7463:16;;;7457:23;7453:32;7437:14;;7430:56;7216:276;10486:51;10573:6;10568:2;10557:9;10553:18;10546:34;10245:341;;;;;:::o;10591:380::-;10670:1;10666:12;;;;10713;;;10734:61;;10788:4;10780:6;10776:17;10766:27;;10734:61;10841:2;10833:6;10830:14;10810:18;10807:38;10804:161;;;10887:10;10882:3;10878:20;10875:1;10868:31;10922:4;10919:1;10912:15;10950:4;10947:1;10940:15;10804:161;;10591:380;;;:::o;10976:2251::-;11054:5;11107:3;11100:4;11092:6;11088:17;11084:27;11074:55;;11125:1;11122;11115:12;11074:55;11154:6;11148:13;11180:4;11204:60;11220:43;11260:2;11220:43;:::i;11204:60::-;11298:15;;;11384:1;11380:10;;;;11368:23;;11364:32;;;11329:12;;;;11408:15;;;11405:35;;;11436:1;11433;11426:12;11405:35;11472:2;11464:6;11460:15;11484:1714;11500:6;11495:3;11492:15;11484:1714;;;11579:3;11573:10;-1:-1:-1;;;;;11656:2:488;11643:11;11640:19;11637:109;;;11700:1;11729:2;11725;11718:14;11637:109;11769:24;;;;11816:4;-1:-1:-1;;11874:12:488;;;11870:21;;11866:30;-1:-1:-1;11863:120:488;;;11937:1;11966:2;11962;11955:14;11863:120;12009:22;;:::i;:::-;12064:11;;;12058:18;12044:33;;12100:2;12144:11;;;12138:18;12122:14;;;12115:42;12181:2;12225:12;;;12219:19;12203:14;;;12196:43;12263:3;12309:12;;;12303:19;12286:15;;;12279:44;12358:11;;;12352:18;;12386:16;;;12383:109;;;12444:1;12433:12;;12474:3;12469;12462:16;12383:109;12524:8;12520:2;12516:17;12505:28;;12574:3;12569:2;12564:3;12560:12;12556:22;12546:123;;12621:1;12610:12;;12651:3;12646;12639:16;12546:123;12708:2;12703:3;12699:12;12693:19;12682:30;;12736:2;12731:3;12728:11;12725:37;;;12742:18;;:::i;:::-;12790:49;12835:2;12830;12823:4;12818:3;12814:14;12810:23;12806:32;12790:49;:::i;:::-;12775:64;;12868:3;12859:7;12852:20;12915:3;12910:2;12904:3;12899;12895:13;12891:22;12888:31;12885:124;;;12961:1;12950:12;;12991:3;12986;12979:16;12885:124;13022:58;13076:3;13071:2;13062:7;13058:16;13053:2;13048:3;13044:12;13022:58;:::i;:::-;13100:15;;13093:32;;;;-1:-1:-1;13138:18:488;;-1:-1:-1;;;13176:12:488;;;;-1:-1:-1;11517:12:488;;11484:1714;;;-1:-1:-1;13216:5:488;10976:2251;-1:-1:-1;;;;;;10976:2251:488:o;13232:763::-;13305:5;13358:3;13351:4;13343:6;13339:17;13335:27;13325:55;;13376:1;13373;13366:12;13325:55;13405:6;13399:13;13431:4;13455:60;13471:43;13511:2;13471:43;:::i;13455:60::-;13549:15;;;13635:1;13631:10;;;;13619:23;;13615:32;;;13580:12;;;;13659:15;;;13656:35;;;13687:1;13684;13677:12;13656:35;13723:2;13715:6;13711:15;13735:231;13751:6;13746:3;13743:15;13735:231;;;13824:3;13818:10;13841:52;13887:5;13841:52;:::i;:::-;13906:18;;13944:12;;;;13768;;13735:231;;14000:118;14086:5;14079:13;14072:21;14065:5;14062:32;14052:60;;14108:1;14105;14098:12;14123:922;14195:5;14243:4;14231:9;14226:3;14222:19;14218:30;14215:50;;;14261:1;14258;14251:12;14215:50;14294:2;14288:9;14336:4;14328:6;14324:17;14407:6;14395:10;14392:22;-1:-1:-1;;;;;14359:10:488;14356:34;14353:62;14350:88;;;14418:18;;:::i;:::-;14458:10;14454:2;14447:22;;14487:6;14478:15;;14523:9;14517:16;14542:54;14588:7;14542:54;:::i;:::-;14605:23;;14673:2;14658:18;;14652:25;14686:30;14652:25;14686:30;:::i;:::-;14744:2;14732:15;;14725:32;14802:2;14787:18;;14781:25;14815:54;14781:25;14815:54;:::i;:::-;14897:2;14885:15;;14878:32;14955:2;14940:18;;14934:25;14968:30;14934:25;14968:30;:::i;:::-;15026:2;15014:15;;;;15007:32;14123:922;;-1:-1:-1;;14123:922:488:o;15050:174::-;15144:13;;15166:52;15144:13;15166:52;:::i;15229:1186::-;15332:6;15385:2;15373:9;15364:7;15360:23;15356:32;15353:52;;;15401:1;15398;15391:12;15353:52;15434:9;15428:16;-1:-1:-1;;;;;15504:2:488;15496:6;15493:14;15490:34;;;15520:1;15517;15510:12;15490:34;15543:22;;;;15599:6;15581:16;;;15577:29;15574:49;;;15619:1;15616;15609:12;15574:49;15645:22;;:::i;:::-;15698:2;15692:9;15726:2;15716:8;15713:16;15710:36;;;15742:1;15739;15732:12;15710:36;15769:80;15841:7;15830:8;15826:2;15822:17;15769:80;:::i;:::-;15762:5;15755:95;;15889:2;15885;15881:11;15875:18;15918:2;15908:8;15905:16;15902:36;;;15934:1;15931;15924:12;15902:36;15970:75;16037:7;16026:8;16022:2;16018:17;15970:75;:::i;:::-;15965:2;15958:5;15954:14;15947:99;;16078:65;16135:7;16130:2;16126;16122:11;16078:65;:::i;:::-;16073:2;16066:5;16062:14;16055:89;16178:59;16231:4;16227:2;16223:13;16178:59;:::i;:::-;16171:4;16164:5;16160:16;16153:85;16272:58;16325:3;16321:2;16317:12;16272:58;:::i;:::-;16265:4;16254:16;;16247:84;16379:3;16371:12;;;;16365:19;16358:4;16347:16;;16340:45;-1:-1:-1;16258:5:488;15229:1186;-1:-1:-1;;;15229:1186:488:o;16420:579::-;16547:4;16553:6;16613:11;16600:25;16707:2;16703:7;16692:8;16676:14;16672:29;16668:43;16648:18;16644:68;16634:96;;16726:1;16723;16716:12;16634:96;16753:33;;16805:20;;;-1:-1:-1;;;;;;16837:30:488;;16834:50;;;16880:1;16877;16870:12;16834:50;16913:4;16901:17;;-1:-1:-1;16964:1:488;16960:14;;;16944;16940:35;16930:46;;16927:66;;;16989:1;16986;16979:12;16927:66;16420:579;;;;;:::o;17570:291::-;17652:6;17705:2;17693:9;17684:7;17680:23;17676:32;17673:52;;;17721:1;17718;17711:12;17673:52;17760:9;17747:23;17779:52;17825:5;17779:52;:::i;17866:545::-;17958:5;17965:6;18025:3;18012:17;18111:2;18107:7;18096:8;18080:14;18076:29;18072:43;18052:18;18048:68;18038:96;;18130:1;18127;18120:12;18038:96;18158:33;;18262:4;18249:18;;;-1:-1:-1;18210:21:488;;-1:-1:-1;;;;;;18279:30:488;;18276:50;;;18322:1;18319;18312:12;18276:50;18379:6;18376:1;18372:14;18356;18352:35;18342:8;18338:50;18335:70;;;18401:1;18398;18391:12;18416:266;18504:6;18499:3;18492:19;18556:6;18549:5;18542:4;18537:3;18533:14;18520:43;-1:-1:-1;18608:1:488;18583:16;;;18601:4;18579:27;;;18572:38;;;;18664:2;18643:15;;;-1:-1:-1;;18639:29:488;18630:39;;;18626:50;;18416:266::o;18687:551::-;18795:6;18790:3;18783:19;18765:3;18821:4;18850:2;18845:3;18841:12;18834:19;;18876:5;18899:1;18909:304;18923:6;18920:1;18917:13;18909:304;;;19000:6;18987:20;19020:54;19066:7;19020:54;:::i;:::-;-1:-1:-1;;;;;19099:33:488;19087:46;;19153:12;;;;19188:15;;;;19129:1;18938:9;18909:304;;19243:720;19348:5;19335:19;19363:54;19409:7;19363:54;:::i;:::-;-1:-1:-1;;;;;19476:16:488;;;19464:29;;19541:4;19530:16;;19517:30;;19556;19517;19556;:::i;:::-;19625:15;;19618:23;19611:4;19602:14;;19595:47;19690:4;19679:16;;19666:30;;19705:54;19666:30;19705:54;:::i;:::-;19791:16;19784:4;19775:14;;19768:40;19856:4;19845:16;;19832:30;19871;19832;19871;:::i;:::-;19947:7;19940:15;19933:23;19926:4;19921:3;19917:14;19910:47;;19243:720;;:::o;19968:2845::-;20128:4;20157:2;20186;20175:9;20168:21;20227:3;20216:9;20212:19;20274:80;20347:6;20339;20274:80;:::i;:::-;20373:6;20395:18;;;20388:30;;;20453:28;;;;20500:3;20583:1;20579:20;;;20564:36;;20560:45;;;20373:6;20519:18;;20628:12;20658:1;20668:1340;20682:12;20679:1;20676:19;20668:1340;;;20753:22;;;-1:-1:-1;;20749:37:488;20737:50;;20826:20;;20901:14;20897:33;;;-1:-1:-1;;20893:48:488;20869:73;;20859:101;;20956:1;20953;20946:12;20859:101;20986:37;;21078:19;;21063:35;;21148:14;;;21135:28;21118:15;;;21111:53;21187:4;21241:14;;;21228:28;21211:15;;;21204:53;21280:4;21334:14;;;21321:28;21304:15;;;21297:53;21046:4;21373;21431:14;;;21418:28;21503:14;21499:26;;;-1:-1:-1;;21495:40:488;21469:67;;21459:95;;21550:1;21547;21540:12;21459:95;21582:32;;21641:21;;-1:-1:-1;;;;;21678:30:488;;21675:50;;;21721:1;21718;21711:12;21675:50;21772:6;21756:14;21752:27;21745:5;21741:39;21738:59;;;21793:1;21790;21783:12;21738:59;21834:2;21829;21821:6;21817:15;21810:27;21860:68;21924:2;21916:6;21912:15;21904:6;21899:2;21890:7;21886:16;21860:68;:::i;:::-;21850:78;-1:-1:-1;;;21986:12:488;;;;-1:-1:-1;;;21951:15:488;;;;20710:1;20703:9;20668:1340;;;20672:3;;;22055:89;22140:2;22132:6;22128:15;22120:6;22055:89;:::i;:::-;22186:22;;;-1:-1:-1;;22182:36:488;22175:4;22160:20;;22153:66;22017:127;-1:-1:-1;22017:127:488;-1:-1:-1;22242:85:488;22190:6;22017:127;;22242:85;:::i;:::-;22228:99;;22336:82;22412:4;22401:9;22397:20;22390:4;22382:6;22378:17;22336:82;:::i;:::-;22449:37;22480:4;22472:6;22468:17;22449:37;:::i;:::-;-1:-1:-1;;;;;3407:31:488;;22553:3;22538:19;;3395:44;22427:59;-1:-1:-1;22589:36:488;22620:3;22612:6;22608:16;22589:36;:::i;:::-;22567:58;;22644:3;22634:13;;22656:62;22714:2;22703:9;22699:18;22683:14;-1:-1:-1;;;;;3407:31:488;3395:44;;3333:112;22656:62;22767:15;;;;22754:29;22734:18;;22727:57;;;;22801:6;;-1:-1:-1;;;19968:2845:488:o;22818:702::-;23137:6;23126:9;23119:25;23180:3;23175:2;23164:9;23160:18;23153:31;23100:4;23201:65;23261:3;23250:9;23246:19;23238:6;23201:65;:::i;:::-;-1:-1:-1;;;;;23340:15:488;;;23335:2;23320:18;;23313:43;23392:15;;;23387:2;23372:18;;23365:43;-1:-1:-1;23445:15:488;;;23439:3;23424:19;;23417:44;23498:15;;;23293:3;23477:19;;;23470:44;;;;23392:15;23193:73;-1:-1:-1;;22818:702:488:o;23995:701::-;24304:3;24293:9;24286:22;24267:4;24331:65;24391:3;24380:9;24376:19;24368:6;24331:65;:::i;:::-;24444:9;24436:6;24432:22;24427:2;24416:9;24412:18;24405:50;24472:32;24497:6;24489;24472:32;:::i;:::-;-1:-1:-1;;;;;24578:15:488;;;24573:2;24558:18;;24551:43;24630:15;;;;24625:2;24610:18;;24603:43;-1:-1:-1;24677:3:488;24662:19;24655:35;24464:40;23995:701;-1:-1:-1;;;23995:701:488:o;25352:245::-;25419:6;25472:2;25460:9;25451:7;25447:23;25443:32;25440:52;;;25488:1;25485;25478:12;25440:52;25520:9;25514:16;25539:28;25561:5;25539:28;:::i;25602:127::-;25663:10;25658:3;25654:20;25651:1;25644:31;25694:4;25691:1;25684:15;25718:4;25715:1;25708:15;25734:135;25773:3;-1:-1:-1;;25794:17:488;;25791:43;;;25814:18;;:::i;:::-;-1:-1:-1;25861:1:488;25850:13;;25734:135::o;26469:272::-;26539:6;26592:2;26580:9;26571:7;26567:23;26563:32;26560:52;;;26608:1;26605;26598:12;26560:52;26640:9;26634:16;26659:52;26705:5;26659:52;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "commitInternalParams()": "d4a07d34",
    "contractName()": "75d0c0dc",
    "contractNameBytes()": "0e3e80ac",
    "contractVersion()": "a0a8e460",
    "contractVersionBytes()": "06a46239",
    "createVault(address[],address,address,address,address,address)": "c6be9b22",
    "delayedProtocolParamsTimestamp()": "e4af6e79",
    "delayedProtocolPerVaultParamsTimestamp(uint256)": "511ce798",
    "delayedStrategyParamsTimestamp(uint256)": "6707acee",
    "internalParams()": "7ac46fbb",
    "internalParamsTimestamp()": "1c7f4c73",
    "setStrategyParams(uint256,((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256))": "5c7017cc",
    "stageInternalParams((address,address,address))": "09946538",
    "stagedInternalParams()": "86c6be3e",
    "strategyParams(uint256)": "12466b68",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"internalParams_\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"CommitedInternalParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"vaultTokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultNft\",\"type\":\"uint256\"}],\"name\":\"DeployedVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"contract IAggregatorV3\",\"name\":\"rewardOracle\",\"type\":\"address\"},{\"internalType\":\"contract IAggregatorV3\",\"name\":\"underlyingOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippageD\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IBalancerV2VaultGovernance.StrategyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"SetStrategyParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"StagedInternalParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"commitInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractNameBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersionBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pool_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"balancerVault_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakingLiquidityGauge_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"balancerMinter_\",\"type\":\"address\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"contract IBalancerV2Vault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedProtocolParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedProtocolPerVaultParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedStrategyParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"contract IAggregatorV3\",\"name\":\"rewardOracle\",\"type\":\"address\"},{\"internalType\":\"contract IAggregatorV3\",\"name\":\"underlyingOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippageD\",\"type\":\"uint256\"}],\"internalType\":\"struct IBalancerV2VaultGovernance.StrategyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"setStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"newParams\",\"type\":\"tuple\"}],\"name\":\"stageInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedInternalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"strategyParams\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assetInIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"assetOutIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"internalType\":\"struct IVault.BatchSwapStep[]\",\"name\":\"swaps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAsset[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fromInternalBalance\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"toInternalBalance\",\"type\":\"bool\"}],\"internalType\":\"struct IVault.FundManagement\",\"name\":\"funds\",\"type\":\"tuple\"},{\"internalType\":\"contract IAggregatorV3\",\"name\":\"rewardOracle\",\"type\":\"address\"},{\"internalType\":\"contract IAggregatorV3\",\"name\":\"underlyingOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slippageD\",\"type\":\"uint256\"}],\"internalType\":\"struct IBalancerV2VaultGovernance.StrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"SetStrategyParams(address,address,uint256,((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256))\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\",\"origin\":\"Origin of the transaction (tx.origin)\",\"params\":\"New set params\",\"sender\":\"Sender of the call (msg.sender)\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"internalParams_\":\"Initial Internal Params\"}},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"delayedStrategyParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"setStrategyParams(uint256,((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256))\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"stageInternalParams((address,address,address))\":{\"params\":{\"newParams\":\"New Internal Params\"}},\"stagedInternalParams()\":{\"details\":\"The Internal Params could be committed after internalParamsTimestamp\"},\"strategyParams(uint256)\":{\"params\":{\"nft\":\"VaultRegistry NFT of the vault\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"events\":{\"CommitedInternalParams(address,address,(address,address,address))\":{\"notice\":\"Emitted when InternalParams are staged for commit\"},\"DeployedVault(address,address,address[],bytes,address,address,uint256)\":{\"notice\":\"Emitted when New Vault is deployed\"},\"SetStrategyParams(address,address,uint256,((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256))\":{\"notice\":\"Emitted when new StrategyParams are set\"},\"StagedInternalParams(address,address,(address,address,address),uint256)\":{\"notice\":\"Emitted when InternalParams are staged for commit\"}},\"kind\":\"user\",\"methods\":{\"commitInternalParams()\":{\"notice\":\"Commit staged Internal Params.\"},\"constructor\":{\"notice\":\"Creates a new contract.\"},\"delayedProtocolParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed.\"},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed.\"},\"delayedStrategyParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed.\"},\"internalParams()\":{\"notice\":\"Internal Params of the contract.\"},\"internalParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Internal Params could be committed.\"},\"setStrategyParams(uint256,((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256))\":{\"notice\":\"Delayed Strategy Params staged for commit after delay.\"},\"stageInternalParams((address,address,address))\":{\"notice\":\"Stage new Internal Params.\"},\"stagedInternalParams()\":{\"notice\":\"Staged new Internal Params.\"},\"strategyParams(uint256)\":{\"notice\":\"Delayed Strategy Params\"}},\"notice\":\"Governance that manages all BalancerV2 Vaults params and can deploy a new BalancerV2 Vault.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vaults/BalancerV2VaultGovernance.sol\":\"BalancerV2VaultGovernance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281\",\"dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b\"]},\"src/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87\",\"dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk\"]},\"src/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50\",\"dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1\"]},\"src/interfaces/external/balancer/liquidity-mining/IBalancerMinter.sol\":{\"keccak256\":\"0x57c8b7d70735acf87d479398aa31fbd0c078835e59cb0db24fb75818d190052c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://73521a8258bdd64dddebdb2216b21fe2b684fa2edb5e97e5c117279f81ef9025\",\"dweb:/ipfs/QmW5kFvgKiqkxUJyWs7MZykKHjfBpthks9wha433dNeEQm\"]},\"src/interfaces/external/balancer/liquidity-mining/ILiquidityGauge.sol\":{\"keccak256\":\"0xa22f0c0868adb9d06d097ecb0a8d8370a6e59d223ef1e07a58340191c402e9ea\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://558942e9f7ff6c6f2becffc28da21bf897e043ceea6bed95d2a362e0eceedbe6\",\"dweb:/ipfs/QmU51CezK36UmBpArAcBmXrDmC5ozDmTrconGfj8pr8NYL\"]},\"src/interfaces/external/balancer/liquidity-mining/IRewardTokenDistributor.sol\":{\"keccak256\":\"0xd9476c8423eab4c40a3f4a25d343c7ab194985ef5ad2498758ae8cfd569dcd2a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://4eedabb61c239ecd3e6f2b675cf176db87bbd2b8e54f6190f47001a1a455f875\",\"dweb:/ipfs/QmRsR9KiVJWBuQK3EBRfCVxdDZBTYmfK7CeBebdkeBX6HE\"]},\"src/interfaces/external/balancer/liquidity-mining/IStakingLiquidityGauge.sol\":{\"keccak256\":\"0xa99cdc7d85b012b7d64eb26a4dafde52314bfe9162973eb66d0bd9241b342877\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bb5a8c580619a9cb730fe9d333d424db6ed9f5187ba7729beb0df474a64f6733\",\"dweb:/ipfs/QmboYxDELyqkNW7jjb8Ut5g7meDA1HcxsKsX5zmPNyFBPr\"]},\"src/interfaces/external/balancer/pool-stable/StablePoolUserData.sol\":{\"keccak256\":\"0x0503d49c1242d38b10cb896d34d85a0bab80c5ce3f253016f4bb51833c359cc0\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://f196af8f3d311b83993cbf85866597358635d5619b25bf33f863be7f093b087c\",\"dweb:/ipfs/QmSFcZUB1Lv4h4G89N2wR2yAgumtc2CszhRpnYcvYfzpmT\"]},\"src/interfaces/external/balancer/pool-utils/IManagedPool.sol\":{\"keccak256\":\"0x09b700bb2a67ad9cc0e19455a7d55d4e2efeaaa380e19969dcc7acceb795fd4f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://7b013e3dee42088da1b696c5f652535c4ebe68c86dbefc11573ff180df44d7d9\",\"dweb:/ipfs/QmR2yymvt2ACn3qz69gY3sMoUCY9zEnsR4kBF1489cw2si\"]},\"src/interfaces/external/balancer/pool-weighted/WeightedPoolUserData.sol\":{\"keccak256\":\"0xa14005e22ad66472bfe0552caa51b47811c0cee43d7f8ae20811aff63816766b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a694b1a00727ce3e694782623eef5c48a1e5b095ceeaed0b33d73685ab69f392\",\"dweb:/ipfs/QmWuTEoUxU2D3y1ASnLdZnGb7joRsjn9RimizT19FVieot\"]},\"src/interfaces/external/balancer/solidity-utils/helpers/IAuthentication.sol\":{\"keccak256\":\"0x8032fd6d7f660d9536d252897336462bb932d1e91bd3b87c087be017a35dc842\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3724cffd85daa36371999e0e9ea56617df12fd7f2cc5c123139705766e3b89a1\",\"dweb:/ipfs/QmaM2wHuKrpKcc8mRhdYmXqPVAimHjGK1xubPWXKafiKYa\"]},\"src/interfaces/external/balancer/solidity-utils/helpers/ISignaturesValidator.sol\":{\"keccak256\":\"0x52bd09272e9ec2cff838df757e8b690ff4ca3f4f07e9edd9b711e31e474dd979\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://92ae86c99ce4b92fc666a4c6053bc5ae2932d07b23471647cae7c541c68071b3\",\"dweb:/ipfs/QmeKHMVTVLfG5MKQ7ewM7uwB41WEXkDKhkkL3qCd7mokFo\"]},\"src/interfaces/external/balancer/solidity-utils/helpers/ITemporarilyPausable.sol\":{\"keccak256\":\"0xf952ad04a5d4e8523212315e19b8d874e13ceadb7dbc1f5025510da1e153405c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://81d7e364e8c7a76879f9be650559d3de53879918ab721372931d0e51daa464b5\",\"dweb:/ipfs/QmNyXjvxr3cXzVeBaPrApS9fdjufyN6dXtjGy746xxtj2z\"]},\"src/interfaces/external/balancer/solidity-utils/misc/IWETH.sol\":{\"keccak256\":\"0x90278f677649701309ab0902f5bca2fd0d9603e5ce7193b15cf05a7c5582c3b9\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://991dce71671de9fb0f5fafda69994705e358a5cb235bc3acf961dbc9895b6dd6\",\"dweb:/ipfs/QmP7479cjgvMa2DjXNSB6gvHZ2WibU4TGb3DTjqw6UuFb6\"]},\"src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"src/interfaces/external/balancer/vault/IAsset.sol\":{\"keccak256\":\"0x746354db670eb3b94179963b522c4deb0b9854483ab293e3025689749923ebef\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://bcd5a7e0519f94c25f4e3b568b8c0446b2240bd3808c56c3b498a6fed459b2e4\",\"dweb:/ipfs/QmRXvcCy9oKhwPMr8QQ74pg9jormcgq3GHmLSGTDhUWAsn\"]},\"src/interfaces/external/balancer/vault/IAuthorizer.sol\":{\"keccak256\":\"0x4adfebbc478ab323d0679386ef8e2384f5205eb280f72757c151eca62ea4f91b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://49a34c9ad9cb559931b465cea2d570ab015751c6dbc4a52eab8c36b5b949eec1\",\"dweb:/ipfs/QmUiUSZz8gjANUcTqaPCfNkUp3gpjt8Qq2z4UWuQWhaK34\"]},\"src/interfaces/external/balancer/vault/IBasePool.sol\":{\"keccak256\":\"0x2a655dcb1150402a7446dc41a9ff2f3cf1ae5caa6d2384bddee08aac1d417e77\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c506e6beb0542dcb9861f3d4b524f2ff716cdcf5513b2132c24f954ee22f25c9\",\"dweb:/ipfs/QmcJ1dLRHbLMGiYvS8TH1W6G61beZy8MmiSvzFw11UxLQv\"]},\"src/interfaces/external/balancer/vault/IFlashLoanRecipient.sol\":{\"keccak256\":\"0xef16377e5ee7ac8151fe8abc3f7b8f0a420008ae1c1336f3cbaea5e171403a43\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ca460a387ce27682beecc1f93a07c7ef6139504f2d4e2fce715abe82b6d2b039\",\"dweb:/ipfs/QmS8QgcAqhtHepcf8LYGToutbhsUXaTE7UNLQQi4fBJsUC\"]},\"src/interfaces/external/balancer/vault/IPoolSwapStructs.sol\":{\"keccak256\":\"0x6bcc1ff0bbbe512e442e1f5a10c79e124a67fb2eae15c7ef2885679f30abfb06\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://cd2c36763fb58b288f317735ee23d464499c9c98056cca5c601ba0398c70a7b9\",\"dweb:/ipfs/QmUSgTJCuzNFrscqZZFWfLQsEvX6v2bqJ5piFQa4o8aiZy\"]},\"src/interfaces/external/balancer/vault/IProtocolFeesCollector.sol\":{\"keccak256\":\"0xa42e8b311517ce70dd7f2af6b497603a81c3dd678961a5ffd8a2968eff6b7b5a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9a11ea954c234e348896cec60165624d71e9fe7b44d7341d74e3bdc7790f2b6a\",\"dweb:/ipfs/QmNq1f6yAeJawBKpMmfNyoQ84nZquQ78YtT3tt3dMBtyCK\"]},\"src/interfaces/external/balancer/vault/IVault.sol\":{\"keccak256\":\"0x08d254ba643e02507305b570f794a75b5439d2ae799f761d26d3a2fd77f6d2fb\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2de3bcdb5d5805a44e2c643bc76bc14858825b2b018049f89962c8bc532ac24d\",\"dweb:/ipfs/QmfWZGKRChzwe97R8nqShjKdRX5k8Tp9HKwr7UAq9rCg1m\"]},\"src/interfaces/external/chainlink/IAggregatorV3.sol\":{\"keccak256\":\"0xf195bb6bcab2877ab2cfb75351c0793d64e2ace9749f496f056ba62bebd5a1d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5960730ba2adbff9392dc85761144c2962a410e188032e6d0e32f7457ffc0886\",\"dweb:/ipfs/QmTnVyDhfmkk6zpUubUWZsBmC9qCPAPSWB9GGmtDebuEFV\"]},\"src/interfaces/external/erc/IERC1271.sol\":{\"keccak256\":\"0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779\",\"dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd\"]},\"src/interfaces/utils/IContractMeta.sol\":{\"keccak256\":\"0x7ce236cea17798c2c9e60a659e727ef188f6579315b8227d0c6ad067a33900fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31c232f85d6565414bdf292adacc3054ab2355878e4d4508fc86fc2787436f24\",\"dweb:/ipfs/QmVhEUkN5Rwqpyufn7qqT88LLdq885igE57Pk4LzgJb9Kp\"]},\"src/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add\",\"dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu\"]},\"src/interfaces/vaults/IBalancerV2Vault.sol\":{\"keccak256\":\"0xa5e8f55f3d87fde9297c96d80aa72c6555f169f7d22c5478c54ff05d1df6c0e0\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://45dea67abc79ab3af6175330b65fd37e5b087e51acac1c169a9567312e3dedb0\",\"dweb:/ipfs/QmWSQ173mUpnkhgXUhiHEz4ursubqUJrAb18LfDesonofn\"]},\"src/interfaces/vaults/IBalancerV2VaultGovernance.sol\":{\"keccak256\":\"0x1a59b99c956d9db76ffe6d33ede8e88b9285332e5c4fdf8b17f33031871b3ed3\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e2869ba7ad36797d1c83dbc13d740456dca6e51a43e016e9f97e9ca1c3940ee1\",\"dweb:/ipfs/QmRxZdfNNDTntrCT9uEvBhk5iiYJZXdjj9hqYBV7ZjfefV\"]},\"src/interfaces/vaults/IIntegrationVault.sol\":{\"keccak256\":\"0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d\",\"dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy\"]},\"src/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1\",\"dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw\"]},\"src/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375\",\"dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu\"]},\"src/libraries/ExceptionsLibrary.sol\":{\"keccak256\":\"0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f\",\"dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX\"]},\"src/libraries/PermissionIdsLibrary.sol\":{\"keccak256\":\"0xc6a4f2515d807b2ad95e9e8f7190c5ea85ab6603d2c1136632a8af9c479ecfcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e16f3d1e595ffa5b20cd1588e839ee783b1ca246d489cbe42040fd3089bb8b1\",\"dweb:/ipfs/QmQdW5ykrjB5yMMxkU5zTR4GJ5kBhyrnAbmt3mvtB55kuC\"]},\"src/utils/ContractMeta.sol\":{\"keccak256\":\"0x6e1fe2b6e0907a5388a5775be53bbfb55883aacc0ccb7597dfc6475fa9834c3f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9f8a2c5073a97b514829bac140bf84391cc5702185c4d6813e47b61ce53515e6\",\"dweb:/ipfs/QmeuMJq2ciSaDZC8qiUGLPfAHBjpCE4v79fZiaWm8egAks\"]},\"src/vaults/BalancerV2VaultGovernance.sol\":{\"keccak256\":\"0xaf19556c46d9225f7053422ddd7dacd186058d49f40037c9c53cefa3b9fda01f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a08cb6528cd18d351e0729a4d011eb0b23537ee05fc5c5cf6e520ea81a4951c1\",\"dweb:/ipfs/QmNu5zAU9ZNHJUtAPxkwh9BYcyiJQNZGDX7aBoQu7QBVHe\"]},\"src/vaults/VaultGovernance.sol\":{\"keccak256\":\"0xd484ec7eee06480da27027a0ac81f591440ecdd2ba7bd5bfdee58a3f9e88c22c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8b4f08e9350fadeb03b9561a2fb2798821f7186fe8663207c91402ea62a53cc5\",\"dweb:/ipfs/QmUr73ghYfPzjtFgxE8mPjw5wFwQTQsbcLDGJNQVfT4rEV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "internalParams_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CommitedInternalParams",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address[]",
              "name": "vaultTokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "vaultAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "vaultNft",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DeployedVault",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct IBalancerV2VaultGovernance.StrategyParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IVault.BatchSwapStep[]",
                  "name": "swaps",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetInIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetOutIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "struct IVault.FundManagement",
                  "name": "funds",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "fromInternalBalance",
                      "type": "bool"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "toInternalBalance",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "contract IAggregatorV3",
                  "name": "rewardOracle",
                  "type": "address"
                },
                {
                  "internalType": "contract IAggregatorV3",
                  "name": "underlyingOracle",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippageD",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetStrategyParams",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "when",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StagedInternalParams",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitInternalParams"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractName",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractNameBytes",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersionBytes",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "vaultTokens_",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "pool_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "balancerVault_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "stakingLiquidityGauge_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "balancerMinter_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createVault",
          "outputs": [
            {
              "internalType": "contract IBalancerV2Vault",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolPerVaultParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedStrategyParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "internalParams",
          "outputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "internalParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            },
            {
              "internalType": "struct IBalancerV2VaultGovernance.StrategyParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IVault.BatchSwapStep[]",
                  "name": "swaps",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetInIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetOutIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "struct IVault.FundManagement",
                  "name": "funds",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "fromInternalBalance",
                      "type": "bool"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "toInternalBalance",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "contract IAggregatorV3",
                  "name": "rewardOracle",
                  "type": "address"
                },
                {
                  "internalType": "contract IAggregatorV3",
                  "name": "underlyingOracle",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippageD",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategyParams"
        },
        {
          "inputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "newParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stageInternalParams"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stagedInternalParams",
          "outputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyParams",
          "outputs": [
            {
              "internalType": "struct IBalancerV2VaultGovernance.StrategyParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct IVault.BatchSwapStep[]",
                  "name": "swaps",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "poolId",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetInIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "assetOutIndex",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes",
                      "name": "userData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "contract IAsset[]",
                  "name": "assets",
                  "type": "address[]"
                },
                {
                  "internalType": "struct IVault.FundManagement",
                  "name": "funds",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "sender",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "fromInternalBalance",
                      "type": "bool"
                    },
                    {
                      "internalType": "address payable",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "bool",
                      "name": "toInternalBalance",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "contract IAggregatorV3",
                  "name": "rewardOracle",
                  "type": "address"
                },
                {
                  "internalType": "contract IAggregatorV3",
                  "name": "underlyingOracle",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slippageD",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "internalParams_": "Initial Internal Params"
            }
          },
          "delayedProtocolPerVaultParamsTimestamp(uint256)": {
            "params": {
              "nft": "Nft of the vault"
            }
          },
          "delayedStrategyParamsTimestamp(uint256)": {
            "params": {
              "nft": "Nft of the vault"
            }
          },
          "setStrategyParams(uint256,((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256))": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "stageInternalParams((address,address,address))": {
            "params": {
              "newParams": "New Internal Params"
            }
          },
          "stagedInternalParams()": {
            "details": "The Internal Params could be committed after internalParamsTimestamp"
          },
          "strategyParams(uint256)": {
            "params": {
              "nft": "VaultRegistry NFT of the vault"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "commitInternalParams()": {
            "notice": "Commit staged Internal Params."
          },
          "constructor": {
            "notice": "Creates a new contract."
          },
          "delayedProtocolParamsTimestamp()": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed."
          },
          "delayedProtocolPerVaultParamsTimestamp(uint256)": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed."
          },
          "delayedStrategyParamsTimestamp(uint256)": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed."
          },
          "internalParams()": {
            "notice": "Internal Params of the contract."
          },
          "internalParamsTimestamp()": {
            "notice": "Timestamp in unix time seconds after which staged Internal Params could be committed."
          },
          "setStrategyParams(uint256,((bytes32,uint256,uint256,uint256,bytes)[],address[],(address,bool,address,bool),address,address,uint256))": {
            "notice": "Delayed Strategy Params staged for commit after delay."
          },
          "stageInternalParams((address,address,address))": {
            "notice": "Stage new Internal Params."
          },
          "stagedInternalParams()": {
            "notice": "Staged new Internal Params."
          },
          "strategyParams(uint256)": {
            "notice": "Delayed Strategy Params"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/vaults/BalancerV2VaultGovernance.sol": "BalancerV2VaultGovernance"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999",
        "urls": [
          "bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb",
          "dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolGovernance.sol": {
        "keccak256": "0x56c5ffe3c7a0414fbe269fb65d5181c41c0937f2d854b35ac11d11d143b4025e",
        "urls": [
          "bzz-raw://c3c06dabc1ab8741d81f8f941230bb19d66c4a32707a984e2e48952f6d86a281",
          "dweb:/ipfs/Qmb47fn3Wpe38NyJ5f4Gzbthd6HimRBNDVU82JWwsyR36b"
        ],
        "license": "MIT"
      },
      "src/interfaces/IUnitPricesGovernance.sol": {
        "keccak256": "0x9fc3abc68aeebff7927937d8a3ebe876a26550c95da8941b7a123583c6812081",
        "urls": [
          "bzz-raw://a323e55a7dd91bbe02329783c6fa447b3dfec8aa963f10a7bcd4aee986d7ca87",
          "dweb:/ipfs/QmRShHKXzDsxUDbSzhRQTZmagzYeP2Q7KAx1t4SVomn6Gk"
        ],
        "license": "MIT"
      },
      "src/interfaces/IVaultRegistry.sol": {
        "keccak256": "0xbbff9405f05886e694fbb4ed6a39a85f05cd05ee28a8b689c62be86230b9be55",
        "urls": [
          "bzz-raw://1b9c10d208a2533045f2d00fccfdec42f20ac4a608e850e663be05075eeb3b50",
          "dweb:/ipfs/QmRFPZZVBdYvTLEW5zLjHzivVKH4Ug9mJKom5yq18cVij1"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/balancer/liquidity-mining/IBalancerMinter.sol": {
        "keccak256": "0x57c8b7d70735acf87d479398aa31fbd0c078835e59cb0db24fb75818d190052c",
        "urls": [
          "bzz-raw://73521a8258bdd64dddebdb2216b21fe2b684fa2edb5e97e5c117279f81ef9025",
          "dweb:/ipfs/QmW5kFvgKiqkxUJyWs7MZykKHjfBpthks9wha433dNeEQm"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/ILiquidityGauge.sol": {
        "keccak256": "0xa22f0c0868adb9d06d097ecb0a8d8370a6e59d223ef1e07a58340191c402e9ea",
        "urls": [
          "bzz-raw://558942e9f7ff6c6f2becffc28da21bf897e043ceea6bed95d2a362e0eceedbe6",
          "dweb:/ipfs/QmU51CezK36UmBpArAcBmXrDmC5ozDmTrconGfj8pr8NYL"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/IRewardTokenDistributor.sol": {
        "keccak256": "0xd9476c8423eab4c40a3f4a25d343c7ab194985ef5ad2498758ae8cfd569dcd2a",
        "urls": [
          "bzz-raw://4eedabb61c239ecd3e6f2b675cf176db87bbd2b8e54f6190f47001a1a455f875",
          "dweb:/ipfs/QmRsR9KiVJWBuQK3EBRfCVxdDZBTYmfK7CeBebdkeBX6HE"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/liquidity-mining/IStakingLiquidityGauge.sol": {
        "keccak256": "0xa99cdc7d85b012b7d64eb26a4dafde52314bfe9162973eb66d0bd9241b342877",
        "urls": [
          "bzz-raw://bb5a8c580619a9cb730fe9d333d424db6ed9f5187ba7729beb0df474a64f6733",
          "dweb:/ipfs/QmboYxDELyqkNW7jjb8Ut5g7meDA1HcxsKsX5zmPNyFBPr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/pool-stable/StablePoolUserData.sol": {
        "keccak256": "0x0503d49c1242d38b10cb896d34d85a0bab80c5ce3f253016f4bb51833c359cc0",
        "urls": [
          "bzz-raw://f196af8f3d311b83993cbf85866597358635d5619b25bf33f863be7f093b087c",
          "dweb:/ipfs/QmSFcZUB1Lv4h4G89N2wR2yAgumtc2CszhRpnYcvYfzpmT"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/pool-utils/IManagedPool.sol": {
        "keccak256": "0x09b700bb2a67ad9cc0e19455a7d55d4e2efeaaa380e19969dcc7acceb795fd4f",
        "urls": [
          "bzz-raw://7b013e3dee42088da1b696c5f652535c4ebe68c86dbefc11573ff180df44d7d9",
          "dweb:/ipfs/QmR2yymvt2ACn3qz69gY3sMoUCY9zEnsR4kBF1489cw2si"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/pool-weighted/WeightedPoolUserData.sol": {
        "keccak256": "0xa14005e22ad66472bfe0552caa51b47811c0cee43d7f8ae20811aff63816766b",
        "urls": [
          "bzz-raw://a694b1a00727ce3e694782623eef5c48a1e5b095ceeaed0b33d73685ab69f392",
          "dweb:/ipfs/QmWuTEoUxU2D3y1ASnLdZnGb7joRsjn9RimizT19FVieot"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/helpers/IAuthentication.sol": {
        "keccak256": "0x8032fd6d7f660d9536d252897336462bb932d1e91bd3b87c087be017a35dc842",
        "urls": [
          "bzz-raw://3724cffd85daa36371999e0e9ea56617df12fd7f2cc5c123139705766e3b89a1",
          "dweb:/ipfs/QmaM2wHuKrpKcc8mRhdYmXqPVAimHjGK1xubPWXKafiKYa"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/helpers/ISignaturesValidator.sol": {
        "keccak256": "0x52bd09272e9ec2cff838df757e8b690ff4ca3f4f07e9edd9b711e31e474dd979",
        "urls": [
          "bzz-raw://92ae86c99ce4b92fc666a4c6053bc5ae2932d07b23471647cae7c541c68071b3",
          "dweb:/ipfs/QmeKHMVTVLfG5MKQ7ewM7uwB41WEXkDKhkkL3qCd7mokFo"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/helpers/ITemporarilyPausable.sol": {
        "keccak256": "0xf952ad04a5d4e8523212315e19b8d874e13ceadb7dbc1f5025510da1e153405c",
        "urls": [
          "bzz-raw://81d7e364e8c7a76879f9be650559d3de53879918ab721372931d0e51daa464b5",
          "dweb:/ipfs/QmNyXjvxr3cXzVeBaPrApS9fdjufyN6dXtjGy746xxtj2z"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/misc/IWETH.sol": {
        "keccak256": "0x90278f677649701309ab0902f5bca2fd0d9603e5ce7193b15cf05a7c5582c3b9",
        "urls": [
          "bzz-raw://991dce71671de9fb0f5fafda69994705e358a5cb235bc3acf961dbc9895b6dd6",
          "dweb:/ipfs/QmP7479cjgvMa2DjXNSB6gvHZ2WibU4TGb3DTjqw6UuFb6"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/solidity-utils/openzeppelin/IERC20.sol": {
        "keccak256": "0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835",
        "urls": [
          "bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f",
          "dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/balancer/vault/IAsset.sol": {
        "keccak256": "0x746354db670eb3b94179963b522c4deb0b9854483ab293e3025689749923ebef",
        "urls": [
          "bzz-raw://bcd5a7e0519f94c25f4e3b568b8c0446b2240bd3808c56c3b498a6fed459b2e4",
          "dweb:/ipfs/QmRXvcCy9oKhwPMr8QQ74pg9jormcgq3GHmLSGTDhUWAsn"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IAuthorizer.sol": {
        "keccak256": "0x4adfebbc478ab323d0679386ef8e2384f5205eb280f72757c151eca62ea4f91b",
        "urls": [
          "bzz-raw://49a34c9ad9cb559931b465cea2d570ab015751c6dbc4a52eab8c36b5b949eec1",
          "dweb:/ipfs/QmUiUSZz8gjANUcTqaPCfNkUp3gpjt8Qq2z4UWuQWhaK34"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IBasePool.sol": {
        "keccak256": "0x2a655dcb1150402a7446dc41a9ff2f3cf1ae5caa6d2384bddee08aac1d417e77",
        "urls": [
          "bzz-raw://c506e6beb0542dcb9861f3d4b524f2ff716cdcf5513b2132c24f954ee22f25c9",
          "dweb:/ipfs/QmcJ1dLRHbLMGiYvS8TH1W6G61beZy8MmiSvzFw11UxLQv"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IFlashLoanRecipient.sol": {
        "keccak256": "0xef16377e5ee7ac8151fe8abc3f7b8f0a420008ae1c1336f3cbaea5e171403a43",
        "urls": [
          "bzz-raw://ca460a387ce27682beecc1f93a07c7ef6139504f2d4e2fce715abe82b6d2b039",
          "dweb:/ipfs/QmS8QgcAqhtHepcf8LYGToutbhsUXaTE7UNLQQi4fBJsUC"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IPoolSwapStructs.sol": {
        "keccak256": "0x6bcc1ff0bbbe512e442e1f5a10c79e124a67fb2eae15c7ef2885679f30abfb06",
        "urls": [
          "bzz-raw://cd2c36763fb58b288f317735ee23d464499c9c98056cca5c601ba0398c70a7b9",
          "dweb:/ipfs/QmUSgTJCuzNFrscqZZFWfLQsEvX6v2bqJ5piFQa4o8aiZy"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IProtocolFeesCollector.sol": {
        "keccak256": "0xa42e8b311517ce70dd7f2af6b497603a81c3dd678961a5ffd8a2968eff6b7b5a",
        "urls": [
          "bzz-raw://9a11ea954c234e348896cec60165624d71e9fe7b44d7341d74e3bdc7790f2b6a",
          "dweb:/ipfs/QmNq1f6yAeJawBKpMmfNyoQ84nZquQ78YtT3tt3dMBtyCK"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/balancer/vault/IVault.sol": {
        "keccak256": "0x08d254ba643e02507305b570f794a75b5439d2ae799f761d26d3a2fd77f6d2fb",
        "urls": [
          "bzz-raw://2de3bcdb5d5805a44e2c643bc76bc14858825b2b018049f89962c8bc532ac24d",
          "dweb:/ipfs/QmfWZGKRChzwe97R8nqShjKdRX5k8Tp9HKwr7UAq9rCg1m"
        ],
        "license": "GPL-3.0-or-later"
      },
      "src/interfaces/external/chainlink/IAggregatorV3.sol": {
        "keccak256": "0xf195bb6bcab2877ab2cfb75351c0793d64e2ace9749f496f056ba62bebd5a1d9",
        "urls": [
          "bzz-raw://5960730ba2adbff9392dc85761144c2962a410e188032e6d0e32f7457ffc0886",
          "dweb:/ipfs/QmTnVyDhfmkk6zpUubUWZsBmC9qCPAPSWB9GGmtDebuEFV"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/erc/IERC1271.sol": {
        "keccak256": "0x9f1bfb74bae3843c5ca1fc666cd9d7cef51a97b713b03d9de1023c7e3ba22d36",
        "urls": [
          "bzz-raw://9053f788f8a2e5ba615a9f3069de68526f6784f60925e6aac9639fa167ee2779",
          "dweb:/ipfs/Qmc5Te45rStvUcDbArTk7jrqNoWuYTJJP4XiBK8PSYDDDd"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IContractMeta.sol": {
        "keccak256": "0x7ce236cea17798c2c9e60a659e727ef188f6579315b8227d0c6ad067a33900fb",
        "urls": [
          "bzz-raw://31c232f85d6565414bdf292adacc3054ab2355878e4d4508fc86fc2787436f24",
          "dweb:/ipfs/QmVhEUkN5Rwqpyufn7qqT88LLdq885igE57Pk4LzgJb9Kp"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IDefaultAccessControl.sol": {
        "keccak256": "0xf746069a0607df88bbe40abd9d0ce377eac023a06315072a902f0a1995514d60",
        "urls": [
          "bzz-raw://cef1e775b3ef0bdfab1871c54b6a7ba056e2baaef6f12a5ad5041ed500700add",
          "dweb:/ipfs/QmRKQoRR5FzupKKJb8pTQHzBf3A9hWnk4JrPSQ31s7zLtu"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IBalancerV2Vault.sol": {
        "keccak256": "0xa5e8f55f3d87fde9297c96d80aa72c6555f169f7d22c5478c54ff05d1df6c0e0",
        "urls": [
          "bzz-raw://45dea67abc79ab3af6175330b65fd37e5b087e51acac1c169a9567312e3dedb0",
          "dweb:/ipfs/QmWSQ173mUpnkhgXUhiHEz4ursubqUJrAb18LfDesonofn"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/vaults/IBalancerV2VaultGovernance.sol": {
        "keccak256": "0x1a59b99c956d9db76ffe6d33ede8e88b9285332e5c4fdf8b17f33031871b3ed3",
        "urls": [
          "bzz-raw://e2869ba7ad36797d1c83dbc13d740456dca6e51a43e016e9f97e9ca1c3940ee1",
          "dweb:/ipfs/QmRxZdfNNDTntrCT9uEvBhk5iiYJZXdjj9hqYBV7ZjfefV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/vaults/IIntegrationVault.sol": {
        "keccak256": "0x63ce1a5b16b87b88693680d338279fdf1281f7a093ca8da6f915bb3cb9530c5e",
        "urls": [
          "bzz-raw://2deaa9cd44b8e508e21f79e59acbe80d2b20d30e3ab7b07131f5513424709d1d",
          "dweb:/ipfs/QmUcfqcUPhuTt41TsvybCY9RDiMUVgp3seGTvmFYSXtjMy"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVault.sol": {
        "keccak256": "0x8f5a025c2b61e9840b4a67321610de985f4e478f5368cbcd9737c525cf582c43",
        "urls": [
          "bzz-raw://a6d397f0ddaa34fa8248c7624f72f31f8c8b66ee30965f8bbc3f434e2f3696b1",
          "dweb:/ipfs/QmcTfSgQLGJFmpx6ozKYKNXQp6tPNgswg2m9ttSZyoDQiw"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultGovernance.sol": {
        "keccak256": "0xb0295982be8e1730fb111e034f1ab4db0b8013674408a4ab851d978856387813",
        "urls": [
          "bzz-raw://120ed22cf68dd88aad37700e42cd775637184c636f0fde6b068a5ddb8bfce375",
          "dweb:/ipfs/QmfA9CVkP5MMkXsuDFj86o8pRMtLEjeidmwWe43Henaxwu"
        ],
        "license": "MIT"
      },
      "src/libraries/ExceptionsLibrary.sol": {
        "keccak256": "0x4fc8987a5b3ee1986bdd7bf1dcf37469d7ab9d51422c78ca45c7b32727a453ff",
        "urls": [
          "bzz-raw://381d8247c0f189d77074994c961f7005c5ed3e0989ddb4409d277fdf6cc8307f",
          "dweb:/ipfs/QmfQVaJaN1Tfhw6MCn1QmkaG1aJsDx53CPVwWGANECkdbX"
        ],
        "license": "MIT"
      },
      "src/libraries/PermissionIdsLibrary.sol": {
        "keccak256": "0xc6a4f2515d807b2ad95e9e8f7190c5ea85ab6603d2c1136632a8af9c479ecfcf",
        "urls": [
          "bzz-raw://4e16f3d1e595ffa5b20cd1588e839ee783b1ca246d489cbe42040fd3089bb8b1",
          "dweb:/ipfs/QmQdW5ykrjB5yMMxkU5zTR4GJ5kBhyrnAbmt3mvtB55kuC"
        ],
        "license": "MIT"
      },
      "src/utils/ContractMeta.sol": {
        "keccak256": "0x6e1fe2b6e0907a5388a5775be53bbfb55883aacc0ccb7597dfc6475fa9834c3f",
        "urls": [
          "bzz-raw://9f8a2c5073a97b514829bac140bf84391cc5702185c4d6813e47b61ce53515e6",
          "dweb:/ipfs/QmeuMJq2ciSaDZC8qiUGLPfAHBjpCE4v79fZiaWm8egAks"
        ],
        "license": "BUSL-1.1"
      },
      "src/vaults/BalancerV2VaultGovernance.sol": {
        "keccak256": "0xaf19556c46d9225f7053422ddd7dacd186058d49f40037c9c53cefa3b9fda01f",
        "urls": [
          "bzz-raw://a08cb6528cd18d351e0729a4d011eb0b23537ee05fc5c5cf6e520ea81a4951c1",
          "dweb:/ipfs/QmNu5zAU9ZNHJUtAPxkwh9BYcyiJQNZGDX7aBoQu7QBVHe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/vaults/VaultGovernance.sol": {
        "keccak256": "0xd484ec7eee06480da27027a0ac81f591440ecdd2ba7bd5bfdee58a3f9e88c22c",
        "urls": [
          "bzz-raw://8b4f08e9350fadeb03b9561a2fb2798821f7186fe8663207c91402ea62a53cc5",
          "dweb:/ipfs/QmUr73ghYfPzjtFgxE8mPjw5wFwQTQsbcLDGJNQVfT4rEV"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/vaults/BalancerV2VaultGovernance.sol",
    "id": 138635,
    "exportedSymbols": {
      "BalancerV2VaultGovernance": [
        138634
      ],
      "Clones": [
        43615
      ],
      "ContractMeta": [
        114987
      ],
      "ERC165": [
        48061
      ],
      "ExceptionsLibrary": [
        79454
      ],
      "IAccessControl": [
        43366
      ],
      "IAccessControlEnumerable": [
        43391
      ],
      "IAggregatorV3": [
        63323
      ],
      "IAsset": [
        61808
      ],
      "IBalancerERC20": [
        60345
      ],
      "IBalancerMinter": [
        56638
      ],
      "IBalancerV2Vault": [
        76362
      ],
      "IBalancerV2VaultGovernance": [
        76442
      ],
      "IBalancerVault": [
        63277
      ],
      "IContractMeta": [
        75764
      ],
      "IDefaultAccessControl": [
        75786
      ],
      "IERC1271": [
        64026
      ],
      "IERC165": [
        48073
      ],
      "IERC721": [
        46687
      ],
      "IIntegrationVault": [
        77767
      ],
      "IManagedPool": [
        58882
      ],
      "IProtocolGovernance": [
        52868
      ],
      "IStakingLiquidityGauge": [
        57899
      ],
      "IUnitPricesGovernance": [
        52921
      ],
      "IVault": [
        78599
      ],
      "IVaultGovernance": [
        78668
      ],
      "IVaultRegistry": [
        53012
      ],
      "PermissionIdsLibrary": [
        79479
      ],
      "StablePoolUserData": [
        58481
      ],
      "VaultGovernance": [
        158218
      ],
      "WeightedPoolUserData": [
        59492
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:3979:453",
    "nodes": [
      {
        "id": 138348,
        "nodeType": "PragmaDirective",
        "src": "45:23:453",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 138349,
        "nodeType": "ImportDirective",
        "src": "70:61:453",
        "nodes": [],
        "absolutePath": "src/interfaces/vaults/IBalancerV2VaultGovernance.sol",
        "file": "../interfaces/vaults/IBalancerV2VaultGovernance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 138635,
        "sourceUnit": 76443,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 138350,
        "nodeType": "ImportDirective",
        "src": "132:44:453",
        "nodes": [],
        "absolutePath": "src/libraries/ExceptionsLibrary.sol",
        "file": "../libraries/ExceptionsLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 138635,
        "sourceUnit": 79455,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 138351,
        "nodeType": "ImportDirective",
        "src": "177:35:453",
        "nodes": [],
        "absolutePath": "src/utils/ContractMeta.sol",
        "file": "../utils/ContractMeta.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 138635,
        "sourceUnit": 114988,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 138352,
        "nodeType": "ImportDirective",
        "src": "213:31:453",
        "nodes": [],
        "absolutePath": "src/vaults/VaultGovernance.sol",
        "file": "./VaultGovernance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 138635,
        "sourceUnit": 158219,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 138634,
        "nodeType": "ContractDefinition",
        "src": "350:3673:453",
        "nodes": [
          {
            "id": 138370,
            "nodeType": "FunctionDefinition",
            "src": "547:86:453",
            "nodes": [],
            "body": {
              "id": 138369,
              "nodeType": "Block",
              "src": "631:2:453",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 138360,
              "nodeType": "StructuredDocumentation",
              "src": "452:90:453",
              "text": "@notice Creates a new contract.\n @param internalParams_ Initial Internal Params"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 138366,
                    "name": "internalParams_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 138363,
                    "src": "614:15:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InternalParams_$78614_memory_ptr",
                      "typeString": "struct IVaultGovernance.InternalParams memory"
                    }
                  }
                ],
                "id": 138367,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 138365,
                  "name": "VaultGovernance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 158218,
                  "src": "598:15:453"
                },
                "nodeType": "ModifierInvocation",
                "src": "598:32:453"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 138364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138363,
                  "mutability": "mutable",
                  "name": "internalParams_",
                  "nameLocation": "581:15:453",
                  "nodeType": "VariableDeclaration",
                  "scope": 138370,
                  "src": "559:37:453",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InternalParams_$78614_memory_ptr",
                    "typeString": "struct IVaultGovernance.InternalParams"
                  },
                  "typeName": {
                    "id": 138362,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 138361,
                      "name": "InternalParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78614,
                      "src": "559:14:453"
                    },
                    "referencedDeclaration": 78614,
                    "src": "559:14:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InternalParams_$78614_storage_ptr",
                      "typeString": "struct IVaultGovernance.InternalParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "558:39:453"
            },
            "returnParameters": {
              "id": 138368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "631:0:453"
            },
            "scope": 138634,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 138441,
            "nodeType": "FunctionDefinition",
            "src": "751:841:453",
            "nodes": [],
            "body": {
              "id": 138440,
              "nodeType": "Block",
              "src": "834:758:453",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 138384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 138379,
                          "name": "_strategyParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157451,
                          "src": "848:15:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                            "typeString": "mapping(uint256 => bytes storage ref)"
                          }
                        },
                        "id": 138381,
                        "indexExpression": {
                          "id": 138380,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138373,
                          "src": "864:3:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "848:20:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 138382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "848:27:453",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 138383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "879:1:453",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "848:32:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 138430,
                  "nodeType": "IfStatement",
                  "src": "844:675:453",
                  "trueBody": {
                    "id": 138429,
                    "nodeType": "Block",
                    "src": "882:637:453",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 138390,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "998:1:453",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 138389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "963:34:453",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_BatchSwapStep_$63145_memory_ptr_$dyn_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (struct IVault.BatchSwapStep memory[] memory)"
                                },
                                "typeName": {
                                  "baseType": {
                                    "id": 138387,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 138386,
                                      "name": "IBalancerVault.BatchSwapStep",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 63145,
                                      "src": "967:28:453"
                                    },
                                    "referencedDeclaration": 63145,
                                    "src": "967:28:453",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_BatchSwapStep_$63145_storage_ptr",
                                      "typeString": "struct IVault.BatchSwapStep"
                                    }
                                  },
                                  "id": 138388,
                                  "nodeType": "ArrayTypeName",
                                  "src": "967:30:453",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$63145_storage_$dyn_storage_ptr",
                                    "typeString": "struct IVault.BatchSwapStep[]"
                                  }
                                }
                              },
                              "id": 138391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "963:37:453",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$63145_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct IVault.BatchSwapStep memory[] memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 138396,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1043:1:453",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 138395,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "1030:12:453",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IAsset_$61808_$dyn_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (contract IAsset[] memory)"
                                },
                                "typeName": {
                                  "baseType": {
                                    "id": 138393,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 138392,
                                      "name": "IAsset",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 61808,
                                      "src": "1034:6:453"
                                    },
                                    "referencedDeclaration": 61808,
                                    "src": "1034:6:453",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IAsset_$61808",
                                      "typeString": "contract IAsset"
                                    }
                                  },
                                  "id": 138394,
                                  "nodeType": "ArrayTypeName",
                                  "src": "1034:8:453",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IAsset_$61808_$dyn_storage_ptr",
                                    "typeString": "contract IAsset[]"
                                  }
                                }
                              },
                              "id": 138397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1030:15:453",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IAsset_$61808_$dyn_memory_ptr",
                                "typeString": "contract IAsset[] memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 138402,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1146:1:453",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 138401,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1138:7:453",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 138400,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1138:7:453",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 138403,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1138:10:453",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "hexValue": "66616c7365",
                                  "id": 138404,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1195:5:453",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 138409,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1253:1:453",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 138408,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1245:7:453",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 138407,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1245:7:453",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 138410,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1245:10:453",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 138406,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1237:8:453",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_payable_$",
                                      "typeString": "type(address payable)"
                                    },
                                    "typeName": {
                                      "id": 138405,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1237:8:453",
                                      "stateMutability": "payable",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 138411,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1237:19:453",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "hexValue": "66616c7365",
                                  "id": 138412,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1301:5:453",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "expression": {
                                  "id": 138398,
                                  "name": "IBalancerVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63277,
                                  "src": "1074:14:453",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IVault_$63277_$",
                                    "typeString": "type(contract IVault)"
                                  }
                                },
                                "id": 138399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "FundManagement",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 63169,
                                "src": "1074:29:453",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_FundManagement_$63169_storage_ptr_$",
                                  "typeString": "type(struct IVault.FundManagement storage pointer)"
                                }
                              },
                              "id": 138413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "sender",
                                "fromInternalBalance",
                                "recipient",
                                "toInternalBalance"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "1074:255:453",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FundManagement_$63169_memory_ptr",
                                "typeString": "struct IVault.FundManagement memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 138417,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1387:1:453",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 138416,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1379:7:453",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 138415,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1379:7:453",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 138418,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1379:10:453",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 138414,
                                "name": "IAggregatorV3",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63323,
                                "src": "1365:13:453",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IAggregatorV3_$63323_$",
                                  "typeString": "type(contract IAggregatorV3)"
                                }
                              },
                              "id": 138419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1365:25:453",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAggregatorV3_$63323",
                                "typeString": "contract IAggregatorV3"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 138423,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1452:1:453",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 138422,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1444:7:453",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 138421,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1444:7:453",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 138424,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1444:10:453",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 138420,
                                "name": "IAggregatorV3",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63323,
                                "src": "1430:13:453",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IAggregatorV3_$63323_$",
                                  "typeString": "type(contract IAggregatorV3)"
                                }
                              },
                              "id": 138425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1430:25:453",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAggregatorV3_$63323",
                                "typeString": "contract IAggregatorV3"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 138426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1488:1:453",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$63145_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct IVault.BatchSwapStep memory[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_contract$_IAsset_$61808_$dyn_memory_ptr",
                                "typeString": "contract IAsset[] memory"
                              },
                              {
                                "typeIdentifier": "t_struct$_FundManagement_$63169_memory_ptr",
                                "typeString": "struct IVault.FundManagement memory"
                              },
                              {
                                "typeIdentifier": "t_contract$_IAggregatorV3_$63323",
                                "typeString": "contract IAggregatorV3"
                              },
                              {
                                "typeIdentifier": "t_contract$_IAggregatorV3_$63323",
                                "typeString": "contract IAggregatorV3"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 138385,
                            "name": "StrategyParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76402,
                            "src": "919:14:453",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_StrategyParams_$76402_storage_ptr_$",
                              "typeString": "type(struct IBalancerV2VaultGovernance.StrategyParams storage pointer)"
                            }
                          },
                          "id": 138427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "swaps",
                            "assets",
                            "funds",
                            "rewardOracle",
                            "underlyingOracle",
                            "slippageD"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "919:589:453",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StrategyParams_$76402_memory_ptr",
                            "typeString": "struct IBalancerV2VaultGovernance.StrategyParams memory"
                          }
                        },
                        "functionReturnParameters": 138378,
                        "id": 138428,
                        "nodeType": "Return",
                        "src": "896:612:453"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 138433,
                          "name": "_strategyParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 157451,
                          "src": "1546:15:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                            "typeString": "mapping(uint256 => bytes storage ref)"
                          }
                        },
                        "id": 138435,
                        "indexExpression": {
                          "id": 138434,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138373,
                          "src": "1562:3:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1546:20:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 138436,
                            "name": "StrategyParams",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 76402,
                            "src": "1569:14:453",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_StrategyParams_$76402_storage_ptr_$",
                              "typeString": "type(struct IBalancerV2VaultGovernance.StrategyParams storage pointer)"
                            }
                          }
                        ],
                        "id": 138437,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1568:16:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_StrategyParams_$76402_storage_ptr_$",
                          "typeString": "type(struct IBalancerV2VaultGovernance.StrategyParams storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_StrategyParams_$76402_storage_ptr_$",
                          "typeString": "type(struct IBalancerV2VaultGovernance.StrategyParams storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 138431,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1535:3:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 138432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1535:10:453",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 138438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:50:453",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$76402_memory_ptr",
                      "typeString": "struct IBalancerV2VaultGovernance.StrategyParams memory"
                    }
                  },
                  "functionReturnParameters": 138378,
                  "id": 138439,
                  "nodeType": "Return",
                  "src": "1528:57:453"
                }
              ]
            },
            "baseFunctions": [
              76432
            ],
            "documentation": {
              "id": 138371,
              "nodeType": "StructuredDocumentation",
              "src": "704:42:453",
              "text": "@inheritdoc IBalancerV2VaultGovernance"
            },
            "functionSelector": "12466b68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "strategyParams",
            "nameLocation": "760:14:453",
            "parameters": {
              "id": 138374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138373,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "783:3:453",
                  "nodeType": "VariableDeclaration",
                  "scope": 138441,
                  "src": "775:11:453",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "775:7:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "774:13:453"
            },
            "returnParameters": {
              "id": 138378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138377,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 138441,
                  "src": "811:21:453",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$76402_memory_ptr",
                    "typeString": "struct IBalancerV2VaultGovernance.StrategyParams"
                  },
                  "typeName": {
                    "id": 138376,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 138375,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76402,
                      "src": "811:14:453"
                    },
                    "referencedDeclaration": 76402,
                    "src": "811:14:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$76402_storage_ptr",
                      "typeString": "struct IBalancerV2VaultGovernance.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "810:23:453"
            },
            "scope": 138634,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 138463,
            "nodeType": "FunctionDefinition",
            "src": "1626:214:453",
            "nodes": [],
            "body": {
              "id": 138462,
              "nodeType": "Block",
              "src": "1717:123:453",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 138460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 138452,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138444,
                          "src": "1758:11:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 138450,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1734:5:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_BalancerV2VaultGovernance_$138634_$",
                            "typeString": "type(contract super BalancerV2VaultGovernance)"
                          }
                        },
                        "id": 138451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 157598,
                        "src": "1734:23:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 138453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1734:36:453",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 138459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 138455,
                              "name": "IBalancerV2VaultGovernance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 76442,
                              "src": "1779:26:453",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBalancerV2VaultGovernance_$76442_$",
                                "typeString": "type(contract IBalancerV2VaultGovernance)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IBalancerV2VaultGovernance_$76442_$",
                                "typeString": "type(contract IBalancerV2VaultGovernance)"
                              }
                            ],
                            "id": 138454,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "1774:4:453",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 138456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1774:32:453",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IBalancerV2VaultGovernance_$76442",
                            "typeString": "type(contract IBalancerV2VaultGovernance)"
                          }
                        },
                        "id": 138457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "1774:44:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 138458,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138444,
                        "src": "1822:11:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "1774:59:453",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1734:99:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 138449,
                  "id": 138461,
                  "nodeType": "Return",
                  "src": "1727:106:453"
                }
              ]
            },
            "baseFunctions": [
              157598
            ],
            "documentation": {
              "id": 138442,
              "nodeType": "StructuredDocumentation",
              "src": "1598:23:453",
              "text": "@inheritdoc IERC165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1635:17:453",
            "overrides": {
              "id": 138446,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1693:8:453"
            },
            "parameters": {
              "id": 138445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138444,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1660:11:453",
                  "nodeType": "VariableDeclaration",
                  "scope": 138463,
                  "src": "1653:18:453",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 138443,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:6:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1652:20:453"
            },
            "returnParameters": {
              "id": 138449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138448,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 138463,
                  "src": "1711:4:453",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 138447,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1711:4:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1710:6:453"
            },
            "scope": 138634,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 138528,
            "nodeType": "FunctionDefinition",
            "src": "1962:490:453",
            "nodes": [],
            "body": {
              "id": 138527,
              "nodeType": "Block",
              "src": "2043:409:453",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 138505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 138494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 138483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 138477,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 138473,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 138469,
                                    "src": "2074:6:453",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StrategyParams_$76402_calldata_ptr",
                                      "typeString": "struct IBalancerV2VaultGovernance.StrategyParams calldata"
                                    }
                                  },
                                  "id": 138474,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "swaps",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 76386,
                                  "src": "2074:12:453",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_BatchSwapStep_$63145_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct IVault.BatchSwapStep calldata[] calldata"
                                  }
                                },
                                "id": 138475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2074:19:453",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 138476,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2096:1:453",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2074:23:453",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 138482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 138478,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 138469,
                                    "src": "2117:6:453",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StrategyParams_$76402_calldata_ptr",
                                      "typeString": "struct IBalancerV2VaultGovernance.StrategyParams calldata"
                                    }
                                  },
                                  "id": 138479,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "assets",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 76390,
                                  "src": "2117:13:453",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IAsset_$61808_$dyn_calldata_ptr",
                                    "typeString": "contract IAsset[] calldata"
                                  }
                                },
                                "id": 138480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2117:20:453",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 138481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2140:1:453",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2117:24:453",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "2074:67:453",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 138493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 138486,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 138469,
                                    "src": "2169:6:453",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StrategyParams_$76402_calldata_ptr",
                                      "typeString": "struct IBalancerV2VaultGovernance.StrategyParams calldata"
                                    }
                                  },
                                  "id": 138487,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rewardOracle",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 76396,
                                  "src": "2169:19:453",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IAggregatorV3_$63323",
                                    "typeString": "contract IAggregatorV3"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IAggregatorV3_$63323",
                                    "typeString": "contract IAggregatorV3"
                                  }
                                ],
                                "id": 138485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2161:7:453",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 138484,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2161:7:453",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 138488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2161:28:453",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 138491,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2201:1:453",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 138490,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2193:7:453",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 138489,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2193:7:453",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 138492,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2193:10:453",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2161:42:453",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2074:129:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 138504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 138497,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 138469,
                                  "src": "2231:6:453",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StrategyParams_$76402_calldata_ptr",
                                    "typeString": "struct IBalancerV2VaultGovernance.StrategyParams calldata"
                                  }
                                },
                                "id": 138498,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "underlyingOracle",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 76399,
                                "src": "2231:23:453",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IAggregatorV3_$63323",
                                  "typeString": "contract IAggregatorV3"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IAggregatorV3_$63323",
                                  "typeString": "contract IAggregatorV3"
                                }
                              ],
                              "id": 138496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2223:7:453",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 138495,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2223:7:453",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 138499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2223:32:453",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 138502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2267:1:453",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 138501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2259:7:453",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 138500,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2259:7:453",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 138503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2259:10:453",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2223:46:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2074:195:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 138506,
                          "name": "ExceptionsLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79454,
                          "src": "2283:17:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ExceptionsLibrary_$79454_$",
                            "typeString": "type(library ExceptionsLibrary)"
                          }
                        },
                        "id": 138507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "INVALID_VALUE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79426,
                        "src": "2283:31:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 138472,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2053:7:453",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 138508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2053:271:453",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138509,
                  "nodeType": "ExpressionStatement",
                  "src": "2053:271:453"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 138511,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138466,
                        "src": "2353:3:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 138514,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138469,
                            "src": "2369:6:453",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StrategyParams_$76402_calldata_ptr",
                              "typeString": "struct IBalancerV2VaultGovernance.StrategyParams calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_StrategyParams_$76402_calldata_ptr",
                              "typeString": "struct IBalancerV2VaultGovernance.StrategyParams calldata"
                            }
                          ],
                          "expression": {
                            "id": 138512,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2358:3:453",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 138513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2358:10:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 138515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2358:18:453",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 138510,
                      "name": "_setStrategyParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158149,
                      "src": "2334:18:453",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 138516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2334:43:453",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138517,
                  "nodeType": "ExpressionStatement",
                  "src": "2334:43:453"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 138519,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "2410:2:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 138520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "2410:9:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 138521,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2421:3:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 138522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2421:10:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 138523,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138466,
                        "src": "2433:3:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 138524,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138469,
                        "src": "2438:6:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StrategyParams_$76402_calldata_ptr",
                          "typeString": "struct IBalancerV2VaultGovernance.StrategyParams calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_StrategyParams_$76402_calldata_ptr",
                          "typeString": "struct IBalancerV2VaultGovernance.StrategyParams calldata"
                        }
                      ],
                      "id": 138518,
                      "name": "SetStrategyParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138633,
                      "src": "2392:17:453",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_struct$_StrategyParams_$76402_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,struct IBalancerV2VaultGovernance.StrategyParams memory)"
                      }
                    },
                    "id": 138525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2392:53:453",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138526,
                  "nodeType": "EmitStatement",
                  "src": "2387:58:453"
                }
              ]
            },
            "baseFunctions": [
              76441
            ],
            "documentation": {
              "id": 138464,
              "nodeType": "StructuredDocumentation",
              "src": "1915:42:453",
              "text": "@inheritdoc IBalancerV2VaultGovernance"
            },
            "functionSelector": "5c7017cc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStrategyParams",
            "nameLocation": "1971:17:453",
            "parameters": {
              "id": 138470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138466,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "1997:3:453",
                  "nodeType": "VariableDeclaration",
                  "scope": 138528,
                  "src": "1989:11:453",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1989:7:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138469,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "2026:6:453",
                  "nodeType": "VariableDeclaration",
                  "scope": 138528,
                  "src": "2002:30:453",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$76402_calldata_ptr",
                    "typeString": "struct IBalancerV2VaultGovernance.StrategyParams"
                  },
                  "typeName": {
                    "id": 138468,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 138467,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76402,
                      "src": "2002:14:453"
                    },
                    "referencedDeclaration": 76402,
                    "src": "2002:14:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$76402_storage_ptr",
                      "typeString": "struct IBalancerV2VaultGovernance.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1988:45:453"
            },
            "returnParameters": {
              "id": 138471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2043:0:453"
            },
            "scope": 138634,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 138597,
            "nodeType": "FunctionDefinition",
            "src": "2505:754:453",
            "nodes": [],
            "body": {
              "id": 138596,
              "nodeType": "Block",
              "src": "2778:481:453",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    138551
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 138551,
                      "mutability": "mutable",
                      "name": "vaddr",
                      "nameLocation": "2796:5:453",
                      "nodeType": "VariableDeclaration",
                      "scope": 138596,
                      "src": "2788:13:453",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 138550,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2788:7:453",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 138552,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2788:13:453"
                },
                {
                  "expression": {
                    "id": 138559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 138553,
                          "name": "vaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138551,
                          "src": "2812:5:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 138554,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138548,
                          "src": "2819:3:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 138555,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2811:12:453",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 138557,
                          "name": "owner_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138534,
                          "src": "2839:6:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 138556,
                        "name": "_createVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157867,
                        "src": "2826:12:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$_t_uint256_$",
                          "typeString": "function (address) returns (address,uint256)"
                        }
                      },
                      "id": 138558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2826:20:453",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "src": "2811:35:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138560,
                  "nodeType": "ExpressionStatement",
                  "src": "2811:35:453"
                },
                {
                  "expression": {
                    "id": 138565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 138561,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 138546,
                      "src": "2856:5:453",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBalancerV2Vault_$76362",
                        "typeString": "contract IBalancerV2Vault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 138563,
                          "name": "vaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138551,
                          "src": "2881:5:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 138562,
                        "name": "IBalancerV2Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76362,
                        "src": "2864:16:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IBalancerV2Vault_$76362_$",
                          "typeString": "type(contract IBalancerV2Vault)"
                        }
                      },
                      "id": 138564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2864:23:453",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBalancerV2Vault_$76362",
                        "typeString": "contract IBalancerV2Vault"
                      }
                    },
                    "src": "2856:31:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBalancerV2Vault_$76362",
                      "typeString": "contract IBalancerV2Vault"
                    }
                  },
                  "id": 138566,
                  "nodeType": "ExpressionStatement",
                  "src": "2856:31:453"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 138570,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138548,
                        "src": "2915:3:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 138571,
                        "name": "vaultTokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138532,
                        "src": "2920:12:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 138572,
                        "name": "pool_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138536,
                        "src": "2934:5:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 138573,
                        "name": "balancerVault_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138538,
                        "src": "2941:14:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 138574,
                        "name": "stakingLiquidityGauge_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138540,
                        "src": "2957:22:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 138575,
                        "name": "balancerMinter_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138542,
                        "src": "2981:15:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 138567,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138546,
                        "src": "2898:5:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBalancerV2Vault_$76362",
                          "typeString": "contract IBalancerV2Vault"
                        }
                      },
                      "id": 138569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76342,
                      "src": "2898:16:453",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address[] memory,address,address,address,address) external"
                      }
                    },
                    "id": 138576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2898:99:453",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138577,
                  "nodeType": "ExpressionStatement",
                  "src": "2898:99:453"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 138579,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "3039:2:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 138580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "3039:9:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 138581,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3062:3:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 138582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3062:10:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 138583,
                        "name": "vaultTokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138532,
                        "src": "3086:12:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 138586,
                            "name": "pool_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138536,
                            "src": "3123:5:453",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 138587,
                            "name": "balancerVault_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138538,
                            "src": "3130:14:453",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 138588,
                            "name": "stakingLiquidityGauge_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138540,
                            "src": "3146:22:453",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 138589,
                            "name": "balancerMinter_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 138542,
                            "src": "3170:15:453",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 138584,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3112:3:453",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 138585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "3112:10:453",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 138590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3112:74:453",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 138591,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138534,
                        "src": "3200:6:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 138592,
                        "name": "vaddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138551,
                        "src": "3220:5:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 138593,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138548,
                        "src": "3239:3:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 138578,
                      "name": "DeployedVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158217,
                      "src": "3012:13:453",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address[] memory,bytes memory,address,address,uint256)"
                      }
                    },
                    "id": 138594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3012:240:453",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 138595,
                  "nodeType": "EmitStatement",
                  "src": "3007:245:453"
                }
              ]
            },
            "baseFunctions": [
              76423
            ],
            "documentation": {
              "id": 138529,
              "nodeType": "StructuredDocumentation",
              "src": "2458:42:453",
              "text": "@inheritdoc IBalancerV2VaultGovernance"
            },
            "functionSelector": "c6be9b22",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createVault",
            "nameLocation": "2514:11:453",
            "parameters": {
              "id": 138543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138532,
                  "mutability": "mutable",
                  "name": "vaultTokens_",
                  "nameLocation": "2552:12:453",
                  "nodeType": "VariableDeclaration",
                  "scope": 138597,
                  "src": "2535:29:453",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 138530,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2535:7:453",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 138531,
                    "nodeType": "ArrayTypeName",
                    "src": "2535:9:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138534,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "2582:6:453",
                  "nodeType": "VariableDeclaration",
                  "scope": 138597,
                  "src": "2574:14:453",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2574:7:453",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138536,
                  "mutability": "mutable",
                  "name": "pool_",
                  "nameLocation": "2606:5:453",
                  "nodeType": "VariableDeclaration",
                  "scope": 138597,
                  "src": "2598:13:453",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2598:7:453",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138538,
                  "mutability": "mutable",
                  "name": "balancerVault_",
                  "nameLocation": "2629:14:453",
                  "nodeType": "VariableDeclaration",
                  "scope": 138597,
                  "src": "2621:22:453",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2621:7:453",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138540,
                  "mutability": "mutable",
                  "name": "stakingLiquidityGauge_",
                  "nameLocation": "2661:22:453",
                  "nodeType": "VariableDeclaration",
                  "scope": 138597,
                  "src": "2653:30:453",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2653:7:453",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138542,
                  "mutability": "mutable",
                  "name": "balancerMinter_",
                  "nameLocation": "2701:15:453",
                  "nodeType": "VariableDeclaration",
                  "scope": 138597,
                  "src": "2693:23:453",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2693:7:453",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2525:197:453"
            },
            "returnParameters": {
              "id": 138549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138546,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2758:5:453",
                  "nodeType": "VariableDeclaration",
                  "scope": 138597,
                  "src": "2741:22:453",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IBalancerV2Vault_$76362",
                    "typeString": "contract IBalancerV2Vault"
                  },
                  "typeName": {
                    "id": 138545,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 138544,
                      "name": "IBalancerV2Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76362,
                      "src": "2741:16:453"
                    },
                    "referencedDeclaration": 76362,
                    "src": "2741:16:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBalancerV2Vault_$76362",
                      "typeString": "contract IBalancerV2Vault"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138548,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "2773:3:453",
                  "nodeType": "VariableDeclaration",
                  "scope": 138597,
                  "src": "2765:11:453",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138547,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2765:7:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2740:37:453"
            },
            "scope": 138634,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 138609,
            "nodeType": "FunctionDefinition",
            "src": "3330:126:453",
            "nodes": [],
            "body": {
              "id": 138608,
              "nodeType": "Block",
              "src": "3396:60:453",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "42616c616e63657256325661756c74476f7665726e616e6365",
                        "id": 138605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3421:27:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d56a4d02c6a6f023d6e7a0f147d5714a67a4b1d7db712ca52b45a5aea3eff467",
                          "typeString": "literal_string \"BalancerV2VaultGovernance\""
                        },
                        "value": "BalancerV2VaultGovernance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d56a4d02c6a6f023d6e7a0f147d5714a67a4b1d7db712ca52b45a5aea3eff467",
                          "typeString": "literal_string \"BalancerV2VaultGovernance\""
                        }
                      ],
                      "id": 138604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3413:7:453",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 138603,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3413:7:453",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 138606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3413:36:453",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 138602,
                  "id": 138607,
                  "nodeType": "Return",
                  "src": "3406:43:453"
                }
              ]
            },
            "baseFunctions": [
              114934
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_contractName",
            "nameLocation": "3339:13:453",
            "overrides": {
              "id": 138599,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3369:8:453"
            },
            "parameters": {
              "id": 138598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3352:2:453"
            },
            "returnParameters": {
              "id": 138602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138601,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 138609,
                  "src": "3387:7:453",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 138600,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3387:7:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3386:9:453"
            },
            "scope": 138634,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 138621,
            "nodeType": "FunctionDefinition",
            "src": "3462:109:453",
            "nodes": [],
            "body": {
              "id": 138620,
              "nodeType": "Block",
              "src": "3531:40:453",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "312e302e30",
                        "id": 138617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3556:7:453",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                          "typeString": "literal_string \"1.0.0\""
                        },
                        "value": "1.0.0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                          "typeString": "literal_string \"1.0.0\""
                        }
                      ],
                      "id": 138616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3548:7:453",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 138615,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3548:7:453",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 138618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3548:16:453",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 138614,
                  "id": 138619,
                  "nodeType": "Return",
                  "src": "3541:23:453"
                }
              ]
            },
            "baseFunctions": [
              114939
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_contractVersion",
            "nameLocation": "3471:16:453",
            "overrides": {
              "id": 138611,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3504:8:453"
            },
            "parameters": {
              "id": 138610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3487:2:453"
            },
            "returnParameters": {
              "id": 138614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138613,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 138621,
                  "src": "3522:7:453",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 138612,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3522:7:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3521:9:453"
            },
            "scope": 138634,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 138633,
            "nodeType": "EventDefinition",
            "src": "3905:116:453",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 138622,
              "nodeType": "StructuredDocumentation",
              "src": "3648:252:453",
              "text": "@notice Emitted when new StrategyParams are set\n @param origin Origin of the transaction (tx.origin)\n @param sender Sender of the call (msg.sender)\n @param nft VaultRegistry NFT of the vault\n @param params New set params"
            },
            "name": "SetStrategyParams",
            "nameLocation": "3911:17:453",
            "parameters": {
              "id": 138632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138624,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "origin",
                  "nameLocation": "3945:6:453",
                  "nodeType": "VariableDeclaration",
                  "scope": 138633,
                  "src": "3929:22:453",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3929:7:453",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138626,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3969:6:453",
                  "nodeType": "VariableDeclaration",
                  "scope": 138633,
                  "src": "3953:22:453",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3953:7:453",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138628,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "3993:3:453",
                  "nodeType": "VariableDeclaration",
                  "scope": 138633,
                  "src": "3977:19:453",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3977:7:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138631,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "4013:6:453",
                  "nodeType": "VariableDeclaration",
                  "scope": 138633,
                  "src": "3998:21:453",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StrategyParams_$76402_memory_ptr",
                    "typeString": "struct IBalancerV2VaultGovernance.StrategyParams"
                  },
                  "typeName": {
                    "id": 138630,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 138629,
                      "name": "StrategyParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 76402,
                      "src": "3998:14:453"
                    },
                    "referencedDeclaration": 76402,
                    "src": "3998:14:453",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StrategyParams_$76402_storage_ptr",
                      "typeString": "struct IBalancerV2VaultGovernance.StrategyParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3928:92:453"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 138354,
              "name": "ContractMeta",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 114987,
              "src": "388:12:453"
            },
            "id": 138355,
            "nodeType": "InheritanceSpecifier",
            "src": "388:12:453"
          },
          {
            "baseName": {
              "id": 138356,
              "name": "IBalancerV2VaultGovernance",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 76442,
              "src": "402:26:453"
            },
            "id": 138357,
            "nodeType": "InheritanceSpecifier",
            "src": "402:26:453"
          },
          {
            "baseName": {
              "id": 138358,
              "name": "VaultGovernance",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 158218,
              "src": "430:15:453"
            },
            "id": 138359,
            "nodeType": "InheritanceSpecifier",
            "src": "430:15:453"
          }
        ],
        "canonicalName": "BalancerV2VaultGovernance",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 138353,
          "nodeType": "StructuredDocumentation",
          "src": "246:104:453",
          "text": "@notice Governance that manages all BalancerV2 Vaults params and can deploy a new BalancerV2 Vault."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          138634,
          158218,
          48061,
          48073,
          76442,
          78668,
          114987,
          75764
        ],
        "name": "BalancerV2VaultGovernance",
        "nameLocation": "359:25:453",
        "scope": 138635,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 453
}