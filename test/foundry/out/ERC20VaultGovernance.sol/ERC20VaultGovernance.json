{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "internalParams_",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "CommitedInternalParams",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "vaultTokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "vaultAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vaultNft",
          "type": "uint256"
        }
      ],
      "name": "DeployedVault",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "params",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "when",
          "type": "uint256"
        }
      ],
      "name": "StagedInternalParams",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "commitInternalParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractNameBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractVersionBytes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "createVault",
      "outputs": [
        {
          "internalType": "contract IERC20Vault",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delayedProtocolParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedProtocolPerVaultParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "name": "delayedStrategyParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "internalParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "internalParamsTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "newParams",
          "type": "tuple"
        }
      ],
      "name": "stageInternalParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stagedInternalParams",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IProtocolGovernance",
              "name": "protocolGovernance",
              "type": "address"
            },
            {
              "internalType": "contract IVaultRegistry",
              "name": "registry",
              "type": "address"
            },
            {
              "internalType": "contract IVault",
              "name": "singleton",
              "type": "address"
            }
          ],
          "internalType": "struct IVaultGovernance.InternalParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200115d3803806200115d83398101604081905262000034916200018a565b805160408051808201909152600281526120ad60f11b602082015282916001600160a01b0316620000835760405162461bcd60e51b81526004016200007a919062000211565b60405180910390fd5b5060006001600160a01b031681602001516001600160a01b031614156040518060400160405280600281526020016120ad60f11b81525090620000db5760405162461bcd60e51b81526004016200007a919062000211565b506040808201518151808301909252600282526120ad60f11b60208301526001600160a01b0316620001225760405162461bcd60e51b81526004016200007a919062000211565b508051600080546001600160a01b03199081166001600160a01b039384161790915560208301516001805483169184169190911790556040909201516002805490931691161790555062000269565b6001600160a01b03811681146200018757600080fd5b50565b6000606082840312156200019d57600080fd5b604051606081016001600160401b0381118282101715620001ce57634e487b7160e01b600052604160045260246000fd5b6040528251620001de8162000171565b81526020830151620001f08162000171565b60208201526040830151620002058162000171565b60408201529392505050565b600060208083528351808285015260005b81811015620002405785810183015185820160400152820162000222565b8181111562000253576000604083870101525b50601f01601f1916929092016040019392505050565b610ee480620002796000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636707acee1161008c57806386c6be3e1161006657806386c6be3e14610250578063a0a8e460146102a3578063d4a07d34146102ab578063e4af6e79146102b357600080fd5b80636707acee146101bb57806375d0c0dc146101db5780637ac46fbb146101f057600080fd5b80630e3e80ac116100c85780630e3e80ac146101445780630fb27e4d146101615780631c7f4c7314610193578063511ce7981461019b57600080fd5b806301ffc9a7146100ef57806306a4623914610117578063099465381461012f575b600080fd5b6101026100fd366004610aba565b6102bb565b60405190151581526020015b60405180910390f35b640312e302e360dc1b5b60405190815260200161010e565b61014261013d366004610b47565b6102f7565b005b7345524332305661756c74476f7665726e616e636560601b610121565b61017461016f366004610bc9565b6104e9565b604080516001600160a01b03909316835260208301919091520161010e565b600654610121565b6101216101a9366004610c8d565b6000908152600c602052604090205490565b6101216101c9366004610c8d565b60009081526009602052604090205490565b6101e36105a9565b60405161010e9190610ca6565b610243604080516060810182526000808252602082018190529181019190915250604080516060810182526000546001600160a01b03908116825260015481166020830152600254169181019190915290565b60405161010e9190610cfb565b610243604080516060810182526000808252602082018190529181019190915250604080516060810182526003546001600160a01b03908116825260045481166020830152600554169181019190915290565b6101e36105cb565b6101426105de565b600f54610121565b60006301ffc9a760e01b6001600160e01b0319831614806102ec57506001600160e01b0319821663effda0f560e01b145b92915050565b905090565b6102ff610708565b805160408051808201909152600281526120ad60f11b6020820152906001600160a01b031661034a5760405162461bcd60e51b81526004016103419190610ca6565b60405180910390fd5b5060006001600160a01b031681602001516001600160a01b031614156040518060400160405280600281526020016120ad60f11b8152509061039f5760405162461bcd60e51b81526004016103419190610ca6565b506040808201518151808301909252600282526120ad60f11b60208301526001600160a01b03166103e35760405162461bcd60e51b81526004016103419190610ca6565b508051600380546001600160a01b03199081166001600160a01b03938416179091556020808401516004805484169185169190911781556040808601516005805490951690861617909355600054835163bba3293960e01b8152935194169363bba3293993808301939290829003018186803b15801561046257600080fd5b505afa158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049a9190610d2b565b6104a49042610d5a565b6006819055604051339132917f0887cab3184f7c02b16978ab31f8acee05979f59fc3da6abe5bf71105ec3179d916104de91869190610d72565b60405180910390a350565b60008060006104f7846107c0565b604051632a482de360e21b815291945092508391506001600160a01b0382169063a920b78c9061052d9085908990600401610df3565b600060405180830381600087803b15801561054757600080fd5b505af115801561055b573d6000803e3d6000fd5b50506040513392503291507f8a4513c05d15df8ece912856923273e166e39f5c9c2b43d2b38594023494a0e090610599908990899087908990610e14565b60405180910390a3509250929050565b60606102f27345524332305661756c74476f7665726e616e636560601b6109b1565b60606102f2640312e302e360dc1b6109b1565b6105e6610708565b6006546040805180820190915260048152631395531360e21b6020820152906106225760405162461bcd60e51b81526004016103419190610ca6565b5060065442101560405180604001604052806002815260200161545360f01b815250906106625760405162461bcd60e51b81526004016103419190610ca6565b5060038054600080546001600160a01b038084166001600160a01b03199283168117845560048054600180548286169087168117909155600580546002805497821697891688179055600698909855978616909855841690559290911690925560408051918252602082019390935291820152339032907fef3e4bc9725fa684957d7de03c6dcd01078ee86cf78ceef25c5f8346df69cc999060600160405180910390a3565b600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561074b57600080fd5b505afa15801561075f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107839190610e5b565b6040518060400160405280600381526020016223292160e91b815250906107bd5760405162461bcd60e51b81526004016103419190610ca6565b50565b600080546040516363e85d2d60e01b81523360048201526001602482015282916001600160a01b03169081906363e85d2d9060440160206040518083038186803b15801561080d57600080fd5b505afa158015610821573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108459190610e5b565b6040518060400160405280600381526020016223292160e91b8152509061087f5760405162461bcd60e51b81526004016103419190610ca6565b5060015460408051631112eee760e31b815290516001600160a01b039092169182916388977738916004808301926020929190829003018186803b1580156108c657600080fd5b505afa1580156108da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fe9190610d2b565b610909906001610d5a565b600254909350610922906001600160a01b031684610a1d565b6040516305c4fdf960e01b81526001600160a01b0380831660048301528781166024830152919550908216906305c4fdf990604401602060405180830381600087803b15801561097157600080fd5b505af1158015610985573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a99190610d2b565b505050915091565b604080516020808252818301909252606091602082018180368337019050509050602060005b6020811015610a0f578381602081106109f2576109f2610e7d565b1a6109ff57809150610a0f565b610a0881610e93565b90506109d7565b508152602081019190915290565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166102ec5760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610341565b600060208284031215610acc57600080fd5b81356001600160e01b031981168114610ae457600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b2a57610b2a610aeb565b604052919050565b6001600160a01b03811681146107bd57600080fd5b600060608284031215610b5957600080fd5b6040516060810181811067ffffffffffffffff82111715610b7c57610b7c610aeb565b6040528235610b8a81610b32565b81526020830135610b9a81610b32565b60208201526040830135610bad81610b32565b60408201529392505050565b8035610bc481610b32565b919050565b60008060408385031215610bdc57600080fd5b823567ffffffffffffffff80821115610bf457600080fd5b818501915085601f830112610c0857600080fd5b8135602082821115610c1c57610c1c610aeb565b8160051b9250610c2d818401610b01565b8281529284018101928181019089851115610c4757600080fd5b948201945b84861015610c715785359350610c6184610b32565b8382529482019490820190610c4c565b9650610c809050878201610bb9565b9450505050509250929050565b600060208284031215610c9f57600080fd5b5035919050565b600060208083528351808285015260005b81811015610cd357858101830151858201604001528201610cb7565b81811115610ce5576000604083870101525b50601f01601f1916929092016040019392505050565b606081016102ec828480516001600160a01b03908116835260208083015182169084015260409182015116910152565b600060208284031215610d3d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d6d57610d6d610d44565b500190565b60808101610da2828580516001600160a01b03908116835260208083015182169084015260409182015116910152565b8260608301529392505050565b600081518084526020808501945080840160005b83811015610de85781516001600160a01b031687529582019590820190600101610dc3565b509495945050505050565b828152604060208201526000610e0c6040830184610daf565b949350505050565b60a081526000610e2760a0830187610daf565b828103602080850191909152600082526001600160a01b039687166040850152949095166060830152506080015201919050565b600060208284031215610e6d57600080fd5b81518015158114610ae457600080fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415610ea757610ea7610d44565b506001019056fea26469706673582212206c03e4fd311fe827e97a48d9cb05f405ca16e58fd4e2008131033410bbb37e4a64736f6c63430008090033",
    "sourceMap": "384:1082:80:-:0;;;571:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1760:34:86;;1811:30;;;;;;;;;;;;-1:-1:-1;;;1811:30:86;;;;638:15:80;;-1:-1:-1;;;;;1752:57:86;1744:98;;;;-1:-1:-1;;;1744:98:86;;;;;;;;:::i;:::-;;;;;;;;;;1905:1;-1:-1:-1;;;;;1860:47:86;1868:15;:24;;;-1:-1:-1;;;;;1860:47:86;;;1909:30;;;;;;;;;;;;;-1:-1:-1;;;1909:30:86;;;1852:88;;;;;-1:-1:-1;;;1852:88:86;;;;;;;;:::i;:::-;-1:-1:-1;1966:25:86;;;;;2008:30;;;;;;;;;;;-1:-1:-1;;;2008:30:86;;;;-1:-1:-1;;;;;1958:48:86;1950:89;;;;-1:-1:-1;;;1950:89:86;;;;;;;;:::i;:::-;-1:-1:-1;2049:33:86;;:15;:33;;-1:-1:-1;;;;;;2049:33:86;;;-1:-1:-1;;;;;2049:33:86;;;;;;;;;;;-1:-1:-1;2049:33:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;384:1082:80;;14:152:88;-1:-1:-1;;;;;110:31:88;;100:42;;90:70;;156:1;153;146:12;90:70;14:152;:::o;171:941::-;274:6;327:2;315:9;306:7;302:23;298:32;295:52;;;343:1;340;333:12;295:52;376:2;370:9;418:2;406:15;;-1:-1:-1;;;;;436:34:88;;472:22;;;433:62;430:185;;;537:10;532:3;528:20;525:1;518:31;572:4;569:1;562:15;600:4;597:1;590:15;430:185;631:2;624:22;668:16;;693:52;668:16;693:52;:::i;:::-;754:21;;820:2;805:18;;799:25;833:54;799:25;833:54;:::i;:::-;915:2;903:15;;896:32;973:2;958:18;;952:25;986:54;952:25;986:54;:::i;:::-;1068:2;1056:15;;1049:32;1060:6;171:941;-1:-1:-1;;;171:941:88:o;1117:597::-;1229:4;1258:2;1287;1276:9;1269:21;1319:6;1313:13;1362:6;1357:2;1346:9;1342:18;1335:34;1387:1;1397:140;1411:6;1408:1;1405:13;1397:140;;;1506:14;;;1502:23;;1496:30;1472:17;;;1491:2;1468:26;1461:66;1426:10;;1397:140;;;1555:6;1552:1;1549:13;1546:91;;;1625:1;1620:2;1611:6;1600:9;1596:22;1592:31;1585:42;1546:91;-1:-1:-1;1698:2:88;1677:15;-1:-1:-1;;1673:29:88;1658:45;;;;1705:2;1654:54;;1117:597;-1:-1:-1;;;1117:597:88:o;:::-;384:1082:80;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636707acee1161008c57806386c6be3e1161006657806386c6be3e14610250578063a0a8e460146102a3578063d4a07d34146102ab578063e4af6e79146102b357600080fd5b80636707acee146101bb57806375d0c0dc146101db5780637ac46fbb146101f057600080fd5b80630e3e80ac116100c85780630e3e80ac146101445780630fb27e4d146101615780631c7f4c7314610193578063511ce7981461019b57600080fd5b806301ffc9a7146100ef57806306a4623914610117578063099465381461012f575b600080fd5b6101026100fd366004610aba565b6102bb565b60405190151581526020015b60405180910390f35b640312e302e360dc1b5b60405190815260200161010e565b61014261013d366004610b47565b6102f7565b005b7345524332305661756c74476f7665726e616e636560601b610121565b61017461016f366004610bc9565b6104e9565b604080516001600160a01b03909316835260208301919091520161010e565b600654610121565b6101216101a9366004610c8d565b6000908152600c602052604090205490565b6101216101c9366004610c8d565b60009081526009602052604090205490565b6101e36105a9565b60405161010e9190610ca6565b610243604080516060810182526000808252602082018190529181019190915250604080516060810182526000546001600160a01b03908116825260015481166020830152600254169181019190915290565b60405161010e9190610cfb565b610243604080516060810182526000808252602082018190529181019190915250604080516060810182526003546001600160a01b03908116825260045481166020830152600554169181019190915290565b6101e36105cb565b6101426105de565b600f54610121565b60006301ffc9a760e01b6001600160e01b0319831614806102ec57506001600160e01b0319821663effda0f560e01b145b92915050565b905090565b6102ff610708565b805160408051808201909152600281526120ad60f11b6020820152906001600160a01b031661034a5760405162461bcd60e51b81526004016103419190610ca6565b60405180910390fd5b5060006001600160a01b031681602001516001600160a01b031614156040518060400160405280600281526020016120ad60f11b8152509061039f5760405162461bcd60e51b81526004016103419190610ca6565b506040808201518151808301909252600282526120ad60f11b60208301526001600160a01b03166103e35760405162461bcd60e51b81526004016103419190610ca6565b508051600380546001600160a01b03199081166001600160a01b03938416179091556020808401516004805484169185169190911781556040808601516005805490951690861617909355600054835163bba3293960e01b8152935194169363bba3293993808301939290829003018186803b15801561046257600080fd5b505afa158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049a9190610d2b565b6104a49042610d5a565b6006819055604051339132917f0887cab3184f7c02b16978ab31f8acee05979f59fc3da6abe5bf71105ec3179d916104de91869190610d72565b60405180910390a350565b60008060006104f7846107c0565b604051632a482de360e21b815291945092508391506001600160a01b0382169063a920b78c9061052d9085908990600401610df3565b600060405180830381600087803b15801561054757600080fd5b505af115801561055b573d6000803e3d6000fd5b50506040513392503291507f8a4513c05d15df8ece912856923273e166e39f5c9c2b43d2b38594023494a0e090610599908990899087908990610e14565b60405180910390a3509250929050565b60606102f27345524332305661756c74476f7665726e616e636560601b6109b1565b60606102f2640312e302e360dc1b6109b1565b6105e6610708565b6006546040805180820190915260048152631395531360e21b6020820152906106225760405162461bcd60e51b81526004016103419190610ca6565b5060065442101560405180604001604052806002815260200161545360f01b815250906106625760405162461bcd60e51b81526004016103419190610ca6565b5060038054600080546001600160a01b038084166001600160a01b03199283168117845560048054600180548286169087168117909155600580546002805497821697891688179055600698909855978616909855841690559290911690925560408051918252602082019390935291820152339032907fef3e4bc9725fa684957d7de03c6dcd01078ee86cf78ceef25c5f8346df69cc999060600160405180910390a3565b600054604051630935e01b60e21b81523360048201526001600160a01b03909116906324d7806c9060240160206040518083038186803b15801561074b57600080fd5b505afa15801561075f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107839190610e5b565b6040518060400160405280600381526020016223292160e91b815250906107bd5760405162461bcd60e51b81526004016103419190610ca6565b50565b600080546040516363e85d2d60e01b81523360048201526001602482015282916001600160a01b03169081906363e85d2d9060440160206040518083038186803b15801561080d57600080fd5b505afa158015610821573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108459190610e5b565b6040518060400160405280600381526020016223292160e91b8152509061087f5760405162461bcd60e51b81526004016103419190610ca6565b5060015460408051631112eee760e31b815290516001600160a01b039092169182916388977738916004808301926020929190829003018186803b1580156108c657600080fd5b505afa1580156108da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fe9190610d2b565b610909906001610d5a565b600254909350610922906001600160a01b031684610a1d565b6040516305c4fdf960e01b81526001600160a01b0380831660048301528781166024830152919550908216906305c4fdf990604401602060405180830381600087803b15801561097157600080fd5b505af1158015610985573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a99190610d2b565b505050915091565b604080516020808252818301909252606091602082018180368337019050509050602060005b6020811015610a0f578381602081106109f2576109f2610e7d565b1a6109ff57809150610a0f565b610a0881610e93565b90506109d7565b508152602081019190915290565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166102ec5760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610341565b600060208284031215610acc57600080fd5b81356001600160e01b031981168114610ae457600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b2a57610b2a610aeb565b604052919050565b6001600160a01b03811681146107bd57600080fd5b600060608284031215610b5957600080fd5b6040516060810181811067ffffffffffffffff82111715610b7c57610b7c610aeb565b6040528235610b8a81610b32565b81526020830135610b9a81610b32565b60208201526040830135610bad81610b32565b60408201529392505050565b8035610bc481610b32565b919050565b60008060408385031215610bdc57600080fd5b823567ffffffffffffffff80821115610bf457600080fd5b818501915085601f830112610c0857600080fd5b8135602082821115610c1c57610c1c610aeb565b8160051b9250610c2d818401610b01565b8281529284018101928181019089851115610c4757600080fd5b948201945b84861015610c715785359350610c6184610b32565b8382529482019490820190610c4c565b9650610c809050878201610bb9565b9450505050509250929050565b600060208284031215610c9f57600080fd5b5035919050565b600060208083528351808285015260005b81811015610cd357858101830151858201604001528201610cb7565b81811115610ce5576000604083870101525b50601f01601f1916929092016040019392505050565b606081016102ec828480516001600160a01b03908116835260208083015182169084015260409182015116910152565b600060208284031215610d3d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d6d57610d6d610d44565b500190565b60808101610da2828580516001600160a01b03908116835260208083015182169084015260409182015116910152565b8260608301529392505050565b600081518084526020808501945080840160005b83811015610de85781516001600160a01b031687529582019590820190600101610dc3565b509495945050505050565b828152604060208201526000610e0c6040830184610daf565b949350505050565b60a081526000610e2760a0830187610daf565b828103602080850191909152600082526001600160a01b039687166040850152949095166060830152506080015201919050565b600060208284031215610e6d57600080fd5b81518015158114610ae457600080fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415610ea757610ea7610d44565b506001019056fea26469706673582212206c03e4fd311fe827e97a48d9cb05f405ca16e58fd4e2008131033410bbb37e4a64736f6c63430008090033",
    "sourceMap": "384:1082:80:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3202:212:86;;;;;;:::i;:::-;;:::i;:::-;;;470:14:88;;463:22;445:41;;433:2;418:18;3202:212:86;;;;;;;;590:106:75;-1:-1:-1;;;590:106:75;;;643:25:88;;;631:2;616:18;590:106:75;497:177:88;3526:643:86;;;;;;:::i;:::-;;:::i;:::-;;353:100:75;-1:-1:-1;;;353:100:75;590:106;1081:383:80;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;3603:32:88;;;3585:51;;3667:2;3652:18;;3645:34;;;;3558:18;1081:383:80;3390:295:88;2761:115:86;2845:24;;2761:115;;2385:161;;;;;;:::i;:::-;2469:7;2495:44;;;:39;:44;;;;;;;2385:161;2197:145;;;;;;:::i;:::-;2273:7;2299:36;;;:31;:36;;;;;;;2197:145;228:119:75;;;:::i;:::-;;;;;;;:::i;2919:111:86:-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;3001:22:86;;;;;;;;3008:15;3001:22;-1:-1:-1;;;;;3001:22:86;;;;;;;;;;;;;;;;;;;;;;;;2919:111;;;;;;;;:::i;3073:123::-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;3161:28:86;;;;;;;;3168:21;3161:28;-1:-1:-1;;;;;3161:28:86;;;;;;;;;;;;;;;;;;;;;;;;3073:123;459:125:75;;;:::i;4212:449:86:-;;;:::i;2589:129::-;2680:31;;2589:129;;3202:212;3295:4;-1:-1:-1;;;;;;;;;937:40:25;;;3318:89:86;;;-1:-1:-1;;;;;;;3358:49:86;;-1:-1:-1;;;3358:49:86;3318:89;3311:96;3202:212;-1:-1:-1;;3202:212:86:o;671:18:75:-;664:25;;590:106;:::o;3526:643:86:-;3607:23;:21;:23::i;:::-;3656:28;;3701:30;;;;;;;;;;;;-1:-1:-1;;;3701:30:86;;;;;-1:-1:-1;;;;;3648:51:86;3640:92;;;;-1:-1:-1;;;3640:92:86;;;;;;;;:::i;:::-;;;;;;;;;;3789:1;-1:-1:-1;;;;;3750:41:86;3758:9;:18;;;-1:-1:-1;;;;;3750:41:86;;;3793:30;;;;;;;;;;;;;-1:-1:-1;;;3793:30:86;;;3742:82;;;;;-1:-1:-1;;;3742:82:86;;;;;;;;:::i;:::-;-1:-1:-1;3850:19:86;;;;;3886:30;;;;;;;;;;;-1:-1:-1;;;3886:30:86;;;;-1:-1:-1;;;;;3842:42:86;3834:83;;;;-1:-1:-1;;;3834:83:86;;;;;;;;:::i;:::-;-1:-1:-1;3927:33:86;;:21;:33;;-1:-1:-1;;;;;;3927:33:86;;;-1:-1:-1;;;;;3927:33:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4015:34:86;:52;;-1:-1:-1;;;4015:52:86;;;;:34;;;:50;;:52;;;;3927:33;4015:52;;;;;;:34;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3997:70;;:15;:70;:::i;:::-;3970:24;:97;;;4082:80;;4114:10;;4103:9;;4082:80;;;;4126:9;;3970:97;4082:80;:::i;:::-;;;;;;;;3526:643;:::o;1081:383:80:-;1183:17;1202:11;1229:13;1267:20;1280:6;1267:12;:20::i;:::-;1333:35;;-1:-1:-1;;;1333:35:80;;1252;;-1:-1:-1;1252:35:80;-1:-1:-1;1252:35:80;;-1:-1:-1;;;;;;1333:16:80;;;;;:35;;1252;;1355:12;;1333:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1383:74:80;;1408:10;;-1:-1:-1;1397:9:80;;-1:-1:-1;1383:74:80;;;;1420:12;;1438:6;;1446:5;;1453:3;;1383:74;:::i;:::-;;;;;;;;1219:245;1081:383;;;;;:::o;228:119:75:-;275:13;307:33;-1:-1:-1;;;307:16:75;:33::i;459:125::-;509:13;541:36;-1:-1:-1;;;307:16:75;:33::i;4212:449:86:-;4263:23;:21;:23::i;:::-;4304:24;;4335:22;;;;;;;;;;;;-1:-1:-1;;;4335:22:86;;;;;4296:62;;;;-1:-1:-1;;;4296:62:86;;;;;;;;:::i;:::-;;4395:24;;4376:15;:43;;4421:27;;;;;;;;;;;;;-1:-1:-1;;;4421:27:86;;;4368:81;;;;;-1:-1:-1;;;4368:81:86;;;;;;;;:::i;:::-;-1:-1:-1;4477:21:86;4459:39;;:15;:39;;-1:-1:-1;;;;;4459:39:86;;;-1:-1:-1;;;;;;4459:39:86;;;;;;;;;;-1:-1:-1;4459:39:86;;;;;;;;;;;;;;;;-1:-1:-1;4459:39:86;;;;;;;;;;;;4515:24;4508:31;;;;4549:28;;;;;;;;;;;;;;;;;4592:62;;;7825:41:88;;;7897:4;7882:20;;7875:63;;;;7954:20;;;7947:63;4626:10:86;;4615:9;;4592:62;;7775:2:88;7760:18;4592:62:86;;;;;;;4212:449::o;5091:156::-;5156:15;:34;:54;;-1:-1:-1;;;5156:54:86;;5199:10;5156:54;;;8167:51:88;-1:-1:-1;;;;;5156:34:86;;;;:42;;8140:18:88;;5156:54:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5212:27;;;;;;;;;;;;;-1:-1:-1;;;5212:27:86;;;5148:92;;;;;-1:-1:-1;;;5148:92:86;;;;;;;;:::i;:::-;;5091:156::o;5576:622::-;5631:13;5730:34;;5796:79;;-1:-1:-1;;;5796:79:86;;5829:10;5796:79;;;8681:51:88;5730:34:86;8748:18:88;;;8741:45;5631:13:86;;-1:-1:-1;;;;;5730:34:86;;;;5796:32;;8654:18:88;;5796:79:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5889:27;;;;;;;;;;;;;-1:-1:-1;;;5889:27:86;;;5775:151;;;;;-1:-1:-1;;;5775:151:86;;;;;;;;:::i;:::-;-1:-1:-1;5967:24:86;;6007:27;;;-1:-1:-1;;;6007:27:86;;;;-1:-1:-1;;;;;5967:24:86;;;;;;6007:25;;:27;;;;;;;;;;;;;;5967:24;6007:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;;6037:1;6007:31;:::i;:::-;6090:25;;6001:37;;-1:-1:-1;6056:75:86;;-1:-1:-1;;;;;6090:25:86;6001:37;6056:25;:75::i;:::-;6141:50;;-1:-1:-1;;;6141:50:86;;-1:-1:-1;;;;;9027:15:88;;;6141:50:86;;;9009:34:88;9079:15;;;9059:18;;;9052:43;6048:83:86;;-1:-1:-1;6141:27:86;;;;;;8944:18:88;;6141:50:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5659:539;;5576:622;;;:::o;912:381:75:-;1003:14;;;1014:2;1003:14;;;;;;;;;972:15;;1003:14;;;;;;;;;;-1:-1:-1;;999:18:75;-1:-1:-1;1041:2:75;1027:11;1053:142;1077:2;1073:1;:6;1053:142;;;1110:1;1112;1110:4;;;;;;;:::i;:::-;;1100:85;;1146:1;1140:7;;1165:5;;1100:85;1081:3;;;:::i;:::-;;;1053:142;;;-1:-1:-1;1227:14:75;;1268:4;1261:12;;1254:23;;;;1234:1;912:381::o;2107:794:11:-;2191:16;2523:48;2505:14;2499:4;2495:25;2489:4;2485:36;2482:90;2476:4;2469:104;2730:32;2713:14;2707:4;2703:25;2700:63;2694:4;2687:77;2812:4;2806;2800;2797:1;2789:28;2777:40;-1:-1:-1;;;;;;2844:22:11;;2836:58;;;;-1:-1:-1;;;2836:58:11;;9580:2:88;2836:58:11;;;9562:21:88;9619:2;9599:18;;;9592:30;9658:25;9638:18;;;9631:53;9701:18;;2836:58:11;9378:347:88;14:286;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:88;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:88:o;679:127::-;740:10;735:3;731:20;728:1;721:31;771:4;768:1;761:15;795:4;792:1;785:15;811:275;882:2;876:9;947:2;928:13;;-1:-1:-1;;924:27:88;912:40;;982:18;967:34;;1003:22;;;964:62;961:88;;;1029:18;;:::i;:::-;1065:2;1058:22;811:275;;-1:-1:-1;811:275:88:o;1091:152::-;-1:-1:-1;;;;;1187:31:88;;1177:42;;1167:70;;1233:1;1230;1223:12;1248:854;1340:6;1393:2;1381:9;1372:7;1368:23;1364:32;1361:52;;;1409:1;1406;1399:12;1361:52;1442:2;1436:9;1484:2;1476:6;1472:15;1553:6;1541:10;1538:22;1517:18;1505:10;1502:34;1499:62;1496:88;;;1564:18;;:::i;:::-;1600:2;1593:22;1637:23;;1669:52;1637:23;1669:52;:::i;:::-;1730:21;;1803:2;1788:18;;1775:32;1816:54;1775:32;1816:54;:::i;:::-;1898:2;1886:15;;1879:32;1963:2;1948:18;;1935:32;1976:54;1935:32;1976:54;:::i;:::-;2058:2;2046:15;;2039:32;2050:6;1248:854;-1:-1:-1;;;1248:854:88:o;2107:155::-;2175:20;;2204:52;2175:20;2204:52;:::i;:::-;2107:155;;;:::o;2267:1118::-;2360:6;2368;2421:2;2409:9;2400:7;2396:23;2392:32;2389:52;;;2437:1;2434;2427:12;2389:52;2477:9;2464:23;2506:18;2547:2;2539:6;2536:14;2533:34;;;2563:1;2560;2553:12;2533:34;2601:6;2590:9;2586:22;2576:32;;2646:7;2639:4;2635:2;2631:13;2627:27;2617:55;;2668:1;2665;2658:12;2617:55;2704:2;2691:16;2726:4;2749:2;2745;2742:10;2739:36;;;2755:18;;:::i;:::-;2801:2;2798:1;2794:10;2784:20;;2824:28;2848:2;2844;2840:11;2824:28;:::i;:::-;2886:15;;;2956:11;;;2952:20;;;2917:12;;;;2984:19;;;2981:39;;;3016:1;3013;3006:12;2981:39;3040:11;;;;3060:238;3076:6;3071:3;3068:15;3060:238;;;3156:3;3143:17;3130:30;;3173:52;3219:5;3173:52;:::i;:::-;3238:18;;;3093:12;;;;3276;;;;3060:238;;;3317:5;-1:-1:-1;3341:38:88;;-1:-1:-1;3360:18:88;;;3341:38;:::i;:::-;3331:48;;;;;;2267:1118;;;;;:::o;3872:180::-;3931:6;3984:2;3972:9;3963:7;3959:23;3955:32;3952:52;;;4000:1;3997;3990:12;3952:52;-1:-1:-1;4023:23:88;;3872:180;-1:-1:-1;3872:180:88:o;4057:597::-;4169:4;4198:2;4227;4216:9;4209:21;4259:6;4253:13;4302:6;4297:2;4286:9;4282:18;4275:34;4327:1;4337:140;4351:6;4348:1;4345:13;4337:140;;;4446:14;;;4442:23;;4436:30;4412:17;;;4431:2;4408:26;4401:66;4366:10;;4337:140;;;4495:6;4492:1;4489:13;4486:91;;;4565:1;4560:2;4551:6;4540:9;4536:22;4532:31;4525:42;4486:91;-1:-1:-1;4638:2:88;4617:15;-1:-1:-1;;4613:29:88;4598:45;;;;4645:2;4594:54;;4057:597;-1:-1:-1;;;4057:597:88:o;4940:269::-;5140:2;5125:18;;5152:51;5129:9;5185:6;4781:12;;-1:-1:-1;;;;;4777:21:88;;;4765:34;;4852:4;4841:16;;;4835:23;4831:32;;4815:14;;;4808:56;4917:4;4906:16;;;4900:23;4896:32;4880:14;;4873:56;4659:276;5214:184;5284:6;5337:2;5325:9;5316:7;5312:23;5308:32;5305:52;;;5353:1;5350;5343:12;5305:52;-1:-1:-1;5376:16:88;;5214:184;-1:-1:-1;5214:184:88:o;5403:127::-;5464:10;5459:3;5455:20;5452:1;5445:31;5495:4;5492:1;5485:15;5519:4;5516:1;5509:15;5535:128;5575:3;5606:1;5602:6;5599:1;5596:13;5593:39;;;5612:18;;:::i;:::-;-1:-1:-1;5648:9:88;;5535:128::o;5668:341::-;5896:3;5881:19;;5909:51;5885:9;5942:6;4781:12;;-1:-1:-1;;;;;4777:21:88;;;4765:34;;4852:4;4841:16;;;4835:23;4831:32;;4815:14;;;4808:56;4917:4;4906:16;;;4900:23;4896:32;4880:14;;4873:56;4659:276;5909:51;5996:6;5991:2;5980:9;5976:18;5969:34;5668:341;;;;;:::o;6014:461::-;6067:3;6105:5;6099:12;6132:6;6127:3;6120:19;6158:4;6187:2;6182:3;6178:12;6171:19;;6224:2;6217:5;6213:14;6245:1;6255:195;6269:6;6266:1;6263:13;6255:195;;;6334:13;;-1:-1:-1;;;;;6330:39:88;6318:52;;6390:12;;;;6425:15;;;;6366:1;6284:9;6255:195;;;-1:-1:-1;6466:3:88;;6014:461;-1:-1:-1;;;;;6014:461:88:o;6480:332::-;6687:6;6676:9;6669:25;6730:2;6725;6714:9;6710:18;6703:30;6650:4;6750:56;6802:2;6791:9;6787:18;6779:6;6750:56;:::i;:::-;6742:64;6480:332;-1:-1:-1;;;;6480:332:88:o;6817:756::-;7180:3;7169:9;7162:22;7143:4;7207:57;7259:3;7248:9;7244:19;7236:6;7207:57;:::i;:::-;7300:22;;;7295:2;7280:18;;;7273:50;;;;7347:1;7332:17;;-1:-1:-1;;;;;7455:15:88;;;7450:2;7435:18;;7428:43;7507:15;;;;7502:2;7487:18;;7480:43;-1:-1:-1;7554:3:88;7539:19;7532:35;7366:15;;6817:756;-1:-1:-1;6817:756:88:o;8229:277::-;8296:6;8349:2;8337:9;8328:7;8324:23;8320:32;8317:52;;;8365:1;8362;8355:12;8317:52;8397:9;8391:16;8450:5;8443:13;8436:21;8429:5;8426:32;8416:60;;8472:1;8469;8462:12;9106:127;9167:10;9162:3;9158:20;9155:1;9148:31;9198:4;9195:1;9188:15;9222:4;9219:1;9212:15;9238:135;9277:3;-1:-1:-1;;9298:17:88;;9295:43;;;9318:18;;:::i;:::-;-1:-1:-1;9365:1:88;9354:13;;9238:135::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "commitInternalParams()": "d4a07d34",
    "contractName()": "75d0c0dc",
    "contractNameBytes()": "0e3e80ac",
    "contractVersion()": "a0a8e460",
    "contractVersionBytes()": "06a46239",
    "createVault(address[],address)": "0fb27e4d",
    "delayedProtocolParamsTimestamp()": "e4af6e79",
    "delayedProtocolPerVaultParamsTimestamp(uint256)": "511ce798",
    "delayedStrategyParamsTimestamp(uint256)": "6707acee",
    "internalParams()": "7ac46fbb",
    "internalParamsTimestamp()": "1c7f4c73",
    "stageInternalParams((address,address,address))": "09946538",
    "stagedInternalParams()": "86c6be3e",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"internalParams_\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"CommitedInternalParams\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"vaultTokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vaultAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultNft\",\"type\":\"uint256\"}],\"name\":\"DeployedVault\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"StagedInternalParams\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"commitInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractNameBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractVersionBytes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"contract IERC20Vault\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delayedProtocolParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedProtocolPerVaultParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft\",\"type\":\"uint256\"}],\"name\":\"delayedStrategyParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"internalParamsTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"newParams\",\"type\":\"tuple\"}],\"name\":\"stageInternalParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stagedInternalParams\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IProtocolGovernance\",\"name\":\"protocolGovernance\",\"type\":\"address\"},{\"internalType\":\"contract IVaultRegistry\",\"name\":\"registry\",\"type\":\"address\"},{\"internalType\":\"contract IVault\",\"name\":\"singleton\",\"type\":\"address\"}],\"internalType\":\"struct IVaultGovernance.InternalParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"internalParams_\":\"Initial Internal Params\"}},\"createVault(address[],address)\":{\"params\":{\"owner_\":\"Owner of the vault NFT\",\"vaultTokens_\":\"ERC20 tokens that will be managed by this Vault\"}},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"delayedStrategyParamsTimestamp(uint256)\":{\"params\":{\"nft\":\"Nft of the vault\"}},\"stageInternalParams((address,address,address))\":{\"params\":{\"newParams\":\"New Internal Params\"}},\"stagedInternalParams()\":{\"details\":\"The Internal Params could be committed after internalParamsTimestamp\"}},\"version\":1},\"userdoc\":{\"events\":{\"CommitedInternalParams(address,address,(address,address,address))\":{\"notice\":\"Emitted when InternalParams are staged for commit\"},\"DeployedVault(address,address,address[],bytes,address,address,uint256)\":{\"notice\":\"Emitted when New Vault is deployed\"},\"StagedInternalParams(address,address,(address,address,address),uint256)\":{\"notice\":\"Emitted when InternalParams are staged for commit\"}},\"kind\":\"user\",\"methods\":{\"commitInternalParams()\":{\"notice\":\"Commit staged Internal Params.\"},\"constructor\":{\"notice\":\"Creates a new contract.\"},\"createVault(address[],address)\":{\"notice\":\"Deploys a new vault.\"},\"delayedProtocolParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed.\"},\"delayedProtocolPerVaultParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed.\"},\"delayedStrategyParamsTimestamp(uint256)\":{\"notice\":\"Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed.\"},\"internalParams()\":{\"notice\":\"Internal Params of the contract.\"},\"internalParamsTimestamp()\":{\"notice\":\"Timestamp in unix time seconds after which staged Internal Params could be committed.\"},\"stageInternalParams((address,address,address))\":{\"notice\":\"Stage new Internal Params.\"},\"stagedInternalParams()\":{\"notice\":\"Staged new Internal Params.\"}},\"notice\":\"Governance that manages all ERC20 Vaults params and can deploy a new ERC20 Vault.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vaults/ERC20VaultGovernance.sol\":\"ERC20VaultGovernance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x6a5307574ef7a2421da872734ac4708d51704cad2a1a59735d1bedca9213b6f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7baf1cd3dc4875830923984f9dbdfa2f22c9969dcb7b27c7178b98617e6725a3\",\"dweb:/ipfs/QmRwMbdZhxwqhscL8oAm2H6fPSiPpJEF7DZXp9jSz8Whnh\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x086fbe904291497e1532ef340f1bd589078f49e3d4d0bbfd88f5e02fb89261eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0df1e3e965b78a0d98dda2d1d6a6acde88f515b1d3a9ad02f505e93fa7babeda\",\"dweb:/ipfs/QmW4cSbGriRAj7XRZu6zSaqspe4eyYWkF7WfJbj3rmmLbk\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0x04ea2514f49503cc66574a08382b57f266d23dee04046b479e0cf64c9a0db270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87d8ca060d5ee11bc12b697c580e43267c45ab0d3a690f02b1388cf244eff7d7\",\"dweb:/ipfs/QmXW4jwheCFMtCjNu4bCxvc4XLr2DJyhKLq9DkqQhNU9rp\"]},\"src/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x861ae02ad4ba132b8e03ceb19faf915dc800fed8a6f877c344ea2ebd83feb29c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c68568570ed80f1c5516bccf2554c4d228ff479b4bc5da473fff7b789b36abab\",\"dweb:/ipfs/Qmc1geu9fQwe166SY5dKLq3QGGovkCmfk36ZYd3eYp9pUM\"]},\"src/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0x6c30a6796998d981b6614e57c857c74b38565df25606756635a29388257de21c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60e248f1bf4749beb11979798ef0c7eb0f603ea49de2edcada8a503946bed962\",\"dweb:/ipfs/QmRCgnzokSjV3AKwHETNFm1yjgxgAJ9XrWueeyPBqS3EgD\"]},\"src/interfaces/external/erc/IERC1271.sol\":{\"keccak256\":\"0xfce1c38d1bd95ffde243b787ef51e91a4dcc3eecb025bd2d33b1c2ed17938f77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5e8ba7ae8d54f4d9f115dc57bc8da0e409b9e0ca4fc7f052ba60bac5b971d23\",\"dweb:/ipfs/QmVhfCQdRCwdLLepeaJmYixVpBc5q1NqSu18JsNrkv2Srn\"]},\"src/interfaces/utils/IContractMeta.sol\":{\"keccak256\":\"0xab6c1427012bddbeae91599f859668df829c133b73b77572cf60c2bbc369f6da\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://518a668c968018b1a351a636ae4fae47adadda6dfdf69ff29b0aae9d61c02b6a\",\"dweb:/ipfs/QmRVqkgGabMzGdF5PeJwTHu6bgSN4Ypxv1NpuvLPpbfLvC\"]},\"src/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0xf4198613cc054350ce3ad3399fee584b363c27082f2a86645c58a2aab543862d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71a66b3f5794aa7ff48a123a2927f5d588518638c65f6308d92f28b6205ef473\",\"dweb:/ipfs/QmVpCZwQcz8CDHKJL1DSbvmjJTRex3RyQHsAhFCX85GHBj\"]},\"src/interfaces/vaults/IERC20Vault.sol\":{\"keccak256\":\"0x5287e9df49b2d1b72d8a3c58b9e54becc8825068c76933d0881e26ced78d97bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac1a19b6209e3324adde2855088679d68b1005482538946aef3ae02b36c22080\",\"dweb:/ipfs/Qmf7nfoQgrH8fZphVu6recKqYrtQL2oAHRRgDHKNQFCu4q\"]},\"src/interfaces/vaults/IERC20VaultGovernance.sol\":{\"keccak256\":\"0x0994dcbee7ac54b05b7eb2d1734c90b6ff9b1c99495a6d683757b2cfb2a40549\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://37627eedbfb0169743db5d73ea6ea165eb74c6044fabbda7e336f5c60fac56eb\",\"dweb:/ipfs/QmTHqWmthAJPmCfwjkzPZyAe6vHmEjGCVPxXvmKLTJDZZQ\"]},\"src/interfaces/vaults/IIntegrationVault.sol\":{\"keccak256\":\"0x7964a84ed7750acfad39e7388a030ce82a31349ef57b20c4d40d386fd8100c02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd85bfa126f71ae3e761b312d00f9e89a9cf5c2845e09da552eaf801fd9e50cd\",\"dweb:/ipfs/QmXfRUrwW2PLDixfKVmvJ6YdAUTF8MaRw19uT1164hPUKZ\"]},\"src/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x60d0972c0324d048aac990cef2830b8e4f4f76dc78f2490f1b3f448be325ec1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b54d5934557e99e65b4736d5a5f9c88d235e1f8337c0c8c84cb3143de43bf90c\",\"dweb:/ipfs/QmXUGxGiEr6RxZtzcGUYqWvfvjqeH25Y2yWmZZ4dTc25yj\"]},\"src/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0x316819e93c849dc1abe39baec0451c414e5998f51ec256c59c3fdc1ef5c22113\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be0b88b4099826d3a601f015edf91d601a8d2a7b910a84191d2d0044e4c92900\",\"dweb:/ipfs/QmNzsZ9RS9crmgxRdZMbRW2N6UvydjhAyWiVY8mL1uK6eS\"]},\"src/libraries/ExceptionsLibrary.sol\":{\"keccak256\":\"0xf17911249ff44eab954080bf27b20232f4d87d30e609aabc70046d644e35fbb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://995a1cab2093ffa153be7751582b96522190e47114d4ecb3091a6532c56cbe76\",\"dweb:/ipfs/Qmf5g9pL5FRGseuBfxgjCqcSjoiZNtjnXv6yVynqJ9EijE\"]},\"src/libraries/PermissionIdsLibrary.sol\":{\"keccak256\":\"0xee229ac2a7af104167439ac51bd1cefc6d143c2c42b55bc1ea28dfe4b5450949\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2b3c88b9e53904701ffabbb4aeb237b3a4c8c0047030455a629d8fd946eb172\",\"dweb:/ipfs/QmNe6NnnimUZvbGNs18D2vNbDgzCxWnDYN5TUVspNSgAUS\"]},\"src/utils/ContractMeta.sol\":{\"keccak256\":\"0xaed32a95ba32842eb484fcd8febba8bdc7b4a736605c208ec093efcfe1800c93\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://eb681c228c0fb3b95ca031a57ffe637bcde3065c8622c4b7c229a2db144c14f9\",\"dweb:/ipfs/Qmcgg7Vw3P5RwVibgxmYrJRxFeNj1x2R3zspcAkQsFizFP\"]},\"src/vaults/ERC20VaultGovernance.sol\":{\"keccak256\":\"0xf37bd2fcf71fcbbf757c1b27ba5817570f2a164a892e605e39fc34deef5cfb49\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://1e839758eceb4311c47c8df60dacc70ac115010fe8f5d47b0270ac60fd0df9c0\",\"dweb:/ipfs/QmXD8zTQRe5esitmo8e6VqGME4dJVVv3F7NQLT5Kx1XqAD\"]},\"src/vaults/VaultGovernance.sol\":{\"keccak256\":\"0xbacab712486bcd6b988fe21b3641f7d21fbb9f900a354b18a60d4413960ec3c6\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://d8ba97ec9270464e39da6b0fd500193cd5001e3fdd55045887aacdd2a8972e1c\",\"dweb:/ipfs/QmWUrHFcM7oJTbnAAWX256CsXRwyqKe9WSNYNbBAKYd8fS\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "internalParams_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CommitedInternalParams",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address[]",
              "name": "vaultTokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "vaultAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "vaultNft",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DeployedVault",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "when",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StagedInternalParams",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "commitInternalParams"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractName",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractNameBytes",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersion",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "contractVersionBytes",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "vaultTokens_",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createVault",
          "outputs": [
            {
              "internalType": "contract IERC20Vault",
              "name": "vault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedProtocolPerVaultParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delayedStrategyParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "internalParams",
          "outputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "internalParamsTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "newParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stageInternalParams"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stagedInternalParams",
          "outputs": [
            {
              "internalType": "struct IVaultGovernance.InternalParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IProtocolGovernance",
                  "name": "protocolGovernance",
                  "type": "address"
                },
                {
                  "internalType": "contract IVaultRegistry",
                  "name": "registry",
                  "type": "address"
                },
                {
                  "internalType": "contract IVault",
                  "name": "singleton",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceID",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "internalParams_": "Initial Internal Params"
            }
          },
          "createVault(address[],address)": {
            "params": {
              "owner_": "Owner of the vault NFT",
              "vaultTokens_": "ERC20 tokens that will be managed by this Vault"
            }
          },
          "delayedProtocolPerVaultParamsTimestamp(uint256)": {
            "params": {
              "nft": "Nft of the vault"
            }
          },
          "delayedStrategyParamsTimestamp(uint256)": {
            "params": {
              "nft": "Nft of the vault"
            }
          },
          "stageInternalParams((address,address,address))": {
            "params": {
              "newParams": "New Internal Params"
            }
          },
          "stagedInternalParams()": {
            "details": "The Internal Params could be committed after internalParamsTimestamp"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "commitInternalParams()": {
            "notice": "Commit staged Internal Params."
          },
          "constructor": {
            "notice": "Creates a new contract."
          },
          "createVault(address[],address)": {
            "notice": "Deploys a new vault."
          },
          "delayedProtocolParamsTimestamp()": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params could be committed."
          },
          "delayedProtocolPerVaultParamsTimestamp(uint256)": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Protocol Params Per Vault could be committed."
          },
          "delayedStrategyParamsTimestamp(uint256)": {
            "notice": "Timestamp in unix time seconds after which staged Delayed Strategy Params could be committed."
          },
          "internalParams()": {
            "notice": "Internal Params of the contract."
          },
          "internalParamsTimestamp()": {
            "notice": "Timestamp in unix time seconds after which staged Internal Params could be committed."
          },
          "stageInternalParams((address,address,address))": {
            "notice": "Stage new Internal Params."
          },
          "stagedInternalParams()": {
            "notice": "Staged new Internal Params."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/vaults/ERC20VaultGovernance.sol": "ERC20VaultGovernance"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x6a5307574ef7a2421da872734ac4708d51704cad2a1a59735d1bedca9213b6f0",
        "urls": [
          "bzz-raw://7baf1cd3dc4875830923984f9dbdfa2f22c9969dcb7b27c7178b98617e6725a3",
          "dweb:/ipfs/QmRwMbdZhxwqhscL8oAm2H6fPSiPpJEF7DZXp9jSz8Whnh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x086fbe904291497e1532ef340f1bd589078f49e3d4d0bbfd88f5e02fb89261eb",
        "urls": [
          "bzz-raw://0df1e3e965b78a0d98dda2d1d6a6acde88f515b1d3a9ad02f505e93fa7babeda",
          "dweb:/ipfs/QmW4cSbGriRAj7XRZu6zSaqspe4eyYWkF7WfJbj3rmmLbk"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolGovernance.sol": {
        "keccak256": "0x04ea2514f49503cc66574a08382b57f266d23dee04046b479e0cf64c9a0db270",
        "urls": [
          "bzz-raw://87d8ca060d5ee11bc12b697c580e43267c45ab0d3a690f02b1388cf244eff7d7",
          "dweb:/ipfs/QmXW4jwheCFMtCjNu4bCxvc4XLr2DJyhKLq9DkqQhNU9rp"
        ],
        "license": "MIT"
      },
      "src/interfaces/IUnitPricesGovernance.sol": {
        "keccak256": "0x861ae02ad4ba132b8e03ceb19faf915dc800fed8a6f877c344ea2ebd83feb29c",
        "urls": [
          "bzz-raw://c68568570ed80f1c5516bccf2554c4d228ff479b4bc5da473fff7b789b36abab",
          "dweb:/ipfs/Qmc1geu9fQwe166SY5dKLq3QGGovkCmfk36ZYd3eYp9pUM"
        ],
        "license": "MIT"
      },
      "src/interfaces/IVaultRegistry.sol": {
        "keccak256": "0x6c30a6796998d981b6614e57c857c74b38565df25606756635a29388257de21c",
        "urls": [
          "bzz-raw://60e248f1bf4749beb11979798ef0c7eb0f603ea49de2edcada8a503946bed962",
          "dweb:/ipfs/QmRCgnzokSjV3AKwHETNFm1yjgxgAJ9XrWueeyPBqS3EgD"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/erc/IERC1271.sol": {
        "keccak256": "0xfce1c38d1bd95ffde243b787ef51e91a4dcc3eecb025bd2d33b1c2ed17938f77",
        "urls": [
          "bzz-raw://b5e8ba7ae8d54f4d9f115dc57bc8da0e409b9e0ca4fc7f052ba60bac5b971d23",
          "dweb:/ipfs/QmVhfCQdRCwdLLepeaJmYixVpBc5q1NqSu18JsNrkv2Srn"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IContractMeta.sol": {
        "keccak256": "0xab6c1427012bddbeae91599f859668df829c133b73b77572cf60c2bbc369f6da",
        "urls": [
          "bzz-raw://518a668c968018b1a351a636ae4fae47adadda6dfdf69ff29b0aae9d61c02b6a",
          "dweb:/ipfs/QmRVqkgGabMzGdF5PeJwTHu6bgSN4Ypxv1NpuvLPpbfLvC"
        ],
        "license": "BSL-1.1"
      },
      "src/interfaces/utils/IDefaultAccessControl.sol": {
        "keccak256": "0xf4198613cc054350ce3ad3399fee584b363c27082f2a86645c58a2aab543862d",
        "urls": [
          "bzz-raw://71a66b3f5794aa7ff48a123a2927f5d588518638c65f6308d92f28b6205ef473",
          "dweb:/ipfs/QmVpCZwQcz8CDHKJL1DSbvmjJTRex3RyQHsAhFCX85GHBj"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IERC20Vault.sol": {
        "keccak256": "0x5287e9df49b2d1b72d8a3c58b9e54becc8825068c76933d0881e26ced78d97bc",
        "urls": [
          "bzz-raw://ac1a19b6209e3324adde2855088679d68b1005482538946aef3ae02b36c22080",
          "dweb:/ipfs/Qmf7nfoQgrH8fZphVu6recKqYrtQL2oAHRRgDHKNQFCu4q"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IERC20VaultGovernance.sol": {
        "keccak256": "0x0994dcbee7ac54b05b7eb2d1734c90b6ff9b1c99495a6d683757b2cfb2a40549",
        "urls": [
          "bzz-raw://37627eedbfb0169743db5d73ea6ea165eb74c6044fabbda7e336f5c60fac56eb",
          "dweb:/ipfs/QmTHqWmthAJPmCfwjkzPZyAe6vHmEjGCVPxXvmKLTJDZZQ"
        ],
        "license": "agpl-3.0"
      },
      "src/interfaces/vaults/IIntegrationVault.sol": {
        "keccak256": "0x7964a84ed7750acfad39e7388a030ce82a31349ef57b20c4d40d386fd8100c02",
        "urls": [
          "bzz-raw://cd85bfa126f71ae3e761b312d00f9e89a9cf5c2845e09da552eaf801fd9e50cd",
          "dweb:/ipfs/QmXfRUrwW2PLDixfKVmvJ6YdAUTF8MaRw19uT1164hPUKZ"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVault.sol": {
        "keccak256": "0x60d0972c0324d048aac990cef2830b8e4f4f76dc78f2490f1b3f448be325ec1e",
        "urls": [
          "bzz-raw://b54d5934557e99e65b4736d5a5f9c88d235e1f8337c0c8c84cb3143de43bf90c",
          "dweb:/ipfs/QmXUGxGiEr6RxZtzcGUYqWvfvjqeH25Y2yWmZZ4dTc25yj"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultGovernance.sol": {
        "keccak256": "0x316819e93c849dc1abe39baec0451c414e5998f51ec256c59c3fdc1ef5c22113",
        "urls": [
          "bzz-raw://be0b88b4099826d3a601f015edf91d601a8d2a7b910a84191d2d0044e4c92900",
          "dweb:/ipfs/QmNzsZ9RS9crmgxRdZMbRW2N6UvydjhAyWiVY8mL1uK6eS"
        ],
        "license": "MIT"
      },
      "src/libraries/ExceptionsLibrary.sol": {
        "keccak256": "0xf17911249ff44eab954080bf27b20232f4d87d30e609aabc70046d644e35fbb5",
        "urls": [
          "bzz-raw://995a1cab2093ffa153be7751582b96522190e47114d4ecb3091a6532c56cbe76",
          "dweb:/ipfs/Qmf5g9pL5FRGseuBfxgjCqcSjoiZNtjnXv6yVynqJ9EijE"
        ],
        "license": "MIT"
      },
      "src/libraries/PermissionIdsLibrary.sol": {
        "keccak256": "0xee229ac2a7af104167439ac51bd1cefc6d143c2c42b55bc1ea28dfe4b5450949",
        "urls": [
          "bzz-raw://e2b3c88b9e53904701ffabbb4aeb237b3a4c8c0047030455a629d8fd946eb172",
          "dweb:/ipfs/QmNe6NnnimUZvbGNs18D2vNbDgzCxWnDYN5TUVspNSgAUS"
        ],
        "license": "MIT"
      },
      "src/utils/ContractMeta.sol": {
        "keccak256": "0xaed32a95ba32842eb484fcd8febba8bdc7b4a736605c208ec093efcfe1800c93",
        "urls": [
          "bzz-raw://eb681c228c0fb3b95ca031a57ffe637bcde3065c8622c4b7c229a2db144c14f9",
          "dweb:/ipfs/Qmcgg7Vw3P5RwVibgxmYrJRxFeNj1x2R3zspcAkQsFizFP"
        ],
        "license": "BSL-1.1"
      },
      "src/vaults/ERC20VaultGovernance.sol": {
        "keccak256": "0xf37bd2fcf71fcbbf757c1b27ba5817570f2a164a892e605e39fc34deef5cfb49",
        "urls": [
          "bzz-raw://1e839758eceb4311c47c8df60dacc70ac115010fe8f5d47b0270ac60fd0df9c0",
          "dweb:/ipfs/QmXD8zTQRe5esitmo8e6VqGME4dJVVv3F7NQLT5Kx1XqAD"
        ],
        "license": "BSL-1.1"
      },
      "src/vaults/VaultGovernance.sol": {
        "keccak256": "0xbacab712486bcd6b988fe21b3641f7d21fbb9f900a354b18a60d4413960ec3c6",
        "urls": [
          "bzz-raw://d8ba97ec9270464e39da6b0fd500193cd5001e3fdd55045887aacdd2a8972e1c",
          "dweb:/ipfs/QmWUrHFcM7oJTbnAAWX256CsXRwyqKe9WSNYNbBAKYd8fS"
        ],
        "license": "BSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/vaults/ERC20VaultGovernance.sol",
    "id": 16164,
    "exportedSymbols": {
      "Clones": [
        6314
      ],
      "ContractMeta": [
        14394
      ],
      "ERC165": [
        8433
      ],
      "ERC20VaultGovernance": [
        16163
      ],
      "ExceptionsLibrary": [
        14085
      ],
      "IAccessControl": [
        6209
      ],
      "IAccessControlEnumerable": [
        6234
      ],
      "IContractMeta": [
        12503
      ],
      "IDefaultAccessControl": [
        12525
      ],
      "IERC1271": [
        12461
      ],
      "IERC165": [
        8445
      ],
      "IERC20Vault": [
        12945
      ],
      "IERC20VaultGovernance": [
        12966
      ],
      "IERC721": [
        7782
      ],
      "IIntegrationVault": [
        13296
      ],
      "IProtocolGovernance": [
        12304
      ],
      "IUnitPricesGovernance": [
        12357
      ],
      "IVault": [
        13353
      ],
      "IVaultGovernance": [
        13422
      ],
      "IVaultRegistry": [
        12448
      ],
      "PermissionIdsLibrary": [
        14110
      ],
      "VaultGovernance": [
        22534
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:1431:80",
    "nodes": [
      {
        "id": 16064,
        "nodeType": "PragmaDirective",
        "src": "36:22:80",
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 16065,
        "nodeType": "ImportDirective",
        "src": "60:56:80",
        "absolutePath": "src/interfaces/vaults/IERC20VaultGovernance.sol",
        "file": "../interfaces/vaults/IERC20VaultGovernance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16164,
        "sourceUnit": 12967,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 16066,
        "nodeType": "ImportDirective",
        "src": "117:46:80",
        "absolutePath": "src/interfaces/vaults/IERC20Vault.sol",
        "file": "../interfaces/vaults/IERC20Vault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16164,
        "sourceUnit": 12946,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 16067,
        "nodeType": "ImportDirective",
        "src": "164:56:80",
        "absolutePath": "src/interfaces/vaults/IERC20VaultGovernance.sol",
        "file": "../interfaces/vaults/IERC20VaultGovernance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16164,
        "sourceUnit": 12967,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 16068,
        "nodeType": "ImportDirective",
        "src": "221:31:80",
        "absolutePath": "src/vaults/VaultGovernance.sol",
        "file": "./VaultGovernance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16164,
        "sourceUnit": 22535,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 16069,
        "nodeType": "ImportDirective",
        "src": "253:35:80",
        "absolutePath": "src/utils/ContractMeta.sol",
        "file": "../utils/ContractMeta.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16164,
        "sourceUnit": 14395,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 16163,
        "nodeType": "ContractDefinition",
        "src": "384:1082:80",
        "nodes": [
          {
            "id": 16087,
            "nodeType": "FunctionDefinition",
            "src": "571:86:80",
            "body": {
              "id": 16086,
              "nodeType": "Block",
              "src": "655:2:80",
              "statements": []
            },
            "documentation": {
              "id": 16077,
              "nodeType": "StructuredDocumentation",
              "src": "476:90:80",
              "text": "@notice Creates a new contract.\n @param internalParams_ Initial Internal Params"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 16083,
                    "name": "internalParams_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16080,
                    "src": "638:15:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InternalParams_$13368_memory_ptr",
                      "typeString": "struct IVaultGovernance.InternalParams memory"
                    }
                  }
                ],
                "id": 16084,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 16082,
                  "name": "VaultGovernance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22534,
                  "src": "622:15:80"
                },
                "nodeType": "ModifierInvocation",
                "src": "622:32:80"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 16081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16080,
                  "mutability": "mutable",
                  "name": "internalParams_",
                  "nameLocation": "605:15:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 16087,
                  "src": "583:37:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InternalParams_$13368_memory_ptr",
                    "typeString": "struct IVaultGovernance.InternalParams"
                  },
                  "typeName": {
                    "id": 16079,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16078,
                      "name": "InternalParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13368,
                      "src": "583:14:80"
                    },
                    "referencedDeclaration": 13368,
                    "src": "583:14:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_InternalParams_$13368_storage_ptr",
                      "typeString": "struct IVaultGovernance.InternalParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "582:39:80"
            },
            "returnParameters": {
              "id": 16085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "655:0:80"
            },
            "scope": 16163,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 16099,
            "nodeType": "FunctionDefinition",
            "src": "728:121:80",
            "body": {
              "id": 16098,
              "nodeType": "Block",
              "src": "794:55:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "45524332305661756c74476f7665726e616e6365",
                        "id": 16095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "819:22:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11c51bf42e63f552291b80a92caa2819c739434512894386349edfca9975f4ba",
                          "typeString": "literal_string \"ERC20VaultGovernance\""
                        },
                        "value": "ERC20VaultGovernance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_11c51bf42e63f552291b80a92caa2819c739434512894386349edfca9975f4ba",
                          "typeString": "literal_string \"ERC20VaultGovernance\""
                        }
                      ],
                      "id": 16094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "811:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 16093,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "811:7:80",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 16096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "811:31:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 16092,
                  "id": 16097,
                  "nodeType": "Return",
                  "src": "804:38:80"
                }
              ]
            },
            "baseFunctions": [
              14341
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_contractName",
            "nameLocation": "737:13:80",
            "overrides": {
              "id": 16089,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "767:8:80"
            },
            "parameters": {
              "id": 16088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "750:2:80"
            },
            "returnParameters": {
              "id": 16092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16091,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16099,
                  "src": "785:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16090,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "784:9:80"
            },
            "scope": 16163,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 16111,
            "nodeType": "FunctionDefinition",
            "src": "855:109:80",
            "body": {
              "id": 16110,
              "nodeType": "Block",
              "src": "924:40:80",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "312e302e30",
                        "id": 16107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "949:7:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                          "typeString": "literal_string \"1.0.0\""
                        },
                        "value": "1.0.0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                          "typeString": "literal_string \"1.0.0\""
                        }
                      ],
                      "id": 16106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "941:7:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 16105,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "941:7:80",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 16108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "941:16:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 16104,
                  "id": 16109,
                  "nodeType": "Return",
                  "src": "934:23:80"
                }
              ]
            },
            "baseFunctions": [
              14346
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_contractVersion",
            "nameLocation": "864:16:80",
            "overrides": {
              "id": 16101,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "897:8:80"
            },
            "parameters": {
              "id": 16100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "880:2:80"
            },
            "returnParameters": {
              "id": 16104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16103,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16111,
                  "src": "915:7:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16102,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "915:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "914:9:80"
            },
            "scope": 16163,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 16162,
            "nodeType": "FunctionDefinition",
            "src": "1081:383:80",
            "body": {
              "id": 16161,
              "nodeType": "Block",
              "src": "1219:245:80",
              "statements": [
                {
                  "assignments": [
                    16126
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16126,
                      "mutability": "mutable",
                      "name": "vaddr",
                      "nameLocation": "1237:5:80",
                      "nodeType": "VariableDeclaration",
                      "scope": 16161,
                      "src": "1229:13:80",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 16125,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1229:7:80",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16127,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1229:13:80"
                },
                {
                  "expression": {
                    "id": 16134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 16128,
                          "name": "vaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16126,
                          "src": "1253:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 16129,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16123,
                          "src": "1260:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 16130,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1252:12:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 16132,
                          "name": "owner_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16117,
                          "src": "1280:6:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 16131,
                        "name": "_createVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22183,
                        "src": "1267:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$_t_uint256_$",
                          "typeString": "function (address) returns (address,uint256)"
                        }
                      },
                      "id": 16133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1267:20:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                        "typeString": "tuple(address,uint256)"
                      }
                    },
                    "src": "1252:35:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16135,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:35:80"
                },
                {
                  "expression": {
                    "id": 16140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16136,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16121,
                      "src": "1297:5:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Vault_$12945",
                        "typeString": "contract IERC20Vault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 16138,
                          "name": "vaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16126,
                          "src": "1317:5:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 16137,
                        "name": "IERC20Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12945,
                        "src": "1305:11:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20Vault_$12945_$",
                          "typeString": "type(contract IERC20Vault)"
                        }
                      },
                      "id": 16139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1305:18:80",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Vault_$12945",
                        "typeString": "contract IERC20Vault"
                      }
                    },
                    "src": "1297:26:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Vault_$12945",
                      "typeString": "contract IERC20Vault"
                    }
                  },
                  "id": 16141,
                  "nodeType": "ExpressionStatement",
                  "src": "1297:26:80"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16145,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16123,
                        "src": "1350:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16146,
                        "name": "vaultTokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16115,
                        "src": "1355:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "id": 16142,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16121,
                        "src": "1333:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Vault_$12945",
                          "typeString": "contract IERC20Vault"
                        }
                      },
                      "id": 16144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12944,
                      "src": "1333:16:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address[] memory) external"
                      }
                    },
                    "id": 16147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1333:35:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16148,
                  "nodeType": "ExpressionStatement",
                  "src": "1333:35:80"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 16150,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "1397:2:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 16151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "1397:9:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 16152,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1408:3:80",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1408:10:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16154,
                        "name": "vaultTokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16115,
                        "src": "1420:12:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 16155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1434:2:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "id": 16156,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16117,
                        "src": "1438:6:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16157,
                        "name": "vaddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16126,
                        "src": "1446:5:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16158,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16123,
                        "src": "1453:3:80",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16149,
                      "name": "DeployedVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22533,
                      "src": "1383:13:80",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address[] memory,bytes memory,address,address,uint256)"
                      }
                    },
                    "id": 16159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1383:74:80",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16160,
                  "nodeType": "EmitStatement",
                  "src": "1378:79:80"
                }
              ]
            },
            "baseFunctions": [
              12965
            ],
            "documentation": {
              "id": 16112,
              "nodeType": "StructuredDocumentation",
              "src": "1039:37:80",
              "text": "@inheritdoc IERC20VaultGovernance"
            },
            "functionSelector": "0fb27e4d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createVault",
            "nameLocation": "1090:11:80",
            "parameters": {
              "id": 16118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16115,
                  "mutability": "mutable",
                  "name": "vaultTokens_",
                  "nameLocation": "1119:12:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 16162,
                  "src": "1102:29:80",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16113,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1102:7:80",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 16114,
                    "nodeType": "ArrayTypeName",
                    "src": "1102:9:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16117,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "1141:6:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 16162,
                  "src": "1133:14:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1133:7:80",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1101:47:80"
            },
            "returnParameters": {
              "id": 16124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16121,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "1195:5:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 16162,
                  "src": "1183:17:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Vault_$12945",
                    "typeString": "contract IERC20Vault"
                  },
                  "typeName": {
                    "id": 16120,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16119,
                      "name": "IERC20Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12945,
                      "src": "1183:11:80"
                    },
                    "referencedDeclaration": 12945,
                    "src": "1183:11:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Vault_$12945",
                      "typeString": "contract IERC20Vault"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16123,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "1210:3:80",
                  "nodeType": "VariableDeclaration",
                  "scope": 16162,
                  "src": "1202:11:80",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:7:80",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1182:32:80"
            },
            "scope": 16163,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16071,
              "name": "ContractMeta",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14394,
              "src": "417:12:80"
            },
            "id": 16072,
            "nodeType": "InheritanceSpecifier",
            "src": "417:12:80"
          },
          {
            "baseName": {
              "id": 16073,
              "name": "IERC20VaultGovernance",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12966,
              "src": "431:21:80"
            },
            "id": 16074,
            "nodeType": "InheritanceSpecifier",
            "src": "431:21:80"
          },
          {
            "baseName": {
              "id": 16075,
              "name": "VaultGovernance",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22534,
              "src": "454:15:80"
            },
            "id": 16076,
            "nodeType": "InheritanceSpecifier",
            "src": "454:15:80"
          }
        ],
        "canonicalName": "ERC20VaultGovernance",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 16070,
          "nodeType": "StructuredDocumentation",
          "src": "290:94:80",
          "text": "@notice Governance that manages all ERC20 Vaults params and can deploy a new ERC20 Vault."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          16163,
          22534,
          8433,
          8445,
          12966,
          13422,
          14394,
          12503
        ],
        "name": "ERC20VaultGovernance",
        "nameLocation": "393:20:80",
        "scope": 16164,
        "usedErrors": []
      }
    ],
    "license": "BSL-1.1"
  },
  "id": 80
}