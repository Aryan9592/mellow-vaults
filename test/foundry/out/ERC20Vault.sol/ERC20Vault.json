{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nft_",
          "type": "uint256"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "Pull",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "Push",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "ReclaimTokens",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "externalCall",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "result",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nft_",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magicValue",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "isVaultToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        }
      ],
      "name": "pull",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pullExistentials",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        }
      ],
      "name": "push",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "reclaimTokens",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "tokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "options",
          "type": "bytes"
        }
      ],
      "name": "transferAndPush",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "actualTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tvl",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "minTokenAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "maxTokenAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultGovernance",
      "outputs": [
        {
          "internalType": "contract IVaultGovernance",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060016000556000196004556139988061002b6000396000f3fe6080604052600436106100e85760003560e01c8063338c4ccb1161008a578063a920b78c11610059578063a920b78c14610297578063d2c219b0146102b9578063e5328e06146102ce578063fe255a5e146102f157600080fd5b8063338c4ccb146101ff57806347ccca0214610237578063566ca6b414610255578063697222331461027557600080fd5b80631626ba7e116100c65780631626ba7e146101665780632062d7541461019f57806327a35e5a146101bf5780632e2f4cc2146101df57600080fd5b806301ffc9a7146100ed57806305e1c94214610122578063158ef93e1461014f575b600080fd5b3480156100f957600080fd5b5061010d610108366004612f2d565b610319565b60405190151581526020015b60405180910390f35b34801561012e57600080fd5b5061014261013d36600461303c565b610345565b60405161011991906130ab565b34801561015b57600080fd5b50600454151561010d565b34801561017257600080fd5b5061018661018136600461312d565b6107c2565b6040516001600160e01b03199091168152602001610119565b3480156101ab57600080fd5b506101426101ba3660046131ce565b610b0f565b3480156101cb57600080fd5b506101426101da3660046131ce565b610fbb565b6101f26101ed366004613268565b611142565b6040516101199190613351565b34801561020b57600080fd5b5061010d61021a366004613364565b6001600160a01b0316600090815260036020526040902054151590565b34801561024357600080fd5b50600454604051908152602001610119565b34801561026157600080fd5b50610142610270366004613381565b611416565b34801561028157600080fd5b5061028a6116dd565b6040516101199190613441565b3480156102a357600080fd5b506102b76102b2366004613454565b61173f565b005b3480156102c557600080fd5b5061014261174d565b3480156102da57600080fd5b506102e36117a4565b604051610119929190613490565b3480156102fd57600080fd5b506001546040516001600160a01b039091168152602001610119565b600061032482611925565b8061033f57506001600160e01b03198216632a482de360e21b145b92915050565b606061034f61196b565b6004805460408051808201909152918252631253925560e21b602083015290816103955760405162461bcd60e51b815260040161038c9190613351565b60405180910390fd5b5060015460408051637ac46fbb60e01b815290516000926001600160a01b031691637ac46fbb916004808301926060929190829003018186803b1580156103db57600080fd5b505afa1580156103ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041391906134be565b805160208201516040516331a9108f60e11b81526004810186905292935090916000906001600160a01b03831690636352211e9060240160206040518083038186803b15801561046257600080fd5b505afa158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049a919061352f565b905060006104a98387846119c5565b604051639bd0911b60e01b8152600060048201526001600160a01b039190911690639bd0911b9060240160206040518083038186803b1580156104eb57600080fd5b505afa1580156104ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610523919061352f565b905087516001600160401b0381111561053e5761053e612f4a565b604051908082528060200260200182016040528015610567578160200160208202803683370190505b5096506001600160a01b038116301415610586575050505050506107b3565b60005b8851811015610770576105b48982815181106105a7576105a761354c565b6020026020010151611a98565b806106665750846001600160a01b03166363e85d2d8a83815181106105db576105db61354c565b60209081029190910101516040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526002602482015260440160206040518083038186803b15801561062c57600080fd5b505afa158015610640573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106649190613562565b155b1561067057610760565b60008982815181106106845761068461354c565b60209081029190910101516040516370a0823160e01b81523060048201529091506001600160a01b038216906370a082319060240160206040518083038186803b1580156106d157600080fd5b505afa1580156106e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107099190613584565b89838151811061071b5761071b61354c565b60200260200101818152505061075e838a848151811061073d5761073d61354c565b6020026020010151836001600160a01b0316611afe9092919063ffffffff16565b505b610769816135b3565b9050610589565b507f9efcb26e0cf572bd9171640e114f387cef91cd3e38532ed6b3f80c7f2e758f878189896040516107a4939291906135ce565b60405180910390a15050505050505b6107bd6001600055565b919050565b600080600160009054906101000a90046001600160a01b03166001600160a01b0316637ac46fbb6040518163ffffffff1660e01b815260040160606040518083038186803b15801561081357600080fd5b505afa158015610827573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084b91906134be565b6020810151815160045492935090918061087457506001600160e01b0319935061033f92505050565b60405163020604bf60e21b8152600481018290526000906001600160a01b0385169063081812fc9060240160206040518083038186803b1580156108b757600080fd5b505afa1580156108cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ef919061352f565b6040516363e85d2d60e01b81526001600160a01b03808316600483015260066024830152919250908416906363e85d2d9060440160206040518083038186803b15801561093b57600080fd5b505afa15801561094f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109739190613562565b61098d57506001600160e01b0319945061033f9350505050565b803b63ffffffff811615610ac0576040516301ffc9a760e01b8152630b135d3f60e11b60048201526001600160a01b038316906301ffc9a79060240160206040518083038186803b1580156109e157600080fd5b505afa1580156109f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a199190613562565b15610aa957604051630b135d3f60e11b81526001600160a01b03831690631626ba7e90610a4c908c908c9060040161360e565b60206040518083038186803b158015610a6457600080fd5b505afa158015610a78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9c9190613627565b965050505050505061033f565b506001600160e01b0319955061033f945050505050565b816001600160a01b0316610ad48a8a611b66565b6001600160a01b03161415610af95750630b135d3f60e11b955061033f945050505050565b506001600160e01b031998975050505050505050565b6060610b1961196b565b6004805460408051808201909152918252631253925560e21b60208301529081610b565760405162461bcd60e51b815260040161038c9190613351565b50610b6033611be5565b6040518060400160405280600381526020016223292160e91b81525090610b9a5760405162461bcd60e51b815260040161038c9190613351565b5060015460408051637ac46fbb60e01b815290516000926001600160a01b031691637ac46fbb916004808301926060929190829003018186803b158015610be057600080fd5b505afa158015610bf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1891906134be565b602001516040516331a9108f60e11b8152600481018490529091506000906001600160a01b03831690636352211e9060240160206040518083038186803b158015610c6257600080fd5b505afa158015610c76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9a919061352f565b90506000610ca98385846119c5565b90506001600160a01b0382163314610ee657604051639bd0911b60e01b8152600060048201819052906001600160a01b03831690639bd0911b9060240160206040518083038186803b158015610cfe57600080fd5b505afa158015610d12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d36919061352f565b90506001600160a01b038116301415610e915760405163fcdabd2760e01b81526001600160a01b038b8116600483015280841691639d9fd0d99187169063fcdabd279060240160206040518083038186803b158015610d9457600080fd5b505afa158015610da8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcc9190613584565b6040518263ffffffff1660e01b8152600401610dea91815260200190565b60206040518083038186803b158015610e0257600080fd5b505afa158015610e16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3a9190613562565b8015610e4f57506001600160a01b038a163014155b6040518060400160405280600581526020016424a72b2a2960d91b81525090610e8b5760405162461bcd60e51b815260040161038c9190613351565b50610ee4565b896001600160a01b0316816001600160a01b0316146040518060400160405280600581526020016424a72b2a2960d91b81525090610ee25760405162461bcd60e51b815260040161038c9190613351565b505b505b6000610ef28989611da3565b90506000610f018b838a611e8f565b9050610f688a6002805480602002602001604051908101604052809291908181526020018280548015610f5d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610f3f575b505050505083612481565b96507f54f9e6ef58e36de62f59f9ee6c4b878af84989c53a3642eba415ac3ac4e11cda8b88604051610f9b929190613644565b60405180910390a1505050505050610fb36001600055565b949350505050565b825160609060005b8181101561104e57848181518110610fdd57610fdd61354c565b602002602001015160001461103e5761103e87308784815181106110035761100361354c565b602002602001015189858151811061101d5761101d61354c565b60200260200101516001600160a01b03166126a2909392919063ffffffff16565b611047816135b3565b9050610fc3565b5061105a858585611416565b915060005b855181101561113857600085828151811061107c5761107c61354c565b60200260200101518483815181106110965761109661354c565b6020026020010151106110aa5760006110e8565b8382815181106110bc576110bc61354c565b60200260200101518683815181106110d6576110d661354c565b60200260200101516110e89190613668565b905080156111275761112788828985815181106111075761110761354c565b60200260200101516001600160a01b0316611afe9092919063ffffffff16565b50611131816135b3565b905061105f565b5050949350505050565b606061114c61196b565b6004805460408051808201909152918252631253925560e21b60208301526111875760405162461bcd60e51b815260040161038c9190613351565b5061119133611be5565b6040518060400160405280600381526020016223292160e91b815250906111cb5760405162461bcd60e51b815260040161038c9190613351565b5060015460408051637ac46fbb60e01b815290516000926001600160a01b031691637ac46fbb916004808301926060929190829003018186803b15801561121157600080fd5b505afa158015611225573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124991906134be565b51604051631f4a58fb60e31b81526001600160a01b03888116600483015291925060009183169063fa52c7d89060240160206040518083038186803b15801561129157600080fd5b505afa1580156112a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c9919061352f565b60408051808201909152600381526223292160e91b60208201529091506001600160a01b03821661130d5760405162461bcd60e51b815260040161038c9190613351565b50604051631796170d60e21b81526001600160a01b03821690635e585c34906113449033908b9034908c908c908c9060040161367f565b60006040518083038186803b15801561135c57600080fd5b505afa158015611370573d6000803e3d6000fd5b50505050600080886001600160a01b031634898989604051602001611397939291906136e4565b60408051601f19818403018152908290526113b191613708565b60006040518083038185875af1925050503d80600081146113ee576040519150601f19603f3d011682016040523d82523d6000602084013e6113f3565b606091505b5091509150816114065780518082602001fd5b60016000559350610fb392505050565b606061142061196b565b6004805460408051808201909152918252631253925560e21b6020830152908161145d5760405162461bcd60e51b815260040161038c9190613351565b5060015460408051637ac46fbb60e01b815290516000926001600160a01b031691637ac46fbb916004808301926060929190829003018186803b1580156114a357600080fd5b505afa1580156114b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114db91906134be565b602001516040516331a9108f60e11b8152600481018490529091506000906001600160a01b03831690636352211e9060240160206040518083038186803b15801561152557600080fd5b505afa158015611539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155d919061352f565b60405163fcdabd2760e01b81526001600160a01b03808316600483015291925060009184169063fcdabd279060240160206040518083038186803b1580156115a457600080fd5b505afa1580156115b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115dc9190613584565b604080518082019091526002815261272360f11b6020820152909150816116165760405162461bcd60e51b815260040161038c9190613351565b5060006116238989611da3565b9050600081905061168d8a6002805480602002602001604051908101604052809291908181526020018280548015610f5d576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610f3f57505050505083612481565b96507f08e404e978692dd1b8275016b7a7b0b3ae4afd06b0cec7228060bb2da18c84fd816040516116be91906130ab565b60405180910390a15050505050506116d66001600055565b9392505050565b6060600280548060200260200160405190810160405280929190818152602001828054801561173557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611717575b5050505050905090565b61174981836126e0565b5050565b6060600580548060200260200160405190810160405280929190818152602001828054801561173557602002820191906000526020600020905b815481526020019060010190808311611787575050505050905090565b606080600060028054806020026020016040519081016040528092919081815260200182805480156117ff57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116117e1575b5050835193945083925050506001600160401b0381111561182257611822612f4a565b60405190808252806020026020018201604052801561184b578160200160208202803683370190505b50935060005b8181101561191b5782818151811061186b5761186b61354c565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156118b657600080fd5b505afa1580156118ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ee9190613584565b8582815181106119005761190061354c565b6020908102919091010152611914816135b3565b9050611851565b5083925050509091565b600061193082612b6b565b8061194b57506001600160e01b03198216633d31d51d60e11b145b8061033f57506001600160e01b03198216630b135d3f60e11b1492915050565b600260005414156119be5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161038c565b6002600055565b60405163fcdabd2760e01b81526001600160a01b038281166004830152600091829186169063fcdabd279060240160206040518083038186803b158015611a0b57600080fd5b505afa158015611a1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a439190613584565b90508315801590611a5357508015155b604051806040016040528060048152602001631253925560e21b81525090611a8e5760405162461bcd60e51b815260040161038c9190613351565b5091949350505050565b600254600090815b81811015611af45760028181548110611abb57611abb61354c565b6000918252602090912001546001600160a01b0385811691161415611ae4575060019392505050565b611aed816135b3565b9050611aa0565b5060009392505050565b6040516001600160a01b038316602482015260448101829052611b6190849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152612ba1565b505050565b600080600080611b7585612c73565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa158015611bd0573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b600080600160009054906101000a90046001600160a01b03166001600160a01b0316637ac46fbb6040518163ffffffff1660e01b815260040160606040518083038186803b158015611c3657600080fd5b505afa158015611c4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6e91906134be565b6020015160045490915080611c87575060009392505050565b60405163020604bf60e21b8152600481018290526001600160a01b03808616919084169063081812fc9060240160206040518083038186803b158015611ccc57600080fd5b505afa158015611ce0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d04919061352f565b6001600160a01b03161480610fb357506040516331a9108f60e11b8152600481018290526001600160a01b038086169190841690636352211e9060240160206040518083038186803b158015611d5957600080fd5b505afa158015611d6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d91919061352f565b6001600160a01b031614949350505050565b6060611dae83612cd7565b60405180604001604052806004815260200163494e564160e01b81525090611de95760405162461bcd60e51b815260040161038c9190613351565b5081518351146040518060400160405280600381526020016224a72b60e91b81525090611e295760405162461bcd60e51b815260040161038c9190613351565b506116d66002805480602002602001604051908101604052809291908181526020018280548015611e8357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611e65575b50505050508484612481565b606082516001600160401b03811115611eaa57611eaa612f4a565b604051908082528060200260200182016040528015611ed3578160200160208202803683370190505b509050600083516001600160401b03811115611ef157611ef1612f4a565b604051908082528060200260200182016040528015611f1a578160200160208202803683370190505b50905060006002805480602002602001604051908101604052809291908181526020018280548015611f7557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611f57575b505050505090506000600160009054906101000a90046001600160a01b03166001600160a01b0316637ac46fbb6040518163ffffffff1660e01b815260040160606040518083038186803b158015611fcc57600080fd5b505afa158015611fe0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061200491906134be565b60200151600480546040516331a9108f60e11b8152918201529091506000906001600160a01b03831690636352211e9060240160206040518083038186803b15801561204f57600080fd5b505afa158015612063573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612087919061352f565b905060005b87518110156122915760008482815181106120a9576120a961354c565b60209081029190910101516040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a082319060240160206040518083038186803b1580156120f957600080fd5b505afa15801561210d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121319190613584565b90506000818b85815181106121485761214861354c565b60200260200101511061215b5781612176565b8a848151811061216d5761216d61354c565b60200260200101515b905061218f8c828987815181106111075761110761354c565b808985815181106121a2576121a261354c565b6020026020010181815250508b6001600160a01b0316856001600160a01b03161461227d578684815181106121d9576121d961354c565b60209081029190910101516040516370a0823160e01b81526001600160a01b038e81166004830152909116906370a082319060240160206040518083038186803b15801561222657600080fd5b505afa15801561223a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225e9190613584565b8885815181106122705761227061354c565b6020026020010181815250505b5050508061228a906135b3565b905061208c565b50876001600160a01b0316816001600160a01b0316146124765760405163159b29ad60e21b81526001600160a01b0389169063566ca6b4906122db90869088908b90600401613724565b600060405180830381600087803b1580156122f557600080fd5b505af1158015612309573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612331919081019061375d565b506040516302f0e4a160e11b81526000906001600160a01b038a16906305e1c94290612361908790600401613441565b600060405180830381600087803b15801561237b57600080fd5b505af115801561238f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526123b7919081019061375d565b905060005b8851811015612473578181815181106123d7576123d761354c565b60200260200101518782815181106123f1576123f161354c565b60200260200101511015612406576000612444565b8181815181106124185761241861354c565b60200260200101518782815181106124325761243261354c565b60200260200101516124449190613668565b8782815181106124565761245661354c565b60209081029190910101528061246b816135b3565b9150506123bc565b50505b505050509392505050565b6060600084516001600160401b0381111561249e5761249e612f4a565b6040519080825280602002602001820160405280156124c7578160200160208202803683370190505b5090506000805b8651821080156124de5750855181105b1561265d578581815181106124f5576124f561354c565b60200260200101516001600160a01b03168783815181106125185761251861354c565b60200260200101516001600160a01b031610156125605760008383815181106125435761254361354c565b602090810291909101015281612558816135b3565b9250506124ce565b8581815181106125725761257261354c565b60200260200101516001600160a01b03168783815181106125955761259561354c565b60200260200101516001600160a01b0316111561260e578481815181106125be576125be61354c565b6020026020010151600014156125e057806125d8816135b3565b9150506124ce565b60405162461bcd60e51b815260206004820152600360248201526254505360e81b604482015260640161038c565b8481815181106126205761262061354c565b602002602001015183838151811061263a5761263a61354c565b60209081029190910101528161264f816135b3565b92505080806125d8906135b3565b865182101561269757600083838151811061267a5761267a61354c565b60209081029190910101528161268f816135b3565b92505061265d565b509095945050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526126da9085906323b872dd60e01b90608401611b2a565b50505050565b6004805460408051808201909152918252631253925560e21b60208301521561271c5760405162461bcd60e51b815260040161038c9190613351565b5061272682612cd7565b60405180604001604052806004815260200163494e564160e01b815250906127615760405162461bcd60e51b815260040161038c9190613351565b506040805180820190915260028152612b2d60f11b6020820152816127995760405162461bcd60e51b815260040161038c9190613351565b506000336001600160a01b0316637ac46fbb6040518163ffffffff1660e01b815260040160606040518083038186803b1580156127d557600080fd5b505afa1580156127e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061280d91906134be565b518351909150158015906128925750806001600160a01b03166378546fa26040518163ffffffff1660e01b815260040160206040518083038186803b15801561285557600080fd5b505afa158015612869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061288d9190613584565b835111155b6040518060400160405280600381526020016224a72b60e91b815250906128cc5760405162461bcd60e51b815260040161038c9190613351565b5060005b83518110156129d057816001600160a01b03166363e85d2d8583815181106128fa576128fa61354c565b60209081029190910101516040516001600160e01b031960e084901b1681526001600160a01b0390911660048201526003602482015260440160206040518083038186803b15801561294b57600080fd5b505afa15801561295f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129839190613562565b6040518060400160405280600381526020016223292160e91b815250906129bd5760405162461bcd60e51b815260040161038c9190613351565b50806129c8816135b3565b9150506128d0565b50600180546001600160a01b0319163317905582516129f6906002906020860190612e9a565b50600482905560025460005b81811015612b2657612a158160016137e2565b60036000878481518110612a2b57612a2b61354c565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055506000858281518110612a6b57612a6b61354c565b6020026020010151905060056002826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015612ab257600080fd5b505afa158015612ac6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aea91906137fa565b612af4919061381d565b612aff90600a613931565b8154600181018355600092835260209092209091015550612b1f816135b3565b9050612a02565b50604051339032907f0f043e55a1ce0d7ce25125ccbc2800b540d83e21abf7250f0156c2091a28b22190612b5d9088908890613940565b60405180910390a350505050565b60006301ffc9a760e01b6001600160e01b03198316148061033f57506001600160e01b0319821663305a640b60e21b1492915050565b6000612bf6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612d7a9092919063ffffffff16565b805190915015611b615780806020019051810190612c149190613562565b611b615760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161038c565b60008060008351604114604051806040016040528060048152602001631253959360e21b81525090612cb85760405162461bcd60e51b815260040161038c9190613351565b5050505060208101516040820151606090920151909260009190911a90565b6000600282511015612ceb57506001919050565b60005b60018351612cfc9190613668565b811015612d715782612d0f8260016137e2565b81518110612d1f57612d1f61354c565b60200260200101516001600160a01b0316838281518110612d4257612d4261354c565b60200260200101516001600160a01b031610612d615750600092915050565b612d6a816135b3565b9050612cee565b50600192915050565b6060610fb3848460008585600080866001600160a01b03168587604051612da19190613708565b60006040518083038185875af1925050503d8060008114612dde576040519150601f19603f3d011682016040523d82523d6000602084013e612de3565b606091505b5091509150612df487838387612dff565b979650505050505050565b60608315612e6b578251612e64576001600160a01b0385163b612e645760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161038c565b5081610fb3565b610fb38383815115612e805781518083602001fd5b8060405162461bcd60e51b815260040161038c9190613351565b828054828255906000526020600020908101928215612eef579160200282015b82811115612eef57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612eba565b50612efb929150612eff565b5090565b5b80821115612efb5760008155600101612f00565b6001600160e01b031981168114612f2a57600080fd5b50565b600060208284031215612f3f57600080fd5b81356116d681612f14565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612f8857612f88612f4a565b604052919050565b60006001600160401b03821115612fa957612fa9612f4a565b5060051b60200190565b6001600160a01b0381168114612f2a57600080fd5b600082601f830112612fd957600080fd5b81356020612fee612fe983612f90565b612f60565b82815260059290921b8401810191818101908684111561300d57600080fd5b8286015b8481101561303157803561302481612fb3565b8352918301918301613011565b509695505050505050565b60006020828403121561304e57600080fd5b81356001600160401b0381111561306457600080fd5b610fb384828501612fc8565b600081518084526020808501945080840160005b838110156130a057815187529582019590820190600101613084565b509495945050505050565b6020815260006116d66020830184613070565b600082601f8301126130cf57600080fd5b81356001600160401b038111156130e8576130e8612f4a565b6130fb601f8201601f1916602001612f60565b81815284602083860101111561311057600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561314057600080fd5b8235915060208301356001600160401b0381111561315d57600080fd5b613169858286016130be565b9150509250929050565b600082601f83011261318457600080fd5b81356020613194612fe983612f90565b82815260059290921b840181019181810190868411156131b357600080fd5b8286015b8481101561303157803583529183019183016131b7565b600080600080608085870312156131e457600080fd5b84356131ef81612fb3565b935060208501356001600160401b038082111561320b57600080fd5b61321788838901612fc8565b9450604087013591508082111561322d57600080fd5b61323988838901613173565b9350606087013591508082111561324f57600080fd5b5061325c878288016130be565b91505092959194509250565b6000806000806060858703121561327e57600080fd5b843561328981612fb3565b9350602085013561329981612f14565b925060408501356001600160401b03808211156132b557600080fd5b818701915087601f8301126132c957600080fd5b8135818111156132d857600080fd5b8860208285010111156132ea57600080fd5b95989497505060200194505050565b60005b838110156133145781810151838201526020016132fc565b838111156126da5750506000910152565b6000815180845261333d8160208601602086016132f9565b601f01601f19169290920160200192915050565b6020815260006116d66020830184613325565b60006020828403121561337657600080fd5b81356116d681612fb3565b60008060006060848603121561339657600080fd5b83356001600160401b03808211156133ad57600080fd5b6133b987838801612fc8565b945060208601359150808211156133cf57600080fd5b6133db87838801613173565b935060408601359150808211156133f157600080fd5b506133fe868287016130be565b9150509250925092565b600081518084526020808501945080840160005b838110156130a05781516001600160a01b03168752958201959082019060010161341c565b6020815260006116d66020830184613408565b6000806040838503121561346757600080fd5b8235915060208301356001600160401b0381111561348457600080fd5b61316985828601612fc8565b6040815260006134a36040830185613070565b82810360208401526134b58185613070565b95945050505050565b6000606082840312156134d057600080fd5b604051606081018181106001600160401b03821117156134f2576134f2612f4a565b604052825161350081612fb3565b8152602083015161351081612fb3565b6020820152604083015161352381612fb3565b60408201529392505050565b60006020828403121561354157600080fd5b81516116d681612fb3565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561357457600080fd5b815180151581146116d657600080fd5b60006020828403121561359657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156135c7576135c761359d565b5060010190565b6001600160a01b03841681526060602082018190526000906135f290830185613408565b82810360408401526136048185613070565b9695505050505050565b828152604060208201526000610fb36040830184613325565b60006020828403121561363957600080fd5b81516116d681612f14565b6001600160a01b0383168152604060208201819052600090610fb390830184613070565b60008282101561367a5761367a61359d565b500390565b6001600160a01b03878116825286166020820152604081018590526001600160e01b03198416606082015260a06080820181905281018290526000828460c0840137600060c0848401015260c0601f19601f8501168301019050979650505050505050565b6001600160e01b031984168152818360048301376000910160040190815292915050565b6000825161371a8184602087016132f9565b9190910192915050565b6060815260006137376060830186613408565b82810360208401526137498186613070565b905082810360408401526136048185613325565b6000602080838503121561377057600080fd5b82516001600160401b0381111561378657600080fd5b8301601f8101851361379757600080fd5b80516137a5612fe982612f90565b81815260059190911b820183019083810190878311156137c457600080fd5b928401925b82841015612df4578351825292840192908401906137c9565b600082198211156137f5576137f561359d565b500190565b60006020828403121561380c57600080fd5b815160ff811681146116d657600080fd5b600060ff83168061383e57634e487b7160e01b600052601260045260246000fd5b8060ff84160491505092915050565b600181815b8085111561388857816000190482111561386e5761386e61359d565b8085161561387b57918102915b93841c9390800290613852565b509250929050565b60008261389f5750600161033f565b816138ac5750600061033f565b81600181146138c257600281146138cc576138e8565b600191505061033f565b60ff8411156138dd576138dd61359d565b50506001821b61033f565b5060208310610133831016604e8410600b841016171561390b575081810a61033f565b613915838361384d565b80600019048211156139295761392961359d565b029392505050565b60006116d660ff841683613890565b6040815260006139536040830185613408565b9050826020830152939250505056fea264697066735822122047add6b3d6a4c0b6b0f954c01d0a263e26966eef14ae04eac6696b1a7d0ab52d64736f6c63430008090033",
    "sourceMap": "403:3503:79:-:0;;;;;;;;;;;;-1:-1:-1;1701:1:12;1806:7;:22;-1:-1:-1;;1694:4:85;:24;403:3503:79;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "403:3503:79:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3684:220;;;;;;;;;;-1:-1:-1;3684:220:79;;;;;:::i;:::-;;:::i;:::-;;;565:14:88;;558:22;540:41;;528:2;513:18;3684:220:79;;;;;;;;5416:1225:84;;;;;;;;;;-1:-1:-1;5416:1225:84;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1823:85:85:-;;;;;;;;;;-1:-1:-1;1892:4:85;;:9;;1823:85;;6676:1122:84;;;;;;;;;;-1:-1:-1;6676:1122:84;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;4219:33:88;;;4201:52;;4189:2;4174:18;6676:1122:84;4057:202:88;3924:1448:84;;;;;;;;;;-1:-1:-1;3924:1448:84;;;;;:::i;:::-;;:::i;3112:768::-;;;;;;;;;;-1:-1:-1;3112:768:84;;;;;:::i;:::-;;:::i;7842:995::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1941:117:85:-;;;;;;;;;;-1:-1:-1;1941:117:85;;;;;:::i;:::-;-1:-1:-1;;;;;2022:24:85;1999:4;2022:24;;;:17;:24;;;;;;:29;;;1941:117;2365:75;;;;;;;;;;-1:-1:-1;2429:4:85;;2365:75;;7880:25:88;;;7868:2;7853:18;2365:75:85;7734:177:88;2117:951:84;;;;;;;;;;-1:-1:-1;2117:951:84;;;;;:::i;:::-;;:::i;2232:100:85:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1109:122:79:-;;;;;;;;;;-1:-1:-1;1109:122:79;;;;;:::i;:::-;;:::i;:::-;;2618:110:85;;;;;;;;;;;;;:::i;587:416:79:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;2091:108:85:-;;;;;;;;;;-1:-1:-1;2176:16:85;;2091:108;;-1:-1:-1;;;;;2176:16:85;;;10509:51:88;;10497:2;10482:18;2091:108:85;10337:229:88;3684:220:79;3788:4;3811:36;3835:11;3811:23;:36::i;:::-;:86;;;-1:-1:-1;;;;;;;3852:44:79;;-1:-1:-1;;;3852:44:79;3811:86;3804:93;3684:220;-1:-1:-1;;3684:220:79:o;5416:1225:84:-;5535:35;2246:21:12;:19;:21::i;:::-;5601:4:84::1;::::0;;5634:22:::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;;5634:22:84::1;::::0;::::1;::::0;5601:4;5623:9;5615:42:::1;;;;-1:-1:-1::0;;;5615:42:84::1;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;5715:16:84::1;::::0;:33:::1;::::0;;-1:-1:-1;;;5715:33:84;;;;5667:45:::1;::::0;-1:-1:-1;;;;;5715:16:84::1;::::0;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:16;:33;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5791:25:::0;;5852:15:::1;::::0;::::1;::::0;5893:22:::1;::::0;-1:-1:-1;;;5893:22:84;;::::1;::::0;::::1;7880:25:88::0;;;5791::84;;-1:-1:-1;5791:25:84;;5758:30:::1;::::0;-1:-1:-1;;;;;5893:16:84;::::1;::::0;::::1;::::0;7853:18:88;;5893:22:84::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5877:38;;5925:10;5938:28;5944:8;5954:4;5960:5;5938;:28::i;:::-;:42;::::0;-1:-1:-1;;;5938:42:84;;5978:1:::1;5938:42;::::0;::::1;7880:25:88::0;-1:-1:-1;;;;;5938:39:84;;;::::1;::::0;::::1;::::0;7853:18:88;;5938:42:84::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5925:55;;6025:6;:13;-1:-1:-1::0;;;;;6011:28:84::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;6011:28:84::1;-1:-1:-1::0;5990:49:84;-1:-1:-1;;;;;;6053:19:84;::::1;6067:4;6053:19;6049:75;;;6088:25;;;;;;;;6049:75;6138:9;6133:442;6157:6;:13;6153:1;:17;6133:442;;;6212:30;6232:6;6239:1;6232:9;;;;;;;;:::i;:::-;;;;;;;6212:19;:30::i;:::-;:123;;;;6263:10;-1:-1:-1::0;;;;;6263:24:84::1;;6288:6;6295:1;6288:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;6263:72:::1;::::0;-1:-1:-1;;;;;;6263:72:84::1;::::0;;;;;;-1:-1:-1;;;;;12347:32:88;;;6263:72:84::1;::::0;::::1;12329:51:88::0;401:1:73::1;12396:18:88::0;;;12389:45;12302:18;;6263:72:84::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6262:73;6212:123;6191:200;;;6368:8;;6191:200;6404:12;6426:6;6433:1;6426:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;6474:30:::1;::::0;-1:-1:-1;;;6474:30:84;;6498:4:::1;6474:30;::::0;::::1;10509:51:88::0;6426:9:84;;-1:-1:-1;;;;;;6474:15:84;::::1;::::0;::::1;::::0;10482:18:88;;6474:30:84::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6450:18;6469:1;6450:21;;;;;;;;:::i;:::-;;;;;;:54;;;::::0;::::1;6519:45;6538:2;6542:18;6561:1;6542:21;;;;;;;;:::i;:::-;;;;;;;6519:5;-1:-1:-1::0;;;;;6519:18:84::1;;;:45;;;;;:::i;:::-;6177:398;6133:442;6172:3;::::0;::::1;:::i;:::-;;;6133:442;;;;6589:45;6603:2;6607:6;6615:18;6589:45;;;;;;;;:::i;:::-;;;;;;;;5576:1065;;;;;;2277:1:12;2288:20:::0;1701:1;2794:7;:22;2614:209;2288:20;5416:1225:84;;;:::o;6676:1122::-;6765:17;6794:45;6842:16;;;;;;;;;-1:-1:-1;;;;;6842:16:84;-1:-1:-1;;;;;6842:31:84;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6911:15;;;;6977:25;;7027:4;;6794:81;;-1:-1:-1;6911:15:84;;7045:9;7041:57;;-1:-1:-1;;;;;;;7070:17:84;-1:-1:-1;7070:17:84;;-1:-1:-1;;;7070:17:84;7041:57;7126:26;;-1:-1:-1;;;7126:26:84;;;;;7880:25:88;;;7107:16:84;;-1:-1:-1;;;;;7126:20:84;;;;;7853:18:88;;7126:26:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7167:81;;-1:-1:-1;;;7167:81:84;;-1:-1:-1;;;;;12347:32:88;;;7167:81:84;;;12329:51:88;859:1:73;12396:18:88;;;12389:45;7107::84;;-1:-1:-1;7167:32:84;;;;;;12302:18:88;;7167:81:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7162:130;;-1:-1:-1;;;;;;;7264:17:84;-1:-1:-1;7264:17:84;;-1:-1:-1;;;;7264:17:84;7162:130;7353:21;;7397:8;;;;7393:257;;7425:63;;-1:-1:-1;;;7425:63:84;;-1:-1:-1;;;7425:63:84;;;4201:52:88;-1:-1:-1;;;;;7425:35:84;;;;;4174:18:88;;7425:63:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7421:219;;;7515:54;;-1:-1:-1;;;7515:54:84;;-1:-1:-1;;;;;7515:35:84;;;;;:54;;7551:5;;7558:10;;7515:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7508:61;;;;;;;;;;7421:219;-1:-1:-1;;;;;;;7608:17:84;-1:-1:-1;7608:17:84;;-1:-1:-1;;;;;7608:17:84;7421:219;7713:8;-1:-1:-1;;;;;7663:58:84;:46;7691:5;7698:10;7663:27;:46::i;:::-;-1:-1:-1;;;;;7663:58:84;;7659:106;;;-1:-1:-1;;;;7737:17:84;-1:-1:-1;7737:17:84;;-1:-1:-1;;;;;7737:17:84;7659:106;-1:-1:-1;;;;;;;7774:17:84;6676:1122;-1:-1:-1;;;;;;;;6676:1122:84:o;3924:1448::-;4097:35;2246:21:12;:19;:21::i;:::-;4159:4:84::1;::::0;;4192:22:::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;;4192:22:84::1;::::0;::::1;::::0;4159:4;4181:9;4173:42:::1;;;;-1:-1:-1::0;;;4173:42:84::1;;;;;;;;:::i;:::-;;4233:30;4252:10;4233:18;:30::i;:::-;4265:27;;;;;;;;;;;;;-1:-1:-1::0;;;4265:27:84::1;;::::0;4225:68:::1;;;;;-1:-1:-1::0;;;4225:68:84::1;;;;;;;;:::i;:::-;-1:-1:-1::0;4366:16:84::1;::::0;:33:::1;::::0;;-1:-1:-1;;;4366:33:84;;;;4340:23:::1;::::0;-1:-1:-1;;;;;4366:16:84::1;::::0;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:16;:33;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;::::0;4434:22:::1;::::0;-1:-1:-1;;;4434:22:84;;::::1;::::0;::::1;7880:25:88::0;;;4366:42:84;;-1:-1:-1;4418:13:84::1;::::0;-1:-1:-1;;;;;4434:16:84;::::1;::::0;::::1;::::0;7853:18:88;;4434:22:84::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4418:38;;4466:15;4484:28;4490:8;4500:4;4506:5;4484;:28::i;:::-;4466:46:::0;-1:-1:-1;;;;;;4526:19:84;::::1;4535:10;4526:19;4522:522;;4581:18;::::0;-1:-1:-1;;;4581:18:84;;4561:17:::1;4581:18;::::0;::::1;7880:25:88::0;;;4561:17:84;-1:-1:-1;;;;;4581:15:84;::::1;::::0;::::1;::::0;7853:18:88;;4581::84::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4561:38:::0;-1:-1:-1;;;;;;4617:26:84;::::1;4638:4;4617:26;4613:421;;;4755:24;::::0;-1:-1:-1;;;4755:24:84;;-1:-1:-1;;;;;10527:32:88;;;4755:24:84::1;::::0;::::1;10509:51:88::0;4738:16:84;;::::1;::::0;::::1;::::0;4755:20;::::1;::::0;::::1;::::0;10482:18:88;;4755:24:84::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4738:42;;;;;;;;;;;;;7880:25:88::0;;7868:2;7853:18;;7734:177;4738:42:84::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;;;-1:-1:-1::0;;;;;;4784:19:84;::::1;4798:4;4784:19;;4738:65;4825:32;;;;;;;;;;;;;-1:-1:-1::0;;;4825:32:84::1;;::::0;4709:166:::1;;;;;-1:-1:-1::0;;;4709:166:84::1;;;;;;;;:::i;:::-;;4613:421;;;4982:2;-1:-1:-1::0;;;;;4969:15:84::1;:9;-1:-1:-1::0;;;;;4969:15:84::1;;4986:32;;;;;;;;;;;;;-1:-1:-1::0;;;4986:32:84::1;;::::0;4961:58:::1;;;;;-1:-1:-1::0;;;4961:58:84::1;;;;;;;;:::i;:::-;;4613:421;4547:497;4522:522;5053:30;5086:47;5112:6;5120:12;5086:25;:47::i;:::-;5053:80;;5143:36;5182:33;5188:2;5192:13;5207:7;5182:5;:33::i;:::-;5143:72;;5246:76;5280:6;5288:12;5246:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;5246:76:84::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;5302:19;5246:33;:76::i;:::-;5225:97;;5337:28;5342:2;5346:18;5337:28;;;;;;;:::i;:::-;;;;;;;;4134:1238;;;;;;2288:20:12::0;1701:1;2794:7;:22;2614:209;2288:20;3924:1448:84;;;;;;:::o;3112:768::-;3346:13;;3285:35;;3332:11;3369:177;3393:3;3389:1;:7;3369:177;;;3419:12;3432:1;3419:15;;;;;;;;:::i;:::-;;;;;;;3438:1;3419:20;3415:131;;3459:72;3494:4;3508;3515:12;3528:1;3515:15;;;;;;;;:::i;:::-;;;;;;;3466:6;3473:1;3466:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3459:34:84;;;:72;;;;;;:::i;:::-;3398:3;;;:::i;:::-;;;3369:177;;;;3577:35;3582:6;3590:12;3604:7;3577:4;:35::i;:::-;3556:56;;3627:9;3622:252;3646:6;:13;3642:1;:17;3622:252;;;3680:16;3723:12;3736:1;3723:15;;;;;;;;:::i;:::-;;;;;;;3699:18;3718:1;3699:21;;;;;;;;:::i;:::-;;;;;;;:39;:85;;3783:1;3699:85;;;3759:18;3778:1;3759:21;;;;;;;;:::i;:::-;;;;;;;3741:12;3754:1;3741:15;;;;;;;;:::i;:::-;;;;;;;:39;;;;:::i;:::-;3680:104;-1:-1:-1;3802:13:84;;3798:65;;3817:46;3848:4;3854:8;3824:6;3831:1;3824:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3817:30:84;;;:46;;;;;:::i;:::-;-1:-1:-1;3661:3:84;;;:::i;:::-;;;3622:252;;;;3322:558;3112:768;;;;;;:::o;7842:995::-;7983:19;2246:21:12;:19;:21::i;:::-;8022:4:84::1;::::0;;8033:22:::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;;8033:22:84::1;::::0;::::1;::::0;8014:42:::1;;;;-1:-1:-1::0;;;8014:42:84::1;;;;;;;;:::i;:::-;;8074:30;8093:10;8074:18;:30::i;:::-;8106:27;;;;;;;;;;;;;-1:-1:-1::0;;;8106:27:84::1;;::::0;8066:68:::1;;;;;-1:-1:-1::0;;;8066:68:84::1;;;;;;;;:::i;:::-;-1:-1:-1::0;8185:16:84::1;::::0;:33:::1;::::0;;-1:-1:-1;;;8185:33:84;;;;8144:38:::1;::::0;-1:-1:-1;;;;;8185:16:84::1;::::0;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:16;:33;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52:::0;8281:33:::1;::::0;-1:-1:-1;;;8281:33:84;;-1:-1:-1;;;;;10527:32:88;;;8281:33:84::1;::::0;::::1;10509:51:88::0;8185:52:84;;-1:-1:-1;8185:52:84::1;::::0;8281:29;::::1;::::0;::::1;::::0;10482:18:88;;8281:33:84::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8367:27;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;8367:27:84::1;::::0;::::1;::::0;8247:68;;-1:-1:-1;;;;;;8333:32:84;::::1;8325:70;;;;-1:-1:-1::0;;;8325:70:84::1;;;;;;;;:::i;:::-;-1:-1:-1::0;8405:61:84::1;::::0;-1:-1:-1;;;8405:61:84;;-1:-1:-1;;;;;8405:18:84;::::1;::::0;::::1;::::0;:61:::1;::::0;8424:10:::1;::::0;8436:2;;8440:9:::1;::::0;8451:8;;8461:4;;;;8405:61:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8477:8;8487:23:::0;8514:2:::1;-1:-1:-1::0;;;;;8514:7:84::1;8529:9;8557:8;8567:4;;8540:32;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;8540:32:84;;::::1;::::0;;;;;;;8514:59:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8476:97;;;;8588:3;8583:219;;8663:10;8657:17;8762:15;8749:10;8745:2;8741:19;8734:44;8583:219;1701:1:12::0;2794:7;:22;8820:10:84;-1:-1:-1;2288:20:12;;-1:-1:-1;;;2614:209:12;2117:951:84;2268:35;2246:21:12;:19;:21::i;:::-;2330:4:84::1;::::0;;2363:22:::1;::::0;;;;::::1;::::0;;;;;;-1:-1:-1;;;2363:22:84::1;::::0;::::1;::::0;2330:4;2352:9;2344:42:::1;;;;-1:-1:-1::0;;;2344:42:84::1;;;;;;;;:::i;:::-;-1:-1:-1::0;2427:16:84::1;::::0;:33:::1;::::0;;-1:-1:-1;;;2427:33:84;;;;2396:28:::1;::::0;-1:-1:-1;;;;;2427:16:84::1;::::0;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:16;:33;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;::::0;2506:27:::1;::::0;-1:-1:-1;;;2506:27:84;;::::1;::::0;::::1;7880:25:88::0;;;2427:42:84;;-1:-1:-1;2479:17:84::1;::::0;-1:-1:-1;;;;;2506:21:84;::::1;::::0;::::1;::::0;7853:18:88;;2506:27:84::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2600:46;::::0;-1:-1:-1;;;2600:46:84;;-1:-1:-1;;;;;10527:32:88;;;2600:46:84::1;::::0;::::1;10509:51:88::0;2479:55:84;;-1:-1:-1;2581:16:84::1;::::0;2600:25;::::1;::::0;::::1;::::0;10482:18:88;;2600:46:84::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2679:27;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;2679:27:84::1;::::0;::::1;::::0;2581:65;;-1:-1:-1;2664:13:84;2656:51:::1;;;;-1:-1:-1::0;;;2656:51:84::1;;;;;;;;:::i;:::-;;2756:30;2789:47;2815:6;2823:12;2789:25;:47::i;:::-;2756:80:::0;-1:-1:-1;2846:36:84::1;2756:80:::0;2846:68:::1;;2945:76;2979:6;2987:12;2945:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;2945:76:84::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;3001:19;2945:33;:76::i;:::-;2924:97;;3036:25;3041:19;3036:25;;;;;;:::i;:::-;;;;;;;;2305:763;;;;;;2288:20:12::0;1701:1;2794:7;:22;2614:209;2288:20;2117:951:84;;;;;:::o;2232:100:85:-;2278:16;2313:12;2306:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2306:19:85;;;;;;;;;;;;;;;;;;;;;;;2232:100;:::o;1109:122:79:-;1193:31;1205:12;1219:4;1193:11;:31::i;:::-;1109:122;;:::o;2618:110:85:-;2669:16;2704:17;2697:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2618:110;:::o;587:416:79:-;623:32;657;701:23;727:12;701:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;701:38:79;;;;;;;;;;;;;;;;-1:-1:-1;;763:13:79;;701:38;;-1:-1:-1;763:13:79;;-1:-1:-1;;;;;;;;804:18:79;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;804:18:79;;786:36;;837:9;832:122;856:3;852:1;:7;832:122;;;908:6;915:1;908:9;;;;;;;;:::i;:::-;;;;;;;;;;;901:42;;-1:-1:-1;;;901:42:79;;937:4;901:42;;;10509:51:88;-1:-1:-1;;;;;901:27:79;;;;;;10482:18:88;;901:42:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;880:15;896:1;880:18;;;;;;;;:::i;:::-;;;;;;;;;;:63;861:3;;;:::i;:::-;;;832:122;;;;981:15;963:33;;691:312;;587:416;;:::o;1698:306:84:-;1799:4;1834:36;1858:11;1834:23;:36::i;:::-;:104;;;-1:-1:-1;;;;;;;1887:50:84;;-1:-1:-1;;;1887:50:84;1834:104;:163;;;-1:-1:-1;;;;;;;1955:41:84;;-1:-1:-1;;;1955:41:84;1815:182;1698:306;-1:-1:-1;;1698:306:84:o;2321:287:12:-;1744:1;2453:7;;:19;;2445:63;;;;-1:-1:-1;;;2445:63:12;;16621:2:88;2445:63:12;;;16603:21:88;16660:2;16640:18;;;16633:30;16699:33;16679:18;;;16672:61;16750:18;;2445:63:12;16419:355:88;2445:63:12;1744:1;2583:7;:18;2321:287::o;9365:331:84:-;9539:31;;-1:-1:-1;;;9539:31:84;;-1:-1:-1;;;;;10527:32:88;;;9539:31:84;;;10509:51:88;9494:10:84;;;;9539:20;;;;;10482:18:88;;9539:31:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9516:54;-1:-1:-1;9589:12:84;;;;;9588:37;;-1:-1:-1;9607:17:84;;;9588:37;9627:22;;;;;;;;;;;;;-1:-1:-1;;;9627:22:84;;;9580:70;;;;;-1:-1:-1;;;9580:70:84;;;;;;;;:::i;:::-;-1:-1:-1;9679:9:84;;9365:331;-1:-1:-1;;;;9365:331:84:o;1305:295:79:-;1411:12;:19;1381:4;;;1440:132;1464:3;1460:1;:7;1440:132;;;1501:12;1514:1;1501:15;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1492:24:79;;;1501:15;;1492:24;1488:74;;;-1:-1:-1;1543:4:79;;1305:295;-1:-1:-1;;;1305:295:79:o;1488:74::-;1469:3;;;:::i;:::-;;;1440:132;;;-1:-1:-1;1588:5:79;;1305:295;-1:-1:-1;;;1305:295:79:o;763:205:16:-;902:58;;-1:-1:-1;;;;;16971:32:88;;902:58:16;;;16953:51:88;17020:18;;;17013:34;;;875:86:16;;895:5;;-1:-1:-1;;;925:23:16;16926:18:88;;902:58:16;;;;-1:-1:-1;;902:58:16;;;;;;;;;;;;;;-1:-1:-1;;;;;902:58:16;-1:-1:-1;;;;;;902:58:16;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;4550:247:71:-;4652:7;4672:9;4683;4694:7;4705:26;4720:10;4705:14;:26::i;:::-;4749:41;;;;;;;;;;;;17285:25:88;;;17358:4;17346:17;;17326:18;;;17319:45;;;;17380:18;;;17373:34;;;17423:18;;;17416:34;;;4671:60:71;;-1:-1:-1;4671:60:71;;-1:-1:-1;4671:60:71;-1:-1:-1;4749:41:71;;17257:19:88;;4749:41:71;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4749:41:71;;-1:-1:-1;;4749:41:71;;;4550:247;-1:-1:-1;;;;;;;4550:247:71:o;9702:337:84:-;9769:4;9785:23;9811:16;;;;;;;;;-1:-1:-1;;;;;9811:16:84;-1:-1:-1;;;;;9811:31:84;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;9878:4;;9811:42;;-1:-1:-1;9896:9:84;9892:52;;-1:-1:-1;9928:5:84;;9702:337;-1:-1:-1;;;9702:337:84:o;9892:52::-;9960:26;;-1:-1:-1;;;9960:26:84;;;;;7880:25:88;;;-1:-1:-1;;;;;9960:36:84;;;;:20;;;;;;7853:18:88;;9960:26:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9960:36:84;;:72;;;-1:-1:-1;10000:22:84;;-1:-1:-1;;;10000:22:84;;;;;7880:25:88;;;-1:-1:-1;;;;;10000:32:84;;;;:16;;;;;;7853:18:88;;10000:22:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10000:32:84;;9953:79;9702:337;-1:-1:-1;;;;9702:337:84:o;8908:451::-;9046:30;9100:39;9132:6;9100:31;:39::i;:::-;9141:27;;;;;;;;;;;;;-1:-1:-1;;;9141:27:84;;;9092:77;;;;;-1:-1:-1;;;9092:77:84;;;;;;;;:::i;:::-;;9204:12;:19;9187:6;:13;:36;9225:31;;;;;;;;;;;;;-1:-1:-1;;;9225:31:84;;;9179:78;;;;;-1:-1:-1;;;9179:78:84;;;;;;;;:::i;:::-;;9283:69;9317:12;9283:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9283:69:84;;;;;;;;;;;;;;;;;;;;;9331:6;9339:12;9283:33;:69::i;1930:1711:79:-;2067:35;2149:12;:19;-1:-1:-1;;;;;2135:34:79;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2135:34:79;;2114:55;;2179:33;2229:12;:19;-1:-1:-1;;;;;2215:34:79;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2215:34:79;;2179:70;;2259:23;2285:12;2259:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2259:38:79;;;;;;;;;;;;;;;;;;;;;;;2307:23;2333:16;;;;;;;;;-1:-1:-1;;;;;2333:16:79;-1:-1:-1;;;;;2333:31:79;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;2418:4;;;2401:22;;-1:-1:-1;;;2401:22:79;;;;;7880:25:88;2333:42:79;;-1:-1:-1;2385:13:79;;-1:-1:-1;;;;;2401:16:79;;;;;7853:18:88;;2401:22:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2385:38;;2439:9;2434:573;2458:12;:19;2454:1;:23;2434:573;;;2498:17;2525:6;2532:1;2525:9;;;;;;;;:::i;:::-;;;;;;;;;;;2567:35;;-1:-1:-1;;;2567:35:79;;2596:4;2567:35;;;10509:51:88;2525:9:79;;-1:-1:-1;2549:15:79;;-1:-1:-1;;;;;2567:20:79;;;;;10482:18:88;;2567:35:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2549:53;;2616:14;2651:7;2633:12;2646:1;2633:15;;;;;;;;:::i;:::-;;;;;;;:25;:53;;2679:7;2633:53;;;2661:12;2674:1;2661:15;;;;;;;;:::i;:::-;;;;;;;2633:53;2616:70;;2700:42;2731:2;2735:6;2707;2714:1;2707:9;;;;;;;;:::i;2700:42::-;2780:6;2756:18;2775:1;2756:21;;;;;;;;:::i;:::-;;;;;;:30;;;;;2813:2;-1:-1:-1;;;;;2804:11:79;:5;-1:-1:-1;;;;;2804:11:79;;2800:197;;2958:6;2965:1;2958:9;;;;;;;;:::i;:::-;;;;;;;;;;;2951:31;;-1:-1:-1;;;2951:31:79;;-1:-1:-1;;;;;10527:32:88;;;2951:31:79;;;10509:51:88;2951:27:79;;;;;;10482:18:88;;2951:31:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2929:16;2946:1;2929:19;;;;;;;;:::i;:::-;;;;;;:53;;;;;2800:197;2484:523;;;2479:3;;;;:::i;:::-;;;2434:573;;;;3029:2;-1:-1:-1;;;;;3020:11:79;:5;-1:-1:-1;;;;;3020:11:79;;3016:619;;3119:61;;-1:-1:-1;;;3119:61:79;;-1:-1:-1;;;;;3119:26:79;;;;;:61;;3146:6;;3154:16;;3172:7;;3119:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3119:61:79;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3285:43:79;;-1:-1:-1;;;3285:43:79;;3256:26;;-1:-1:-1;;;;;3285:35:79;;;;;:43;;3321:6;;3285:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3285:43:79;;;;;;;;;;;;:::i;:::-;3256:72;;3347:9;3342:283;3366:12;:19;3362:1;:23;3342:283;;;3515:9;3525:1;3515:12;;;;;;;;:::i;:::-;;;;;;;3490:18;3509:1;3490:21;;;;;;;;:::i;:::-;;;;;;;:37;;:120;;3609:1;3490:120;;;3574:9;3584:1;3574:12;;;;;;;;:::i;:::-;;;;;;;3550:18;3569:1;3550:21;;;;;;;;:::i;:::-;;;;;;;:36;;;;:::i;:::-;3466:18;3485:1;3466:21;;;;;;;;:::i;:::-;;;;;;;;;;:144;3387:3;;;;:::i;:::-;;;;3342:283;;;;3033:602;3016:619;2104:1537;;;;1930:1711;;;;;:::o;1939:948:71:-;2120:16;2148:20;2185:6;:13;-1:-1:-1;;;;;2171:28:71;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2171:28:71;;2148:51;;2209:9;2232:10;2256:518;2268:6;:13;2264:1;:17;2263:52;;;;;2292:15;:22;2287:2;:27;2263:52;2256:518;;;2347:15;2363:2;2347:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2335:31:71;:6;2342:1;2335:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2335:31:71;;2331:433;;;2395:1;2386:3;2390:1;2386:6;;;;;;;;:::i;:::-;;;;;;;;;;:10;2414:3;;;;:::i;:::-;;;;2256:518;;2331:433;2454:15;2470:2;2454:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2442:31:71;:6;2449:1;2442:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2442:31:71;;2438:326;;;2497:21;2519:2;2497:25;;;;;;;;:::i;:::-;;;;;;;2526:1;2497:30;2493:141;;;2551:4;;;;:::i;:::-;;;;2256:518;;2493:141;2602:13;;-1:-1:-1;;;2602:13:71;;19179:2:88;2602:13:71;;;19161:21:88;19218:1;19198:18;;;19191:29;-1:-1:-1;;;19236:18:88;;;19229:33;19279:18;;2602:13:71;18977:326:88;2438::71;2681:21;2703:2;2681:25;;;;;;;;:::i;:::-;;;;;;;2672:3;2676:1;2672:6;;;;;;;;:::i;:::-;;;;;;;;;;:34;2724:3;;;;:::i;:::-;;;;2745:4;;;;;:::i;2256:518::-;2794:6;:13;2790:1;:17;2783:78;;;2832:1;2823:3;2827:1;2823:6;;;;;;;;:::i;:::-;;;;;;;;;;:10;2847:3;;;;:::i;:::-;;;;2783:78;;;-1:-1:-1;2877:3:71;;1939:948;-1:-1:-1;;;;;1939:948:71:o;974:241:16:-;1139:68;;-1:-1:-1;;;;;19566:15:88;;;1139:68:16;;;19548:34:88;19618:15;;19598:18;;;19591:43;19650:18;;;19643:34;;;1112:96:16;;1132:5;;-1:-1:-1;;;1162:27:16;19483:18:88;;1139:68:16;19308:375:88;1112:96:16;974:241;;;;:::o;3050:1348:85:-;3151:4;;;3162:22;;;;;;;;;;;;-1:-1:-1;;;3162:22:85;;;;3151:9;3143:42;;;;-1:-1:-1;;;3143:42:85;;;;;;;;:::i;:::-;;3203:45;3235:12;3203:31;:45::i;:::-;3250:27;;;;;;;;;;;;;-1:-1:-1;;;3250:27:85;;;3195:83;;;;;-1:-1:-1;;;3195:83:85;;;;;;;;:::i;:::-;-1:-1:-1;3307:28:85;;;;;;;;;;;;-1:-1:-1;;;3307:28:85;;;;3296:9;3288:48;;;;-1:-1:-1;;;3288:48:85;;;;;;;;:::i;:::-;;3401:30;3451:10;-1:-1:-1;;;;;3434:43:85;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;3529:19;;3434:64;;-1:-1:-1;3529:23:85;;;;:80;;;3579:10;-1:-1:-1;;;;;3579:28:85;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3556:12;:19;:53;;3529:80;3623:31;;;;;;;;;;;;;-1:-1:-1;;;3623:31:85;;;3508:156;;;;;-1:-1:-1;;;3508:156:85;;;;;;;;:::i;:::-;;3679:9;3674:240;3698:12;:19;3694:1;:23;3674:240;;;3763:10;-1:-1:-1;;;;;3763:24:85;;3788:12;3801:1;3788:15;;;;;;;;:::i;:::-;;;;;;;;;;;3763:81;;-1:-1:-1;;;;;;3763:81:85;;;;;;;-1:-1:-1;;;;;12347:32:88;;;3763:81:85;;;12329:51:88;492:1:73;12396:18:88;;;12389:45;12302:18;;3763:81:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3862:27;;;;;;;;;;;;;-1:-1:-1;;;3862:27:85;;;3738:165;;;;;-1:-1:-1;;;3738:165:85;;;;;;;;:::i;:::-;-1:-1:-1;3719:3:85;;;;:::i;:::-;;;;3674:240;;;-1:-1:-1;3923:16:85;:47;;-1:-1:-1;;;;;;3923:47:85;3959:10;3923:47;;;3980:27;;;;:12;;:27;;;;;:::i;:::-;-1:-1:-1;4017:4:85;:11;;;4052:12;:19;4038:11;4081:242;4105:3;4101:1;:7;4081:242;;;4173:5;:1;4177;4173:5;:::i;:::-;4129:17;:34;4147:12;4160:1;4147:15;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4129:34:85;-1:-1:-1;;;;;4129:34:85;;;;;;;;;;;;:50;;;;4194:20;4232:12;4245:1;4232:15;;;;;;;;:::i;:::-;;;;;;;4194:54;;4262:17;4309:1;4290:5;-1:-1:-1;;;;;4290:14:85;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:20;;;;:::i;:::-;4285:26;;:2;:26;:::i;:::-;4262:50;;;;;;;-1:-1:-1;4262:50:85;;;;;;;;;;;-1:-1:-1;4110:3:85;;;:::i;:::-;;;4081:242;;;-1:-1:-1;4337:54:85;;4360:10;;4349:9;;4337:54;;;;4372:12;;4386:4;;4337:54;:::i;:::-;;;;;;;;3133:1265;;3050:1348;;:::o;2762:213::-;2864:4;-1:-1:-1;;;;;;;;;937:40:25;;;2887:81:85;;;-1:-1:-1;;;;;;;2928:39:85;;-1:-1:-1;;;2928:39:85;2880:88;2762:213;-1:-1:-1;;2762:213:85:o;3747:706:16:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:16;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:16;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:16;;22288:2:88;4351:85:16;;;22270:21:88;22327:2;22307:18;;;22300:30;22366:34;22346:18;;;22339:62;-1:-1:-1;;;22417:18:88;;;22410:40;22467:19;;4351:85:16;22086:406:88;4970:396:71;5072:9;5095;5118:7;5158:3;:10;5172:2;5158:16;5176:32;;;;;;;;;;;;;-1:-1:-1;;;5176:32:71;;;5150:59;;;;;-1:-1:-1;;;5150:59:71;;;;;;;;:::i;:::-;-1:-1:-1;;;;5263:2:71;5254:12;;5248:19;5300:2;5291:12;;5285:19;5345:2;5336:12;;;5330:19;5248;;5327:1;5322:28;;;;;4970:396::o;1224:335::-;1299:4;1335:1;1319:6;:13;:17;1315:59;;;-1:-1:-1;1359:4:71;;1224:335;-1:-1:-1;1224:335:71:o;1315:59::-;1388:9;1383:149;1423:1;1407:6;:13;:17;;;;:::i;:::-;1403:1;:21;1383:149;;;1462:6;1469:5;:1;1473;1469:5;:::i;:::-;1462:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1449:26:71;:6;1456:1;1449:9;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1449:26:71;;1445:77;;-1:-1:-1;1502:5:71;;1224:335;-1:-1:-1;;1224:335:71:o;1445:77::-;1426:3;;;:::i;:::-;;;1383:149;;;-1:-1:-1;1548:4:71;;1224:335;-1:-1:-1;;1224:335:71:o;3873:223:21:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4006;5241;5255:23;5282:6;-1:-1:-1;;;;;5282:11:21;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:21:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:17;;7697:286;;-1:-1:-1;;;;;1465:19:21;;;7908:60;;;;-1:-1:-1;;;7908:60:21;;23106:2:88;7908:60:21;;;23088:21:88;23145:2;23125:18;;;23118:30;23184:31;23164:18;;;23157:59;23233:18;;7908:60:21;22904:353:88;7908:60:21;-1:-1:-1;8003:10:21;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:21;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:88;-1:-1:-1;;;;;;88:32:88;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:127::-;653:10;648:3;644:20;641:1;634:31;684:4;681:1;674:15;708:4;705:1;698:15;724:275;795:2;789:9;860:2;841:13;;-1:-1:-1;;837:27:88;825:40;;-1:-1:-1;;;;;880:34:88;;916:22;;;877:62;874:88;;;942:18;;:::i;:::-;978:2;971:22;724:275;;-1:-1:-1;724:275:88:o;1004:183::-;1064:4;-1:-1:-1;;;;;1089:6:88;1086:30;1083:56;;;1119:18;;:::i;:::-;-1:-1:-1;1164:1:88;1160:14;1176:4;1156:25;;1004:183::o;1192:131::-;-1:-1:-1;;;;;1267:31:88;;1257:42;;1247:70;;1313:1;1310;1303:12;1328:737;1382:5;1435:3;1428:4;1420:6;1416:17;1412:27;1402:55;;1453:1;1450;1443:12;1402:55;1489:6;1476:20;1515:4;1539:60;1555:43;1595:2;1555:43;:::i;:::-;1539:60;:::i;:::-;1633:15;;;1719:1;1715:10;;;;1703:23;;1699:32;;;1664:12;;;;1743:15;;;1740:35;;;1771:1;1768;1761:12;1740:35;1807:2;1799:6;1795:15;1819:217;1835:6;1830:3;1827:15;1819:217;;;1915:3;1902:17;1932:31;1957:5;1932:31;:::i;:::-;1976:18;;2014:12;;;;1852;;1819:217;;;-1:-1:-1;2054:5:88;1328:737;-1:-1:-1;;;;;;1328:737:88:o;2070:348::-;2154:6;2207:2;2195:9;2186:7;2182:23;2178:32;2175:52;;;2223:1;2220;2213:12;2175:52;2263:9;2250:23;-1:-1:-1;;;;;2288:6:88;2285:30;2282:50;;;2328:1;2325;2318:12;2282:50;2351:61;2404:7;2395:6;2384:9;2380:22;2351:61;:::i;2423:435::-;2476:3;2514:5;2508:12;2541:6;2536:3;2529:19;2567:4;2596:2;2591:3;2587:12;2580:19;;2633:2;2626:5;2622:14;2654:1;2664:169;2678:6;2675:1;2672:13;2664:169;;;2739:13;;2727:26;;2773:12;;;;2808:15;;;;2700:1;2693:9;2664:169;;;-1:-1:-1;2849:3:88;;2423:435;-1:-1:-1;;;;;2423:435:88:o;2863:261::-;3042:2;3031:9;3024:21;3005:4;3062:56;3114:2;3103:9;3099:18;3091:6;3062:56;:::i;3129:530::-;3171:5;3224:3;3217:4;3209:6;3205:17;3201:27;3191:55;;3242:1;3239;3232:12;3191:55;3278:6;3265:20;-1:-1:-1;;;;;3300:2:88;3297:26;3294:52;;;3326:18;;:::i;:::-;3370:55;3413:2;3394:13;;-1:-1:-1;;3390:27:88;3419:4;3386:38;3370:55;:::i;:::-;3450:2;3441:7;3434:19;3496:3;3489:4;3484:2;3476:6;3472:15;3468:26;3465:35;3462:55;;;3513:1;3510;3503:12;3462:55;3578:2;3571:4;3563:6;3559:17;3552:4;3543:7;3539:18;3526:55;3626:1;3601:16;;;3619:4;3597:27;3590:38;;;;3605:7;3129:530;-1:-1:-1;;;3129:530:88:o;3664:388::-;3741:6;3749;3802:2;3790:9;3781:7;3777:23;3773:32;3770:52;;;3818:1;3815;3808:12;3770:52;3854:9;3841:23;3831:33;;3915:2;3904:9;3900:18;3887:32;-1:-1:-1;;;;;3934:6:88;3931:30;3928:50;;;3974:1;3971;3964:12;3928:50;3997:49;4038:7;4029:6;4018:9;4014:22;3997:49;:::i;:::-;3987:59;;;3664:388;;;;;:::o;4264:662::-;4318:5;4371:3;4364:4;4356:6;4352:17;4348:27;4338:55;;4389:1;4386;4379:12;4338:55;4425:6;4412:20;4451:4;4475:60;4491:43;4531:2;4491:43;:::i;4475:60::-;4569:15;;;4655:1;4651:10;;;;4639:23;;4635:32;;;4600:12;;;;4679:15;;;4676:35;;;4707:1;4704;4697:12;4676:35;4743:2;4735:6;4731:15;4755:142;4771:6;4766:3;4763:15;4755:142;;;4837:17;;4825:30;;4875:12;;;;4788;;4755:142;;4931:929;5076:6;5084;5092;5100;5153:3;5141:9;5132:7;5128:23;5124:33;5121:53;;;5170:1;5167;5160:12;5121:53;5209:9;5196:23;5228:31;5253:5;5228:31;:::i;:::-;5278:5;-1:-1:-1;5334:2:88;5319:18;;5306:32;-1:-1:-1;;;;;5387:14:88;;;5384:34;;;5414:1;5411;5404:12;5384:34;5437:61;5490:7;5481:6;5470:9;5466:22;5437:61;:::i;:::-;5427:71;;5551:2;5540:9;5536:18;5523:32;5507:48;;5580:2;5570:8;5567:16;5564:36;;;5596:1;5593;5586:12;5564:36;5619:63;5674:7;5663:8;5652:9;5648:24;5619:63;:::i;:::-;5609:73;;5735:2;5724:9;5720:18;5707:32;5691:48;;5764:2;5754:8;5751:16;5748:36;;;5780:1;5777;5770:12;5748:36;;5803:51;5846:7;5835:8;5824:9;5820:24;5803:51;:::i;:::-;5793:61;;;4931:929;;;;;;;:::o;5865:865::-;5952:6;5960;5968;5976;6029:2;6017:9;6008:7;6004:23;6000:32;5997:52;;;6045:1;6042;6035:12;5997:52;6084:9;6071:23;6103:31;6128:5;6103:31;:::i;:::-;6153:5;-1:-1:-1;6210:2:88;6195:18;;6182:32;6223;6182;6223;:::i;:::-;6274:7;-1:-1:-1;6332:2:88;6317:18;;6304:32;-1:-1:-1;;;;;6385:14:88;;;6382:34;;;6412:1;6409;6402:12;6382:34;6450:6;6439:9;6435:22;6425:32;;6495:7;6488:4;6484:2;6480:13;6476:27;6466:55;;6517:1;6514;6507:12;6466:55;6557:2;6544:16;6583:2;6575:6;6572:14;6569:34;;;6599:1;6596;6589:12;6569:34;6644:7;6639:2;6630:6;6626:2;6622:15;6618:24;6615:37;6612:57;;;6665:1;6662;6655:12;6612:57;5865:865;;;;-1:-1:-1;;6696:2:88;6688:11;;-1:-1:-1;;;5865:865:88:o;6735:258::-;6807:1;6817:113;6831:6;6828:1;6825:13;6817:113;;;6907:11;;;6901:18;6888:11;;;6881:39;6853:2;6846:10;6817:113;;;6948:6;6945:1;6942:13;6939:48;;;-1:-1:-1;;6983:1:88;6965:16;;6958:27;6735:258::o;6998:257::-;7039:3;7077:5;7071:12;7104:6;7099:3;7092:19;7120:63;7176:6;7169:4;7164:3;7160:14;7153:4;7146:5;7142:16;7120:63;:::i;:::-;7237:2;7216:15;-1:-1:-1;;7212:29:88;7203:39;;;;7244:4;7199:50;;6998:257;-1:-1:-1;;6998:257:88:o;7260:217::-;7407:2;7396:9;7389:21;7370:4;7427:44;7467:2;7456:9;7452:18;7444:6;7427:44;:::i;7482:247::-;7541:6;7594:2;7582:9;7573:7;7569:23;7565:32;7562:52;;;7610:1;7607;7600:12;7562:52;7649:9;7636:23;7668:31;7693:5;7668:31;:::i;7916:793::-;8052:6;8060;8068;8121:2;8109:9;8100:7;8096:23;8092:32;8089:52;;;8137:1;8134;8127:12;8089:52;8177:9;8164:23;-1:-1:-1;;;;;8247:2:88;8239:6;8236:14;8233:34;;;8263:1;8260;8253:12;8233:34;8286:61;8339:7;8330:6;8319:9;8315:22;8286:61;:::i;:::-;8276:71;;8400:2;8389:9;8385:18;8372:32;8356:48;;8429:2;8419:8;8416:16;8413:36;;;8445:1;8442;8435:12;8413:36;8468:63;8523:7;8512:8;8501:9;8497:24;8468:63;:::i;:::-;8458:73;;8584:2;8573:9;8569:18;8556:32;8540:48;;8613:2;8603:8;8600:16;8597:36;;;8629:1;8626;8619:12;8597:36;;8652:51;8695:7;8684:8;8673:9;8669:24;8652:51;:::i;:::-;8642:61;;;7916:793;;;;;:::o;8714:461::-;8767:3;8805:5;8799:12;8832:6;8827:3;8820:19;8858:4;8887:2;8882:3;8878:12;8871:19;;8924:2;8917:5;8913:14;8945:1;8955:195;8969:6;8966:1;8963:13;8955:195;;;9034:13;;-1:-1:-1;;;;;9030:39:88;9018:52;;9090:12;;;;9125:15;;;;9066:1;8984:9;8955:195;;9180:261;9359:2;9348:9;9341:21;9322:4;9379:56;9431:2;9420:9;9416:18;9408:6;9379:56;:::i;9446:416::-;9539:6;9547;9600:2;9588:9;9579:7;9575:23;9571:32;9568:52;;;9616:1;9613;9606:12;9568:52;9652:9;9639:23;9629:33;;9713:2;9702:9;9698:18;9685:32;-1:-1:-1;;;;;9732:6:88;9729:30;9726:50;;;9772:1;9769;9762:12;9726:50;9795:61;9848:7;9839:6;9828:9;9824:22;9795:61;:::i;9867:465::-;10124:2;10113:9;10106:21;10087:4;10150:56;10202:2;10191:9;10187:18;10179:6;10150:56;:::i;:::-;10254:9;10246:6;10242:22;10237:2;10226:9;10222:18;10215:50;10282:44;10319:6;10311;10282:44;:::i;:::-;10274:52;9867:465;-1:-1:-1;;;;;9867:465:88:o;10795:781::-;10898:6;10951:2;10939:9;10930:7;10926:23;10922:32;10919:52;;;10967:1;10964;10957:12;10919:52;11000:2;10994:9;11042:2;11034:6;11030:15;11111:6;11099:10;11096:22;-1:-1:-1;;;;;11063:10:88;11060:34;11057:62;11054:88;;;11122:18;;:::i;:::-;11158:2;11151:22;11195:16;;11220:31;11195:16;11220:31;:::i;:::-;11260:21;;11326:2;11311:18;;11305:25;11339:33;11305:25;11339:33;:::i;:::-;11400:2;11388:15;;11381:32;11458:2;11443:18;;11437:25;11471:33;11437:25;11471:33;:::i;:::-;11532:2;11520:15;;11513:32;11524:6;10795:781;-1:-1:-1;;;10795:781:88:o;11581:251::-;11651:6;11704:2;11692:9;11683:7;11679:23;11675:32;11672:52;;;11720:1;11717;11710:12;11672:52;11752:9;11746:16;11771:31;11796:5;11771:31;:::i;12027:127::-;12088:10;12083:3;12079:20;12076:1;12069:31;12119:4;12116:1;12109:15;12143:4;12140:1;12133:15;12445:277;12512:6;12565:2;12553:9;12544:7;12540:23;12536:32;12533:52;;;12581:1;12578;12571:12;12533:52;12613:9;12607:16;12666:5;12659:13;12652:21;12645:5;12642:32;12632:60;;12688:1;12685;12678:12;12935:184;13005:6;13058:2;13046:9;13037:7;13033:23;13029:32;13026:52;;;13074:1;13071;13064:12;13026:52;-1:-1:-1;13097:16:88;;12935:184;-1:-1:-1;12935:184:88:o;13124:127::-;13185:10;13180:3;13176:20;13173:1;13166:31;13216:4;13213:1;13206:15;13240:4;13237:1;13230:15;13256:135;13295:3;-1:-1:-1;;13316:17:88;;13313:43;;;13336:18;;:::i;:::-;-1:-1:-1;13383:1:88;13372:13;;13256:135::o;13396:562::-;-1:-1:-1;;;;;13681:32:88;;13663:51;;13750:2;13745;13730:18;;13723:30;;;-1:-1:-1;;13776:56:88;;13813:18;;13805:6;13776:56;:::i;:::-;13880:9;13872:6;13868:22;13863:2;13852:9;13848:18;13841:50;13908:44;13945:6;13937;13908:44;:::i;:::-;13900:52;13396:562;-1:-1:-1;;;;;;13396:562:88:o;13963:288::-;14138:6;14127:9;14120:25;14181:2;14176;14165:9;14161:18;14154:30;14101:4;14201:44;14241:2;14230:9;14226:18;14218:6;14201:44;:::i;14256:249::-;14325:6;14378:2;14366:9;14357:7;14353:23;14349:32;14346:52;;;14394:1;14391;14384:12;14346:52;14426:9;14420:16;14445:30;14469:5;14445:30;:::i;14510:358::-;-1:-1:-1;;;;;14717:32:88;;14699:51;;14786:2;14781;14766:18;;14759:30;;;-1:-1:-1;;14806:56:88;;14843:18;;14835:6;14806:56;:::i;14873:125::-;14913:4;14941:1;14938;14935:8;14932:34;;;14946:18;;:::i;:::-;-1:-1:-1;14983:9:88;;14873:125::o;15003:759::-;-1:-1:-1;;;;;15308:15:88;;;15290:34;;15360:15;;15355:2;15340:18;;15333:43;15407:2;15392:18;;15385:34;;;-1:-1:-1;;;;;;15455:33:88;;15450:2;15435:18;;15428:61;15270:3;15520;15505:19;;15498:32;;;15546:19;;15539:35;;;15233:4;15567:6;15617;15611:3;15596:19;;15583:49;15682:1;15676:3;15667:6;15656:9;15652:22;15648:32;15641:43;15752:3;15745:2;15741:7;15736:2;15728:6;15724:15;15720:29;15709:9;15705:45;15701:55;15693:63;;15003:759;;;;;;;;;:::o;15767:368::-;-1:-1:-1;;;;;;15962:33:88;;15950:46;;16039:6;16031;16027:1;16018:11;;16005:41;15932:3;16069:16;;16087:1;16065:24;16098:13;;;16065:24;15767:368;-1:-1:-1;;15767:368:88:o;16140:274::-;16269:3;16307:6;16301:13;16323:53;16369:6;16364:3;16357:4;16349:6;16345:17;16323:53;:::i;:::-;16392:16;;;;;16140:274;-1:-1:-1;;16140:274:88:o;17461:625::-;17764:2;17753:9;17746:21;17727:4;17790:56;17842:2;17831:9;17827:18;17819:6;17790:56;:::i;:::-;17894:9;17886:6;17882:22;17877:2;17866:9;17862:18;17855:50;17928:44;17965:6;17957;17928:44;:::i;:::-;17914:58;;18020:9;18012:6;18008:22;18003:2;17992:9;17988:18;17981:50;18048:32;18073:6;18065;18048:32;:::i;18091:881::-;18186:6;18217:2;18260;18248:9;18239:7;18235:23;18231:32;18228:52;;;18276:1;18273;18266:12;18228:52;18309:9;18303:16;-1:-1:-1;;;;;18334:6:88;18331:30;18328:50;;;18374:1;18371;18364:12;18328:50;18397:22;;18450:4;18442:13;;18438:27;-1:-1:-1;18428:55:88;;18479:1;18476;18469:12;18428:55;18508:2;18502:9;18531:60;18547:43;18587:2;18547:43;:::i;18531:60::-;18625:15;;;18707:1;18703:10;;;;18695:19;;18691:28;;;18656:12;;;;18731:19;;;18728:39;;;18763:1;18760;18753:12;18728:39;18787:11;;;;18807:135;18823:6;18818:3;18815:15;18807:135;;;18889:10;;18877:23;;18840:12;;;;18920;;;;18807:135;;19688:128;19728:3;19759:1;19755:6;19752:1;19749:13;19746:39;;;19765:18;;:::i;:::-;-1:-1:-1;19801:9:88;;19688:128::o;19821:273::-;19889:6;19942:2;19930:9;19921:7;19917:23;19913:32;19910:52;;;19958:1;19955;19948:12;19910:52;19990:9;19984:16;20040:4;20033:5;20029:16;20022:5;20019:27;20009:55;;20060:1;20057;20050:12;20099:262;20137:1;20171:4;20168:1;20164:12;20195:3;20185:134;;20241:10;20236:3;20232:20;20229:1;20222:31;20276:4;20273:1;20266:15;20304:4;20301:1;20294:15;20185:134;20351:3;20344:4;20341:1;20337:12;20333:22;20328:27;;;20099:262;;;;:::o;20366:422::-;20455:1;20498:5;20455:1;20512:270;20533:7;20523:8;20520:21;20512:270;;;20592:4;20588:1;20584:6;20580:17;20574:4;20571:27;20568:53;;;20601:18;;:::i;:::-;20651:7;20641:8;20637:22;20634:55;;;20671:16;;;;20634:55;20750:22;;;;20710:15;;;;20512:270;;;20516:3;20366:422;;;;;:::o;20793:806::-;20842:5;20872:8;20862:80;;-1:-1:-1;20913:1:88;20927:5;;20862:80;20961:4;20951:76;;-1:-1:-1;20998:1:88;21012:5;;20951:76;21043:4;21061:1;21056:59;;;;21129:1;21124:130;;;;21036:218;;21056:59;21086:1;21077:10;;21100:5;;;21124:130;21161:3;21151:8;21148:17;21145:43;;;21168:18;;:::i;:::-;-1:-1:-1;;21224:1:88;21210:16;;21239:5;;21036:218;;21338:2;21328:8;21325:16;21319:3;21313:4;21310:13;21306:36;21300:2;21290:8;21287:16;21282:2;21276:4;21273:12;21269:35;21266:77;21263:159;;;-1:-1:-1;21375:19:88;;;21407:5;;21263:159;21454:34;21479:8;21473:4;21454:34;:::i;:::-;21524:6;21520:1;21516:6;21512:19;21503:7;21500:32;21497:58;;;21535:18;;:::i;:::-;21573:20;;20793:806;-1:-1:-1;;;20793:806:88:o;21604:140::-;21662:5;21691:47;21732:4;21722:8;21718:19;21712:4;21691:47;:::i;21749:332::-;21956:2;21945:9;21938:21;21919:4;21976:56;22028:2;22017:9;22013:18;22005:6;21976:56;:::i;:::-;21968:64;;22068:6;22063:2;22052:9;22048:18;22041:34;21749:332;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "externalCall(address,bytes4,bytes)": "2e2f4cc2",
    "initialize(uint256,address[])": "a920b78c",
    "initialized()": "158ef93e",
    "isValidSignature(bytes32,bytes)": "1626ba7e",
    "isVaultToken(address)": "338c4ccb",
    "nft()": "47ccca02",
    "pull(address,address[],uint256[],bytes)": "2062d754",
    "pullExistentials()": "d2c219b0",
    "push(address[],uint256[],bytes)": "566ca6b4",
    "reclaimTokens(address[])": "05e1c942",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferAndPush(address,address[],uint256[],bytes)": "27a35e5a",
    "tvl()": "e5328e06",
    "vaultGovernance()": "fe255a5e",
    "vaultTokens()": "69722233"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nft_\",\"type\":\"uint256\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"Pull\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"Push\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"}],\"name\":\"ReclaimTokens\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"externalCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nft_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"vaultTokens_\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isVaultToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"pull\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pullExistentials\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"push\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"reclaimTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"options\",\"type\":\"bytes\"}],\"name\":\"transferAndPush\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"actualTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tvl\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"minTokenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"maxTokenAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultGovernance\",\"outputs\":[{\"internalType\":\"contract IVaultGovernance\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"externalCall(address,bytes4,bytes)\":{\"details\":\"Can only be called by Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. Since this method allows sending arbitrary transactions, the destinations of the calls are whitelisted by Protocol Governance.\",\"params\":{\"data\":\"Abi encoded parameters to `to::selector`\",\"selector\":\"Selector of the call\",\"to\":\"Address of the reward pool\"},\"returns\":{\"result\":\"Result of execution of the call\"}},\"initialize(uint256,address[])\":{\"details\":\"Can only be initialized by vault governance\",\"params\":{\"nft_\":\"NFT of the vault in the VaultRegistry\",\"vaultTokens_\":\"ERC20 tokens that will be managed by this Vault\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided hash MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls\",\"params\":{\"_hash\":\"Hash of the data to be signed\",\"_signature\":\"Signature byte array associated with _hash\"},\"returns\":{\"magicValue\":\"0x1626ba7e if valid, 0xffffffff otherwise\"}},\"isVaultToken(address)\":{\"params\":{\"token\":\"Address of the token to check\"},\"returns\":{\"_0\":\"`true` if this token is managed by Vault\"}},\"pull(address,address[],uint256[],bytes)\":{\"details\":\"Can only be called but Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. When called by vault owner this method just pulls the tokens from the protocol to the `to` address When called by strategy on vault other than zero vault it pulls the tokens to zero vault (required `to` == zero vault) When called by strategy on zero vault it pulls the tokens to zero vault, pushes tokens on the `to` vault, and reclaims everything that's left. Thus any vault other than zero vault cannot have any tokens on it Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Pull is fulfilled on the best effort basis, i.e. if the tokenAmounts overflows available funds it withdraws all the funds.\",\"params\":{\"options\":\"Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\",\"to\":\"Address to receive the tokens\",\"tokenAmounts\":\"Amounts of tokens to pull\",\"tokens\":\"Tokens to pull\"},\"returns\":{\"actualTokenAmounts\":\"The amounts actually withdrawn. It could be less than tokenAmounts (but not higher)\"}},\"push(address[],uint256[],bytes)\":{\"details\":\"Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Also notice that this operation doesn't guarantee that tokenAmounts will be invested in full.\",\"params\":{\"options\":\"Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\",\"tokenAmounts\":\"Amounts of tokens to push\",\"tokens\":\"Tokens to push\"},\"returns\":{\"actualTokenAmounts\":\"The amounts actually invested. It could be less than tokenAmounts (but not higher)\"}},\"reclaimTokens(address[])\":{\"details\":\"Cannot be called from zero vault.\",\"params\":{\"tokens\":\"Tokens to claim\"},\"returns\":{\"actualTokenAmounts\":\"Amounts reclaimed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferAndPush(address,address[],uint256[],bytes)\":{\"params\":{\"options\":\"Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions\",\"tokenAmounts\":\"Amounts of tokens to push\",\"tokens\":\"Tokens to push\"},\"returns\":{\"actualTokenAmounts\":\"The amounts actually invested. It could be less than tokenAmounts (but not higher)\"}},\"tvl()\":{\"details\":\"Generally it is the underlying token value of this contract in some other DeFi protocol. For example, for USDC Yearn Vault this would be total USDC balance that could be withdrawn for Yearn to this contract. The tvl itself is estimated in some range. Sometimes the range is exact, sometimes it's not\",\"returns\":{\"maxTokenAmounts\":\"Upper bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)\",\"minTokenAmounts\":\"Lower bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Initialized(address,address,address[],uint256)\":{\"notice\":\"Emitted when Vault is intialized\"},\"Pull(address,uint256[])\":{\"notice\":\"Emitted on successful pull\"},\"Push(uint256[])\":{\"notice\":\"Emitted on successful push\"},\"ReclaimTokens(address,address[],uint256[])\":{\"notice\":\"Emitted when tokens are reclaimed\"}},\"kind\":\"user\",\"methods\":{\"externalCall(address,bytes4,bytes)\":{\"notice\":\"Execute one of whitelisted calls.\"},\"initialize(uint256,address[])\":{\"notice\":\"Initialized a new contract.\"},\"initialized()\":{\"notice\":\"Checks if the vault is initialized\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies offchain signature.\"},\"isVaultToken(address)\":{\"notice\":\"Checks if a token is vault token\"},\"nft()\":{\"notice\":\"VaultRegistry NFT for this vault\"},\"pull(address,address[],uint256[],bytes)\":{\"notice\":\"Pulls tokens from the underlying protocol to the `to` address.\"},\"pullExistentials()\":{\"notice\":\"Existential amounts for each token\"},\"push(address[],uint256[],bytes)\":{\"notice\":\"Pushes tokens on the vault balance to the underlying protocol. For example, for Yearn this operation will take USDC from the contract balance and convert it to yUSDC.\"},\"reclaimTokens(address[])\":{\"notice\":\"Claim ERC20 tokens from vault balance to zero vault.\"},\"transferAndPush(address,address[],uint256[],bytes)\":{\"notice\":\"The same as `push` method above but transfers tokens to vault balance prior to calling push. After the `push` it returns all the leftover tokens back (`push` method doesn't guarantee that tokenAmounts will be invested in full).\"},\"tvl()\":{\"notice\":\"Total value locked for this contract.\"},\"vaultGovernance()\":{\"notice\":\"Address of the Vault Governance for this contract.\"},\"vaultTokens()\":{\"notice\":\"ERC20 tokens under Vault management.\"}},\"notice\":\"Vault that stores ERC20 tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/vaults/ERC20Vault.sol\":\"ERC20Vault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x6a5307574ef7a2421da872734ac4708d51704cad2a1a59735d1bedca9213b6f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7baf1cd3dc4875830923984f9dbdfa2f22c9969dcb7b27c7178b98617e6725a3\",\"dweb:/ipfs/QmRwMbdZhxwqhscL8oAm2H6fPSiPpJEF7DZXp9jSz8Whnh\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xcb1daab663523cdea8f1f68841308c27a13a6ad262f4e14e893dbb7eda080414\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b8b9cda74c444b67ffdf189b727d395b3eda1dc7159b496ac6ae7e726b4ed1c\",\"dweb:/ipfs/QmbL8AgGK4idVwtBSaxnpfs6ihVTQ61jEiW43WSyNNjNmb\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x086fbe904291497e1532ef340f1bd589078f49e3d4d0bbfd88f5e02fb89261eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0df1e3e965b78a0d98dda2d1d6a6acde88f515b1d3a9ad02f505e93fa7babeda\",\"dweb:/ipfs/QmW4cSbGriRAj7XRZu6zSaqspe4eyYWkF7WfJbj3rmmLbk\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a\",\"dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/interfaces/IProtocolGovernance.sol\":{\"keccak256\":\"0x04ea2514f49503cc66574a08382b57f266d23dee04046b479e0cf64c9a0db270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87d8ca060d5ee11bc12b697c580e43267c45ab0d3a690f02b1388cf244eff7d7\",\"dweb:/ipfs/QmXW4jwheCFMtCjNu4bCxvc4XLr2DJyhKLq9DkqQhNU9rp\"]},\"src/interfaces/IUnitPricesGovernance.sol\":{\"keccak256\":\"0x861ae02ad4ba132b8e03ceb19faf915dc800fed8a6f877c344ea2ebd83feb29c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c68568570ed80f1c5516bccf2554c4d228ff479b4bc5da473fff7b789b36abab\",\"dweb:/ipfs/Qmc1geu9fQwe166SY5dKLq3QGGovkCmfk36ZYd3eYp9pUM\"]},\"src/interfaces/IVaultRegistry.sol\":{\"keccak256\":\"0x6c30a6796998d981b6614e57c857c74b38565df25606756635a29388257de21c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60e248f1bf4749beb11979798ef0c7eb0f603ea49de2edcada8a503946bed962\",\"dweb:/ipfs/QmRCgnzokSjV3AKwHETNFm1yjgxgAJ9XrWueeyPBqS3EgD\"]},\"src/interfaces/external/erc/IERC1271.sol\":{\"keccak256\":\"0xfce1c38d1bd95ffde243b787ef51e91a4dcc3eecb025bd2d33b1c2ed17938f77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5e8ba7ae8d54f4d9f115dc57bc8da0e409b9e0ca4fc7f052ba60bac5b971d23\",\"dweb:/ipfs/QmVhfCQdRCwdLLepeaJmYixVpBc5q1NqSu18JsNrkv2Srn\"]},\"src/interfaces/utils/IDefaultAccessControl.sol\":{\"keccak256\":\"0xf4198613cc054350ce3ad3399fee584b363c27082f2a86645c58a2aab543862d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71a66b3f5794aa7ff48a123a2927f5d588518638c65f6308d92f28b6205ef473\",\"dweb:/ipfs/QmVpCZwQcz8CDHKJL1DSbvmjJTRex3RyQHsAhFCX85GHBj\"]},\"src/interfaces/validators/IBaseValidator.sol\":{\"keccak256\":\"0x3bad784a50972b33f7f4acde034fa498980b70b7fa4297c4ef15ab7403b2b11c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dfbca5b69c17ea45fc5b4c27fb45e9988a85b718648694204199efd7ce19137\",\"dweb:/ipfs/QmWLjK9D72oqCYs3EsD8RHGN45rSUKyVGyJoA2UsVqasKo\"]},\"src/interfaces/validators/IValidator.sol\":{\"keccak256\":\"0xaa1f92b43b0d0e42a2e85c7ee741e0962672d816d5d0cf6895249ad633a78ba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f032a53611e8af7db3b3a5176329552f91943beed375a20453f930ca9aeb8a1c\",\"dweb:/ipfs/QmPawsoBTxCWgNdq6oiCWAg2C5CdYhPZXiTfHpQ95uiEiE\"]},\"src/interfaces/vaults/IERC20Vault.sol\":{\"keccak256\":\"0x5287e9df49b2d1b72d8a3c58b9e54becc8825068c76933d0881e26ced78d97bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac1a19b6209e3324adde2855088679d68b1005482538946aef3ae02b36c22080\",\"dweb:/ipfs/Qmf7nfoQgrH8fZphVu6recKqYrtQL2oAHRRgDHKNQFCu4q\"]},\"src/interfaces/vaults/IIntegrationVault.sol\":{\"keccak256\":\"0x7964a84ed7750acfad39e7388a030ce82a31349ef57b20c4d40d386fd8100c02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd85bfa126f71ae3e761b312d00f9e89a9cf5c2845e09da552eaf801fd9e50cd\",\"dweb:/ipfs/QmXfRUrwW2PLDixfKVmvJ6YdAUTF8MaRw19uT1164hPUKZ\"]},\"src/interfaces/vaults/IVault.sol\":{\"keccak256\":\"0x60d0972c0324d048aac990cef2830b8e4f4f76dc78f2490f1b3f448be325ec1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b54d5934557e99e65b4736d5a5f9c88d235e1f8337c0c8c84cb3143de43bf90c\",\"dweb:/ipfs/QmXUGxGiEr6RxZtzcGUYqWvfvjqeH25Y2yWmZZ4dTc25yj\"]},\"src/interfaces/vaults/IVaultGovernance.sol\":{\"keccak256\":\"0x316819e93c849dc1abe39baec0451c414e5998f51ec256c59c3fdc1ef5c22113\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be0b88b4099826d3a601f015edf91d601a8d2a7b910a84191d2d0044e4c92900\",\"dweb:/ipfs/QmNzsZ9RS9crmgxRdZMbRW2N6UvydjhAyWiVY8mL1uK6eS\"]},\"src/interfaces/vaults/IVaultRoot.sol\":{\"keccak256\":\"0x6f98973ef2b3281d35cd8f2e7c990a08b5fbedb94f68747afe47a65a69247c5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26201babaf4aa5412c3cc2a9554bf6d9e19668a2ae71c37e77bfe1d6f4a9d8c5\",\"dweb:/ipfs/QmQD9WA11iK6VaXd7m4eLx8gPrbmrb6LU5HXuphhiYm3hQ\"]},\"src/libraries/CommonLibrary.sol\":{\"keccak256\":\"0xef6a88b594b83a9be518e705b0b1fc513657fe940cec0d68749fc55e64d7eb97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f89246ccd86a67759f8b0c165511f70c0960b8b551eeda05d3a417dde158736\",\"dweb:/ipfs/QmVDw4LAYxkJ196Timn3VhMvkS5jQpVqRLVHFwxgKMeCXR\"]},\"src/libraries/ExceptionsLibrary.sol\":{\"keccak256\":\"0xf17911249ff44eab954080bf27b20232f4d87d30e609aabc70046d644e35fbb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://995a1cab2093ffa153be7751582b96522190e47114d4ecb3091a6532c56cbe76\",\"dweb:/ipfs/Qmf5g9pL5FRGseuBfxgjCqcSjoiZNtjnXv6yVynqJ9EijE\"]},\"src/libraries/PermissionIdsLibrary.sol\":{\"keccak256\":\"0xee229ac2a7af104167439ac51bd1cefc6d143c2c42b55bc1ea28dfe4b5450949\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2b3c88b9e53904701ffabbb4aeb237b3a4c8c0047030455a629d8fd946eb172\",\"dweb:/ipfs/QmNe6NnnimUZvbGNs18D2vNbDgzCxWnDYN5TUVspNSgAUS\"]},\"src/libraries/external/FullMath.sol\":{\"keccak256\":\"0x4eba21427a2a12cd7174047367a625fe9e64946ecc2dd60682d14b97c10fb169\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9071c44e2227ae027fcd8a9963d20302fb4b67df74ef785b31320ca07b8bedb1\",\"dweb:/ipfs/QmQKdxZ4Db8NENK23sCFqBSKJtYuh7YHauPpZZ5QZ9p7SH\"]},\"src/vaults/ERC20Vault.sol\":{\"keccak256\":\"0x81e94e49b3e8814c9fd7389e1f3a6fcea63c2cd1a5b2db68702dc7def40fe8f7\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://29d00329e1da5c4c3acc509fb469be701abeca4db1301016c98867f17a2ae395\",\"dweb:/ipfs/QmW18yj6vaxdQM2FRuh9DpoPZemaNhqAuggPpMjYKYeKJS\"]},\"src/vaults/IntegrationVault.sol\":{\"keccak256\":\"0x9379072fbf303dab81426c04508067012c4a8673cc65bef896055296db214d2f\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://9a484cc458a64937ad56cd0b5bfd2240b068a988a3ad7231f4df8300505349c3\",\"dweb:/ipfs/QmTkcx1XFQ82Z6vARcdfPF3XLNswNQFchZGMSRWTUJ1C91\"]},\"src/vaults/Vault.sol\":{\"keccak256\":\"0x3116e8a837ecea0abae32fe6a179d47176b474d856fd2183408b9c5995c97818\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://2b26d224299c1741251eafadf9bb6eed6e797ebf52faf1236c74a06731f63d4e\",\"dweb:/ipfs/QmVay8PkKhaWbAQ5Q1JjSg8oRWSVCyRt5fa2qNBSfBq14p\"]},\"src/vaults/VaultGovernance.sol\":{\"keccak256\":\"0xbacab712486bcd6b988fe21b3641f7d21fbb9f900a354b18a60d4413960ec3c6\",\"license\":\"BSL-1.1\",\"urls\":[\"bzz-raw://d8ba97ec9270464e39da6b0fd500193cd5001e3fdd55045887aacdd2a8972e1c\",\"dweb:/ipfs/QmWUrHFcM7oJTbnAAWX256CsXRwyqKe9WSNYNbBAKYd8fS\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "origin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address[]",
              "name": "vaultTokens_",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "nft_",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Pull",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Push",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReclaimTokens",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "externalCall",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nft_",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "vaultTokens_",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "initialized",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidSignature",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "magicValue",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isVaultToken",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nft",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pull",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pullExistentials",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "push",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reclaimTokens",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "options",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAndPush",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "actualTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "tvl",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "minTokenAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "maxTokenAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultGovernance",
          "outputs": [
            {
              "internalType": "contract IVaultGovernance",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultTokens",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "externalCall(address,bytes4,bytes)": {
            "details": "Can only be called by Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. Since this method allows sending arbitrary transactions, the destinations of the calls are whitelisted by Protocol Governance.",
            "params": {
              "data": "Abi encoded parameters to `to::selector`",
              "selector": "Selector of the call",
              "to": "Address of the reward pool"
            },
            "returns": {
              "result": "Result of execution of the call"
            }
          },
          "initialize(uint256,address[])": {
            "details": "Can only be initialized by vault governance",
            "params": {
              "nft_": "NFT of the vault in the VaultRegistry",
              "vaultTokens_": "ERC20 tokens that will be managed by this Vault"
            }
          },
          "isValidSignature(bytes32,bytes)": {
            "details": "Should return whether the signature provided is valid for the provided hash MUST return the bytes4 magic value 0x1626ba7e when function passes. MUST NOT modify state (using STATICCALL for solc < 0.5, view modifier for solc > 0.5) MUST allow external calls",
            "params": {
              "_hash": "Hash of the data to be signed",
              "_signature": "Signature byte array associated with _hash"
            },
            "returns": {
              "magicValue": "0x1626ba7e if valid, 0xffffffff otherwise"
            }
          },
          "isVaultToken(address)": {
            "params": {
              "token": "Address of the token to check"
            },
            "returns": {
              "_0": "`true` if this token is managed by Vault"
            }
          },
          "pull(address,address[],uint256[],bytes)": {
            "details": "Can only be called but Vault Owner or Strategy. Vault owner is the owner of NFT for this vault in VaultManager. Strategy is approved address for the vault NFT. When called by vault owner this method just pulls the tokens from the protocol to the `to` address When called by strategy on vault other than zero vault it pulls the tokens to zero vault (required `to` == zero vault) When called by strategy on zero vault it pulls the tokens to zero vault, pushes tokens on the `to` vault, and reclaims everything that's left. Thus any vault other than zero vault cannot have any tokens on it Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Pull is fulfilled on the best effort basis, i.e. if the tokenAmounts overflows available funds it withdraws all the funds.",
            "params": {
              "options": "Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions",
              "to": "Address to receive the tokens",
              "tokenAmounts": "Amounts of tokens to pull",
              "tokens": "Tokens to pull"
            },
            "returns": {
              "actualTokenAmounts": "The amounts actually withdrawn. It could be less than tokenAmounts (but not higher)"
            }
          },
          "push(address[],uint256[],bytes)": {
            "details": "Tokens **must** be a subset of Vault Tokens. However, the convention is that if tokenAmount == 0 it is the same as token is missing. Also notice that this operation doesn't guarantee that tokenAmounts will be invested in full.",
            "params": {
              "options": "Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions",
              "tokenAmounts": "Amounts of tokens to push",
              "tokens": "Tokens to push"
            },
            "returns": {
              "actualTokenAmounts": "The amounts actually invested. It could be less than tokenAmounts (but not higher)"
            }
          },
          "reclaimTokens(address[])": {
            "details": "Cannot be called from zero vault.",
            "params": {
              "tokens": "Tokens to claim"
            },
            "returns": {
              "actualTokenAmounts": "Amounts reclaimed"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "transferAndPush(address,address[],uint256[],bytes)": {
            "params": {
              "options": "Additional options that could be needed for some vaults. E.g. for Uniswap this could be `deadline` param. For the exact bytes structure see concrete vault descriptions",
              "tokenAmounts": "Amounts of tokens to push",
              "tokens": "Tokens to push"
            },
            "returns": {
              "actualTokenAmounts": "The amounts actually invested. It could be less than tokenAmounts (but not higher)"
            }
          },
          "tvl()": {
            "details": "Generally it is the underlying token value of this contract in some other DeFi protocol. For example, for USDC Yearn Vault this would be total USDC balance that could be withdrawn for Yearn to this contract. The tvl itself is estimated in some range. Sometimes the range is exact, sometimes it's not",
            "returns": {
              "maxTokenAmounts": "Upper bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)",
              "minTokenAmounts": "Lower bound for total available balances estimation (nth tokenAmount corresponds to nth token in vaultTokens)"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "externalCall(address,bytes4,bytes)": {
            "notice": "Execute one of whitelisted calls."
          },
          "initialize(uint256,address[])": {
            "notice": "Initialized a new contract."
          },
          "initialized()": {
            "notice": "Checks if the vault is initialized"
          },
          "isValidSignature(bytes32,bytes)": {
            "notice": "Verifies offchain signature."
          },
          "isVaultToken(address)": {
            "notice": "Checks if a token is vault token"
          },
          "nft()": {
            "notice": "VaultRegistry NFT for this vault"
          },
          "pull(address,address[],uint256[],bytes)": {
            "notice": "Pulls tokens from the underlying protocol to the `to` address."
          },
          "pullExistentials()": {
            "notice": "Existential amounts for each token"
          },
          "push(address[],uint256[],bytes)": {
            "notice": "Pushes tokens on the vault balance to the underlying protocol. For example, for Yearn this operation will take USDC from the contract balance and convert it to yUSDC."
          },
          "reclaimTokens(address[])": {
            "notice": "Claim ERC20 tokens from vault balance to zero vault."
          },
          "transferAndPush(address,address[],uint256[],bytes)": {
            "notice": "The same as `push` method above but transfers tokens to vault balance prior to calling push. After the `push` it returns all the leftover tokens back (`push` method doesn't guarantee that tokenAmounts will be invested in full)."
          },
          "tvl()": {
            "notice": "Total value locked for this contract."
          },
          "vaultGovernance()": {
            "notice": "Address of the Vault Governance for this contract."
          },
          "vaultTokens()": {
            "notice": "ERC20 tokens under Vault management."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/vaults/ERC20Vault.sol": "ERC20Vault"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Clones.sol": {
        "keccak256": "0x6a5307574ef7a2421da872734ac4708d51704cad2a1a59735d1bedca9213b6f0",
        "urls": [
          "bzz-raw://7baf1cd3dc4875830923984f9dbdfa2f22c9969dcb7b27c7178b98617e6725a3",
          "dweb:/ipfs/QmRwMbdZhxwqhscL8oAm2H6fPSiPpJEF7DZXp9jSz8Whnh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xcb1daab663523cdea8f1f68841308c27a13a6ad262f4e14e893dbb7eda080414",
        "urls": [
          "bzz-raw://5b8b9cda74c444b67ffdf189b727d395b3eda1dc7159b496ac6ae7e726b4ed1c",
          "dweb:/ipfs/QmbL8AgGK4idVwtBSaxnpfs6ihVTQ61jEiW43WSyNNjNmb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x086fbe904291497e1532ef340f1bd589078f49e3d4d0bbfd88f5e02fb89261eb",
        "urls": [
          "bzz-raw://0df1e3e965b78a0d98dda2d1d6a6acde88f515b1d3a9ad02f505e93fa7babeda",
          "dweb:/ipfs/QmW4cSbGriRAj7XRZu6zSaqspe4eyYWkF7WfJbj3rmmLbk"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x9720545d8ea1f76222f98683f861f919e9c28bd5d5503caa7e3620a21b6aaa24",
        "urls": [
          "bzz-raw://fe3dac0e0258d8396c33fd27c277699a9bfac198f2cb45632c4f5df2c2ca895a",
          "dweb:/ipfs/QmfEWsX7aGpWN9wooHiQo1XjiGM1h6iXeaeMTAJ1TUcnts"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/interfaces/IProtocolGovernance.sol": {
        "keccak256": "0x04ea2514f49503cc66574a08382b57f266d23dee04046b479e0cf64c9a0db270",
        "urls": [
          "bzz-raw://87d8ca060d5ee11bc12b697c580e43267c45ab0d3a690f02b1388cf244eff7d7",
          "dweb:/ipfs/QmXW4jwheCFMtCjNu4bCxvc4XLr2DJyhKLq9DkqQhNU9rp"
        ],
        "license": "MIT"
      },
      "src/interfaces/IUnitPricesGovernance.sol": {
        "keccak256": "0x861ae02ad4ba132b8e03ceb19faf915dc800fed8a6f877c344ea2ebd83feb29c",
        "urls": [
          "bzz-raw://c68568570ed80f1c5516bccf2554c4d228ff479b4bc5da473fff7b789b36abab",
          "dweb:/ipfs/Qmc1geu9fQwe166SY5dKLq3QGGovkCmfk36ZYd3eYp9pUM"
        ],
        "license": "MIT"
      },
      "src/interfaces/IVaultRegistry.sol": {
        "keccak256": "0x6c30a6796998d981b6614e57c857c74b38565df25606756635a29388257de21c",
        "urls": [
          "bzz-raw://60e248f1bf4749beb11979798ef0c7eb0f603ea49de2edcada8a503946bed962",
          "dweb:/ipfs/QmRCgnzokSjV3AKwHETNFm1yjgxgAJ9XrWueeyPBqS3EgD"
        ],
        "license": "MIT"
      },
      "src/interfaces/external/erc/IERC1271.sol": {
        "keccak256": "0xfce1c38d1bd95ffde243b787ef51e91a4dcc3eecb025bd2d33b1c2ed17938f77",
        "urls": [
          "bzz-raw://b5e8ba7ae8d54f4d9f115dc57bc8da0e409b9e0ca4fc7f052ba60bac5b971d23",
          "dweb:/ipfs/QmVhfCQdRCwdLLepeaJmYixVpBc5q1NqSu18JsNrkv2Srn"
        ],
        "license": "MIT"
      },
      "src/interfaces/utils/IDefaultAccessControl.sol": {
        "keccak256": "0xf4198613cc054350ce3ad3399fee584b363c27082f2a86645c58a2aab543862d",
        "urls": [
          "bzz-raw://71a66b3f5794aa7ff48a123a2927f5d588518638c65f6308d92f28b6205ef473",
          "dweb:/ipfs/QmVpCZwQcz8CDHKJL1DSbvmjJTRex3RyQHsAhFCX85GHBj"
        ],
        "license": "MIT"
      },
      "src/interfaces/validators/IBaseValidator.sol": {
        "keccak256": "0x3bad784a50972b33f7f4acde034fa498980b70b7fa4297c4ef15ab7403b2b11c",
        "urls": [
          "bzz-raw://9dfbca5b69c17ea45fc5b4c27fb45e9988a85b718648694204199efd7ce19137",
          "dweb:/ipfs/QmWLjK9D72oqCYs3EsD8RHGN45rSUKyVGyJoA2UsVqasKo"
        ],
        "license": "MIT"
      },
      "src/interfaces/validators/IValidator.sol": {
        "keccak256": "0xaa1f92b43b0d0e42a2e85c7ee741e0962672d816d5d0cf6895249ad633a78ba5",
        "urls": [
          "bzz-raw://f032a53611e8af7db3b3a5176329552f91943beed375a20453f930ca9aeb8a1c",
          "dweb:/ipfs/QmPawsoBTxCWgNdq6oiCWAg2C5CdYhPZXiTfHpQ95uiEiE"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IERC20Vault.sol": {
        "keccak256": "0x5287e9df49b2d1b72d8a3c58b9e54becc8825068c76933d0881e26ced78d97bc",
        "urls": [
          "bzz-raw://ac1a19b6209e3324adde2855088679d68b1005482538946aef3ae02b36c22080",
          "dweb:/ipfs/Qmf7nfoQgrH8fZphVu6recKqYrtQL2oAHRRgDHKNQFCu4q"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IIntegrationVault.sol": {
        "keccak256": "0x7964a84ed7750acfad39e7388a030ce82a31349ef57b20c4d40d386fd8100c02",
        "urls": [
          "bzz-raw://cd85bfa126f71ae3e761b312d00f9e89a9cf5c2845e09da552eaf801fd9e50cd",
          "dweb:/ipfs/QmXfRUrwW2PLDixfKVmvJ6YdAUTF8MaRw19uT1164hPUKZ"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVault.sol": {
        "keccak256": "0x60d0972c0324d048aac990cef2830b8e4f4f76dc78f2490f1b3f448be325ec1e",
        "urls": [
          "bzz-raw://b54d5934557e99e65b4736d5a5f9c88d235e1f8337c0c8c84cb3143de43bf90c",
          "dweb:/ipfs/QmXUGxGiEr6RxZtzcGUYqWvfvjqeH25Y2yWmZZ4dTc25yj"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultGovernance.sol": {
        "keccak256": "0x316819e93c849dc1abe39baec0451c414e5998f51ec256c59c3fdc1ef5c22113",
        "urls": [
          "bzz-raw://be0b88b4099826d3a601f015edf91d601a8d2a7b910a84191d2d0044e4c92900",
          "dweb:/ipfs/QmNzsZ9RS9crmgxRdZMbRW2N6UvydjhAyWiVY8mL1uK6eS"
        ],
        "license": "MIT"
      },
      "src/interfaces/vaults/IVaultRoot.sol": {
        "keccak256": "0x6f98973ef2b3281d35cd8f2e7c990a08b5fbedb94f68747afe47a65a69247c5f",
        "urls": [
          "bzz-raw://26201babaf4aa5412c3cc2a9554bf6d9e19668a2ae71c37e77bfe1d6f4a9d8c5",
          "dweb:/ipfs/QmQD9WA11iK6VaXd7m4eLx8gPrbmrb6LU5HXuphhiYm3hQ"
        ],
        "license": "MIT"
      },
      "src/libraries/CommonLibrary.sol": {
        "keccak256": "0xef6a88b594b83a9be518e705b0b1fc513657fe940cec0d68749fc55e64d7eb97",
        "urls": [
          "bzz-raw://1f89246ccd86a67759f8b0c165511f70c0960b8b551eeda05d3a417dde158736",
          "dweb:/ipfs/QmVDw4LAYxkJ196Timn3VhMvkS5jQpVqRLVHFwxgKMeCXR"
        ],
        "license": "MIT"
      },
      "src/libraries/ExceptionsLibrary.sol": {
        "keccak256": "0xf17911249ff44eab954080bf27b20232f4d87d30e609aabc70046d644e35fbb5",
        "urls": [
          "bzz-raw://995a1cab2093ffa153be7751582b96522190e47114d4ecb3091a6532c56cbe76",
          "dweb:/ipfs/Qmf5g9pL5FRGseuBfxgjCqcSjoiZNtjnXv6yVynqJ9EijE"
        ],
        "license": "MIT"
      },
      "src/libraries/PermissionIdsLibrary.sol": {
        "keccak256": "0xee229ac2a7af104167439ac51bd1cefc6d143c2c42b55bc1ea28dfe4b5450949",
        "urls": [
          "bzz-raw://e2b3c88b9e53904701ffabbb4aeb237b3a4c8c0047030455a629d8fd946eb172",
          "dweb:/ipfs/QmNe6NnnimUZvbGNs18D2vNbDgzCxWnDYN5TUVspNSgAUS"
        ],
        "license": "MIT"
      },
      "src/libraries/external/FullMath.sol": {
        "keccak256": "0x4eba21427a2a12cd7174047367a625fe9e64946ecc2dd60682d14b97c10fb169",
        "urls": [
          "bzz-raw://9071c44e2227ae027fcd8a9963d20302fb4b67df74ef785b31320ca07b8bedb1",
          "dweb:/ipfs/QmQKdxZ4Db8NENK23sCFqBSKJtYuh7YHauPpZZ5QZ9p7SH"
        ],
        "license": "MIT"
      },
      "src/vaults/ERC20Vault.sol": {
        "keccak256": "0x81e94e49b3e8814c9fd7389e1f3a6fcea63c2cd1a5b2db68702dc7def40fe8f7",
        "urls": [
          "bzz-raw://29d00329e1da5c4c3acc509fb469be701abeca4db1301016c98867f17a2ae395",
          "dweb:/ipfs/QmW18yj6vaxdQM2FRuh9DpoPZemaNhqAuggPpMjYKYeKJS"
        ],
        "license": "BSL-1.1"
      },
      "src/vaults/IntegrationVault.sol": {
        "keccak256": "0x9379072fbf303dab81426c04508067012c4a8673cc65bef896055296db214d2f",
        "urls": [
          "bzz-raw://9a484cc458a64937ad56cd0b5bfd2240b068a988a3ad7231f4df8300505349c3",
          "dweb:/ipfs/QmTkcx1XFQ82Z6vARcdfPF3XLNswNQFchZGMSRWTUJ1C91"
        ],
        "license": "BSL-1.1"
      },
      "src/vaults/Vault.sol": {
        "keccak256": "0x3116e8a837ecea0abae32fe6a179d47176b474d856fd2183408b9c5995c97818",
        "urls": [
          "bzz-raw://2b26d224299c1741251eafadf9bb6eed6e797ebf52faf1236c74a06731f63d4e",
          "dweb:/ipfs/QmVay8PkKhaWbAQ5Q1JjSg8oRWSVCyRt5fa2qNBSfBq14p"
        ],
        "license": "BSL-1.1"
      },
      "src/vaults/VaultGovernance.sol": {
        "keccak256": "0xbacab712486bcd6b988fe21b3641f7d21fbb9f900a354b18a60d4413960ec3c6",
        "urls": [
          "bzz-raw://d8ba97ec9270464e39da6b0fd500193cd5001e3fdd55045887aacdd2a8972e1c",
          "dweb:/ipfs/QmWUrHFcM7oJTbnAAWX256CsXRwyqKe9WSNYNbBAKYd8fS"
        ],
        "license": "BSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/vaults/ERC20Vault.sol",
    "id": 16063,
    "exportedSymbols": {
      "Address": [
        8157
      ],
      "Clones": [
        6314
      ],
      "CommonLibrary": [
        14015
      ],
      "ERC165": [
        8433
      ],
      "ERC20Vault": [
        16062
      ],
      "ExceptionsLibrary": [
        14085
      ],
      "FullMath": [
        14291
      ],
      "IAccessControl": [
        6209
      ],
      "IAccessControlEnumerable": [
        6234
      ],
      "IBaseValidator": [
        12593
      ],
      "IDefaultAccessControl": [
        12525
      ],
      "IERC1271": [
        12461
      ],
      "IERC165": [
        8445
      ],
      "IERC20": [
        22974
      ],
      "IERC20Metadata": [
        6393
      ],
      "IERC20Permit": [
        6429
      ],
      "IERC20Vault": [
        12945
      ],
      "IERC721": [
        7782
      ],
      "IIntegrationVault": [
        13296
      ],
      "IProtocolGovernance": [
        12304
      ],
      "IUnitPricesGovernance": [
        12357
      ],
      "IValidator": [
        12615
      ],
      "IVault": [
        13353
      ],
      "IVaultGovernance": [
        13422
      ],
      "IVaultRegistry": [
        12448
      ],
      "IVaultRoot": [
        13456
      ],
      "IntegrationVault": [
        21391
      ],
      "PermissionIdsLibrary": [
        14110
      ],
      "ReentrancyGuard": [
        6368
      ],
      "SafeERC20": [
        6710
      ],
      "Vault": [
        21712
      ],
      "VaultGovernance": [
        22534
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:3871:79",
    "nodes": [
      {
        "id": 15694,
        "nodeType": "PragmaDirective",
        "src": "36:23:79",
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 15695,
        "nodeType": "ImportDirective",
        "src": "61:56:79",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16063,
        "sourceUnit": 22975,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15696,
        "nodeType": "ImportDirective",
        "src": "118:65:79",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16063,
        "sourceUnit": 6711,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15697,
        "nodeType": "ImportDirective",
        "src": "185:47:79",
        "absolutePath": "src/interfaces/IProtocolGovernance.sol",
        "file": "../interfaces/IProtocolGovernance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16063,
        "sourceUnit": 12305,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15698,
        "nodeType": "ImportDirective",
        "src": "233:46:79",
        "absolutePath": "src/interfaces/vaults/IERC20Vault.sol",
        "file": "../interfaces/vaults/IERC20Vault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16063,
        "sourceUnit": 12946,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15699,
        "nodeType": "ImportDirective",
        "src": "280:44:79",
        "absolutePath": "src/libraries/ExceptionsLibrary.sol",
        "file": "../libraries/ExceptionsLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16063,
        "sourceUnit": 14086,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 15700,
        "nodeType": "ImportDirective",
        "src": "325:32:79",
        "absolutePath": "src/vaults/IntegrationVault.sol",
        "file": "./IntegrationVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 16063,
        "sourceUnit": 21392,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 16062,
        "nodeType": "ContractDefinition",
        "src": "403:3503:79",
        "nodes": [
          {
            "id": 15709,
            "nodeType": "UsingForDirective",
            "src": "462:27:79",
            "libraryName": {
              "id": 15706,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6710,
              "src": "468:9:79"
            },
            "typeName": {
              "id": 15708,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15707,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 22974,
                "src": "482:6:79"
              },
              "referencedDeclaration": 22974,
              "src": "482:6:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$22974",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 15772,
            "nodeType": "FunctionDefinition",
            "src": "587:416:79",
            "body": {
              "id": 15771,
              "nodeType": "Block",
              "src": "691:312:79",
              "statements": [
                {
                  "assignments": [
                    15723
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15723,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "718:6:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 15771,
                      "src": "701:23:79",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 15721,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "701:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 15722,
                        "nodeType": "ArrayTypeName",
                        "src": "701:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15725,
                  "initialValue": {
                    "id": 15724,
                    "name": "_vaultTokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21415,
                    "src": "727:12:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "701:38:79"
                },
                {
                  "assignments": [
                    15727
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15727,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "757:3:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 15771,
                      "src": "749:11:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15726,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "749:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15730,
                  "initialValue": {
                    "expression": {
                      "id": 15728,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15723,
                      "src": "763:6:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 15729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "763:13:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "749:27:79"
                },
                {
                  "expression": {
                    "id": 15737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15731,
                      "name": "minTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15714,
                      "src": "786:15:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 15735,
                          "name": "len",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15727,
                          "src": "818:3:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 15734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "804:13:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 15732,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "808:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 15733,
                          "nodeType": "ArrayTypeName",
                          "src": "808:9:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 15736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "804:18:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "786:36:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 15738,
                  "nodeType": "ExpressionStatement",
                  "src": "786:36:79"
                },
                {
                  "body": {
                    "id": 15765,
                    "nodeType": "Block",
                    "src": "866:88:79",
                    "statements": [
                      {
                        "expression": {
                          "id": 15763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 15749,
                              "name": "minTokenAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15714,
                              "src": "880:15:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 15751,
                            "indexExpression": {
                              "id": 15750,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15740,
                              "src": "896:1:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "880:18:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 15760,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "937:4:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Vault_$16062",
                                      "typeString": "contract ERC20Vault"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ERC20Vault_$16062",
                                      "typeString": "contract ERC20Vault"
                                    }
                                  ],
                                  "id": 15759,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "929:7:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 15758,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "929:7:79",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 15761,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "929:13:79",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 15753,
                                      "name": "tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 15723,
                                      "src": "908:6:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 15755,
                                    "indexExpression": {
                                      "id": 15754,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 15740,
                                      "src": "915:1:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "908:9:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 15752,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22974,
                                  "src": "901:6:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$22974_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 15756,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "901:17:79",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$22974",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 15757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 22931,
                              "src": "901:27:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 15762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "901:42:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "880:63:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15764,
                        "nodeType": "ExpressionStatement",
                        "src": "880:63:79"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15743,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15740,
                      "src": "852:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 15744,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15727,
                      "src": "856:3:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "852:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15766,
                  "initializationExpression": {
                    "assignments": [
                      15740
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 15740,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "845:1:79",
                        "nodeType": "VariableDeclaration",
                        "scope": 15766,
                        "src": "837:9:79",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 15739,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "837:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 15742,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 15741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "849:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "837:13:79"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 15747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "861:3:79",
                      "subExpression": {
                        "id": 15746,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15740,
                        "src": "863:1:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15748,
                    "nodeType": "ExpressionStatement",
                    "src": "861:3:79"
                  },
                  "nodeType": "ForStatement",
                  "src": "832:122:79"
                },
                {
                  "expression": {
                    "id": 15769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15767,
                      "name": "maxTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15717,
                      "src": "963:15:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15768,
                      "name": "minTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15714,
                      "src": "981:15:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "963:33:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 15770,
                  "nodeType": "ExpressionStatement",
                  "src": "963:33:79"
                }
              ]
            },
            "baseFunctions": [
              13345
            ],
            "documentation": {
              "id": 15710,
              "nodeType": "StructuredDocumentation",
              "src": "560:22:79",
              "text": "@inheritdoc IVault"
            },
            "functionSelector": "e5328e06",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tvl",
            "nameLocation": "596:3:79",
            "parameters": {
              "id": 15711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:2:79"
            },
            "returnParameters": {
              "id": 15718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15714,
                  "mutability": "mutable",
                  "name": "minTokenAmounts",
                  "nameLocation": "640:15:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 15772,
                  "src": "623:32:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15712,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "623:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15713,
                    "nodeType": "ArrayTypeName",
                    "src": "623:9:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15717,
                  "mutability": "mutable",
                  "name": "maxTokenAmounts",
                  "nameLocation": "674:15:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 15772,
                  "src": "657:32:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15715,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "657:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15716,
                    "nodeType": "ArrayTypeName",
                    "src": "657:9:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "622:68:79"
            },
            "scope": 16062,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 15787,
            "nodeType": "FunctionDefinition",
            "src": "1109:122:79",
            "body": {
              "id": 15786,
              "nodeType": "Block",
              "src": "1183:48:79",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15782,
                        "name": "vaultTokens_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15778,
                        "src": "1205:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 15783,
                        "name": "nft_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15775,
                        "src": "1219:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15781,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21699,
                      "src": "1193:11:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address[] memory,uint256)"
                      }
                    },
                    "id": 15784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1193:31:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15785,
                  "nodeType": "ExpressionStatement",
                  "src": "1193:31:79"
                }
              ]
            },
            "baseFunctions": [
              12944
            ],
            "documentation": {
              "id": 15773,
              "nodeType": "StructuredDocumentation",
              "src": "1077:27:79",
              "text": "@inheritdoc IERC20Vault"
            },
            "functionSelector": "a920b78c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1118:10:79",
            "parameters": {
              "id": 15779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15775,
                  "mutability": "mutable",
                  "name": "nft_",
                  "nameLocation": "1137:4:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 15787,
                  "src": "1129:12:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15778,
                  "mutability": "mutable",
                  "name": "vaultTokens_",
                  "nameLocation": "1160:12:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 15787,
                  "src": "1143:29:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15776,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1143:7:79",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 15777,
                    "nodeType": "ArrayTypeName",
                    "src": "1143:9:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1128:45:79"
            },
            "returnParameters": {
              "id": 15780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1183:0:79"
            },
            "scope": 16062,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 15824,
            "nodeType": "FunctionDefinition",
            "src": "1305:295:79",
            "body": {
              "id": 15823,
              "nodeType": "Block",
              "src": "1387:213:79",
              "statements": [
                {
                  "assignments": [
                    15796
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15796,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "1405:3:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 15823,
                      "src": "1397:11:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15795,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1397:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15799,
                  "initialValue": {
                    "expression": {
                      "id": 15797,
                      "name": "_vaultTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21415,
                      "src": "1411:12:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 15798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1411:19:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1397:33:79"
                },
                {
                  "body": {
                    "id": 15819,
                    "nodeType": "Block",
                    "src": "1474:98:79",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 15814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 15810,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15789,
                            "src": "1492:5:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 15811,
                              "name": "_vaultTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21415,
                              "src": "1501:12:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 15813,
                            "indexExpression": {
                              "id": 15812,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15801,
                              "src": "1514:1:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1501:15:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1492:24:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 15818,
                        "nodeType": "IfStatement",
                        "src": "1488:74:79",
                        "trueBody": {
                          "id": 15817,
                          "nodeType": "Block",
                          "src": "1518:44:79",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 15815,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1543:4:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 15794,
                              "id": 15816,
                              "nodeType": "Return",
                              "src": "1536:11:79"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15804,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15801,
                      "src": "1460:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 15805,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15796,
                      "src": "1464:3:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1460:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15820,
                  "initializationExpression": {
                    "assignments": [
                      15801
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 15801,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1453:1:79",
                        "nodeType": "VariableDeclaration",
                        "scope": 15820,
                        "src": "1445:9:79",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 15800,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1445:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 15803,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 15802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1457:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1445:13:79"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 15808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1469:3:79",
                      "subExpression": {
                        "id": 15807,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15801,
                        "src": "1471:1:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15809,
                    "nodeType": "ExpressionStatement",
                    "src": "1469:3:79"
                  },
                  "nodeType": "ForStatement",
                  "src": "1440:132:79"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 15821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1588:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 15794,
                  "id": 15822,
                  "nodeType": "Return",
                  "src": "1581:12:79"
                }
              ]
            },
            "baseFunctions": [
              21339
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isReclaimForbidden",
            "nameLocation": "1314:19:79",
            "overrides": {
              "id": 15791,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1363:8:79"
            },
            "parameters": {
              "id": 15790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15789,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1342:5:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 15824,
                  "src": "1334:13:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1333:15:79"
            },
            "returnParameters": {
              "id": 15794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15793,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15824,
                  "src": "1381:4:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 15792,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1381:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1380:6:79"
            },
            "scope": 16062,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 15839,
            "nodeType": "FunctionDefinition",
            "src": "1675:249:79",
            "body": {
              "id": 15838,
              "nodeType": "Block",
              "src": "1840:84:79",
              "statements": [
                {
                  "expression": {
                    "id": 15836,
                    "name": "tokenAmounts",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15827,
                    "src": "1905:12:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 15835,
                  "id": 15837,
                  "nodeType": "Return",
                  "src": "1898:19:79"
                }
              ]
            },
            "baseFunctions": [
              21351
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_push",
            "nameLocation": "1684:5:79",
            "overrides": {
              "id": 15831,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1773:8:79"
            },
            "parameters": {
              "id": 15830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15827,
                  "mutability": "mutable",
                  "name": "tokenAmounts",
                  "nameLocation": "1707:12:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 15839,
                  "src": "1690:29:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15825,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1690:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15826,
                    "nodeType": "ArrayTypeName",
                    "src": "1690:9:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15829,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15839,
                  "src": "1721:12:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15828,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1721:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1689:45:79"
            },
            "returnParameters": {
              "id": 15835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15834,
                  "mutability": "mutable",
                  "name": "actualTokenAmounts",
                  "nameLocation": "1816:18:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 15839,
                  "src": "1799:35:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15832,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1799:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15833,
                    "nodeType": "ArrayTypeName",
                    "src": "1799:9:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1798:37:79"
            },
            "scope": 16062,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 16036,
            "nodeType": "FunctionDefinition",
            "src": "1930:1711:79",
            "body": {
              "id": 16035,
              "nodeType": "Block",
              "src": "2104:1537:79",
              "statements": [
                {
                  "expression": {
                    "id": 15860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15853,
                      "name": "actualTokenAmounts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15851,
                      "src": "2114:18:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 15857,
                            "name": "tokenAmounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15844,
                            "src": "2149:12:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 15858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2149:19:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 15856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2135:13:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 15854,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2139:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 15855,
                          "nodeType": "ArrayTypeName",
                          "src": "2139:9:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 15859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2135:34:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "2114:55:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 15861,
                  "nodeType": "ExpressionStatement",
                  "src": "2114:55:79"
                },
                {
                  "assignments": [
                    15866
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15866,
                      "mutability": "mutable",
                      "name": "pushTokenAmounts",
                      "nameLocation": "2196:16:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 16035,
                      "src": "2179:33:79",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 15864,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2179:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15865,
                        "nodeType": "ArrayTypeName",
                        "src": "2179:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15873,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 15870,
                          "name": "tokenAmounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15844,
                          "src": "2229:12:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 15871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2229:19:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2215:13:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 15867,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2219:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15868,
                        "nodeType": "ArrayTypeName",
                        "src": "2219:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 15872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2215:34:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2179:70:79"
                },
                {
                  "assignments": [
                    15878
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15878,
                      "mutability": "mutable",
                      "name": "tokens",
                      "nameLocation": "2276:6:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 16035,
                      "src": "2259:23:79",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 15876,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2259:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 15877,
                        "nodeType": "ArrayTypeName",
                        "src": "2259:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15880,
                  "initialValue": {
                    "id": 15879,
                    "name": "_vaultTokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21415,
                    "src": "2285:12:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2259:38:79"
                },
                {
                  "assignments": [
                    15883
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15883,
                      "mutability": "mutable",
                      "name": "registry",
                      "nameLocation": "2322:8:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 16035,
                      "src": "2307:23:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaultRegistry_$12448",
                        "typeString": "contract IVaultRegistry"
                      },
                      "typeName": {
                        "id": 15882,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 15881,
                          "name": "IVaultRegistry",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12448,
                          "src": "2307:14:79"
                        },
                        "referencedDeclaration": 12448,
                        "src": "2307:14:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaultRegistry_$12448",
                          "typeString": "contract IVaultRegistry"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15888,
                  "initialValue": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 15884,
                          "name": "_vaultGovernance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21412,
                          "src": "2333:16:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVaultGovernance_$13422",
                            "typeString": "contract IVaultGovernance"
                          }
                        },
                        "id": 15885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "internalParams",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13403,
                        "src": "2333:31:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_InternalParams_$13368_memory_ptr_$",
                          "typeString": "function () view external returns (struct IVaultGovernance.InternalParams memory)"
                        }
                      },
                      "id": 15886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2333:33:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_InternalParams_$13368_memory_ptr",
                        "typeString": "struct IVaultGovernance.InternalParams memory"
                      }
                    },
                    "id": 15887,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "registry",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13364,
                    "src": "2333:42:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVaultRegistry_$12448",
                      "typeString": "contract IVaultRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2307:68:79"
                },
                {
                  "assignments": [
                    15890
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15890,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2393:5:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 16035,
                      "src": "2385:13:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 15889,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2385:7:79",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15895,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15893,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21421,
                        "src": "2418:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15891,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15883,
                        "src": "2401:8:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaultRegistry_$12448",
                          "typeString": "contract IVaultRegistry"
                        }
                      },
                      "id": 15892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7715,
                      "src": "2401:16:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view external returns (address)"
                      }
                    },
                    "id": 15894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2401:22:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2385:38:79"
                },
                {
                  "body": {
                    "id": 15973,
                    "nodeType": "Block",
                    "src": "2484:523:79",
                    "statements": [
                      {
                        "assignments": [
                          15909
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 15909,
                            "mutability": "mutable",
                            "name": "vaultToken",
                            "nameLocation": "2505:10:79",
                            "nodeType": "VariableDeclaration",
                            "scope": 15973,
                            "src": "2498:17:79",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$22974",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 15908,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 15907,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 22974,
                                "src": "2498:6:79"
                              },
                              "referencedDeclaration": 22974,
                              "src": "2498:6:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$22974",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 15915,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 15911,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15878,
                                "src": "2525:6:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 15913,
                              "indexExpression": {
                                "id": 15912,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15897,
                                "src": "2532:1:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2525:9:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 15910,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22974,
                            "src": "2518:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$22974_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 15914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2518:17:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$22974",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2498:37:79"
                      },
                      {
                        "assignments": [
                          15917
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 15917,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "2557:7:79",
                            "nodeType": "VariableDeclaration",
                            "scope": 15973,
                            "src": "2549:15:79",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 15916,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2549:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 15925,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 15922,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2596:4:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20Vault_$16062",
                                    "typeString": "contract ERC20Vault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20Vault_$16062",
                                    "typeString": "contract ERC20Vault"
                                  }
                                ],
                                "id": 15921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2588:7:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 15920,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2588:7:79",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 15923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2588:13:79",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 15918,
                              "name": "vaultToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15909,
                              "src": "2567:10:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$22974",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 15919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22931,
                            "src": "2567:20:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 15924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2567:35:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2549:53:79"
                      },
                      {
                        "assignments": [
                          15927
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 15927,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "2624:6:79",
                            "nodeType": "VariableDeclaration",
                            "scope": 15973,
                            "src": "2616:14:79",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 15926,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2616:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 15938,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 15932,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 15928,
                                "name": "tokenAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15844,
                                "src": "2633:12:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 15930,
                              "indexExpression": {
                                "id": 15929,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15897,
                                "src": "2646:1:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2633:15:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 15931,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15917,
                              "src": "2651:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2633:25:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "id": 15936,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15917,
                            "src": "2679:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 15937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "2633:53:79",
                          "trueExpression": {
                            "baseExpression": {
                              "id": 15933,
                              "name": "tokenAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15844,
                              "src": "2661:12:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 15935,
                            "indexExpression": {
                              "id": 15934,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15897,
                              "src": "2674:1:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2661:15:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2616:70:79"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 15945,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15841,
                              "src": "2731:2:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 15946,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15927,
                              "src": "2735:6:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 15940,
                                    "name": "tokens",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15878,
                                    "src": "2707:6:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 15942,
                                  "indexExpression": {
                                    "id": 15941,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15897,
                                    "src": "2714:1:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2707:9:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 15939,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22974,
                                "src": "2700:6:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$22974_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 15943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2700:17:79",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$22974",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 15944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6461,
                            "src": "2700:30:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$22974_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$22974_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 15947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2700:42:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15948,
                        "nodeType": "ExpressionStatement",
                        "src": "2700:42:79"
                      },
                      {
                        "expression": {
                          "id": 15953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 15949,
                              "name": "actualTokenAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15851,
                              "src": "2756:18:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 15951,
                            "indexExpression": {
                              "id": 15950,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15897,
                              "src": "2775:1:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2756:21:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 15952,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15927,
                            "src": "2780:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2756:30:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15954,
                        "nodeType": "ExpressionStatement",
                        "src": "2756:30:79"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 15957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 15955,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15890,
                            "src": "2804:5:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 15956,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15841,
                            "src": "2813:2:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2804:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 15972,
                        "nodeType": "IfStatement",
                        "src": "2800:197:79",
                        "trueBody": {
                          "id": 15971,
                          "nodeType": "Block",
                          "src": "2817:180:79",
                          "statements": [
                            {
                              "expression": {
                                "id": 15969,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 15958,
                                    "name": "pushTokenAmounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15866,
                                    "src": "2929:16:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 15960,
                                  "indexExpression": {
                                    "id": 15959,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15897,
                                    "src": "2946:1:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2929:19:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 15967,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 15841,
                                      "src": "2979:2:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 15962,
                                            "name": "tokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 15878,
                                            "src": "2958:6:79",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 15964,
                                          "indexExpression": {
                                            "id": 15963,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 15897,
                                            "src": "2965:1:79",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2958:9:79",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 15961,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 22974,
                                        "src": "2951:6:79",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$22974_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 15965,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2951:17:79",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$22974",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 15966,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 22931,
                                    "src": "2951:27:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 15968,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2951:31:79",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2929:53:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 15970,
                              "nodeType": "ExpressionStatement",
                              "src": "2929:53:79"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15900,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15897,
                      "src": "2454:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 15901,
                        "name": "tokenAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15844,
                        "src": "2458:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 15902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2458:19:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2454:23:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15974,
                  "initializationExpression": {
                    "assignments": [
                      15897
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 15897,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2447:1:79",
                        "nodeType": "VariableDeclaration",
                        "scope": 15974,
                        "src": "2439:9:79",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 15896,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2439:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 15899,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 15898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2451:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2439:13:79"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 15905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2479:3:79",
                      "subExpression": {
                        "id": 15904,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15897,
                        "src": "2481:1:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15906,
                    "nodeType": "ExpressionStatement",
                    "src": "2479:3:79"
                  },
                  "nodeType": "ForStatement",
                  "src": "2434:573:79"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 15977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15975,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15890,
                      "src": "3020:5:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 15976,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15841,
                      "src": "3029:2:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3020:11:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16034,
                  "nodeType": "IfStatement",
                  "src": "3016:619:79",
                  "trueBody": {
                    "id": 16033,
                    "nodeType": "Block",
                    "src": "3033:602:79",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 15982,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15878,
                              "src": "3146:6:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "id": 15983,
                              "name": "pushTokenAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15866,
                              "src": "3154:16:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 15984,
                              "name": "options",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15846,
                              "src": "3172:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 15979,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15841,
                                  "src": "3137:2:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 15978,
                                "name": "IIntegrationVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13296,
                                "src": "3119:17:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IIntegrationVault_$13296_$",
                                  "typeString": "type(contract IIntegrationVault)"
                                }
                              },
                              "id": 15980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3119:21:79",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIntegrationVault_$13296",
                                "typeString": "contract IIntegrationVault"
                              }
                            },
                            "id": 15981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13239,
                            "src": "3119:26:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (address[] memory,uint256[] memory,bytes memory) external returns (uint256[] memory)"
                            }
                          },
                          "id": 15985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3119:61:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 15986,
                        "nodeType": "ExpressionStatement",
                        "src": "3119:61:79"
                      },
                      {
                        "assignments": [
                          15991
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 15991,
                            "mutability": "mutable",
                            "name": "reclaimed",
                            "nameLocation": "3273:9:79",
                            "nodeType": "VariableDeclaration",
                            "scope": 16033,
                            "src": "3256:26:79",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 15989,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3256:7:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 15990,
                              "nodeType": "ArrayTypeName",
                              "src": "3256:9:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 15998,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 15996,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15878,
                              "src": "3321:6:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 15993,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15841,
                                  "src": "3303:2:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 15992,
                                "name": "IIntegrationVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13296,
                                "src": "3285:17:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IIntegrationVault_$13296_$",
                                  "typeString": "type(contract IIntegrationVault)"
                                }
                              },
                              "id": 15994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3285:21:79",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIntegrationVault_$13296",
                                "typeString": "contract IIntegrationVault"
                              }
                            },
                            "id": 15995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reclaimTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13283,
                            "src": "3285:35:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (address[] memory) external returns (uint256[] memory)"
                            }
                          },
                          "id": 15997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3285:43:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3256:72:79"
                      },
                      {
                        "body": {
                          "id": 16031,
                          "nodeType": "Block",
                          "src": "3392:233:79",
                          "statements": [
                            {
                              "expression": {
                                "id": 16029,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 16010,
                                    "name": "actualTokenAmounts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15851,
                                    "src": "3466:18:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 16012,
                                  "indexExpression": {
                                    "id": 16011,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 16000,
                                    "src": "3485:1:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3466:21:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 16019,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 16013,
                                        "name": "actualTokenAmounts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15851,
                                        "src": "3490:18:79",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 16015,
                                      "indexExpression": {
                                        "id": 16014,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 16000,
                                        "src": "3509:1:79",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3490:21:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 16016,
                                        "name": "reclaimed",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15991,
                                        "src": "3515:9:79",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 16018,
                                      "indexExpression": {
                                        "id": 16017,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 16000,
                                        "src": "3525:1:79",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3515:12:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3490:37:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "hexValue": "30",
                                    "id": 16027,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3609:1:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "id": 16028,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "3490:120:79",
                                  "trueExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 16026,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 16020,
                                        "name": "actualTokenAmounts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15851,
                                        "src": "3550:18:79",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 16022,
                                      "indexExpression": {
                                        "id": 16021,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 16000,
                                        "src": "3569:1:79",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3550:21:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 16023,
                                        "name": "reclaimed",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15991,
                                        "src": "3574:9:79",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 16025,
                                      "indexExpression": {
                                        "id": 16024,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 16000,
                                        "src": "3584:1:79",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3574:12:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3550:36:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3466:144:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 16030,
                              "nodeType": "ExpressionStatement",
                              "src": "3466:144:79"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 16006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 16003,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16000,
                            "src": "3362:1:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 16004,
                              "name": "tokenAmounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15844,
                              "src": "3366:12:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 16005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3366:19:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3362:23:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 16032,
                        "initializationExpression": {
                          "assignments": [
                            16000
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 16000,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3355:1:79",
                              "nodeType": "VariableDeclaration",
                              "scope": 16032,
                              "src": "3347:9:79",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 15999,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3347:7:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 16002,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 16001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3359:1:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3347:13:79"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 16008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3387:3:79",
                            "subExpression": {
                              "id": 16007,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16000,
                              "src": "3387:1:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 16009,
                          "nodeType": "ExpressionStatement",
                          "src": "3387:3:79"
                        },
                        "nodeType": "ForStatement",
                        "src": "3342:283:79"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              21365
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_pull",
            "nameLocation": "1939:5:79",
            "overrides": {
              "id": 15848,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2049:8:79"
            },
            "parameters": {
              "id": 15847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15841,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1962:2:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 16036,
                  "src": "1954:10:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1954:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15844,
                  "mutability": "mutable",
                  "name": "tokenAmounts",
                  "nameLocation": "1991:12:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 16036,
                  "src": "1974:29:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15842,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1974:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15843,
                    "nodeType": "ArrayTypeName",
                    "src": "1974:9:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15846,
                  "mutability": "mutable",
                  "name": "options",
                  "nameLocation": "2026:7:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 16036,
                  "src": "2013:20:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15845,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2013:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1944:95:79"
            },
            "returnParameters": {
              "id": 15852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15851,
                  "mutability": "mutable",
                  "name": "actualTokenAmounts",
                  "nameLocation": "2084:18:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 16036,
                  "src": "2067:35:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15849,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2067:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 15850,
                    "nodeType": "ArrayTypeName",
                    "src": "2067:9:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2066:37:79"
            },
            "scope": 16062,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 16061,
            "nodeType": "FunctionDefinition",
            "src": "3684:220:79",
            "body": {
              "id": 16060,
              "nodeType": "Block",
              "src": "3794:110:79",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 16058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 16049,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16039,
                          "src": "3835:11:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 16047,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "3811:5:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC20Vault_$16062_$",
                            "typeString": "type(contract super ERC20Vault)"
                          }
                        },
                        "id": 16048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20495,
                        "src": "3811:23:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 16050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3811:36:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 16056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 16051,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16039,
                            "src": "3852:11:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 16053,
                                  "name": "IERC20Vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12945,
                                  "src": "3872:11:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20Vault_$12945_$",
                                    "typeString": "type(contract IERC20Vault)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20Vault_$12945_$",
                                    "typeString": "type(contract IERC20Vault)"
                                  }
                                ],
                                "id": 16052,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "3867:4:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 16054,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3867:17:79",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC20Vault_$12945",
                                "typeString": "type(contract IERC20Vault)"
                              }
                            },
                            "id": 16055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "3867:29:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "3852:44:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 16057,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3851:46:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3811:86:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 16046,
                  "id": 16059,
                  "nodeType": "Return",
                  "src": "3804:93:79"
                }
              ]
            },
            "baseFunctions": [
              8444,
              20495
            ],
            "documentation": {
              "id": 16037,
              "nodeType": "StructuredDocumentation",
              "src": "3647:32:79",
              "text": "@inheritdoc IntegrationVault"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3693:17:79",
            "overrides": {
              "id": 16043,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 16041,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8445,
                  "src": "3752:7:79"
                },
                {
                  "id": 16042,
                  "name": "IntegrationVault",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21391,
                  "src": "3761:16:79"
                }
              ],
              "src": "3743:35:79"
            },
            "parameters": {
              "id": 16040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16039,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3718:11:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 16061,
                  "src": "3711:18:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 16038,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3711:6:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3710:20:79"
            },
            "returnParameters": {
              "id": 16046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16045,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16061,
                  "src": "3788:4:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16044,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3788:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3787:6:79"
            },
            "scope": 16062,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15702,
              "name": "IERC20Vault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12945,
              "src": "426:11:79"
            },
            "id": 15703,
            "nodeType": "InheritanceSpecifier",
            "src": "426:11:79"
          },
          {
            "baseName": {
              "id": 15704,
              "name": "IntegrationVault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21391,
              "src": "439:16:79"
            },
            "id": 15705,
            "nodeType": "InheritanceSpecifier",
            "src": "439:16:79"
          }
        ],
        "canonicalName": "ERC20Vault",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15701,
          "nodeType": "StructuredDocumentation",
          "src": "359:44:79",
          "text": "@notice Vault that stores ERC20 tokens."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          16062,
          21391,
          21712,
          8433,
          6368,
          12945,
          13296,
          12461,
          13353,
          8445
        ],
        "name": "ERC20Vault",
        "nameLocation": "412:10:79",
        "scope": 16063,
        "usedErrors": []
      }
    ],
    "license": "BSL-1.1"
  },
  "id": 79
}