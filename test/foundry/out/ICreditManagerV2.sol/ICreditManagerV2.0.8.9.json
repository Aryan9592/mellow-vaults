{
  "abi": [
    {
      "inputs": [],
      "name": "AdaptersOrCreditFacadeOnlyException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AllowanceFailedException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CreditConfiguratorOnlyException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CreditFacadeOnlyException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "HasNoOpenedAccountException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotEnoughCollateralException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyLockException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TargetContractNotAllowedException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TokenAlreadyAddedException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TokenNotAllowedException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TooManyEnabledTokensException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TooManyTokensException",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddressOrUserAlreadyHasAccountException",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "ExecuteOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newConfigurator",
          "type": "address"
        }
      ],
      "name": "NewConfigurator",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adapter",
          "type": "address"
        }
      ],
      "name": "adapterToContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "creditAccount",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "addCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approveCreditAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "totalValue",
          "type": "uint256"
        },
        {
          "internalType": "enum ClosureAction",
          "name": "closureActionType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "borrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowedAmountWithInterest",
          "type": "uint256"
        }
      ],
      "name": "calcClosePayments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountToPool",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "remainingFunds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "profit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loss",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creditAccount",
          "type": "address"
        }
      ],
      "name": "calcCreditAccountAccruedInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "borrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowedAmountWithInterest",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowedAmountWithInterestAndFees",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "canLiquidateWhilePaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creditAccount",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "checkAndEnableToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creditAccount",
          "type": "address"
        }
      ],
      "name": "checkAndOptimizeEnabledTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "enum ClosureAction",
          "name": "closureActionType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "totalValue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "skipTokenMask",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "convertWETH",
          "type": "bool"
        }
      ],
      "name": "closeCreditAccount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "remainingFunds",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "collateralTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "liquidationThreshold",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenMask",
          "type": "uint256"
        }
      ],
      "name": "collateralTokensByMask",
      "outputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "liquidationThreshold",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralTokensCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "targetContract",
          "type": "address"
        }
      ],
      "name": "contractToAdapter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "creditAccounts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creditConfigurator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creditFacade",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creditAccount",
          "type": "address"
        }
      ],
      "name": "cumulativeDropAtFastCheckRAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creditAccount",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "disableToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creditAccount",
          "type": "address"
        }
      ],
      "name": "enabledTokensMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "targetContract",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "executeOrder",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creditAccount",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balanceInBefore",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "balanceOutBefore",
          "type": "uint256"
        }
      ],
      "name": "fastCollateralCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fees",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "feeInterest",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "feeLiquidation",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "liquidationDiscount",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "feeLiquidationExpired",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "liquidationDiscountExpired",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "forbiddenTokenMask",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creditAccount",
          "type": "address"
        }
      ],
      "name": "fullCollateralCheck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "getCreditAccountOrRevert",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "liquidationThresholds",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creditAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "increase",
          "type": "bool"
        }
      ],
      "name": "manageDebt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newBorrowedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxAllowedEnabledTokenLength",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "borrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "onBehalfOf",
          "type": "address"
        }
      ],
      "name": "openCreditAccount",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolService",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceOracle",
      "outputs": [
        {
          "internalType": "contract IPriceOracleV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "tokenMasksMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "transferAccountOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "universalAdapter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wethAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "adapterToContract(address)": "ff687543",
    "addCollateral(address,address,address,uint256)": "830aa745",
    "approveCreditAccount(address,address,address,uint256)": "46fb371d",
    "calcClosePayments(uint256,uint8,uint256,uint256)": "5063524a",
    "calcCreditAccountAccruedInterest(address)": "3192195c",
    "canLiquidateWhilePaused(address)": "38975bc4",
    "checkAndEnableToken(address,address)": "51e3f160",
    "checkAndOptimizeEnabledTokens(address)": "29df0b93",
    "closeCreditAccount(address,uint8,uint256,address,address,uint256,bool)": "2362a2d8",
    "collateralTokens(uint256)": "172c48c7",
    "collateralTokensByMask(uint256)": "e75538c7",
    "collateralTokensCount()": "458936f5",
    "contractToAdapter(address)": "fdd57645",
    "creditAccounts(address)": "055ee9b5",
    "creditConfigurator()": "f9aa028a",
    "creditFacade()": "2f7a1881",
    "cumulativeDropAtFastCheckRAY(address)": "3e8297ca",
    "disableToken(address,address)": "0d8f9cee",
    "enabledTokensMap(address)": "8991b2f1",
    "executeOrder(address,address,bytes)": "6ce4074a",
    "fastCollateralCheck(address,address,address,uint256,uint256)": "654a9eda",
    "fees()": "9af1d35a",
    "forbiddenTokenMask()": "9fd12b77",
    "fullCollateralCheck(address)": "95373018",
    "getCreditAccountOrRevert(address)": "e958b704",
    "liquidationThresholds(address)": "78327438",
    "manageDebt(address,uint256,bool)": "94cf073a",
    "maxAllowedEnabledTokenLength()": "8345f26e",
    "openCreditAccount(uint256,address)": "8fe3f93f",
    "pool()": "16f0115b",
    "poolService()": "570a7af2",
    "priceOracle()": "2630c12f",
    "tokenMasksMap(address)": "f67c5bd0",
    "transferAccountOwnership(address,address)": "e1998cf9",
    "underlying()": "6f307dc3",
    "universalAdapter()": "fe47cde7",
    "version()": "54fd4d50",
    "wethAddress()": "4f0e0ef3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AdaptersOrCreditFacadeOnlyException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AllowanceFailedException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CreditConfiguratorOnlyException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CreditFacadeOnlyException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HasNoOpenedAccountException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughCollateralException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyLockException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TargetContractNotAllowedException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyAddedException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenNotAllowedException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyEnabledTokensException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyTokensException\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressOrUserAlreadyHasAccountException\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newConfigurator\",\"type\":\"address\"}],\"name\":\"NewConfigurator\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adapter\",\"type\":\"address\"}],\"name\":\"adapterToContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creditAccount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveCreditAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"},{\"internalType\":\"enum ClosureAction\",\"name\":\"closureActionType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmountWithInterest\",\"type\":\"uint256\"}],\"name\":\"calcClosePayments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToPool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"profit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loss\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creditAccount\",\"type\":\"address\"}],\"name\":\"calcCreditAccountAccruedInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmountWithInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmountWithInterestAndFees\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"canLiquidateWhilePaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creditAccount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"checkAndEnableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creditAccount\",\"type\":\"address\"}],\"name\":\"checkAndOptimizeEnabledTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"enum ClosureAction\",\"name\":\"closureActionType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"skipTokenMask\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"convertWETH\",\"type\":\"bool\"}],\"name\":\"closeCreditAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remainingFunds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"collateralTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenMask\",\"type\":\"uint256\"}],\"name\":\"collateralTokensByMask\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralTokensCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"}],\"name\":\"contractToAdapter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"creditAccounts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creditConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creditFacade\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creditAccount\",\"type\":\"address\"}],\"name\":\"cumulativeDropAtFastCheckRAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creditAccount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"disableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creditAccount\",\"type\":\"address\"}],\"name\":\"enabledTokensMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"targetContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeOrder\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creditAccount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balanceInBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceOutBefore\",\"type\":\"uint256\"}],\"name\":\"fastCollateralCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fees\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"feeInterest\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"feeLiquidation\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationDiscount\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"feeLiquidationExpired\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationDiscountExpired\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"forbiddenTokenMask\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creditAccount\",\"type\":\"address\"}],\"name\":\"fullCollateralCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"getCreditAccountOrRevert\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"liquidationThresholds\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creditAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"increase\",\"type\":\"bool\"}],\"name\":\"manageDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newBorrowedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAllowedEnabledTokenLength\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"openCreditAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolService\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"contract IPriceOracleV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenMasksMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferAccountOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"universalAdapter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wethAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AdaptersOrCreditFacadeOnlyException()\":[{\"details\":\"Thrown if an access-restricted function is called by an address that is not      the connected Credit Facade, or an allowed adapter\"}],\"AllowanceFailedException()\":[{\"details\":\"Thrown if an attempt to approve a collateral token to a target contract failed\"}],\"CreditConfiguratorOnlyException()\":[{\"details\":\"Thrown if an access-restricted function is called by an address that is not      the connected Credit Configurator\"}],\"CreditFacadeOnlyException()\":[{\"details\":\"Thrown if an access-restricted function is called by an address that is not      the connected Credit Facade\"}],\"HasNoOpenedAccountException()\":[{\"details\":\"Thrown on attempting to perform an action for an address that owns no Credit Account\"}],\"NotEnoughCollateralException()\":[{\"details\":\"Thrown on failing a full collateral check after an operation\"}],\"ReentrancyLockException()\":[{\"details\":\"Thrown when a reentrancy into the contract is attempted\"}],\"TargetContractNotAllowedException()\":[{\"details\":\"Thrown on attempting to execute an order to an address that is not an allowed      target contract\"}],\"TokenAlreadyAddedException()\":[{\"details\":\"Thrown on attempting to add a token that is already in a collateral list\"}],\"TokenNotAllowedException()\":[{\"details\":\"Thrown on attempting to receive a token that is not a collateral token      or was forbidden\"}],\"TooManyEnabledTokensException()\":[{\"details\":\"Thrown if more than the maximal number of tokens were enabled on a Credit Account,      and there are not enough unused token to disable\"}],\"TooManyTokensException()\":[{\"details\":\"Thrown on configurator attempting to add more than 256 collateral tokens\"}],\"ZeroAddressOrUserAlreadyHasAccountException()\":[{\"details\":\"Thrown on attempting to open a Credit Account for or transfer a Credit Account      to the zero address or an address that already owns a Credit Account\"}]},\"kind\":\"dev\",\"methods\":{\"adapterToContract(address)\":{\"details\":\"Maps allowed adapters to their respective target contracts.\"},\"addCollateral(address,address,address,uint256)\":{\"details\":\"Adds collateral to borrower's credit account\",\"params\":{\"amount\":\"Amount to add\",\"creditAccount\":\"Address of the Credit Account\",\"payer\":\"Address of the account which will be charged to provide additional collateral\",\"token\":\"Collateral token to add\"}},\"approveCreditAccount(address,address,address,uint256)\":{\"details\":\"Requests the Credit Account to approve a collateral token to another contract.\",\"params\":{\"amount\":\"New allowance amount\",\"borrower\":\"Borrower's address\",\"targetContract\":\"Spender to change allowance for\",\"token\":\"Collateral token to approve\"}},\"calcClosePayments(uint256,uint8,uint256,uint256)\":{\"details\":\"Computes amounts that must be sent to various addresses before closing an account\",\"params\":{\"borrowedAmount\":\"Credit Account's debt principal\",\"borrowedAmountWithInterest\":\"Credit Account's debt principal + interest\",\"closureActionType\":\"Type of account closure        * CLOSE_ACCOUNT: The account is healthy and is closed normally        * LIQUIDATE_ACCOUNT: The account is unhealthy and is being liquidated to avoid bad debt        * LIQUIDATE_EXPIRED_ACCOUNT: The account has expired and is being liquidated (lowered liquidation premium)        * LIQUIDATE_PAUSED: The account is liquidated while the system is paused due to emergency (no liquidation premium)\",\"totalValue\":\"Credit Accounts total value in underlying\"},\"returns\":{\"amountToPool\":\"Amount of underlying to be sent to the pool\",\"loss\":\"Protocol's loss from bad debt (if any)\",\"profit\":\"Protocol's profit from fees (if any)\",\"remainingFunds\":\"Amount of underlying to be sent to the borrower (only applicable to liquidations)\"}},\"calcCreditAccountAccruedInterest(address)\":{\"details\":\"Calculates the debt accrued by a Credit Account\",\"params\":{\"creditAccount\":\"Address of the Credit Account\"},\"returns\":{\"borrowedAmount\":\"The debt principal\",\"borrowedAmountWithInterest\":\"The debt principal + accrued interest\",\"borrowedAmountWithInterestAndFees\":\"The debt principal + accrued interest and protocol fees\"}},\"canLiquidateWhilePaused(address)\":{\"details\":\"Maps addresses to their status as emergency liquidator.\"},\"checkAndEnableToken(address,address)\":{\"details\":\"Enables a token on a Credit Account, including it into account health and total value calculations\",\"params\":{\"creditAccount\":\"Address of a Credit Account to enable the token for\",\"token\":\"Address of the token to be enabled\"}},\"checkAndOptimizeEnabledTokens(address)\":{\"details\":\"Checks that the number of enabled tokens on a Credit Account      does not violate the maximal enabled token limit and tries      to disable unused tokens if it does\",\"params\":{\"creditAccount\":\"Account to check enabled tokens for\"}},\"closeCreditAccount(address,uint8,uint256,address,address,uint256,bool)\":{\"details\":\"Closes a Credit Account - covers both normal closure and liquidation - Checks whether the contract is paused, and, if so, if the payer is an emergency liquidator.   Only emergency liquidators are able to liquidate account while the CM is paused.   Emergency liquidations do not pay a liquidator premium or liquidation fees. - Calculates payments to various recipients on closure:    + Computes amountToPool, which is the amount to be sent back to the pool.      This includes the principal, interest and fees, but can't be more than      total position value    + Computes remainingFunds during liquidations - these are leftover funds      after paying the pool and the liquidator, and are sent to the borrower    + Computes protocol profit, which includes interest and liquidation fees    + Computes loss if the totalValue is less than borrow amount + interest - Checks the underlying token balance:    + if it is larger than amountToPool, then the pool is paid fully from funds on the Credit Account    + else tries to transfer the shortfall from the payer - either the borrower during closure, or liquidator during liquidation - Send assets to the \\\"to\\\" address, as long as they are not included into skipTokenMask - If convertWETH is true, the function converts WETH into ETH before sending - Returns the Credit Account back to factory\",\"params\":{\"borrower\":\"Borrower address\",\"closureActionType\":\"Whether the account is closed, liquidated or liquidated due to expiry\",\"convertWETH\":\"If true converts WETH to ETH\",\"payer\":\"Address which would be charged if credit account has not enough funds to cover amountToPool\",\"skipTokenMask\":\"Tokenmask contains 1 for tokens which needed to be skipped for sending\",\"to\":\"Address to which the leftover funds will be sent\",\"totalValue\":\"Portfolio value for liqution, 0 for ordinary closure\"}},\"collateralTokens(uint256)\":{\"details\":\"Returns the collateral token at requested index and its liquidation threshold\",\"params\":{\"id\":\"The index of token to return\"}},\"collateralTokensByMask(uint256)\":{\"details\":\"Returns the collateral token with requested mask and its liquidationThreshold\",\"params\":{\"tokenMask\":\"Token mask corresponding to the token\"}},\"collateralTokensCount()\":{\"details\":\"Total number of known collateral tokens.\"},\"contractToAdapter(address)\":{\"details\":\"Maps 3rd party contracts to their respective adapters\"},\"creditAccounts(address)\":{\"details\":\"A map from borrower addresses to Credit Account addresses\"},\"creditConfigurator()\":{\"details\":\"Address of the connected Credit Configurator\"},\"creditFacade()\":{\"details\":\"Address of the connected Credit Facade\"},\"cumulativeDropAtFastCheckRAY(address)\":{\"details\":\"Maps the Credit Account to its current percentage drop across all swaps since      the last full check, in RAY format\"},\"disableToken(address,address)\":{\"details\":\"Disables a token on a credit account\"},\"enabledTokensMap(address)\":{\"details\":\"Maps Credit Accounts to bit masks encoding their enabled token sets Only enabled tokens are counted as collateral for the Credit Account\"},\"executeOrder(address,address,bytes)\":{\"details\":\"Requests a Credit Account to make a low-level call with provided data This is the intended pathway for state-changing interactions with 3rd-party protocols\",\"params\":{\"borrower\":\"Borrower's address\",\"data\":\"Data to pass with the call\",\"targetContract\":\"Contract to be called\"}},\"fastCollateralCheck(address,address,address,uint256,uint256)\":{\"details\":\"Optimized health check for individual swap-like operations.\",\"params\":{\"balanceInBefore\":\"Balance of tokenIn before the operation\",\"balanceOutBefore\":\"Balance of tokenOut before the operation\",\"creditAccount\":\"Address of the Credit Account\",\"tokenIn\":\"Address of the token spent by the swap\",\"tokenOut\":\"Address of the token received from the swap\"}},\"fees()\":{\"details\":\"Returns the fee parameters of the Credit Manager\",\"returns\":{\"feeInterest\":\"Percentage of interest taken by the protocol as profit\",\"feeLiquidation\":\"Percentage of account value taken by the protocol as profit         during unhealthy account liquidations\",\"feeLiquidationExpired\":\"Percentage of account value taken by the protocol as profit         during expired account liquidations\",\"liquidationDiscount\":\"Multiplier that reduces the effective totalValue during unhealthy account liquidations,         allowing the liquidator to take the unaccounted for remainder as premium. Equal to (1 - liquidationPremium)\",\"liquidationDiscountExpired\":\"Multiplier that reduces the effective totalValue during expired account liquidations,         allowing the liquidator to take the unaccounted for remainder as premium. Equal to (1 - liquidationPremiumExpired)\"}},\"forbiddenTokenMask()\":{\"details\":\"Bit mask encoding a set of forbidden tokens\"},\"fullCollateralCheck(address)\":{\"details\":\"Performs a full health check on an account, summing up value of all enabled collateral tokens\",\"params\":{\"creditAccount\":\"Address of the Credit Account to check\"}},\"getCreditAccountOrRevert(address)\":{\"details\":\"Returns the address of a borrower's Credit Account, or reverts if there is none.\",\"params\":{\"borrower\":\"Borrower's address\"}},\"liquidationThresholds(address)\":{\"details\":\"Returns the liquidation threshold for the provided token\",\"params\":{\"token\":\"Token to retrieve the LT for\"}},\"manageDebt(address,uint256,bool)\":{\"details\":\"Manages debt size for borrower: - Increase debt:   + Increases debt by transferring funds from the pool to the credit account   + Updates the cumulative index to keep interest the same. Since interest     is always computed dynamically as borrowedAmount * (cumulativeIndexNew / cumulativeIndexOpen - 1),     cumulativeIndexOpen needs to be updated, as the borrow amount has changed - Decrease debt:   + Repays debt partially + all interest and fees accrued thus far   + Updates cunulativeIndex to cumulativeIndex now\",\"params\":{\"amount\":\"Amount to increase / decrease the principal by\",\"creditAccount\":\"Address of the Credit Account to change debt for\",\"increase\":\"True to increase principal, false to decrease\"},\"returns\":{\"newBorrowedAmount\":\"The new debt principal\"}},\"maxAllowedEnabledTokenLength()\":{\"details\":\"The maximal number of enabled tokens on a single Credit Account\"},\"openCreditAccount(uint256,address)\":{\"details\":\"Opens credit account and borrows funds from the pool. - Takes Credit Account from the factory; - Requests the pool to lend underlying to the Credit Account\",\"params\":{\"borrowedAmount\":\"Amount to be borrowed by the Credit Account\",\"onBehalfOf\":\"The owner of the newly opened Credit Account\"}},\"pool()\":{\"details\":\"Address of the connected pool\"},\"poolService()\":{\"details\":\"Address of the connected pool\"},\"priceOracle()\":{\"details\":\"Address of the connected Price Oracle\"},\"tokenMasksMap(address)\":{\"details\":\"Returns the mask for the provided token\",\"params\":{\"token\":\"Token to returns the mask for\"}},\"transferAccountOwnership(address,address)\":{\"details\":\"Transfers Credit Account ownership to another address\",\"params\":{\"from\":\"Address of previous owner\",\"to\":\"Address of new owner\"}},\"underlying()\":{\"details\":\"Address of the underlying asset\"},\"universalAdapter()\":{\"details\":\"Address of the universal adapter\"},\"version()\":{\"details\":\"Contract's version\"},\"wethAddress()\":{\"details\":\"Address of WETH\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"canLiquidateWhilePaused(address)\":{\"notice\":\"Emergency liquidators are trusted addresses that are able to liquidate positions while the contracts are paused, e.g. when there is a risk of bad debt while an exploit is being patched. In the interest of fairness, emergency liquidators do not receive a premium And are compensated by the Gearbox DAO separately.\"},\"disableToken(address,address)\":{\"notice\":\"Usually called by adapters to disable spent tokens during a multicall,         but can also be called separately from the Credit Facade to remove         unwanted tokens\"},\"enabledTokensMap(address)\":{\"notice\":\"An enabled token mask encodes an enabled token by setting         the bit at the position equal to token's index to 1\"},\"fastCollateralCheck(address,address,address,uint256,uint256)\":{\"notice\":\"Fast health check assumes that only two tokens (input and output)         participate in the operation and computes a % change in weighted value between         inbound and outbound collateral. The cumulative negative change across several         swaps in sequence cannot be larger than feeLiquidation (a fee that the         protocol is ready to waive if needed). Since this records a % change         between just two tokens, the corresponding % change in TWV will always be smaller,         which makes this check safe.         More details at https://dev.gearbox.fi/docs/documentation/risk/fast-collateral-check#fast-check-protection\"},\"poolService()\":{\"notice\":\"[DEPRECATED]: use pool() instead.\"}},\"notice\":\"All Credit Manager functions are access-restricted and can only be called         by the Credit Facade or allowed adapters. Users are not allowed to         interact with the Credit Manager directly\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/external/gearbox/helpers/ICreditManagerV2.sol\":\"ICreditManagerV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@solmate/=lib/solmate/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/interfaces/external/gearbox/helpers/ICreditManagerV2.sol\":{\"keccak256\":\"0x71b5f65aa68e4813f539f03889b43dc3656efbca68d0ffc551595c684bea0f9a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://9ebf2849bed5df6d5d9a2cfffb666c1d98cbeba7089285abc2d0a3d4fb7904ad\",\"dweb:/ipfs/QmboWvFHKDh4vYtJXX1pb1QqbjDfKTYDLEUp3gqDQoBJry\"]},\"src/interfaces/external/gearbox/helpers/IPriceOracle.sol\":{\"keccak256\":\"0x0d57767a0bc3f65da11555786ef19cc337e94df510929150d48444107d5de8cc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d4de7d80939d2d29e7d5558caf8f56c012b13017debcad3fa5302c4d355e41a6\",\"dweb:/ipfs/QmdxDtGi9RqRr2SAxmgcruaDRzpiNrY7boSLP93haZFySC\"]},\"src/interfaces/external/gearbox/helpers/IVersion.sol\":{\"keccak256\":\"0xddc0816823b7fbcb6debff617668663ae1c3fd36f3c4c3ca8fce150d08c7d421\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cfcfd7cc5f615c36691f04c37dcef595c03fbef11d5b2f87b81941f6266d3211\",\"dweb:/ipfs/QmVGCeFDQpZYSY4K4qkDddhMeF4DxUJbQ9vUJng2v9pUTM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.9+commit.e5eed63a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "AdaptersOrCreditFacadeOnlyException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AllowanceFailedException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CreditConfiguratorOnlyException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CreditFacadeOnlyException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "HasNoOpenedAccountException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotEnoughCollateralException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyLockException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TargetContractNotAllowedException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TokenAlreadyAddedException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TokenNotAllowedException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TooManyEnabledTokensException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TooManyTokensException"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddressOrUserAlreadyHasAccountException"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ExecuteOrder",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newConfigurator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewConfigurator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "adapter",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "adapterToContract",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "creditAccount",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addCollateral"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "targetContract",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approveCreditAccount"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "totalValue",
              "type": "uint256"
            },
            {
              "internalType": "enum ClosureAction",
              "name": "closureActionType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "borrowedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowedAmountWithInterest",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calcClosePayments",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountToPool",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "remainingFunds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "profit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loss",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creditAccount",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calcCreditAccountAccruedInterest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "borrowedAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowedAmountWithInterest",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowedAmountWithInterestAndFees",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canLiquidateWhilePaused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creditAccount",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "checkAndEnableToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creditAccount",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "checkAndOptimizeEnabledTokens"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "enum ClosureAction",
              "name": "closureActionType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalValue",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "payer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "skipTokenMask",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "convertWETH",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "closeCreditAccount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "remainingFunds",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralTokens",
          "outputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "liquidationThreshold",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenMask",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralTokensByMask",
          "outputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "liquidationThreshold",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "collateralTokensCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "targetContract",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "contractToAdapter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "creditAccounts",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creditConfigurator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "creditFacade",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creditAccount",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cumulativeDropAtFastCheckRAY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creditAccount",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creditAccount",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "enabledTokensMap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "targetContract",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeOrder",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creditAccount",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balanceInBefore",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balanceOutBefore",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "fastCollateralCheck"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fees",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "feeInterest",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "feeLiquidation",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "liquidationDiscount",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "feeLiquidationExpired",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "liquidationDiscountExpired",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "forbiddenTokenMask",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creditAccount",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "fullCollateralCheck"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCreditAccountOrRevert",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidationThresholds",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creditAccount",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "increase",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "manageDebt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "newBorrowedAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxAllowedEnabledTokenLength",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "borrowedAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "onBehalfOf",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "openCreditAccount",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolService",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "priceOracle",
          "outputs": [
            {
              "internalType": "contract IPriceOracleV2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenMasksMap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAccountOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlying",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "universalAdapter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "wethAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "adapterToContract(address)": {
            "details": "Maps allowed adapters to their respective target contracts."
          },
          "addCollateral(address,address,address,uint256)": {
            "details": "Adds collateral to borrower's credit account",
            "params": {
              "amount": "Amount to add",
              "creditAccount": "Address of the Credit Account",
              "payer": "Address of the account which will be charged to provide additional collateral",
              "token": "Collateral token to add"
            }
          },
          "approveCreditAccount(address,address,address,uint256)": {
            "details": "Requests the Credit Account to approve a collateral token to another contract.",
            "params": {
              "amount": "New allowance amount",
              "borrower": "Borrower's address",
              "targetContract": "Spender to change allowance for",
              "token": "Collateral token to approve"
            }
          },
          "calcClosePayments(uint256,uint8,uint256,uint256)": {
            "details": "Computes amounts that must be sent to various addresses before closing an account",
            "params": {
              "borrowedAmount": "Credit Account's debt principal",
              "borrowedAmountWithInterest": "Credit Account's debt principal + interest",
              "closureActionType": "Type of account closure        * CLOSE_ACCOUNT: The account is healthy and is closed normally        * LIQUIDATE_ACCOUNT: The account is unhealthy and is being liquidated to avoid bad debt        * LIQUIDATE_EXPIRED_ACCOUNT: The account has expired and is being liquidated (lowered liquidation premium)        * LIQUIDATE_PAUSED: The account is liquidated while the system is paused due to emergency (no liquidation premium)",
              "totalValue": "Credit Accounts total value in underlying"
            },
            "returns": {
              "amountToPool": "Amount of underlying to be sent to the pool",
              "loss": "Protocol's loss from bad debt (if any)",
              "profit": "Protocol's profit from fees (if any)",
              "remainingFunds": "Amount of underlying to be sent to the borrower (only applicable to liquidations)"
            }
          },
          "calcCreditAccountAccruedInterest(address)": {
            "details": "Calculates the debt accrued by a Credit Account",
            "params": {
              "creditAccount": "Address of the Credit Account"
            },
            "returns": {
              "borrowedAmount": "The debt principal",
              "borrowedAmountWithInterest": "The debt principal + accrued interest",
              "borrowedAmountWithInterestAndFees": "The debt principal + accrued interest and protocol fees"
            }
          },
          "canLiquidateWhilePaused(address)": {
            "details": "Maps addresses to their status as emergency liquidator."
          },
          "checkAndEnableToken(address,address)": {
            "details": "Enables a token on a Credit Account, including it into account health and total value calculations",
            "params": {
              "creditAccount": "Address of a Credit Account to enable the token for",
              "token": "Address of the token to be enabled"
            }
          },
          "checkAndOptimizeEnabledTokens(address)": {
            "details": "Checks that the number of enabled tokens on a Credit Account      does not violate the maximal enabled token limit and tries      to disable unused tokens if it does",
            "params": {
              "creditAccount": "Account to check enabled tokens for"
            }
          },
          "closeCreditAccount(address,uint8,uint256,address,address,uint256,bool)": {
            "details": "Closes a Credit Account - covers both normal closure and liquidation - Checks whether the contract is paused, and, if so, if the payer is an emergency liquidator.   Only emergency liquidators are able to liquidate account while the CM is paused.   Emergency liquidations do not pay a liquidator premium or liquidation fees. - Calculates payments to various recipients on closure:    + Computes amountToPool, which is the amount to be sent back to the pool.      This includes the principal, interest and fees, but can't be more than      total position value    + Computes remainingFunds during liquidations - these are leftover funds      after paying the pool and the liquidator, and are sent to the borrower    + Computes protocol profit, which includes interest and liquidation fees    + Computes loss if the totalValue is less than borrow amount + interest - Checks the underlying token balance:    + if it is larger than amountToPool, then the pool is paid fully from funds on the Credit Account    + else tries to transfer the shortfall from the payer - either the borrower during closure, or liquidator during liquidation - Send assets to the \"to\" address, as long as they are not included into skipTokenMask - If convertWETH is true, the function converts WETH into ETH before sending - Returns the Credit Account back to factory",
            "params": {
              "borrower": "Borrower address",
              "closureActionType": "Whether the account is closed, liquidated or liquidated due to expiry",
              "convertWETH": "If true converts WETH to ETH",
              "payer": "Address which would be charged if credit account has not enough funds to cover amountToPool",
              "skipTokenMask": "Tokenmask contains 1 for tokens which needed to be skipped for sending",
              "to": "Address to which the leftover funds will be sent",
              "totalValue": "Portfolio value for liqution, 0 for ordinary closure"
            }
          },
          "collateralTokens(uint256)": {
            "details": "Returns the collateral token at requested index and its liquidation threshold",
            "params": {
              "id": "The index of token to return"
            }
          },
          "collateralTokensByMask(uint256)": {
            "details": "Returns the collateral token with requested mask and its liquidationThreshold",
            "params": {
              "tokenMask": "Token mask corresponding to the token"
            }
          },
          "collateralTokensCount()": {
            "details": "Total number of known collateral tokens."
          },
          "contractToAdapter(address)": {
            "details": "Maps 3rd party contracts to their respective adapters"
          },
          "creditAccounts(address)": {
            "details": "A map from borrower addresses to Credit Account addresses"
          },
          "creditConfigurator()": {
            "details": "Address of the connected Credit Configurator"
          },
          "creditFacade()": {
            "details": "Address of the connected Credit Facade"
          },
          "cumulativeDropAtFastCheckRAY(address)": {
            "details": "Maps the Credit Account to its current percentage drop across all swaps since      the last full check, in RAY format"
          },
          "disableToken(address,address)": {
            "details": "Disables a token on a credit account"
          },
          "enabledTokensMap(address)": {
            "details": "Maps Credit Accounts to bit masks encoding their enabled token sets Only enabled tokens are counted as collateral for the Credit Account"
          },
          "executeOrder(address,address,bytes)": {
            "details": "Requests a Credit Account to make a low-level call with provided data This is the intended pathway for state-changing interactions with 3rd-party protocols",
            "params": {
              "borrower": "Borrower's address",
              "data": "Data to pass with the call",
              "targetContract": "Contract to be called"
            }
          },
          "fastCollateralCheck(address,address,address,uint256,uint256)": {
            "details": "Optimized health check for individual swap-like operations.",
            "params": {
              "balanceInBefore": "Balance of tokenIn before the operation",
              "balanceOutBefore": "Balance of tokenOut before the operation",
              "creditAccount": "Address of the Credit Account",
              "tokenIn": "Address of the token spent by the swap",
              "tokenOut": "Address of the token received from the swap"
            }
          },
          "fees()": {
            "details": "Returns the fee parameters of the Credit Manager",
            "returns": {
              "feeInterest": "Percentage of interest taken by the protocol as profit",
              "feeLiquidation": "Percentage of account value taken by the protocol as profit         during unhealthy account liquidations",
              "feeLiquidationExpired": "Percentage of account value taken by the protocol as profit         during expired account liquidations",
              "liquidationDiscount": "Multiplier that reduces the effective totalValue during unhealthy account liquidations,         allowing the liquidator to take the unaccounted for remainder as premium. Equal to (1 - liquidationPremium)",
              "liquidationDiscountExpired": "Multiplier that reduces the effective totalValue during expired account liquidations,         allowing the liquidator to take the unaccounted for remainder as premium. Equal to (1 - liquidationPremiumExpired)"
            }
          },
          "forbiddenTokenMask()": {
            "details": "Bit mask encoding a set of forbidden tokens"
          },
          "fullCollateralCheck(address)": {
            "details": "Performs a full health check on an account, summing up value of all enabled collateral tokens",
            "params": {
              "creditAccount": "Address of the Credit Account to check"
            }
          },
          "getCreditAccountOrRevert(address)": {
            "details": "Returns the address of a borrower's Credit Account, or reverts if there is none.",
            "params": {
              "borrower": "Borrower's address"
            }
          },
          "liquidationThresholds(address)": {
            "details": "Returns the liquidation threshold for the provided token",
            "params": {
              "token": "Token to retrieve the LT for"
            }
          },
          "manageDebt(address,uint256,bool)": {
            "details": "Manages debt size for borrower: - Increase debt:   + Increases debt by transferring funds from the pool to the credit account   + Updates the cumulative index to keep interest the same. Since interest     is always computed dynamically as borrowedAmount * (cumulativeIndexNew / cumulativeIndexOpen - 1),     cumulativeIndexOpen needs to be updated, as the borrow amount has changed - Decrease debt:   + Repays debt partially + all interest and fees accrued thus far   + Updates cunulativeIndex to cumulativeIndex now",
            "params": {
              "amount": "Amount to increase / decrease the principal by",
              "creditAccount": "Address of the Credit Account to change debt for",
              "increase": "True to increase principal, false to decrease"
            },
            "returns": {
              "newBorrowedAmount": "The new debt principal"
            }
          },
          "maxAllowedEnabledTokenLength()": {
            "details": "The maximal number of enabled tokens on a single Credit Account"
          },
          "openCreditAccount(uint256,address)": {
            "details": "Opens credit account and borrows funds from the pool. - Takes Credit Account from the factory; - Requests the pool to lend underlying to the Credit Account",
            "params": {
              "borrowedAmount": "Amount to be borrowed by the Credit Account",
              "onBehalfOf": "The owner of the newly opened Credit Account"
            }
          },
          "pool()": {
            "details": "Address of the connected pool"
          },
          "poolService()": {
            "details": "Address of the connected pool"
          },
          "priceOracle()": {
            "details": "Address of the connected Price Oracle"
          },
          "tokenMasksMap(address)": {
            "details": "Returns the mask for the provided token",
            "params": {
              "token": "Token to returns the mask for"
            }
          },
          "transferAccountOwnership(address,address)": {
            "details": "Transfers Credit Account ownership to another address",
            "params": {
              "from": "Address of previous owner",
              "to": "Address of new owner"
            }
          },
          "underlying()": {
            "details": "Address of the underlying asset"
          },
          "universalAdapter()": {
            "details": "Address of the universal adapter"
          },
          "version()": {
            "details": "Contract's version"
          },
          "wethAddress()": {
            "details": "Address of WETH"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "canLiquidateWhilePaused(address)": {
            "notice": "Emergency liquidators are trusted addresses that are able to liquidate positions while the contracts are paused, e.g. when there is a risk of bad debt while an exploit is being patched. In the interest of fairness, emergency liquidators do not receive a premium And are compensated by the Gearbox DAO separately."
          },
          "disableToken(address,address)": {
            "notice": "Usually called by adapters to disable spent tokens during a multicall,         but can also be called separately from the Credit Facade to remove         unwanted tokens"
          },
          "enabledTokensMap(address)": {
            "notice": "An enabled token mask encodes an enabled token by setting         the bit at the position equal to token's index to 1"
          },
          "fastCollateralCheck(address,address,address,uint256,uint256)": {
            "notice": "Fast health check assumes that only two tokens (input and output)         participate in the operation and computes a % change in weighted value between         inbound and outbound collateral. The cumulative negative change across several         swaps in sequence cannot be larger than feeLiquidation (a fee that the         protocol is ready to waive if needed). Since this records a % change         between just two tokens, the corresponding % change in TWV will always be smaller,         which makes this check safe.         More details at https://dev.gearbox.fi/docs/documentation/risk/fast-collateral-check#fast-check-protection"
          },
          "poolService()": {
            "notice": "[DEPRECATED]: use pool() instead."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@solmate/=lib/solmate/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/external/gearbox/helpers/ICreditManagerV2.sol": "ICreditManagerV2"
      },
      "libraries": {}
    },
    "sources": {
      "src/interfaces/external/gearbox/helpers/ICreditManagerV2.sol": {
        "keccak256": "0x71b5f65aa68e4813f539f03889b43dc3656efbca68d0ffc551595c684bea0f9a",
        "urls": [
          "bzz-raw://9ebf2849bed5df6d5d9a2cfffb666c1d98cbeba7089285abc2d0a3d4fb7904ad",
          "dweb:/ipfs/QmboWvFHKDh4vYtJXX1pb1QqbjDfKTYDLEUp3gqDQoBJry"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/gearbox/helpers/IPriceOracle.sol": {
        "keccak256": "0x0d57767a0bc3f65da11555786ef19cc337e94df510929150d48444107d5de8cc",
        "urls": [
          "bzz-raw://d4de7d80939d2d29e7d5558caf8f56c012b13017debcad3fa5302c4d355e41a6",
          "dweb:/ipfs/QmdxDtGi9RqRr2SAxmgcruaDRzpiNrY7boSLP93haZFySC"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/external/gearbox/helpers/IVersion.sol": {
        "keccak256": "0xddc0816823b7fbcb6debff617668663ae1c3fd36f3c4c3ca8fce150d08c7d421",
        "urls": [
          "bzz-raw://cfcfd7cc5f615c36691f04c37dcef595c03fbef11d5b2f87b81941f6266d3211",
          "dweb:/ipfs/QmVGCeFDQpZYSY4K4qkDddhMeF4DxUJbQ9vUJng2v9pUTM"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/external/gearbox/helpers/ICreditManagerV2.sol",
    "id": 24089,
    "exportedSymbols": {
      "ClosureAction": [
        23686
      ],
      "ICreditManagerV2": [
        24088
      ],
      "ICreditManagerV2Events": [
        23699
      ],
      "ICreditManagerV2Exceptions": [
        23739
      ],
      "IPriceOracleV2": [
        24194
      ],
      "IVersion": [
        41066
      ]
    },
    "nodeType": "SourceUnit",
    "src": "136:18738:43",
    "nodes": [
      {
        "id": 23677,
        "nodeType": "PragmaDirective",
        "src": "136:23:43",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 23679,
        "nodeType": "ImportDirective",
        "src": "161:52:43",
        "absolutePath": "src/interfaces/external/gearbox/helpers/IPriceOracle.sol",
        "file": "./IPriceOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24089,
        "sourceUnit": 24206,
        "symbolAliases": [
          {
            "foreign": {
              "id": 23678,
              "name": "IPriceOracleV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "170:14:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 23681,
        "nodeType": "ImportDirective",
        "src": "214:42:43",
        "absolutePath": "src/interfaces/external/gearbox/helpers/IVersion.sol",
        "file": "./IVersion.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24089,
        "sourceUnit": 41067,
        "symbolAliases": [
          {
            "foreign": {
              "id": 23680,
              "name": "IVersion",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "223:8:43",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 23686,
        "nodeType": "EnumDefinition",
        "src": "258:116:43",
        "canonicalName": "ClosureAction",
        "members": [
          {
            "id": 23682,
            "name": "CLOSE_ACCOUNT",
            "nameLocation": "283:13:43",
            "nodeType": "EnumValue",
            "src": "283:13:43"
          },
          {
            "id": 23683,
            "name": "LIQUIDATE_ACCOUNT",
            "nameLocation": "302:17:43",
            "nodeType": "EnumValue",
            "src": "302:17:43"
          },
          {
            "id": 23684,
            "name": "LIQUIDATE_EXPIRED_ACCOUNT",
            "nameLocation": "325:25:43",
            "nodeType": "EnumValue",
            "src": "325:25:43"
          },
          {
            "id": 23685,
            "name": "LIQUIDATE_PAUSED",
            "nameLocation": "356:16:43",
            "nodeType": "EnumValue",
            "src": "356:16:43"
          }
        ],
        "name": "ClosureAction",
        "nameLocation": "263:13:43"
      },
      {
        "id": 23699,
        "nodeType": "ContractDefinition",
        "src": "376:312:43",
        "nodes": [
          {
            "id": 23693,
            "nodeType": "EventDefinition",
            "src": "505:69:43",
            "anonymous": false,
            "documentation": {
              "id": 23687,
              "nodeType": "StructuredDocumentation",
              "src": "415:85:43",
              "text": "@dev Emits when a call to an external contract is made through the Credit Manager"
            },
            "name": "ExecuteOrder",
            "nameLocation": "511:12:43",
            "parameters": {
              "id": 23692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23689,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "540:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23693,
                  "src": "524:24:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23691,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "566:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23693,
                  "src": "550:22:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "523:50:43"
            }
          },
          {
            "id": 23698,
            "nodeType": "EventDefinition",
            "src": "631:55:43",
            "anonymous": false,
            "documentation": {
              "id": 23694,
              "nodeType": "StructuredDocumentation",
              "src": "580:46:43",
              "text": "@dev Emits when a configurator is upgraded"
            },
            "name": "NewConfigurator",
            "nameLocation": "637:15:43",
            "parameters": {
              "id": 23697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23696,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newConfigurator",
                  "nameLocation": "669:15:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23698,
                  "src": "653:31:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23695,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "653:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "652:33:43"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ICreditManagerV2Events",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          23699
        ],
        "name": "ICreditManagerV2Events",
        "nameLocation": "386:22:43",
        "scope": 24089,
        "usedErrors": []
      },
      {
        "id": 23739,
        "nodeType": "ContractDefinition",
        "src": "690:2094:43",
        "nodes": [
          {
            "id": 23702,
            "nodeType": "ErrorDefinition",
            "src": "886:44:43",
            "documentation": {
              "id": 23700,
              "nodeType": "StructuredDocumentation",
              "src": "733:148:43",
              "text": "@dev Thrown if an access-restricted function is called by an address that is not\n      the connected Credit Facade, or an allowed adapter"
            },
            "name": "AdaptersOrCreditFacadeOnlyException",
            "nameLocation": "892:35:43",
            "parameters": {
              "id": 23701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "927:2:43"
            }
          },
          {
            "id": 23705,
            "nodeType": "ErrorDefinition",
            "src": "1066:34:43",
            "documentation": {
              "id": 23703,
              "nodeType": "StructuredDocumentation",
              "src": "936:125:43",
              "text": "@dev Thrown if an access-restricted function is called by an address that is not\n      the connected Credit Facade"
            },
            "name": "CreditFacadeOnlyException",
            "nameLocation": "1072:25:43",
            "parameters": {
              "id": 23704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1097:2:43"
            }
          },
          {
            "id": 23708,
            "nodeType": "ErrorDefinition",
            "src": "1242:40:43",
            "documentation": {
              "id": 23706,
              "nodeType": "StructuredDocumentation",
              "src": "1106:131:43",
              "text": "@dev Thrown if an access-restricted function is called by an address that is not\n      the connected Credit Configurator"
            },
            "name": "CreditConfiguratorOnlyException",
            "nameLocation": "1248:31:43",
            "parameters": {
              "id": 23707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1279:2:43"
            }
          },
          {
            "id": 23711,
            "nodeType": "ErrorDefinition",
            "src": "1462:52:43",
            "documentation": {
              "id": 23709,
              "nodeType": "StructuredDocumentation",
              "src": "1288:169:43",
              "text": "@dev Thrown on attempting to open a Credit Account for or transfer a Credit Account\n      to the zero address or an address that already owns a Credit Account"
            },
            "name": "ZeroAddressOrUserAlreadyHasAccountException",
            "nameLocation": "1468:43:43",
            "parameters": {
              "id": 23710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1511:2:43"
            }
          },
          {
            "id": 23714,
            "nodeType": "ErrorDefinition",
            "src": "1640:42:43",
            "documentation": {
              "id": 23712,
              "nodeType": "StructuredDocumentation",
              "src": "1520:115:43",
              "text": "@dev Thrown on attempting to execute an order to an address that is not an allowed\n      target contract"
            },
            "name": "TargetContractNotAllowedException",
            "nameLocation": "1646:33:43",
            "parameters": {
              "id": 23713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1679:2:43"
            }
          },
          {
            "id": 23717,
            "nodeType": "ErrorDefinition",
            "src": "1762:37:43",
            "documentation": {
              "id": 23715,
              "nodeType": "StructuredDocumentation",
              "src": "1688:69:43",
              "text": "@dev Thrown on failing a full collateral check after an operation"
            },
            "name": "NotEnoughCollateralException",
            "nameLocation": "1768:28:43",
            "parameters": {
              "id": 23716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1796:2:43"
            }
          },
          {
            "id": 23720,
            "nodeType": "ErrorDefinition",
            "src": "1919:33:43",
            "documentation": {
              "id": 23718,
              "nodeType": "StructuredDocumentation",
              "src": "1805:109:43",
              "text": "@dev Thrown on attempting to receive a token that is not a collateral token\n      or was forbidden"
            },
            "name": "TokenNotAllowedException",
            "nameLocation": "1925:24:43",
            "parameters": {
              "id": 23719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1949:2:43"
            }
          },
          {
            "id": 23723,
            "nodeType": "ErrorDefinition",
            "src": "2050:33:43",
            "documentation": {
              "id": 23721,
              "nodeType": "StructuredDocumentation",
              "src": "1958:87:43",
              "text": "@dev Thrown if an attempt to approve a collateral token to a target contract failed"
            },
            "name": "AllowanceFailedException",
            "nameLocation": "2056:24:43",
            "parameters": {
              "id": 23722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2080:2:43"
            }
          },
          {
            "id": 23726,
            "nodeType": "ErrorDefinition",
            "src": "2187:36:43",
            "documentation": {
              "id": 23724,
              "nodeType": "StructuredDocumentation",
              "src": "2089:93:43",
              "text": "@dev Thrown on attempting to perform an action for an address that owns no Credit Account"
            },
            "name": "HasNoOpenedAccountException",
            "nameLocation": "2193:27:43",
            "parameters": {
              "id": 23725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2220:2:43"
            }
          },
          {
            "id": 23729,
            "nodeType": "ErrorDefinition",
            "src": "2315:35:43",
            "documentation": {
              "id": 23727,
              "nodeType": "StructuredDocumentation",
              "src": "2229:81:43",
              "text": "@dev Thrown on attempting to add a token that is already in a collateral list"
            },
            "name": "TokenAlreadyAddedException",
            "nameLocation": "2321:26:43",
            "parameters": {
              "id": 23728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2347:2:43"
            }
          },
          {
            "id": 23732,
            "nodeType": "ErrorDefinition",
            "src": "2442:31:43",
            "documentation": {
              "id": 23730,
              "nodeType": "StructuredDocumentation",
              "src": "2356:81:43",
              "text": "@dev Thrown on configurator attempting to add more than 256 collateral tokens"
            },
            "name": "TooManyTokensException",
            "nameLocation": "2448:22:43",
            "parameters": {
              "id": 23731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2470:2:43"
            }
          },
          {
            "id": 23735,
            "nodeType": "ErrorDefinition",
            "src": "2637:38:43",
            "documentation": {
              "id": 23733,
              "nodeType": "StructuredDocumentation",
              "src": "2479:153:43",
              "text": "@dev Thrown if more than the maximal number of tokens were enabled on a Credit Account,\n      and there are not enough unused token to disable"
            },
            "name": "TooManyEnabledTokensException",
            "nameLocation": "2643:29:43",
            "parameters": {
              "id": 23734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2672:2:43"
            }
          },
          {
            "id": 23738,
            "nodeType": "ErrorDefinition",
            "src": "2750:32:43",
            "documentation": {
              "id": 23736,
              "nodeType": "StructuredDocumentation",
              "src": "2681:64:43",
              "text": "@dev Thrown when a reentrancy into the contract is attempted"
            },
            "name": "ReentrancyLockException",
            "nameLocation": "2756:23:43",
            "parameters": {
              "id": 23737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2779:2:43"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ICreditManagerV2Exceptions",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          23739
        ],
        "name": "ICreditManagerV2Exceptions",
        "nameLocation": "700:26:43",
        "scope": 24089,
        "usedErrors": [
          23702,
          23705,
          23708,
          23711,
          23714,
          23717,
          23720,
          23723,
          23726,
          23729,
          23732,
          23735,
          23738
        ]
      },
      {
        "id": 24088,
        "nodeType": "ContractDefinition",
        "src": "3005:15869:43",
        "nodes": [
          {
            "id": 23756,
            "nodeType": "FunctionDefinition",
            "src": "3501:114:43",
            "documentation": {
              "id": 23747,
              "nodeType": "StructuredDocumentation",
              "src": "3162:334:43",
              "text": "@dev Opens credit account and borrows funds from the pool.\n - Takes Credit Account from the factory;\n - Requests the pool to lend underlying to the Credit Account\n @param borrowedAmount Amount to be borrowed by the Credit Account\n @param onBehalfOf The owner of the newly opened Credit Account"
            },
            "functionSelector": "8fe3f93f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "openCreditAccount",
            "nameLocation": "3510:17:43",
            "parameters": {
              "id": 23752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23749,
                  "mutability": "mutable",
                  "name": "borrowedAmount",
                  "nameLocation": "3536:14:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23756,
                  "src": "3528:22:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3528:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23751,
                  "mutability": "mutable",
                  "name": "onBehalfOf",
                  "nameLocation": "3560:10:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23756,
                  "src": "3552:18:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3552:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3527:44:43"
            },
            "returnParameters": {
              "id": 23755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23754,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23756,
                  "src": "3606:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3606:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3605:9:43"
            },
            "scope": 24088,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23777,
            "nodeType": "FunctionDefinition",
            "src": "5677:271:43",
            "documentation": {
              "id": 23757,
              "nodeType": "StructuredDocumentation",
              "src": "3621:2051:43",
              "text": "@dev Closes a Credit Account - covers both normal closure and liquidation\n - Checks whether the contract is paused, and, if so, if the payer is an emergency liquidator.\n   Only emergency liquidators are able to liquidate account while the CM is paused.\n   Emergency liquidations do not pay a liquidator premium or liquidation fees.\n - Calculates payments to various recipients on closure:\n    + Computes amountToPool, which is the amount to be sent back to the pool.\n      This includes the principal, interest and fees, but can't be more than\n      total position value\n    + Computes remainingFunds during liquidations - these are leftover funds\n      after paying the pool and the liquidator, and are sent to the borrower\n    + Computes protocol profit, which includes interest and liquidation fees\n    + Computes loss if the totalValue is less than borrow amount + interest\n - Checks the underlying token balance:\n    + if it is larger than amountToPool, then the pool is paid fully from funds on the Credit Account\n    + else tries to transfer the shortfall from the payer - either the borrower during closure, or liquidator during liquidation\n - Send assets to the \"to\" address, as long as they are not included into skipTokenMask\n - If convertWETH is true, the function converts WETH into ETH before sending\n - Returns the Credit Account back to factory\n @param borrower Borrower address\n @param closureActionType Whether the account is closed, liquidated or liquidated due to expiry\n @param totalValue Portfolio value for liqution, 0 for ordinary closure\n @param payer Address which would be charged if credit account has not enough funds to cover amountToPool\n @param to Address to which the leftover funds will be sent\n @param skipTokenMask Tokenmask contains 1 for tokens which needed to be skipped for sending\n @param convertWETH If true converts WETH to ETH"
            },
            "functionSelector": "2362a2d8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "closeCreditAccount",
            "nameLocation": "5686:18:43",
            "parameters": {
              "id": 23773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23759,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "5722:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23777,
                  "src": "5714:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5714:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23762,
                  "mutability": "mutable",
                  "name": "closureActionType",
                  "nameLocation": "5754:17:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23777,
                  "src": "5740:31:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ClosureAction_$23686",
                    "typeString": "enum ClosureAction"
                  },
                  "typeName": {
                    "id": 23761,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23760,
                      "name": "ClosureAction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23686,
                      "src": "5740:13:43"
                    },
                    "referencedDeclaration": 23686,
                    "src": "5740:13:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ClosureAction_$23686",
                      "typeString": "enum ClosureAction"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23764,
                  "mutability": "mutable",
                  "name": "totalValue",
                  "nameLocation": "5789:10:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23777,
                  "src": "5781:18:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5781:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23766,
                  "mutability": "mutable",
                  "name": "payer",
                  "nameLocation": "5817:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23777,
                  "src": "5809:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5809:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23768,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5840:2:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23777,
                  "src": "5832:10:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5832:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23770,
                  "mutability": "mutable",
                  "name": "skipTokenMask",
                  "nameLocation": "5860:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23777,
                  "src": "5852:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5852:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23772,
                  "mutability": "mutable",
                  "name": "convertWETH",
                  "nameLocation": "5888:11:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23777,
                  "src": "5883:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23771,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5883:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5704:201:43"
            },
            "returnParameters": {
              "id": 23776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23775,
                  "mutability": "mutable",
                  "name": "remainingFunds",
                  "nameLocation": "5932:14:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23777,
                  "src": "5924:22:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5924:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5923:24:43"
            },
            "scope": 24088,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23789,
            "nodeType": "FunctionDefinition",
            "src": "6846:149:43",
            "documentation": {
              "id": 23778,
              "nodeType": "StructuredDocumentation",
              "src": "5954:887:43",
              "text": "@dev Manages debt size for borrower:\n - Increase debt:\n   + Increases debt by transferring funds from the pool to the credit account\n   + Updates the cumulative index to keep interest the same. Since interest\n     is always computed dynamically as borrowedAmount * (cumulativeIndexNew / cumulativeIndexOpen - 1),\n     cumulativeIndexOpen needs to be updated, as the borrow amount has changed\n - Decrease debt:\n   + Repays debt partially + all interest and fees accrued thus far\n   + Updates cunulativeIndex to cumulativeIndex now\n @param creditAccount Address of the Credit Account to change debt for\n @param amount Amount to increase / decrease the principal by\n @param increase True to increase principal, false to decrease\n @return newBorrowedAmount The new debt principal"
            },
            "functionSelector": "94cf073a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "manageDebt",
            "nameLocation": "6855:10:43",
            "parameters": {
              "id": 23785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23780,
                  "mutability": "mutable",
                  "name": "creditAccount",
                  "nameLocation": "6883:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23789,
                  "src": "6875:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6875:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23782,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6914:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23789,
                  "src": "6906:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6906:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23784,
                  "mutability": "mutable",
                  "name": "increase",
                  "nameLocation": "6935:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23789,
                  "src": "6930:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23783,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6930:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6865:84:43"
            },
            "returnParameters": {
              "id": 23788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23787,
                  "mutability": "mutable",
                  "name": "newBorrowedAmount",
                  "nameLocation": "6976:17:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23789,
                  "src": "6968:25:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6968:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6967:27:43"
            },
            "scope": 24088,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23801,
            "nodeType": "FunctionDefinition",
            "src": "7298:139:43",
            "documentation": {
              "id": 23790,
              "nodeType": "StructuredDocumentation",
              "src": "7001:292:43",
              "text": "@dev Adds collateral to borrower's credit account\n @param payer Address of the account which will be charged to provide additional collateral\n @param creditAccount Address of the Credit Account\n @param token Collateral token to add\n @param amount Amount to add"
            },
            "functionSelector": "830aa745",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addCollateral",
            "nameLocation": "7307:13:43",
            "parameters": {
              "id": 23799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23792,
                  "mutability": "mutable",
                  "name": "payer",
                  "nameLocation": "7338:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23801,
                  "src": "7330:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7330:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23794,
                  "mutability": "mutable",
                  "name": "creditAccount",
                  "nameLocation": "7361:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23801,
                  "src": "7353:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7353:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23796,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7392:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23801,
                  "src": "7384:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7384:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23798,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7415:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23801,
                  "src": "7407:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7407:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7320:107:43"
            },
            "returnParameters": {
              "id": 23800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7436:0:43"
            },
            "scope": 24088,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23809,
            "nodeType": "FunctionDefinition",
            "src": "7595:69:43",
            "documentation": {
              "id": 23802,
              "nodeType": "StructuredDocumentation",
              "src": "7443:147:43",
              "text": "@dev Transfers Credit Account ownership to another address\n @param from Address of previous owner\n @param to Address of new owner"
            },
            "functionSelector": "e1998cf9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferAccountOwnership",
            "nameLocation": "7604:24:43",
            "parameters": {
              "id": 23807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23804,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7637:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23809,
                  "src": "7629:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7629:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23806,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7651:2:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23809,
                  "src": "7643:10:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7643:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7628:26:43"
            },
            "returnParameters": {
              "id": 23808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7663:0:43"
            },
            "scope": 24088,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23821,
            "nodeType": "FunctionDefinition",
            "src": "7959:150:43",
            "documentation": {
              "id": 23810,
              "nodeType": "StructuredDocumentation",
              "src": "7670:284:43",
              "text": "@dev Requests the Credit Account to approve a collateral token to another contract.\n @param borrower Borrower's address\n @param targetContract Spender to change allowance for\n @param token Collateral token to approve\n @param amount New allowance amount"
            },
            "functionSelector": "46fb371d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approveCreditAccount",
            "nameLocation": "7968:20:43",
            "parameters": {
              "id": 23819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23812,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "8006:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23821,
                  "src": "7998:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7998:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23814,
                  "mutability": "mutable",
                  "name": "targetContract",
                  "nameLocation": "8032:14:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23821,
                  "src": "8024:22:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8024:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23816,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8064:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23821,
                  "src": "8056:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8056:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23818,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8087:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23821,
                  "src": "8079:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8079:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7988:111:43"
            },
            "returnParameters": {
              "id": 23820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8108:0:43"
            },
            "scope": 24088,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23833,
            "nodeType": "FunctionDefinition",
            "src": "8434:145:43",
            "documentation": {
              "id": 23822,
              "nodeType": "StructuredDocumentation",
              "src": "8115:314:43",
              "text": "@dev Requests a Credit Account to make a low-level call with provided data\n This is the intended pathway for state-changing interactions with 3rd-party protocols\n @param borrower Borrower's address\n @param targetContract Contract to be called\n @param data Data to pass with the call"
            },
            "functionSelector": "6ce4074a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "executeOrder",
            "nameLocation": "8443:12:43",
            "parameters": {
              "id": 23829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23824,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "8473:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23833,
                  "src": "8465:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8465:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23826,
                  "mutability": "mutable",
                  "name": "targetContract",
                  "nameLocation": "8499:14:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23833,
                  "src": "8491:22:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8491:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23828,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8536:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23833,
                  "src": "8523:17:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23827,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8523:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8455:91:43"
            },
            "returnParameters": {
              "id": 23832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23831,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23833,
                  "src": "8565:12:43",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23830,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8565:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8564:14:43"
            },
            "scope": 24088,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23841,
            "nodeType": "FunctionDefinition",
            "src": "8910:76:43",
            "documentation": {
              "id": 23834,
              "nodeType": "StructuredDocumentation",
              "src": "8653:252:43",
              "text": "@dev Enables a token on a Credit Account, including it\n into account health and total value calculations\n @param creditAccount Address of a Credit Account to enable the token for\n @param token Address of the token to be enabled"
            },
            "functionSelector": "51e3f160",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkAndEnableToken",
            "nameLocation": "8919:19:43",
            "parameters": {
              "id": 23839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23836,
                  "mutability": "mutable",
                  "name": "creditAccount",
                  "nameLocation": "8947:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23841,
                  "src": "8939:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8939:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23838,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8970:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23841,
                  "src": "8962:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8962:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8938:38:43"
            },
            "returnParameters": {
              "id": 23840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8985:0:43"
            },
            "scope": 24088,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23855,
            "nodeType": "FunctionDefinition",
            "src": "10109:193:43",
            "documentation": {
              "id": 23842,
              "nodeType": "StructuredDocumentation",
              "src": "8992:1112:43",
              "text": "@dev Optimized health check for individual swap-like operations.\n @notice Fast health check assumes that only two tokens (input and output)\n         participate in the operation and computes a % change in weighted value between\n         inbound and outbound collateral. The cumulative negative change across several\n         swaps in sequence cannot be larger than feeLiquidation (a fee that the\n         protocol is ready to waive if needed). Since this records a % change\n         between just two tokens, the corresponding % change in TWV will always be smaller,\n         which makes this check safe.\n         More details at https://dev.gearbox.fi/docs/documentation/risk/fast-collateral-check#fast-check-protection\n @param creditAccount Address of the Credit Account\n @param tokenIn Address of the token spent by the swap\n @param tokenOut Address of the token received from the swap\n @param balanceInBefore Balance of tokenIn before the operation\n @param balanceOutBefore Balance of tokenOut before the operation"
            },
            "functionSelector": "654a9eda",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "fastCollateralCheck",
            "nameLocation": "10118:19:43",
            "parameters": {
              "id": 23853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23844,
                  "mutability": "mutable",
                  "name": "creditAccount",
                  "nameLocation": "10155:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23855,
                  "src": "10147:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10147:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23846,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "10186:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23855,
                  "src": "10178:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10178:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23848,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "10211:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23855,
                  "src": "10203:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10203:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23850,
                  "mutability": "mutable",
                  "name": "balanceInBefore",
                  "nameLocation": "10237:15:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23855,
                  "src": "10229:23:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10229:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23852,
                  "mutability": "mutable",
                  "name": "balanceOutBefore",
                  "nameLocation": "10270:16:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23855,
                  "src": "10262:24:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10262:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10137:155:43"
            },
            "returnParameters": {
              "id": 23854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10301:0:43"
            },
            "scope": 24088,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23861,
            "nodeType": "FunctionDefinition",
            "src": "10491:61:43",
            "documentation": {
              "id": 23856,
              "nodeType": "StructuredDocumentation",
              "src": "10308:178:43",
              "text": "@dev Performs a full health check on an account, summing up\n value of all enabled collateral tokens\n @param creditAccount Address of the Credit Account to check"
            },
            "functionSelector": "95373018",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "fullCollateralCheck",
            "nameLocation": "10500:19:43",
            "parameters": {
              "id": 23859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23858,
                  "mutability": "mutable",
                  "name": "creditAccount",
                  "nameLocation": "10528:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23861,
                  "src": "10520:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10520:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10519:23:43"
            },
            "returnParameters": {
              "id": 23860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10551:0:43"
            },
            "scope": 24088,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23867,
            "nodeType": "FunctionDefinition",
            "src": "10818:71:43",
            "documentation": {
              "id": 23862,
              "nodeType": "StructuredDocumentation",
              "src": "10558:255:43",
              "text": "@dev Checks that the number of enabled tokens on a Credit Account\n      does not violate the maximal enabled token limit and tries\n      to disable unused tokens if it does\n @param creditAccount Account to check enabled tokens for"
            },
            "functionSelector": "29df0b93",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkAndOptimizeEnabledTokens",
            "nameLocation": "10827:29:43",
            "parameters": {
              "id": 23865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23864,
                  "mutability": "mutable",
                  "name": "creditAccount",
                  "nameLocation": "10865:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23867,
                  "src": "10857:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10857:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10856:23:43"
            },
            "returnParameters": {
              "id": 23866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10888:0:43"
            },
            "scope": 24088,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23875,
            "nodeType": "FunctionDefinition",
            "src": "11147:69:43",
            "documentation": {
              "id": 23868,
              "nodeType": "StructuredDocumentation",
              "src": "10895:247:43",
              "text": "@dev Disables a token on a credit account\n @notice Usually called by adapters to disable spent tokens during a multicall,\n         but can also be called separately from the Credit Facade to remove\n         unwanted tokens"
            },
            "functionSelector": "0d8f9cee",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "disableToken",
            "nameLocation": "11156:12:43",
            "parameters": {
              "id": 23873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23870,
                  "mutability": "mutable",
                  "name": "creditAccount",
                  "nameLocation": "11177:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23875,
                  "src": "11169:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11169:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23872,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "11200:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23875,
                  "src": "11192:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11192:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11168:38:43"
            },
            "returnParameters": {
              "id": 23874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11215:0:43"
            },
            "scope": 24088,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23883,
            "nodeType": "FunctionDefinition",
            "src": "11389:108:43",
            "documentation": {
              "id": 23876,
              "nodeType": "StructuredDocumentation",
              "src": "11252:132:43",
              "text": "@dev Returns the address of a borrower's Credit Account, or reverts if there is none.\n @param borrower Borrower's address"
            },
            "functionSelector": "e958b704",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCreditAccountOrRevert",
            "nameLocation": "11398:24:43",
            "parameters": {
              "id": 23879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23878,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "11431:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23883,
                  "src": "11423:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23877,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11423:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11422:18:43"
            },
            "returnParameters": {
              "id": 23882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23881,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23883,
                  "src": "11488:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23880,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11488:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11487:9:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23904,
            "nodeType": "FunctionDefinition",
            "src": "12609:359:43",
            "documentation": {
              "id": 23884,
              "nodeType": "StructuredDocumentation",
              "src": "11503:1101:43",
              "text": "@dev Computes amounts that must be sent to various addresses before closing an account\n @param totalValue Credit Accounts total value in underlying\n @param closureActionType Type of account closure\n        * CLOSE_ACCOUNT: The account is healthy and is closed normally\n        * LIQUIDATE_ACCOUNT: The account is unhealthy and is being liquidated to avoid bad debt\n        * LIQUIDATE_EXPIRED_ACCOUNT: The account has expired and is being liquidated (lowered liquidation premium)\n        * LIQUIDATE_PAUSED: The account is liquidated while the system is paused due to emergency (no liquidation premium)\n @param borrowedAmount Credit Account's debt principal\n @param borrowedAmountWithInterest Credit Account's debt principal + interest\n @return amountToPool Amount of underlying to be sent to the pool\n @return remainingFunds Amount of underlying to be sent to the borrower (only applicable to liquidations)\n @return profit Protocol's profit from fees (if any)\n @return loss Protocol's loss from bad debt (if any)"
            },
            "functionSelector": "5063524a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calcClosePayments",
            "nameLocation": "12618:17:43",
            "parameters": {
              "id": 23894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23886,
                  "mutability": "mutable",
                  "name": "totalValue",
                  "nameLocation": "12653:10:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23904,
                  "src": "12645:18:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12645:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23889,
                  "mutability": "mutable",
                  "name": "closureActionType",
                  "nameLocation": "12687:17:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23904,
                  "src": "12673:31:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ClosureAction_$23686",
                    "typeString": "enum ClosureAction"
                  },
                  "typeName": {
                    "id": 23888,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23887,
                      "name": "ClosureAction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23686,
                      "src": "12673:13:43"
                    },
                    "referencedDeclaration": 23686,
                    "src": "12673:13:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ClosureAction_$23686",
                      "typeString": "enum ClosureAction"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23891,
                  "mutability": "mutable",
                  "name": "borrowedAmount",
                  "nameLocation": "12722:14:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23904,
                  "src": "12714:22:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12714:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23893,
                  "mutability": "mutable",
                  "name": "borrowedAmountWithInterest",
                  "nameLocation": "12754:26:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23904,
                  "src": "12746:34:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12746:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12635:151:43"
            },
            "returnParameters": {
              "id": 23903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23896,
                  "mutability": "mutable",
                  "name": "amountToPool",
                  "nameLocation": "12855:12:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23904,
                  "src": "12847:20:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12847:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23898,
                  "mutability": "mutable",
                  "name": "remainingFunds",
                  "nameLocation": "12889:14:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23904,
                  "src": "12881:22:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12881:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23900,
                  "mutability": "mutable",
                  "name": "profit",
                  "nameLocation": "12925:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23904,
                  "src": "12917:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12917:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23902,
                  "mutability": "mutable",
                  "name": "loss",
                  "nameLocation": "12953:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23904,
                  "src": "12945:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12945:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12833:134:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23916,
            "nodeType": "FunctionDefinition",
            "src": "13331:261:43",
            "documentation": {
              "id": 23905,
              "nodeType": "StructuredDocumentation",
              "src": "12974:352:43",
              "text": "@dev Calculates the debt accrued by a Credit Account\n @param creditAccount Address of the Credit Account\n @return borrowedAmount The debt principal\n @return borrowedAmountWithInterest The debt principal + accrued interest\n @return borrowedAmountWithInterestAndFees The debt principal + accrued interest and protocol fees"
            },
            "functionSelector": "3192195c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calcCreditAccountAccruedInterest",
            "nameLocation": "13340:32:43",
            "parameters": {
              "id": 23908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23907,
                  "mutability": "mutable",
                  "name": "creditAccount",
                  "nameLocation": "13381:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23916,
                  "src": "13373:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13373:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13372:23:43"
            },
            "returnParameters": {
              "id": 23915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23910,
                  "mutability": "mutable",
                  "name": "borrowedAmount",
                  "nameLocation": "13464:14:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23916,
                  "src": "13456:22:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13456:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23912,
                  "mutability": "mutable",
                  "name": "borrowedAmountWithInterest",
                  "nameLocation": "13500:26:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23916,
                  "src": "13492:34:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13492:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23914,
                  "mutability": "mutable",
                  "name": "borrowedAmountWithInterestAndFees",
                  "nameLocation": "13548:33:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23916,
                  "src": "13540:41:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13540:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13442:149:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23924,
            "nodeType": "FunctionDefinition",
            "src": "13898:105:43",
            "documentation": {
              "id": 23917,
              "nodeType": "StructuredDocumentation",
              "src": "13598:295:43",
              "text": "@dev Maps Credit Accounts to bit masks encoding their enabled token sets\n Only enabled tokens are counted as collateral for the Credit Account\n @notice An enabled token mask encodes an enabled token by setting\n         the bit at the position equal to token's index to 1"
            },
            "functionSelector": "8991b2f1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "enabledTokensMap",
            "nameLocation": "13907:16:43",
            "parameters": {
              "id": 23920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23919,
                  "mutability": "mutable",
                  "name": "creditAccount",
                  "nameLocation": "13932:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23924,
                  "src": "13924:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13924:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13923:23:43"
            },
            "returnParameters": {
              "id": 23923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23922,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23924,
                  "src": "13994:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23921,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13994:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13993:9:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23932,
            "nodeType": "FunctionDefinition",
            "src": "14148:117:43",
            "documentation": {
              "id": 23925,
              "nodeType": "StructuredDocumentation",
              "src": "14009:134:43",
              "text": "@dev Maps the Credit Account to its current percentage drop across all swaps since\n      the last full check, in RAY format"
            },
            "functionSelector": "3e8297ca",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cumulativeDropAtFastCheckRAY",
            "nameLocation": "14157:28:43",
            "parameters": {
              "id": 23928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23927,
                  "mutability": "mutable",
                  "name": "creditAccount",
                  "nameLocation": "14194:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23932,
                  "src": "14186:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23926,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14186:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14185:23:43"
            },
            "returnParameters": {
              "id": 23931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23930,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23932,
                  "src": "14256:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14256:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14255:9:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23942,
            "nodeType": "FunctionDefinition",
            "src": "14409:129:43",
            "documentation": {
              "id": 23933,
              "nodeType": "StructuredDocumentation",
              "src": "14271:133:43",
              "text": "@dev Returns the collateral token at requested index and its liquidation threshold\n @param id The index of token to return"
            },
            "functionSelector": "172c48c7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "collateralTokens",
            "nameLocation": "14418:16:43",
            "parameters": {
              "id": 23936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23935,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "14443:2:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23942,
                  "src": "14435:10:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14435:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14434:12:43"
            },
            "returnParameters": {
              "id": 23941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23938,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "14502:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23942,
                  "src": "14494:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14494:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23940,
                  "mutability": "mutable",
                  "name": "liquidationThreshold",
                  "nameLocation": "14516:20:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23942,
                  "src": "14509:27:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 23939,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "14509:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14493:44:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23952,
            "nodeType": "FunctionDefinition",
            "src": "14698:142:43",
            "documentation": {
              "id": 23943,
              "nodeType": "StructuredDocumentation",
              "src": "14544:149:43",
              "text": "@dev Returns the collateral token with requested mask and its liquidationThreshold\n @param tokenMask Token mask corresponding to the token"
            },
            "functionSelector": "e75538c7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "collateralTokensByMask",
            "nameLocation": "14707:22:43",
            "parameters": {
              "id": 23946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23945,
                  "mutability": "mutable",
                  "name": "tokenMask",
                  "nameLocation": "14738:9:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23952,
                  "src": "14730:17:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14730:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14729:19:43"
            },
            "returnParameters": {
              "id": 23951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23948,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "14804:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23952,
                  "src": "14796:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14796:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23950,
                  "mutability": "mutable",
                  "name": "liquidationThreshold",
                  "nameLocation": "14818:20:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23952,
                  "src": "14811:27:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 23949,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "14811:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14795:44:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23958,
            "nodeType": "FunctionDefinition",
            "src": "14900:65:43",
            "documentation": {
              "id": 23953,
              "nodeType": "StructuredDocumentation",
              "src": "14846:49:43",
              "text": "@dev Total number of known collateral tokens."
            },
            "functionSelector": "458936f5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "collateralTokensCount",
            "nameLocation": "14909:21:43",
            "parameters": {
              "id": 23954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14930:2:43"
            },
            "returnParameters": {
              "id": 23957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23956,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23958,
                  "src": "14956:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14956:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14955:9:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23966,
            "nodeType": "FunctionDefinition",
            "src": "15075:70:43",
            "documentation": {
              "id": 23959,
              "nodeType": "StructuredDocumentation",
              "src": "14971:99:43",
              "text": "@dev Returns the mask for the provided token\n @param token Token to returns the mask for"
            },
            "functionSelector": "f67c5bd0",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenMasksMap",
            "nameLocation": "15084:13:43",
            "parameters": {
              "id": 23962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23961,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "15106:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23966,
                  "src": "15098:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15098:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15097:15:43"
            },
            "returnParameters": {
              "id": 23965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23964,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23966,
                  "src": "15136:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23963,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15136:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15135:9:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23972,
            "nodeType": "FunctionDefinition",
            "src": "15208:62:43",
            "documentation": {
              "id": 23967,
              "nodeType": "StructuredDocumentation",
              "src": "15151:52:43",
              "text": "@dev Bit mask encoding a set of forbidden tokens"
            },
            "functionSelector": "9fd12b77",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "forbiddenTokenMask",
            "nameLocation": "15217:18:43",
            "parameters": {
              "id": 23968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15235:2:43"
            },
            "returnParameters": {
              "id": 23971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23970,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23972,
                  "src": "15261:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15261:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15260:9:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23980,
            "nodeType": "FunctionDefinition",
            "src": "15349:76:43",
            "documentation": {
              "id": 23973,
              "nodeType": "StructuredDocumentation",
              "src": "15276:68:43",
              "text": "@dev Maps allowed adapters to their respective target contracts."
            },
            "functionSelector": "ff687543",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "adapterToContract",
            "nameLocation": "15358:17:43",
            "parameters": {
              "id": 23976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23975,
                  "mutability": "mutable",
                  "name": "adapter",
                  "nameLocation": "15384:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23980,
                  "src": "15376:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23974,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15376:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15375:17:43"
            },
            "returnParameters": {
              "id": 23979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23978,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23980,
                  "src": "15416:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15416:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15415:9:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23988,
            "nodeType": "FunctionDefinition",
            "src": "15498:107:43",
            "documentation": {
              "id": 23981,
              "nodeType": "StructuredDocumentation",
              "src": "15431:62:43",
              "text": "@dev Maps 3rd party contracts to their respective adapters"
            },
            "functionSelector": "fdd57645",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "contractToAdapter",
            "nameLocation": "15507:17:43",
            "parameters": {
              "id": 23984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23983,
                  "mutability": "mutable",
                  "name": "targetContract",
                  "nameLocation": "15533:14:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 23988,
                  "src": "15525:22:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15525:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15524:24:43"
            },
            "returnParameters": {
              "id": 23987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23986,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23988,
                  "src": "15596:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15596:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15595:9:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 23994,
            "nodeType": "FunctionDefinition",
            "src": "15656:54:43",
            "documentation": {
              "id": 23989,
              "nodeType": "StructuredDocumentation",
              "src": "15611:40:43",
              "text": "@dev Address of the underlying asset"
            },
            "functionSelector": "6f307dc3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "underlying",
            "nameLocation": "15665:10:43",
            "parameters": {
              "id": 23990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15675:2:43"
            },
            "returnParameters": {
              "id": 23993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23992,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23994,
                  "src": "15701:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23991,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15701:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15700:9:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24000,
            "nodeType": "FunctionDefinition",
            "src": "15759:48:43",
            "documentation": {
              "id": 23995,
              "nodeType": "StructuredDocumentation",
              "src": "15716:38:43",
              "text": "@dev Address of the connected pool"
            },
            "functionSelector": "16f0115b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pool",
            "nameLocation": "15768:4:43",
            "parameters": {
              "id": 23996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15772:2:43"
            },
            "returnParameters": {
              "id": 23999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23998,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24000,
                  "src": "15798:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15798:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15797:9:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24006,
            "nodeType": "FunctionDefinition",
            "src": "15906:55:43",
            "documentation": {
              "id": 24001,
              "nodeType": "StructuredDocumentation",
              "src": "15813:88:43",
              "text": "@dev Address of the connected pool\n @notice [DEPRECATED]: use pool() instead."
            },
            "functionSelector": "570a7af2",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "poolService",
            "nameLocation": "15915:11:43",
            "parameters": {
              "id": 24002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15926:2:43"
            },
            "returnParameters": {
              "id": 24005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24004,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24006,
                  "src": "15952:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15952:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15951:9:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24014,
            "nodeType": "FunctionDefinition",
            "src": "16038:74:43",
            "documentation": {
              "id": 24007,
              "nodeType": "StructuredDocumentation",
              "src": "15967:66:43",
              "text": "@dev A map from borrower addresses to Credit Account addresses"
            },
            "functionSelector": "055ee9b5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "creditAccounts",
            "nameLocation": "16047:14:43",
            "parameters": {
              "id": 24010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24009,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "16070:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 24014,
                  "src": "16062:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16062:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16061:18:43"
            },
            "returnParameters": {
              "id": 24013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24012,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24014,
                  "src": "16103:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16103:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16102:9:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24020,
            "nodeType": "FunctionDefinition",
            "src": "16176:62:43",
            "documentation": {
              "id": 24015,
              "nodeType": "StructuredDocumentation",
              "src": "16118:53:43",
              "text": "@dev Address of the connected Credit Configurator"
            },
            "functionSelector": "f9aa028a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "creditConfigurator",
            "nameLocation": "16185:18:43",
            "parameters": {
              "id": 24016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16203:2:43"
            },
            "returnParameters": {
              "id": 24019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24018,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24020,
                  "src": "16229:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16229:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16228:9:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24026,
            "nodeType": "FunctionDefinition",
            "src": "16273:55:43",
            "documentation": {
              "id": 24021,
              "nodeType": "StructuredDocumentation",
              "src": "16244:24:43",
              "text": "@dev Address of WETH"
            },
            "functionSelector": "4f0e0ef3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "wethAddress",
            "nameLocation": "16282:11:43",
            "parameters": {
              "id": 24022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16293:2:43"
            },
            "returnParameters": {
              "id": 24025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24024,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24026,
                  "src": "16319:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16319:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16318:9:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24034,
            "nodeType": "FunctionDefinition",
            "src": "16454:101:43",
            "documentation": {
              "id": 24027,
              "nodeType": "StructuredDocumentation",
              "src": "16334:115:43",
              "text": "@dev Returns the liquidation threshold for the provided token\n @param token Token to retrieve the LT for"
            },
            "functionSelector": "78327438",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "liquidationThresholds",
            "nameLocation": "16463:21:43",
            "parameters": {
              "id": 24030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24029,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "16493:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 24034,
                  "src": "16485:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16485:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16484:15:43"
            },
            "returnParameters": {
              "id": 24033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24032,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24034,
                  "src": "16547:6:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 24031,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "16547:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16546:8:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24040,
            "nodeType": "FunctionDefinition",
            "src": "16638:70:43",
            "documentation": {
              "id": 24035,
              "nodeType": "StructuredDocumentation",
              "src": "16561:72:43",
              "text": "@dev The maximal number of enabled tokens on a single Credit Account"
            },
            "functionSelector": "8345f26e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "maxAllowedEnabledTokenLength",
            "nameLocation": "16647:28:43",
            "parameters": {
              "id": 24036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16675:2:43"
            },
            "returnParameters": {
              "id": 24039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24038,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24040,
                  "src": "16701:5:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 24037,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "16701:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16700:7:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24048,
            "nodeType": "FunctionDefinition",
            "src": "17144:71:43",
            "documentation": {
              "id": 24041,
              "nodeType": "StructuredDocumentation",
              "src": "16714:425:43",
              "text": "@dev Maps addresses to their status as emergency liquidator.\n @notice Emergency liquidators are trusted addresses\n that are able to liquidate positions while the contracts are paused,\n e.g. when there is a risk of bad debt while an exploit is being patched.\n In the interest of fairness, emergency liquidators do not receive a premium\n And are compensated by the Gearbox DAO separately."
            },
            "functionSelector": "38975bc4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "canLiquidateWhilePaused",
            "nameLocation": "17153:23:43",
            "parameters": {
              "id": 24044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24043,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24048,
                  "src": "17177:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17177:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17176:9:43"
            },
            "returnParameters": {
              "id": 24047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24046,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24048,
                  "src": "17209:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24045,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17209:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17208:6:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24062,
            "nodeType": "FunctionDefinition",
            "src": "18169:269:43",
            "documentation": {
              "id": 24049,
              "nodeType": "StructuredDocumentation",
              "src": "17221:943:43",
              "text": "@dev Returns the fee parameters of the Credit Manager\n @return feeInterest Percentage of interest taken by the protocol as profit\n @return feeLiquidation Percentage of account value taken by the protocol as profit\n         during unhealthy account liquidations\n @return liquidationDiscount Multiplier that reduces the effective totalValue during unhealthy account liquidations,\n         allowing the liquidator to take the unaccounted for remainder as premium. Equal to (1 - liquidationPremium)\n @return feeLiquidationExpired Percentage of account value taken by the protocol as profit\n         during expired account liquidations\n @return liquidationDiscountExpired Multiplier that reduces the effective totalValue during expired account liquidations,\n         allowing the liquidator to take the unaccounted for remainder as premium. Equal to (1 - liquidationPremiumExpired)"
            },
            "functionSelector": "9af1d35a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "fees",
            "nameLocation": "18178:4:43",
            "parameters": {
              "id": 24050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18182:2:43"
            },
            "returnParameters": {
              "id": 24061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24052,
                  "mutability": "mutable",
                  "name": "feeInterest",
                  "nameLocation": "18252:11:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 24062,
                  "src": "18245:18:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 24051,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "18245:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24054,
                  "mutability": "mutable",
                  "name": "feeLiquidation",
                  "nameLocation": "18284:14:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 24062,
                  "src": "18277:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 24053,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "18277:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24056,
                  "mutability": "mutable",
                  "name": "liquidationDiscount",
                  "nameLocation": "18319:19:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 24062,
                  "src": "18312:26:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 24055,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "18312:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24058,
                  "mutability": "mutable",
                  "name": "feeLiquidationExpired",
                  "nameLocation": "18359:21:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 24062,
                  "src": "18352:28:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 24057,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "18352:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24060,
                  "mutability": "mutable",
                  "name": "liquidationDiscountExpired",
                  "nameLocation": "18401:26:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 24062,
                  "src": "18394:33:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 24059,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "18394:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18231:206:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24068,
            "nodeType": "FunctionDefinition",
            "src": "18496:56:43",
            "documentation": {
              "id": 24063,
              "nodeType": "StructuredDocumentation",
              "src": "18444:47:43",
              "text": "@dev Address of the connected Credit Facade"
            },
            "functionSelector": "2f7a1881",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "creditFacade",
            "nameLocation": "18505:12:43",
            "parameters": {
              "id": 24064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18517:2:43"
            },
            "returnParameters": {
              "id": 24067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24066,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24068,
                  "src": "18543:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24065,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18543:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18542:9:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24075,
            "nodeType": "FunctionDefinition",
            "src": "18609:62:43",
            "documentation": {
              "id": 24069,
              "nodeType": "StructuredDocumentation",
              "src": "18558:46:43",
              "text": "@dev Address of the connected Price Oracle"
            },
            "functionSelector": "2630c12f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "priceOracle",
            "nameLocation": "18618:11:43",
            "parameters": {
              "id": 24070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18629:2:43"
            },
            "returnParameters": {
              "id": 24074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24073,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24075,
                  "src": "18655:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPriceOracleV2_$24194",
                    "typeString": "contract IPriceOracleV2"
                  },
                  "typeName": {
                    "id": 24072,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24071,
                      "name": "IPriceOracleV2",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24194,
                      "src": "18655:14:43"
                    },
                    "referencedDeclaration": 24194,
                    "src": "18655:14:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPriceOracleV2_$24194",
                      "typeString": "contract IPriceOracleV2"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18654:16:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24081,
            "nodeType": "FunctionDefinition",
            "src": "18723:60:43",
            "documentation": {
              "id": 24076,
              "nodeType": "StructuredDocumentation",
              "src": "18677:41:43",
              "text": "@dev Address of the universal adapter"
            },
            "functionSelector": "fe47cde7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "universalAdapter",
            "nameLocation": "18732:16:43",
            "parameters": {
              "id": 24077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18748:2:43"
            },
            "returnParameters": {
              "id": 24080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24079,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24081,
                  "src": "18774:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18774:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18773:9:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24087,
            "nodeType": "FunctionDefinition",
            "src": "18821:51:43",
            "baseFunctions": [
              41065
            ],
            "documentation": {
              "id": 24082,
              "nodeType": "StructuredDocumentation",
              "src": "18789:27:43",
              "text": "@dev Contract's version"
            },
            "functionSelector": "54fd4d50",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "version",
            "nameLocation": "18830:7:43",
            "parameters": {
              "id": 24083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18837:2:43"
            },
            "returnParameters": {
              "id": 24086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24085,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24087,
                  "src": "18863:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24084,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18863:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18862:9:43"
            },
            "scope": 24088,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23741,
              "name": "ICreditManagerV2Events",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23699,
              "src": "3039:22:43"
            },
            "id": 23742,
            "nodeType": "InheritanceSpecifier",
            "src": "3039:22:43"
          },
          {
            "baseName": {
              "id": 23743,
              "name": "ICreditManagerV2Exceptions",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23739,
              "src": "3067:26:43"
            },
            "id": 23744,
            "nodeType": "InheritanceSpecifier",
            "src": "3067:26:43"
          },
          {
            "baseName": {
              "id": 23745,
              "name": "IVersion",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41066,
              "src": "3099:8:43"
            },
            "id": 23746,
            "nodeType": "InheritanceSpecifier",
            "src": "3099:8:43"
          }
        ],
        "canonicalName": "ICreditManagerV2",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 23740,
          "nodeType": "StructuredDocumentation",
          "src": "2786:219:43",
          "text": "@notice All Credit Manager functions are access-restricted and can only be called\n         by the Credit Facade or allowed adapters. Users are not allowed to\n         interact with the Credit Manager directly"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          24088,
          41066,
          23739,
          23699
        ],
        "name": "ICreditManagerV2",
        "nameLocation": "3015:16:43",
        "scope": 24089,
        "usedErrors": [
          23702,
          23705,
          23708,
          23711,
          23714,
          23717,
          23720,
          23723,
          23726,
          23729,
          23732,
          23735,
          23738
        ]
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 43
}